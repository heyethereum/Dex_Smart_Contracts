{
	"id": "754af5adf2caa15fbc7338bb389f05a3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"KyberFairLaunch_flat.sol": {
				"content": "// SPDX-License-Identifier: MIT AND agpl-3.0\r\n\r\n// File: contracts/interfaces/liquidityMining/IKyberFairLaunch.sol\r\n\r\n\r\npragma solidity 0.7.6;\r\npragma abicoder v2;\r\n\r\ninterface IKyberFairLaunch {\r\n    /**\r\n     * @dev Add a new lp to the pool. Can only be called by the admin.\r\n     * @param _stakeToken: token to be staked to the pool\r\n     * @param _startBlock: block where the reward starts\r\n     * @param _endBlock: block where the reward ends\r\n     * @param _rewardPerBlocks: amount of reward token per block for the pool\r\n     */\r\n    function addPool(\r\n        address _stakeToken,\r\n        uint32 _startBlock,\r\n        uint32 _endBlock,\r\n        uint256[] calldata _rewardPerBlocks\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Renew a pool to start another liquidity mining program\r\n     * @param _pid: id of the pool to renew, must be pool that has not started or already ended\r\n     * @param _startBlock: block where the reward starts\r\n     * @param _endBlock: block where the reward ends\r\n     * @param _rewardPerBlocks: amount of reward token per block for the pool\r\n     *   0 if we want to stop the pool from accumulating rewards\r\n     */\r\n    function renewPool(\r\n        uint256 _pid,\r\n        uint32 _startBlock,\r\n        uint32 _endBlock,\r\n        uint256[] calldata _rewardPerBlocks\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Update a pool, allow to change end block, reward per block\r\n     * @param _pid: pool id to be renew\r\n     * @param _endBlock: block where the reward ends\r\n     * @param _rewardPerBlocks: amount of reward token per block for the pool\r\n     *   0 if we want to stop the pool from accumulating rewards\r\n     */\r\n    function updatePool(\r\n        uint256 _pid,\r\n        uint32 _endBlock,\r\n        uint256[] calldata _rewardPerBlocks\r\n    ) external;\r\n\r\n    /**\r\n     * @dev deposit to tokens to accumulate rewards\r\n     * @param _pid: id of the pool\r\n     * @param _amount: amount of stakeToken to be deposited\r\n     * @param _shouldHarvest: whether to harvest the reward or not\r\n     */\r\n    function deposit(\r\n        uint256 _pid,\r\n        uint256 _amount,\r\n        bool _shouldHarvest\r\n    ) external;\r\n\r\n    /**\r\n     * @dev withdraw token (of the sender) from pool, also harvest reward\r\n     * @param _pid: id of the pool\r\n     * @param _amount: amount of stakeToken to withdraw\r\n     */\r\n    function withdraw(uint256 _pid, uint256 _amount) external;\r\n\r\n    /**\r\n     * @dev withdraw all tokens (of the sender) from pool, also harvest reward\r\n     * @param _pid: id of the pool\r\n     */\r\n    function withdrawAll(uint256 _pid) external;\r\n\r\n    /**\r\n     * @dev emergency withdrawal function to allow withdraw all deposited token (of the sender)\r\n     *   without harvesting the reward\r\n     * @param _pid: id of the pool\r\n     */\r\n    function emergencyWithdraw(uint256 _pid) external;\r\n\r\n    /**\r\n     * @dev harvest reward from pool for the sender\r\n     * @param _pid: id of the pool\r\n     */\r\n    function harvest(uint256 _pid) external;\r\n\r\n    /**\r\n     * @dev harvest rewards from multiple pools for the sender\r\n     */\r\n    function harvestMultiplePools(uint256[] calldata _pids) external;\r\n\r\n    /**\r\n     * @dev update reward for one pool\r\n     */\r\n    function updatePoolRewards(uint256 _pid) external;\r\n\r\n    /**\r\n     * @dev return the total of pools that have been added\r\n     */\r\n    function poolLength() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev return full details of a pool\r\n     */\r\n    function getPoolInfo(uint256 _pid)\r\n        external\r\n        view\r\n        returns (\r\n            uint256 totalStake,\r\n            address stakeToken,\r\n            uint32 startBlock,\r\n            uint32 endBlock,\r\n            uint32 lastRewardBlock,\r\n            uint256[] memory rewardPerBlocks,\r\n            uint256[] memory accRewardPerShares\r\n        );\r\n\r\n    /**\r\n     * @dev get user's info\r\n     */\r\n    function getUserInfo(uint256 _pid, address _account)\r\n        external\r\n        view\r\n        returns (\r\n            uint256 amount,\r\n            uint256[] memory unclaimedRewards,\r\n            uint256[] memory lastRewardPerShares\r\n        );\r\n\r\n    /**\r\n     * @dev return list reward tokens\r\n     */\r\n    function getRewardTokens() external view returns (address[] memory);\r\n\r\n    /**\r\n     * @dev get pending reward of a user from a pool, mostly for front-end\r\n     * @param _pid: id of the pool\r\n     * @param _user: user to check for pending rewards\r\n     */\r\n    function pendingRewards(uint256 _pid, address _user)\r\n        external\r\n        view\r\n        returns (uint256[] memory rewards);\r\n}\r\n\r\n// File: contracts/manual/PermissionAdmin.sol\r\n\r\n\r\npragma solidity 0.7.6;\r\n\r\nabstract contract PermissionAdmin {\r\n    address public admin;\r\n    address public pendingAdmin;\r\n\r\n    event AdminClaimed(address newAdmin, address previousAdmin);\r\n\r\n    event TransferAdminPending(address pendingAdmin);\r\n\r\n    constructor(address _admin) {\r\n        require(_admin != address(0), \"admin 0\");\r\n        admin = _admin;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, \"only admin\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current admin to set the pendingAdmin address.\r\n     * @param newAdmin The address to transfer ownership to.\r\n     */\r\n    function transferAdmin(address newAdmin) public onlyAdmin {\r\n        require(newAdmin != address(0), \"new admin 0\");\r\n        emit TransferAdminPending(newAdmin);\r\n        pendingAdmin = newAdmin;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current admin to set the admin in one tx. Useful initial deployment.\r\n     * @param newAdmin The address to transfer ownership to.\r\n     */\r\n    function transferAdminQuickly(address newAdmin) public onlyAdmin {\r\n        require(newAdmin != address(0), \"admin 0\");\r\n        emit TransferAdminPending(newAdmin);\r\n        emit AdminClaimed(newAdmin, admin);\r\n        admin = newAdmin;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the pendingAdmin address to finalize the change admin process.\r\n     */\r\n    function claimAdmin() public {\r\n        require(pendingAdmin == msg.sender, \"not pending\");\r\n        emit AdminClaimed(pendingAdmin, admin);\r\n        admin = pendingAdmin;\r\n        pendingAdmin = address(0);\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/utils/SafeCast.sol\r\n\r\n\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\n\r\n/**\r\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\r\n * checks.\r\n *\r\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\r\n * easily result in undesired exploitation or bugs, since developers usually\r\n * assume that overflows raise errors. `SafeCast` restores this intuition by\r\n * reverting the transaction when such an operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n *\r\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\r\n * all math on `uint256` and `int256` and then downcasting.\r\n */\r\nlibrary SafeCast {\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint128 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint128).\r\n     *\r\n     * Counterpart to Solidity's `uint128` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 128 bits\r\n     */\r\n    function toUint128(uint256 value) internal pure returns (uint128) {\r\n        require(value < 2**128, \"SafeCast: value doesn\\'t fit in 128 bits\");\r\n        return uint128(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint64 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint64).\r\n     *\r\n     * Counterpart to Solidity's `uint64` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 64 bits\r\n     */\r\n    function toUint64(uint256 value) internal pure returns (uint64) {\r\n        require(value < 2**64, \"SafeCast: value doesn\\'t fit in 64 bits\");\r\n        return uint64(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint32 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint32).\r\n     *\r\n     * Counterpart to Solidity's `uint32` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 32 bits\r\n     */\r\n    function toUint32(uint256 value) internal pure returns (uint32) {\r\n        require(value < 2**32, \"SafeCast: value doesn\\'t fit in 32 bits\");\r\n        return uint32(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint16 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint16).\r\n     *\r\n     * Counterpart to Solidity's `uint16` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 16 bits\r\n     */\r\n    function toUint16(uint256 value) internal pure returns (uint16) {\r\n        require(value < 2**16, \"SafeCast: value doesn\\'t fit in 16 bits\");\r\n        return uint16(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint8 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint8).\r\n     *\r\n     * Counterpart to Solidity's `uint8` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 8 bits.\r\n     */\r\n    function toUint8(uint256 value) internal pure returns (uint8) {\r\n        require(value < 2**8, \"SafeCast: value doesn\\'t fit in 8 bits\");\r\n        return uint8(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a signed int256 into an unsigned uint256.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must be greater than or equal to 0.\r\n     */\r\n    function toUint256(int256 value) internal pure returns (uint256) {\r\n        require(value >= 0, \"SafeCast: value must be positive\");\r\n        return uint256(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int128 from int256, reverting on\r\n     * overflow (when the input is less than smallest int128 or\r\n     * greater than largest int128).\r\n     *\r\n     * Counterpart to Solidity's `int128` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 128 bits\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function toInt128(int256 value) internal pure returns (int128) {\r\n        require(value >= -2**127 && value < 2**127, \"SafeCast: value doesn\\'t fit in 128 bits\");\r\n        return int128(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int64 from int256, reverting on\r\n     * overflow (when the input is less than smallest int64 or\r\n     * greater than largest int64).\r\n     *\r\n     * Counterpart to Solidity's `int64` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 64 bits\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function toInt64(int256 value) internal pure returns (int64) {\r\n        require(value >= -2**63 && value < 2**63, \"SafeCast: value doesn\\'t fit in 64 bits\");\r\n        return int64(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int32 from int256, reverting on\r\n     * overflow (when the input is less than smallest int32 or\r\n     * greater than largest int32).\r\n     *\r\n     * Counterpart to Solidity's `int32` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 32 bits\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function toInt32(int256 value) internal pure returns (int32) {\r\n        require(value >= -2**31 && value < 2**31, \"SafeCast: value doesn\\'t fit in 32 bits\");\r\n        return int32(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int16 from int256, reverting on\r\n     * overflow (when the input is less than smallest int16 or\r\n     * greater than largest int16).\r\n     *\r\n     * Counterpart to Solidity's `int16` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 16 bits\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function toInt16(int256 value) internal pure returns (int16) {\r\n        require(value >= -2**15 && value < 2**15, \"SafeCast: value doesn\\'t fit in 16 bits\");\r\n        return int16(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int8 from int256, reverting on\r\n     * overflow (when the input is less than smallest int8 or\r\n     * greater than largest int8).\r\n     *\r\n     * Counterpart to Solidity's `int8` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 8 bits.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function toInt8(int256 value) internal pure returns (int8) {\r\n        require(value >= -2**7 && value < 2**7, \"SafeCast: value doesn\\'t fit in 8 bits\");\r\n        return int8(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an unsigned uint256 into a signed int256.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must be less than or equal to maxInt256.\r\n     */\r\n    function toInt256(uint256 value) internal pure returns (int256) {\r\n        require(value < 2**255, \"SafeCast: value doesn't fit in an int256\");\r\n        return int256(value);\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/utils/Address.sol\r\n\r\n\r\n\r\npragma solidity >=0.6.2 <0.8.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\r\n\r\n\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n// File: contracts/manual/IERC20Ext.sol\r\n\r\n\r\npragma solidity 0.7.6;\r\n\r\n\r\n/**\r\n * @dev Interface extending ERC20 standard to include decimals() as\r\n *      it is optional in the OpenZeppelin IERC20 interface.\r\n */\r\ninterface IERC20Ext is IERC20 {\r\n    /**\r\n     * @dev This function is required as Kyber requires to interact\r\n     *      with token.decimals() with many of its operations.\r\n     */\r\n    function decimals() external view returns (uint8 digits);\r\n}\r\n\r\n// File: contracts/interfaces/liquidityMining/IKyberRewardLocker.sol\r\n\r\n\r\npragma solidity 0.7.6;\r\npragma experimental ABIEncoderV2;\r\n//pragma abicoder v2;\r\n\r\n\r\ninterface IKyberRewardLocker {\r\n    struct VestingSchedule {\r\n        uint64 startBlock;\r\n        uint64 endBlock;\r\n        uint128 quantity;\r\n        uint128 vestedQuantity;\r\n    }\r\n\r\n    event VestingEntryCreated(\r\n        IERC20Ext indexed token,\r\n        address indexed beneficiary,\r\n        uint256 startBlock,\r\n        uint256 endBlock,\r\n        uint256 quantity,\r\n        uint256 index\r\n    );\r\n\r\n    event VestingEntryQueued(\r\n        uint256 indexed index,\r\n        IERC20Ext indexed token,\r\n        address indexed beneficiary,\r\n        uint256 quantity\r\n    );\r\n\r\n    event Vested(\r\n        IERC20Ext indexed token,\r\n        address indexed beneficiary,\r\n        uint256 vestedQuantity,\r\n        uint256 index\r\n    );\r\n\r\n    /**\r\n     * @dev queue a vesting schedule starting from now\r\n     */\r\n    function lock(\r\n        IERC20Ext token,\r\n        address account,\r\n        uint256 amount\r\n    ) external payable;\r\n\r\n    /**\r\n     * @dev queue a vesting schedule\r\n     */\r\n    function lockWithStartBlock(\r\n        IERC20Ext token,\r\n        address account,\r\n        uint256 quantity,\r\n        uint256 startBlock\r\n    ) external payable;\r\n\r\n    /**\r\n     * @dev vest all completed schedules for multiple tokens\r\n     */\r\n    function vestCompletedSchedulesForMultipleTokens(\r\n        IERC20Ext[] calldata tokens\r\n    ) external returns (uint256[] memory vestedAmounts);\r\n\r\n    /**\r\n     * @dev claim multiple tokens for specific vesting schedule,\r\n     *      if schedule has not ended yet, claiming amounts are linear with vesting blocks\r\n     */\r\n    function vestScheduleForMultipleTokensAtIndices(\r\n        IERC20Ext[] calldata tokens,\r\n        uint256[][] calldata indices\r\n    ) external returns (uint256[] memory vestedAmounts);\r\n\r\n    /**\r\n     * @dev for all completed schedule, claim token\r\n     */\r\n    function vestCompletedSchedules(IERC20Ext token) external returns (uint256);\r\n\r\n    /**\r\n     * @dev claim token for specific vesting schedule,\r\n     * @dev if schedule has not ended yet, claiming amount is linear with vesting blocks\r\n     */\r\n    function vestScheduleAtIndices(IERC20Ext token, uint256[] calldata indexes)\r\n        external\r\n        returns (uint256);\r\n\r\n    /**\r\n     * @dev claim token for specific vesting schedule from startIndex to endIndex\r\n     */\r\n    function vestSchedulesInRange(\r\n        IERC20Ext token,\r\n        uint256 startIndex,\r\n        uint256 endIndex\r\n    ) external returns (uint256);\r\n\r\n    /**\r\n     * @dev length of vesting schedules array\r\n     */\r\n    function numVestingSchedules(address account, IERC20Ext token)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    /**\r\n     * @dev get detailed of each vesting schedule\r\n     */\r\n    function getVestingScheduleAtIndex(\r\n        address account,\r\n        IERC20Ext token,\r\n        uint256 index\r\n    ) external view returns (VestingSchedule memory);\r\n\r\n    /**\r\n     * @dev get vesting shedules array\r\n     */\r\n    function getVestingSchedules(address account, IERC20Ext token)\r\n        external\r\n        view\r\n        returns (VestingSchedule[] memory schedules);\r\n}\r\n\r\n// File: @openzeppelin/contracts/math/SafeMath.sol\r\n\r\n\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        uint256 c = a + b;\r\n        if (c < a) return (false, 0);\r\n        return (true, c);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b > a) return (false, 0);\r\n        return (true, a - b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) return (true, 0);\r\n        uint256 c = a * b;\r\n        if (c / a != b) return (false, 0);\r\n        return (true, c);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b == 0) return (false, 0);\r\n        return (true, a / b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b == 0) return (false, 0);\r\n        return (true, a % b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) return 0;\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: modulo by zero\");\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/SafeERC20.sol\r\n\r\n\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\n\r\n\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/utils/ReentrancyGuard.sol\r\n\r\n\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor () internal {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and make it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n\r\n        _;\r\n\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}\r\n\r\n// File: contracts/liquidityMining/KyberFairLaunch.sol\r\n\r\n\r\npragma solidity 0.7.6;\r\n//pragma abicoder v2;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/// FairLaunch contract for Kyber DMM Liquidity Mining program\r\n/// Allow stakers to stake LP tokens and receive reward tokens\r\n/// Allow extend or renew a pool to continue/restart the LM program\r\n/// When harvesting, rewards will be transferred to a RewardLocker\r\n/// Support multiple reward tokens, reward tokens must be distinct and immutable\r\ncontract KyberFairLaunch is IKyberFairLaunch, PermissionAdmin, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    using SafeCast for uint256;\r\n    using SafeERC20 for IERC20Ext;\r\n\r\n    uint256 internal constant PRECISION = 1e12;\r\n\r\n    struct UserRewardData {\r\n        uint256 unclaimedReward;\r\n        uint256 lastRewardPerShare;\r\n    }\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount; // How many Staking tokens the user has provided.\r\n        mapping(uint256 => UserRewardData) userRewardData;\r\n        //\r\n        // Basically, any point in time, the amount of reward token\r\n        // entitled to a user but is pending to be distributed is:\r\n        //\r\n        //   pending reward = user.unclaimAmount + (user.amount * (pool.accRewardPerShare - user.lastRewardPerShare)\r\n        //\r\n        // Whenever a user deposits or withdraws Staking tokens to a pool. Here's what happens:\r\n        //   1. The pool's `accRewardPerShare` (and `lastRewardBlock`) gets updated.\r\n        //   2. User receives the pending reward sent to his/her address.\r\n        //   3. User's `lastRewardPerShare` gets updated.\r\n        //   4. User's `amount` gets updated.\r\n    }\r\n\r\n    struct PoolRewardData {\r\n        uint256 rewardPerBlock;\r\n        uint256 accRewardPerShare;\r\n    }\r\n    // Info of each pool\r\n    // poolRewardData: reward data for each reward token\r\n    //      rewardPerBlock: amount of reward token per block\r\n    //      accRewardPerShare: accumulated reward per share of token\r\n    // totalStake: total amount of stakeToken has been staked\r\n    // stakeToken: token to stake, should be an ERC20 token\r\n    // startBlock: the block that the reward starts\r\n    // endBlock: the block that the reward ends\r\n    // lastRewardBlock: last block number that rewards distribution occurs\r\n    struct PoolInfo {\r\n        uint256 totalStake;\r\n        address stakeToken;\r\n        uint32 startBlock;\r\n        uint32 endBlock;\r\n        uint32 lastRewardBlock;\r\n        mapping(uint256 => PoolRewardData) poolRewardData;\r\n    }\r\n\r\n    // check if a pool exists for a stakeToken\r\n    mapping(address => bool) public poolExists;\r\n    // contract for locking reward\r\n    IKyberRewardLocker public immutable rewardLocker;\r\n    // list reward tokens, use 0x0 for native token, shouldn't be too many reward tokens\r\n    // don't validate values or length by trusting the deployer\r\n    address[] public rewardTokens;\r\n\r\n    // Info of each pool.\r\n    uint256 public override poolLength;\r\n    mapping(uint256 => PoolInfo) internal poolInfo;\r\n    // Info of each user that stakes Staking tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) internal userInfo;\r\n\r\n    event AddNewPool(\r\n        address indexed stakeToken,\r\n        uint32 indexed startBlock,\r\n        uint32 indexed endBlock,\r\n        uint256[] rewardPerBlocks\r\n    );\r\n    event RenewPool(\r\n        uint256 indexed pid,\r\n        uint32 indexed startBlock,\r\n        uint32 indexed endBlock,\r\n        uint256[] rewardPerBlocks\r\n    );\r\n    event UpdatePool(\r\n        uint256 indexed pid,\r\n        uint32 indexed endBlock,\r\n        uint256[] rewardPerBlocks\r\n    );\r\n    event Deposit(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        uint256 indexed blockNumber,\r\n        uint256 amount\r\n    );\r\n    event Withdraw(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        uint256 indexed blockNumber,\r\n        uint256 amount\r\n    );\r\n    event Harvest(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        address indexed rewardToken,\r\n        uint256 lockedAmount,\r\n        uint256 blockNumber\r\n    );\r\n    event EmergencyWithdraw(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        uint256 indexed blockNumber,\r\n        uint256 amount\r\n    );\r\n\r\n    constructor(\r\n        address _admin,\r\n        address[] memory _rewardTokens,\r\n        IKyberRewardLocker _rewardLocker\r\n    ) PermissionAdmin(_admin) {\r\n        rewardTokens = _rewardTokens;\r\n        rewardLocker = _rewardLocker;\r\n\r\n        // approve allowance to reward locker\r\n        for (uint256 i = 0; i < _rewardTokens.length; i++) {\r\n            if (_rewardTokens[i] != address(0)) {\r\n                IERC20Ext(_rewardTokens[i]).safeApprove(\r\n                    address(_rewardLocker),\r\n                    type(uint256).max\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    /**\r\n     * @dev Allow admin to withdraw only reward tokens\r\n     */\r\n    function adminWithdraw(uint256 rewardTokenIndex, uint256 amount)\r\n        external\r\n        onlyAdmin\r\n    {\r\n        IERC20Ext rewardToken = IERC20Ext(rewardTokens[rewardTokenIndex]);\r\n        if (rewardToken == IERC20Ext(0)) {\r\n            (bool success, ) = msg.sender.call{value: amount}(\"\");\r\n            require(success, \"transfer reward token failed\");\r\n        } else {\r\n            rewardToken.safeTransfer(msg.sender, amount);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Add a new lp to the pool. Can only be called by the admin.\r\n     * @param _stakeToken: token to be staked to the pool\r\n     * @param _startBlock: block where the reward starts\r\n     * @param _endBlock: block where the reward ends\r\n     * @param _rewardPerBlocks: amount of reward token per block for the pool for each reward token\r\n     */\r\n    function addPool(\r\n        address _stakeToken,\r\n        uint32 _startBlock,\r\n        uint32 _endBlock,\r\n        uint256[] calldata _rewardPerBlocks\r\n    ) external override onlyAdmin {\r\n        require(!poolExists[_stakeToken], \"add: duplicated pool\");\r\n        require(_stakeToken != address(0), \"add: invalid stake token\");\r\n        require(\r\n            rewardTokens.length == _rewardPerBlocks.length,\r\n            \"add: invalid length\"\r\n        );\r\n\r\n        require(\r\n            _startBlock > block.number && _endBlock > _startBlock,\r\n            \"add: invalid blocks\"\r\n        );\r\n\r\n        poolInfo[poolLength].stakeToken = _stakeToken;\r\n        poolInfo[poolLength].startBlock = _startBlock;\r\n        poolInfo[poolLength].endBlock = _endBlock;\r\n        poolInfo[poolLength].lastRewardBlock = _startBlock;\r\n\r\n        for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r\n            poolInfo[poolLength].poolRewardData[i] = PoolRewardData({\r\n                rewardPerBlock: _rewardPerBlocks[i],\r\n                accRewardPerShare: 0\r\n            });\r\n        }\r\n\r\n        poolLength++;\r\n\r\n        poolExists[_stakeToken] = true;\r\n\r\n        emit AddNewPool(_stakeToken, _startBlock, _endBlock, _rewardPerBlocks);\r\n    }\r\n\r\n    /**\r\n     * @dev Renew a pool to start another liquidity mining program\r\n     * @param _pid: id of the pool to renew, must be pool that has not started or already ended\r\n     * @param _startBlock: block where the reward starts\r\n     * @param _endBlock: block where the reward ends\r\n     * @param _rewardPerBlocks: amount of reward token per block for the pool\r\n     *   0 if we want to stop the pool from accumulating rewards\r\n     */\r\n    function renewPool(\r\n        uint256 _pid,\r\n        uint32 _startBlock,\r\n        uint32 _endBlock,\r\n        uint256[] calldata _rewardPerBlocks\r\n    ) external override onlyAdmin {\r\n        updatePoolRewards(_pid);\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        // check if pool has not started or already ended\r\n        require(\r\n            pool.startBlock > block.number || pool.endBlock < block.number,\r\n            \"renew: invalid pool state to renew\"\r\n        );\r\n        // checking data of new pool\r\n        require(\r\n            rewardTokens.length == _rewardPerBlocks.length,\r\n            \"renew: invalid length\"\r\n        );\r\n        require(\r\n            _startBlock > block.number && _endBlock > _startBlock,\r\n            \"renew: invalid blocks\"\r\n        );\r\n\r\n        pool.startBlock = _startBlock;\r\n        pool.endBlock = _endBlock;\r\n        pool.lastRewardBlock = _startBlock;\r\n\r\n        for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r\n            pool.poolRewardData[i].rewardPerBlock = _rewardPerBlocks[i];\r\n        }\r\n\r\n        emit RenewPool(_pid, _startBlock, _endBlock, _rewardPerBlocks);\r\n    }\r\n\r\n    /**\r\n     * @dev Update a pool, allow to change end block, reward per block\r\n     * @param _pid: pool id to be renew\r\n     * @param _endBlock: block where the reward ends\r\n     * @param _rewardPerBlocks: amount of reward token per block for the pool,\r\n     *   0 if we want to stop the pool from accumulating rewards\r\n     */\r\n    function updatePool(\r\n        uint256 _pid,\r\n        uint32 _endBlock,\r\n        uint256[] calldata _rewardPerBlocks\r\n    ) external override onlyAdmin {\r\n        updatePoolRewards(_pid);\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n\r\n        // should call renew pool if the pool has ended\r\n        require(pool.endBlock > block.number, \"update: pool already ended\");\r\n        require(\r\n            rewardTokens.length == _rewardPerBlocks.length,\r\n            \"update: invalid length\"\r\n        );\r\n        require(\r\n            _endBlock > block.number && _endBlock > pool.startBlock,\r\n            \"update: invalid end block\"\r\n        );\r\n\r\n        pool.endBlock = _endBlock;\r\n        for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r\n            pool.poolRewardData[i].rewardPerBlock = _rewardPerBlocks[i];\r\n        }\r\n\r\n        emit UpdatePool(_pid, _endBlock, _rewardPerBlocks);\r\n    }\r\n\r\n    /**\r\n     * @dev Deposit tokens to accumulate rewards\r\n     * @param _pid: id of the pool\r\n     * @param _amount: amount of stakeToken to be deposited\r\n     * @param _shouldHarvest: whether to harvest the reward or not\r\n     */\r\n    function deposit(\r\n        uint256 _pid,\r\n        uint256 _amount,\r\n        bool _shouldHarvest\r\n    ) external override nonReentrant {\r\n        // update pool rewards, user's rewards\r\n        updatePoolRewards(_pid);\r\n        _updateUserReward(msg.sender, _pid, _shouldHarvest);\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n\r\n        // collect stakeToken\r\n        IERC20Ext(pool.stakeToken).safeTransferFrom(\r\n            msg.sender,\r\n            address(this),\r\n            _amount\r\n        );\r\n\r\n        // update user staked amount, and total staked amount for the pool\r\n        user.amount = user.amount.add(_amount);\r\n        pool.totalStake = pool.totalStake.add(_amount);\r\n\r\n        emit Deposit(msg.sender, _pid, block.number, _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraw token (of the sender) from pool, also harvest rewards\r\n     * @param _pid: id of the pool\r\n     * @param _amount: amount of stakeToken to withdraw\r\n     */\r\n    function withdraw(uint256 _pid, uint256 _amount)\r\n        external\r\n        override\r\n        nonReentrant\r\n    {\r\n        _withdraw(_pid, _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraw all tokens (of the sender) from pool, also harvest reward\r\n     * @param _pid: id of the pool\r\n     */\r\n    function withdrawAll(uint256 _pid) external override nonReentrant {\r\n        _withdraw(_pid, userInfo[_pid][msg.sender].amount);\r\n    }\r\n\r\n    /**\r\n     * @notice EMERGENCY USAGE ONLY, USER'S REWARDS WILL BE RESET\r\n     * @dev Emergency withdrawal function to allow withdraw all deposited tokens (of the sender)\r\n     *   and reset all rewards\r\n     * @param _pid: id of the pool\r\n     */\r\n    function emergencyWithdraw(uint256 _pid) external override nonReentrant {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        uint256 amount = user.amount;\r\n\r\n        user.amount = 0;\r\n        for (uint256 i = 0; i < rewardTokens.length; i++) {\r\n            UserRewardData storage rewardData = user.userRewardData[i];\r\n            rewardData.lastRewardPerShare = 0;\r\n            rewardData.unclaimedReward = 0;\r\n        }\r\n\r\n        pool.totalStake = pool.totalStake.sub(amount);\r\n\r\n        if (amount > 0) {\r\n            IERC20Ext(pool.stakeToken).safeTransfer(msg.sender, amount);\r\n        }\r\n\r\n        emit EmergencyWithdraw(msg.sender, _pid, block.number, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Harvest rewards from multiple pools for the sender\r\n     *   combine rewards from all pools and only transfer once to save gas\r\n     */\r\n    function harvestMultiplePools(uint256[] calldata _pids) external override {\r\n        address[] memory rTokens = rewardTokens;\r\n        uint256[] memory totalRewards = new uint256[](rTokens.length);\r\n        address account = msg.sender;\r\n        uint256 pid;\r\n\r\n        for (uint256 i = 0; i < _pids.length; i++) {\r\n            pid = _pids[i];\r\n            updatePoolRewards(pid);\r\n            // update user reward without harvesting\r\n            _updateUserReward(account, pid, false);\r\n\r\n            for (uint256 j = 0; j < rTokens.length; j++) {\r\n                uint256 reward = userInfo[pid][account]\r\n                    .userRewardData[j]\r\n                    .unclaimedReward;\r\n                if (reward > 0) {\r\n                    totalRewards[j] = totalRewards[j].add(reward);\r\n                    userInfo[pid][account]\r\n                        .userRewardData[j]\r\n                        .unclaimedReward = 0;\r\n                    emit Harvest(\r\n                        account,\r\n                        pid,\r\n                        rTokens[j],\r\n                        reward,\r\n                        block.number\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        for (uint256 i = 0; i < totalRewards.length; i++) {\r\n            if (totalRewards[i] > 0) {\r\n                _lockReward(IERC20Ext(rTokens[i]), account, totalRewards[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Get pending rewards of a user from a pool, mostly for front-end\r\n     * @param _pid: id of the pool\r\n     * @param _user: user to check for pending rewards\r\n     */\r\n    function pendingRewards(uint256 _pid, address _user)\r\n        external\r\n        view\r\n        override\r\n        returns (uint256[] memory rewards)\r\n    {\r\n        uint256 rTokensLength = rewardTokens.length;\r\n        rewards = new uint256[](rTokensLength);\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 _totalStake = pool.totalStake;\r\n        uint256 _poolLastRewardBlock = pool.lastRewardBlock;\r\n        uint32 lastAccountedBlock = _lastAccountedRewardBlock(_pid);\r\n        for (uint256 i = 0; i < rTokensLength; i++) {\r\n            uint256 _accRewardPerShare = pool\r\n                .poolRewardData[i]\r\n                .accRewardPerShare;\r\n            if (lastAccountedBlock > _poolLastRewardBlock && _totalStake != 0) {\r\n                uint256 reward = (lastAccountedBlock - _poolLastRewardBlock)\r\n                    .mul(pool.poolRewardData[i].rewardPerBlock);\r\n                _accRewardPerShare = _accRewardPerShare.add(\r\n                    reward.mul(PRECISION) / _totalStake\r\n                );\r\n            }\r\n\r\n            rewards[i] =\r\n                user.amount.mul(\r\n                    _accRewardPerShare.sub(\r\n                        user.userRewardData[i].lastRewardPerShare\r\n                    )\r\n                ) /\r\n                PRECISION;\r\n            rewards[i] = rewards[i].add(user.userRewardData[i].unclaimedReward);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return list reward tokens\r\n     */\r\n    function getRewardTokens()\r\n        external\r\n        view\r\n        override\r\n        returns (address[] memory)\r\n    {\r\n        return rewardTokens;\r\n    }\r\n\r\n    /**\r\n     * @dev Return full details of a pool\r\n     */\r\n    function getPoolInfo(uint256 _pid)\r\n        external\r\n        view\r\n        override\r\n        returns (\r\n            uint256 totalStake,\r\n            address stakeToken,\r\n            uint32 startBlock,\r\n            uint32 endBlock,\r\n            uint32 lastRewardBlock,\r\n            uint256[] memory rewardPerBlocks,\r\n            uint256[] memory accRewardPerShares\r\n        )\r\n    {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        (totalStake, stakeToken, startBlock, endBlock, lastRewardBlock) = (\r\n            pool.totalStake,\r\n            pool.stakeToken,\r\n            pool.startBlock,\r\n            pool.endBlock,\r\n            pool.lastRewardBlock\r\n        );\r\n        rewardPerBlocks = new uint256[](rewardTokens.length);\r\n        accRewardPerShares = new uint256[](rewardTokens.length);\r\n        for (uint256 i = 0; i < rewardTokens.length; i++) {\r\n            rewardPerBlocks[i] = pool.poolRewardData[i].rewardPerBlock;\r\n            accRewardPerShares[i] = pool.poolRewardData[i].accRewardPerShare;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return user's info including deposited amount and reward data\r\n     */\r\n    function getUserInfo(uint256 _pid, address _account)\r\n        external\r\n        view\r\n        override\r\n        returns (\r\n            uint256 amount,\r\n            uint256[] memory unclaimedRewards,\r\n            uint256[] memory lastRewardPerShares\r\n        )\r\n    {\r\n        UserInfo storage user = userInfo[_pid][_account];\r\n        amount = user.amount;\r\n        unclaimedRewards = new uint256[](rewardTokens.length);\r\n        lastRewardPerShares = new uint256[](rewardTokens.length);\r\n        for (uint256 i = 0; i < rewardTokens.length; i++) {\r\n            unclaimedRewards[i] = user.userRewardData[i].unclaimedReward;\r\n            lastRewardPerShares[i] = user.userRewardData[i].lastRewardPerShare;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Harvest rewards from a pool for the sender\r\n     * @param _pid: id of the pool\r\n     */\r\n    function harvest(uint256 _pid) public override {\r\n        updatePoolRewards(_pid);\r\n        _updateUserReward(msg.sender, _pid, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Update rewards for one pool\r\n     */\r\n    function updatePoolRewards(uint256 _pid) public override {\r\n        require(_pid < poolLength, \"invalid pool id\");\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        uint32 lastAccountedBlock = _lastAccountedRewardBlock(_pid);\r\n        if (lastAccountedBlock <= pool.lastRewardBlock) return;\r\n        uint256 _totalStake = pool.totalStake;\r\n        if (_totalStake == 0) {\r\n            pool.lastRewardBlock = lastAccountedBlock;\r\n            return;\r\n        }\r\n        uint256 numberBlocks = lastAccountedBlock - pool.lastRewardBlock;\r\n        for (uint256 i = 0; i < rewardTokens.length; i++) {\r\n            PoolRewardData storage rewardData = pool.poolRewardData[i];\r\n            uint256 reward = numberBlocks.mul(rewardData.rewardPerBlock);\r\n            rewardData.accRewardPerShare = rewardData.accRewardPerShare.add(\r\n                reward.mul(PRECISION) / _totalStake\r\n            );\r\n        }\r\n        pool.lastRewardBlock = lastAccountedBlock;\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraw _amount of stakeToken from pool _pid, also harvest reward for the sender\r\n     */\r\n    function _withdraw(uint256 _pid, uint256 _amount) internal {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        require(user.amount >= _amount, \"withdraw: insufficient amount\");\r\n\r\n        // update pool reward and harvest\r\n        updatePoolRewards(_pid);\r\n        _updateUserReward(msg.sender, _pid, true);\r\n\r\n        user.amount = user.amount.sub(_amount);\r\n        pool.totalStake = pool.totalStake.sub(_amount);\r\n\r\n        IERC20Ext(pool.stakeToken).safeTransfer(msg.sender, _amount);\r\n\r\n        emit Withdraw(msg.sender, _pid, block.number, _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Update reward of _to address from pool _pid, harvest if needed\r\n     */\r\n    function _updateUserReward(\r\n        address _to,\r\n        uint256 _pid,\r\n        bool shouldHarvest\r\n    ) internal {\r\n        uint256 userAmount = userInfo[_pid][_to].amount;\r\n        uint256 rTokensLength = rewardTokens.length;\r\n\r\n        if (userAmount == 0) {\r\n            // update user last reward per share to the latest pool reward per share\r\n            // by right if user.amount is 0, user.unclaimedReward should be 0 as well,\r\n            // except when user uses emergencyWithdraw function\r\n            for (uint256 i = 0; i < rTokensLength; i++) {\r\n                userInfo[_pid][_to]\r\n                    .userRewardData[i]\r\n                    .lastRewardPerShare = poolInfo[_pid]\r\n                    .poolRewardData[i]\r\n                    .accRewardPerShare;\r\n            }\r\n            return;\r\n        }\r\n\r\n        for (uint256 i = 0; i < rTokensLength; i++) {\r\n            uint256 lastAccRewardPerShare = poolInfo[_pid]\r\n                .poolRewardData[i]\r\n                .accRewardPerShare;\r\n            UserRewardData storage rewardData = userInfo[_pid][_to]\r\n                .userRewardData[i];\r\n            // user's unclaim reward + user's amount * (pool's accRewardPerShare - user's lastRewardPerShare) / precision\r\n            uint256 _pending = userAmount.mul(\r\n                lastAccRewardPerShare.sub(rewardData.lastRewardPerShare)\r\n            ) / PRECISION;\r\n            _pending = _pending.add(rewardData.unclaimedReward);\r\n\r\n            rewardData.unclaimedReward = shouldHarvest ? 0 : _pending;\r\n            // update user last reward per share to the latest pool reward per share\r\n            rewardData.lastRewardPerShare = lastAccRewardPerShare;\r\n\r\n            if (shouldHarvest && _pending > 0) {\r\n                _lockReward(IERC20Ext(rewardTokens[i]), _to, _pending);\r\n                emit Harvest(\r\n                    _to,\r\n                    _pid,\r\n                    rewardTokens[i],\r\n                    _pending,\r\n                    block.number\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns last accounted reward block, either the current block number or the endBlock of the pool\r\n     */\r\n    function _lastAccountedRewardBlock(uint256 _pid)\r\n        internal\r\n        view\r\n        returns (uint32 _value)\r\n    {\r\n        _value = poolInfo[_pid].endBlock;\r\n        if (_value > block.number) _value = block.number.toUint32();\r\n    }\r\n\r\n    /**\r\n     * @dev Call locker contract to lock rewards\r\n     */\r\n    function _lockReward(\r\n        IERC20Ext token,\r\n        address _account,\r\n        uint256 _amount\r\n    ) internal {\r\n        uint256 value = token == IERC20Ext(0) ? _amount : 0;\r\n        rewardLocker.lock{value: value}(token, _account, _amount);\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"KyberFairLaunch_flat.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"KyberFairLaunch_flat.sol\":13161:21026  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"KyberFairLaunch_flat.sol\":13161:21026  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200494b49cb219544a14524f89c68cf08da7101182b68e58a5a8e0bbe01e52c27364736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200494b49cb219544a14524f89c68cf08da7101182b68e58a5a8e0bbe01e52c27364736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV SWAP5 0xB4 SWAP13 0xB2 NOT SLOAD 0x4A EQ MSTORE 0x4F DUP10 0xC6 DUP13 CREATE DUP14 0xA7 LT GT DUP3 0xB6 DUP15 PC 0xA5 0xA8 0xE0 0xBB 0xE0 0x1E MSTORE 0xC2 PUSH20 0x64736F6C63430007060033000000000000000000 ",
							"sourceMap": "13161:7865:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200494b49cb219544a14524f89c68cf08da7101182b68e58a5a8e0bbe01e52c27364736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV SWAP5 0xB4 SWAP13 0xB2 NOT SLOAD 0x4A EQ MSTORE 0x4F DUP10 0xC6 DUP13 CREATE DUP14 0xA7 LT GT DUP3 0xB6 DUP15 PC 0xA5 0xA8 0xE0 0xBB 0xE0 0x1E MSTORE 0xC2 PUSH20 0x64736F6C63430007060033000000000000000000 ",
							"sourceMap": "13161:7865:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 13161,
									"end": 21026,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13161,
									"end": 21026,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200494b49cb219544a14524f89c68cf08da7101182b68e58a5a8e0bbe01e52c27364736f6c63430007060033",
									".code": [
										{
											"begin": 13161,
											"end": 21026,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 21026,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 21026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 21026,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13161,
											"end": 21026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13161,
											"end": 21026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 21026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13161,
											"end": 21026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13161,
											"end": 21026,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"KyberFairLaunch_flat.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"KyberFairLaunch_flat.sol\":{\"keccak256\":\"0x0dd1e984c612a35ae31722fc8a99906ae0e3fe64257905c63a0ff30310ceb18e\",\"license\":\"MIT AND agpl-3.0\",\"urls\":[\"bzz-raw://cae9aa61164c0ca5865278f4e768f30dea2cc384260e22cdda46c39858881bbc\",\"dweb:/ipfs/QmXCw1Tz94S562QmzjqYdz85AJkrJuJBr8xcL98Z4fKrq8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"KyberFairLaunch_flat.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"KyberFairLaunch_flat.sol\":{\"keccak256\":\"0x0dd1e984c612a35ae31722fc8a99906ae0e3fe64257905c63a0ff30310ceb18e\",\"license\":\"MIT AND agpl-3.0\",\"urls\":[\"bzz-raw://cae9aa61164c0ca5865278f4e768f30dea2cc384260e22cdda46c39858881bbc\",\"dweb:/ipfs/QmXCw1Tz94S562QmzjqYdz85AJkrJuJBr8xcL98Z4fKrq8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Ext": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "digits",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface extending ERC20 standard to include decimals() as      it is optional in the OpenZeppelin IERC20 interface.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "This function is required as Kyber requires to interact      with token.decimals() with many of its operations."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"digits\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface extending ERC20 standard to include decimals() as      it is optional in the OpenZeppelin IERC20 interface.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"This function is required as Kyber requires to interact      with token.decimals() with many of its operations.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"KyberFairLaunch_flat.sol\":\"IERC20Ext\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"KyberFairLaunch_flat.sol\":{\"keccak256\":\"0x0dd1e984c612a35ae31722fc8a99906ae0e3fe64257905c63a0ff30310ceb18e\",\"license\":\"MIT AND agpl-3.0\",\"urls\":[\"bzz-raw://cae9aa61164c0ca5865278f4e768f30dea2cc384260e22cdda46c39858881bbc\",\"dweb:/ipfs/QmXCw1Tz94S562QmzjqYdz85AJkrJuJBr8xcL98Z4fKrq8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IKyberFairLaunch": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakeToken",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "_startBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "_endBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256[]",
									"name": "_rewardPerBlocks",
									"type": "uint256[]"
								}
							],
							"name": "addPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_shouldHarvest",
									"type": "bool"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "getPoolInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalStake",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "stakeToken",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "startBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "endBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "lastRewardBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256[]",
									"name": "rewardPerBlocks",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "accRewardPerShares",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardTokens",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getUserInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "unclaimedRewards",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "lastRewardPerShares",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_pids",
									"type": "uint256[]"
								}
							],
							"name": "harvestMultiplePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingRewards",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "rewards",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "_startBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "_endBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256[]",
									"name": "_rewardPerBlocks",
									"type": "uint256[]"
								}
							],
							"name": "renewPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "_endBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256[]",
									"name": "_rewardPerBlocks",
									"type": "uint256[]"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePoolRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "withdrawAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addPool(address,uint32,uint32,uint256[])": {
								"details": "Add a new lp to the pool. Can only be called by the admin.",
								"params": {
									"_endBlock": ": block where the reward ends",
									"_rewardPerBlocks": ": amount of reward token per block for the pool",
									"_stakeToken": ": token to be staked to the pool",
									"_startBlock": ": block where the reward starts"
								}
							},
							"deposit(uint256,uint256,bool)": {
								"details": "deposit to tokens to accumulate rewards",
								"params": {
									"_amount": ": amount of stakeToken to be deposited",
									"_pid": ": id of the pool",
									"_shouldHarvest": ": whether to harvest the reward or not"
								}
							},
							"emergencyWithdraw(uint256)": {
								"details": "emergency withdrawal function to allow withdraw all deposited token (of the sender)   without harvesting the reward",
								"params": {
									"_pid": ": id of the pool"
								}
							},
							"getPoolInfo(uint256)": {
								"details": "return full details of a pool"
							},
							"getRewardTokens()": {
								"details": "return list reward tokens"
							},
							"getUserInfo(uint256,address)": {
								"details": "get user's info"
							},
							"harvest(uint256)": {
								"details": "harvest reward from pool for the sender",
								"params": {
									"_pid": ": id of the pool"
								}
							},
							"harvestMultiplePools(uint256[])": {
								"details": "harvest rewards from multiple pools for the sender"
							},
							"pendingRewards(uint256,address)": {
								"details": "get pending reward of a user from a pool, mostly for front-end",
								"params": {
									"_pid": ": id of the pool",
									"_user": ": user to check for pending rewards"
								}
							},
							"poolLength()": {
								"details": "return the total of pools that have been added"
							},
							"renewPool(uint256,uint32,uint32,uint256[])": {
								"details": "Renew a pool to start another liquidity mining program",
								"params": {
									"_endBlock": ": block where the reward ends",
									"_pid": ": id of the pool to renew, must be pool that has not started or already ended",
									"_rewardPerBlocks": ": amount of reward token per block for the pool   0 if we want to stop the pool from accumulating rewards",
									"_startBlock": ": block where the reward starts"
								}
							},
							"updatePool(uint256,uint32,uint256[])": {
								"details": "Update a pool, allow to change end block, reward per block",
								"params": {
									"_endBlock": ": block where the reward ends",
									"_pid": ": pool id to be renew",
									"_rewardPerBlocks": ": amount of reward token per block for the pool   0 if we want to stop the pool from accumulating rewards"
								}
							},
							"updatePoolRewards(uint256)": {
								"details": "update reward for one pool"
							},
							"withdraw(uint256,uint256)": {
								"details": "withdraw token (of the sender) from pool, also harvest reward",
								"params": {
									"_amount": ": amount of stakeToken to withdraw",
									"_pid": ": id of the pool"
								}
							},
							"withdrawAll(uint256)": {
								"details": "withdraw all tokens (of the sender) from pool, also harvest reward",
								"params": {
									"_pid": ": id of the pool"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addPool(address,uint32,uint32,uint256[])": "2fb40ce1",
							"deposit(uint256,uint256,bool)": "43a0d066",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"getPoolInfo(uint256)": "2f380b35",
							"getRewardTokens()": "c4f59f9b",
							"getUserInfo(uint256,address)": "1069f3b5",
							"harvest(uint256)": "ddc63262",
							"harvestMultiplePools(uint256[])": "52fd9f2f",
							"pendingRewards(uint256,address)": "d18df53c",
							"poolLength()": "081e3eda",
							"renewPool(uint256,uint32,uint32,uint256[])": "b43c6270",
							"updatePool(uint256,uint32,uint256[])": "affb9fc8",
							"updatePoolRewards(uint256)": "adb82b31",
							"withdraw(uint256,uint256)": "441a3e70",
							"withdrawAll(uint256)": "958e2d31"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakeToken\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_startBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_endBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"_rewardPerBlocks\",\"type\":\"uint256[]\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_shouldHarvest\",\"type\":\"bool\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"getPoolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalStake\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"lastRewardBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"rewardPerBlocks\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"accRewardPerShares\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"unclaimedRewards\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"lastRewardPerShares\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_pids\",\"type\":\"uint256[]\"}],\"name\":\"harvestMultiplePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingRewards\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"rewards\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_startBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_endBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"_rewardPerBlocks\",\"type\":\"uint256[]\"}],\"name\":\"renewPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_endBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"_rewardPerBlocks\",\"type\":\"uint256[]\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePoolRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addPool(address,uint32,uint32,uint256[])\":{\"details\":\"Add a new lp to the pool. Can only be called by the admin.\",\"params\":{\"_endBlock\":\": block where the reward ends\",\"_rewardPerBlocks\":\": amount of reward token per block for the pool\",\"_stakeToken\":\": token to be staked to the pool\",\"_startBlock\":\": block where the reward starts\"}},\"deposit(uint256,uint256,bool)\":{\"details\":\"deposit to tokens to accumulate rewards\",\"params\":{\"_amount\":\": amount of stakeToken to be deposited\",\"_pid\":\": id of the pool\",\"_shouldHarvest\":\": whether to harvest the reward or not\"}},\"emergencyWithdraw(uint256)\":{\"details\":\"emergency withdrawal function to allow withdraw all deposited token (of the sender)   without harvesting the reward\",\"params\":{\"_pid\":\": id of the pool\"}},\"getPoolInfo(uint256)\":{\"details\":\"return full details of a pool\"},\"getRewardTokens()\":{\"details\":\"return list reward tokens\"},\"getUserInfo(uint256,address)\":{\"details\":\"get user's info\"},\"harvest(uint256)\":{\"details\":\"harvest reward from pool for the sender\",\"params\":{\"_pid\":\": id of the pool\"}},\"harvestMultiplePools(uint256[])\":{\"details\":\"harvest rewards from multiple pools for the sender\"},\"pendingRewards(uint256,address)\":{\"details\":\"get pending reward of a user from a pool, mostly for front-end\",\"params\":{\"_pid\":\": id of the pool\",\"_user\":\": user to check for pending rewards\"}},\"poolLength()\":{\"details\":\"return the total of pools that have been added\"},\"renewPool(uint256,uint32,uint32,uint256[])\":{\"details\":\"Renew a pool to start another liquidity mining program\",\"params\":{\"_endBlock\":\": block where the reward ends\",\"_pid\":\": id of the pool to renew, must be pool that has not started or already ended\",\"_rewardPerBlocks\":\": amount of reward token per block for the pool   0 if we want to stop the pool from accumulating rewards\",\"_startBlock\":\": block where the reward starts\"}},\"updatePool(uint256,uint32,uint256[])\":{\"details\":\"Update a pool, allow to change end block, reward per block\",\"params\":{\"_endBlock\":\": block where the reward ends\",\"_pid\":\": pool id to be renew\",\"_rewardPerBlocks\":\": amount of reward token per block for the pool   0 if we want to stop the pool from accumulating rewards\"}},\"updatePoolRewards(uint256)\":{\"details\":\"update reward for one pool\"},\"withdraw(uint256,uint256)\":{\"details\":\"withdraw token (of the sender) from pool, also harvest reward\",\"params\":{\"_amount\":\": amount of stakeToken to withdraw\",\"_pid\":\": id of the pool\"}},\"withdrawAll(uint256)\":{\"details\":\"withdraw all tokens (of the sender) from pool, also harvest reward\",\"params\":{\"_pid\":\": id of the pool\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"KyberFairLaunch_flat.sol\":\"IKyberFairLaunch\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"KyberFairLaunch_flat.sol\":{\"keccak256\":\"0x0dd1e984c612a35ae31722fc8a99906ae0e3fe64257905c63a0ff30310ceb18e\",\"license\":\"MIT AND agpl-3.0\",\"urls\":[\"bzz-raw://cae9aa61164c0ca5865278f4e768f30dea2cc384260e22cdda46c39858881bbc\",\"dweb:/ipfs/QmXCw1Tz94S562QmzjqYdz85AJkrJuJBr8xcL98Z4fKrq8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IKyberRewardLocker": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "vestedQuantity",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "Vested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startBlock",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endBlock",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "VestingEntryCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "VestingEntryQueued",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getVestingScheduleAtIndex",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint64",
											"name": "startBlock",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "endBlock",
											"type": "uint64"
										},
										{
											"internalType": "uint128",
											"name": "quantity",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "vestedQuantity",
											"type": "uint128"
										}
									],
									"internalType": "struct IKyberRewardLocker.VestingSchedule",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getVestingSchedules",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint64",
											"name": "startBlock",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "endBlock",
											"type": "uint64"
										},
										{
											"internalType": "uint128",
											"name": "quantity",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "vestedQuantity",
											"type": "uint128"
										}
									],
									"internalType": "struct IKyberRewardLocker.VestingSchedule[]",
									"name": "schedules",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "lock",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startBlock",
									"type": "uint256"
								}
							],
							"name": "lockWithStartBlock",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								}
							],
							"name": "numVestingSchedules",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								}
							],
							"name": "vestCompletedSchedules",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Ext[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "vestCompletedSchedulesForMultipleTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "vestedAmounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "indexes",
									"type": "uint256[]"
								}
							],
							"name": "vestScheduleAtIndices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Ext[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[][]",
									"name": "indices",
									"type": "uint256[][]"
								}
							],
							"name": "vestScheduleForMultipleTokensAtIndices",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "vestedAmounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "startIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endIndex",
									"type": "uint256"
								}
							],
							"name": "vestSchedulesInRange",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getVestingScheduleAtIndex(address,address,uint256)": {
								"details": "get detailed of each vesting schedule"
							},
							"getVestingSchedules(address,address)": {
								"details": "get vesting shedules array"
							},
							"lock(address,address,uint256)": {
								"details": "queue a vesting schedule starting from now"
							},
							"lockWithStartBlock(address,address,uint256,uint256)": {
								"details": "queue a vesting schedule"
							},
							"numVestingSchedules(address,address)": {
								"details": "length of vesting schedules array"
							},
							"vestCompletedSchedules(address)": {
								"details": "for all completed schedule, claim token"
							},
							"vestCompletedSchedulesForMultipleTokens(address[])": {
								"details": "vest all completed schedules for multiple tokens"
							},
							"vestScheduleAtIndices(address,uint256[])": {
								"details": "claim token for specific vesting schedule,if schedule has not ended yet, claiming amount is linear with vesting blocks"
							},
							"vestScheduleForMultipleTokensAtIndices(address[],uint256[][])": {
								"details": "claim multiple tokens for specific vesting schedule,      if schedule has not ended yet, claiming amounts are linear with vesting blocks"
							},
							"vestSchedulesInRange(address,uint256,uint256)": {
								"details": "claim token for specific vesting schedule from startIndex to endIndex"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getVestingScheduleAtIndex(address,address,uint256)": "0a3b7e31",
							"getVestingSchedules(address,address)": "2f50bd72",
							"lock(address,address,uint256)": "7750c9f0",
							"lockWithStartBlock(address,address,uint256,uint256)": "a5d21e31",
							"numVestingSchedules(address,address)": "679f7f77",
							"vestCompletedSchedules(address)": "fdfaaa05",
							"vestCompletedSchedulesForMultipleTokens(address[])": "9059aa6a",
							"vestScheduleAtIndices(address,uint256[])": "0f5636c3",
							"vestScheduleForMultipleTokensAtIndices(address[],uint256[][])": "4d4f3d93",
							"vestSchedulesInRange(address,uint256,uint256)": "c33fddf8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vestedQuantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"Vested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"VestingEntryCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"VestingEntryQueued\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getVestingScheduleAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"quantity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"vestedQuantity\",\"type\":\"uint128\"}],\"internalType\":\"struct IKyberRewardLocker.VestingSchedule\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getVestingSchedules\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"quantity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"vestedQuantity\",\"type\":\"uint128\"}],\"internalType\":\"struct IKyberRewardLocker.VestingSchedule[]\",\"name\":\"schedules\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"}],\"name\":\"lockWithStartBlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"numVestingSchedules\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"vestCompletedSchedules\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Ext[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"vestCompletedSchedulesForMultipleTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"vestedAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"indexes\",\"type\":\"uint256[]\"}],\"name\":\"vestScheduleAtIndices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Ext[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"indices\",\"type\":\"uint256[][]\"}],\"name\":\"vestScheduleForMultipleTokensAtIndices\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"vestedAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endIndex\",\"type\":\"uint256\"}],\"name\":\"vestSchedulesInRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getVestingScheduleAtIndex(address,address,uint256)\":{\"details\":\"get detailed of each vesting schedule\"},\"getVestingSchedules(address,address)\":{\"details\":\"get vesting shedules array\"},\"lock(address,address,uint256)\":{\"details\":\"queue a vesting schedule starting from now\"},\"lockWithStartBlock(address,address,uint256,uint256)\":{\"details\":\"queue a vesting schedule\"},\"numVestingSchedules(address,address)\":{\"details\":\"length of vesting schedules array\"},\"vestCompletedSchedules(address)\":{\"details\":\"for all completed schedule, claim token\"},\"vestCompletedSchedulesForMultipleTokens(address[])\":{\"details\":\"vest all completed schedules for multiple tokens\"},\"vestScheduleAtIndices(address,uint256[])\":{\"details\":\"claim token for specific vesting schedule,if schedule has not ended yet, claiming amount is linear with vesting blocks\"},\"vestScheduleForMultipleTokensAtIndices(address[],uint256[][])\":{\"details\":\"claim multiple tokens for specific vesting schedule,      if schedule has not ended yet, claiming amounts are linear with vesting blocks\"},\"vestSchedulesInRange(address,uint256,uint256)\":{\"details\":\"claim token for specific vesting schedule from startIndex to endIndex\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"KyberFairLaunch_flat.sol\":\"IKyberRewardLocker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"KyberFairLaunch_flat.sol\":{\"keccak256\":\"0x0dd1e984c612a35ae31722fc8a99906ae0e3fe64257905c63a0ff30310ceb18e\",\"license\":\"MIT AND agpl-3.0\",\"urls\":[\"bzz-raw://cae9aa61164c0ca5865278f4e768f30dea2cc384260e22cdda46c39858881bbc\",\"dweb:/ipfs/QmXCw1Tz94S562QmzjqYdz85AJkrJuJBr8xcL98Z4fKrq8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"KyberFairLaunch": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "_rewardTokens",
									"type": "address[]"
								},
								{
									"internalType": "contract IKyberRewardLocker",
									"name": "_rewardLocker",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "stakeToken",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "startBlock",
									"type": "uint32"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "endBlock",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "rewardPerBlocks",
									"type": "uint256[]"
								}
							],
							"name": "AddNewPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								}
							],
							"name": "AdminClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "rewardToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockedAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "Harvest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "startBlock",
									"type": "uint32"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "endBlock",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "rewardPerBlocks",
									"type": "uint256[]"
								}
							],
							"name": "RenewPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pendingAdmin",
									"type": "address"
								}
							],
							"name": "TransferAdminPending",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "endBlock",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "rewardPerBlocks",
									"type": "uint256[]"
								}
							],
							"name": "UpdatePool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakeToken",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "_startBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "_endBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256[]",
									"name": "_rewardPerBlocks",
									"type": "uint256[]"
								}
							],
							"name": "addPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rewardTokenIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "adminWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_shouldHarvest",
									"type": "bool"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "getPoolInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalStake",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "stakeToken",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "startBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "endBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "lastRewardBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256[]",
									"name": "rewardPerBlocks",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "accRewardPerShares",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardTokens",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getUserInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "unclaimedRewards",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "lastRewardPerShares",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_pids",
									"type": "uint256[]"
								}
							],
							"name": "harvestMultiplePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingRewards",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "rewards",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "poolExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "_startBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "_endBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256[]",
									"name": "_rewardPerBlocks",
									"type": "uint256[]"
								}
							],
							"name": "renewPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardLocker",
							"outputs": [
								{
									"internalType": "contract IKyberRewardLocker",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "rewardTokens",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "transferAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "transferAdminQuickly",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "_endBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256[]",
									"name": "_rewardPerBlocks",
									"type": "uint256[]"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePoolRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "withdrawAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addPool(address,uint32,uint32,uint256[])": {
								"details": "Add a new lp to the pool. Can only be called by the admin.",
								"params": {
									"_endBlock": ": block where the reward ends",
									"_rewardPerBlocks": ": amount of reward token per block for the pool for each reward token",
									"_stakeToken": ": token to be staked to the pool",
									"_startBlock": ": block where the reward starts"
								}
							},
							"adminWithdraw(uint256,uint256)": {
								"details": "Allow admin to withdraw only reward tokens"
							},
							"claimAdmin()": {
								"details": "Allows the pendingAdmin address to finalize the change admin process."
							},
							"deposit(uint256,uint256,bool)": {
								"details": "Deposit tokens to accumulate rewards",
								"params": {
									"_amount": ": amount of stakeToken to be deposited",
									"_pid": ": id of the pool",
									"_shouldHarvest": ": whether to harvest the reward or not"
								}
							},
							"emergencyWithdraw(uint256)": {
								"details": "Emergency withdrawal function to allow withdraw all deposited tokens (of the sender)   and reset all rewards",
								"params": {
									"_pid": ": id of the pool"
								}
							},
							"getPoolInfo(uint256)": {
								"details": "Return full details of a pool"
							},
							"getRewardTokens()": {
								"details": "Return list reward tokens"
							},
							"getUserInfo(uint256,address)": {
								"details": "Return user's info including deposited amount and reward data"
							},
							"harvest(uint256)": {
								"details": "Harvest rewards from a pool for the sender",
								"params": {
									"_pid": ": id of the pool"
								}
							},
							"harvestMultiplePools(uint256[])": {
								"details": "Harvest rewards from multiple pools for the sender   combine rewards from all pools and only transfer once to save gas"
							},
							"pendingRewards(uint256,address)": {
								"details": "Get pending rewards of a user from a pool, mostly for front-end",
								"params": {
									"_pid": ": id of the pool",
									"_user": ": user to check for pending rewards"
								}
							},
							"renewPool(uint256,uint32,uint32,uint256[])": {
								"details": "Renew a pool to start another liquidity mining program",
								"params": {
									"_endBlock": ": block where the reward ends",
									"_pid": ": id of the pool to renew, must be pool that has not started or already ended",
									"_rewardPerBlocks": ": amount of reward token per block for the pool   0 if we want to stop the pool from accumulating rewards",
									"_startBlock": ": block where the reward starts"
								}
							},
							"transferAdmin(address)": {
								"details": "Allows the current admin to set the pendingAdmin address.",
								"params": {
									"newAdmin": "The address to transfer ownership to."
								}
							},
							"transferAdminQuickly(address)": {
								"details": "Allows the current admin to set the admin in one tx. Useful initial deployment.",
								"params": {
									"newAdmin": "The address to transfer ownership to."
								}
							},
							"updatePool(uint256,uint32,uint256[])": {
								"details": "Update a pool, allow to change end block, reward per block",
								"params": {
									"_endBlock": ": block where the reward ends",
									"_pid": ": pool id to be renew",
									"_rewardPerBlocks": ": amount of reward token per block for the pool,   0 if we want to stop the pool from accumulating rewards"
								}
							},
							"updatePoolRewards(uint256)": {
								"details": "Update rewards for one pool"
							},
							"withdraw(uint256,uint256)": {
								"details": "Withdraw token (of the sender) from pool, also harvest rewards",
								"params": {
									"_amount": ": amount of stakeToken to withdraw",
									"_pid": ": id of the pool"
								}
							},
							"withdrawAll(uint256)": {
								"details": "Withdraw all tokens (of the sender) from pool, also harvest reward",
								"params": {
									"_pid": ": id of the pool"
								}
							}
						},
						"stateVariables": {
							"poolLength": {
								"details": "return the total of pools that have been added"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"KyberFairLaunch_flat.sol\":41959:64319  contract KyberFairLaunch is IKyberFairLaunch, PermissionAdmin, ReentrancyGuard {\r... */\n  mstore(0x40, 0xa0)\n    /* \"KyberFairLaunch_flat.sol\":45768:46356  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"KyberFairLaunch_flat.sol\":45912:45918  _admin */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"KyberFairLaunch_flat.sol\":4933:4953  _admin != address(0) */\n  dup2\n  and\n    /* \"KyberFairLaunch_flat.sol\":4925:4965  require(_admin != address(0), \"admin 0\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"KyberFairLaunch_flat.sol\":4976:4981  admin */\n  0x00\n    /* \"KyberFairLaunch_flat.sol\":4976:4990  admin = _admin */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  0x01\n    /* \"KyberFairLaunch_flat.sol\":40609:40616  _status */\n  0x02\n    /* \"KyberFairLaunch_flat.sol\":40609:40631  _status = _NOT_ENTERED */\n  sstore\n    /* \"KyberFairLaunch_flat.sol\":45931:45959  rewardTokens = _rewardTokens */\n  dup2\n  mload\n  tag_13\n  swap1\n    /* \"KyberFairLaunch_flat.sol\":45931:45943  rewardTokens */\n  0x04\n  swap1\n    /* \"KyberFairLaunch_flat.sol\":45931:45959  rewardTokens = _rewardTokens */\n  0x20\n  dup6\n  add\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  pop\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"KyberFairLaunch_flat.sol\":45970:45998  rewardLocker = _rewardLocker */\n  0x60\n  dup3\n  swap1\n  shl\n  and\n  0x80\n  mstore\n    /* \"KyberFairLaunch_flat.sol\":46063:46072  uint256 i */\n  0x00\n    /* \"KyberFairLaunch_flat.sol\":46058:46349  for (uint256 i = 0; i < _rewardTokens.length; i++) {\r... */\ntag_15:\n    /* \"KyberFairLaunch_flat.sol\":46082:46095  _rewardTokens */\n  dup3\n    /* \"KyberFairLaunch_flat.sol\":46082:46102  _rewardTokens.length */\n  mload\n    /* \"KyberFairLaunch_flat.sol\":46078:46079  i */\n  dup2\n    /* \"KyberFairLaunch_flat.sol\":46078:46102  i < _rewardTokens.length */\n  lt\n    /* \"KyberFairLaunch_flat.sol\":46058:46349  for (uint256 i = 0; i < _rewardTokens.length; i++) {\r... */\n  iszero\n  tag_16\n  jumpi\n    /* \"KyberFairLaunch_flat.sol\":46156:46157  0 */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"KyberFairLaunch_flat.sol\":46128:46158  _rewardTokens[i] != address(0) */\n  and\n    /* \"KyberFairLaunch_flat.sol\":46128:46141  _rewardTokens */\n  dup4\n    /* \"KyberFairLaunch_flat.sol\":46142:46143  i */\n  dup3\n    /* \"KyberFairLaunch_flat.sol\":46128:46144  _rewardTokens[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_18\n  jumpi\n  invalid\ntag_18:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"KyberFairLaunch_flat.sol\":46128:46158  _rewardTokens[i] != address(0) */\n  and\n  eq\n    /* \"KyberFairLaunch_flat.sol\":46124:46338  if (_rewardTokens[i] != address(0)) {\r... */\n  tag_20\n  jumpi\n    /* \"KyberFairLaunch_flat.sol\":46179:46322  IERC20Ext(_rewardTokens[i]).safeApprove(\r... */\n  tag_20\n    /* \"KyberFairLaunch_flat.sol\":46249:46262  _rewardLocker */\n  dup3\n  not(0x00)\n    /* \"KyberFairLaunch_flat.sol\":46189:46202  _rewardTokens */\n  dup6\n    /* \"KyberFairLaunch_flat.sol\":46203:46204  i */\n  dup5\n    /* \"KyberFairLaunch_flat.sol\":46189:46205  _rewardTokens[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_21\n  jumpi\n  invalid\ntag_21:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"KyberFairLaunch_flat.sol\":46179:46218  IERC20Ext(_rewardTokens[i]).safeApprove */\n  and\n  or(tag_0_149, shl(0x20, tag_22))\n  swap1\n    /* \"KyberFairLaunch_flat.sol\":46179:46322  IERC20Ext(_rewardTokens[i]).safeApprove(\r... */\n  swap3\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"KyberFairLaunch_flat.sol\":46104:46107  i++ */\n  0x01\n  add\n    /* \"KyberFairLaunch_flat.sol\":46058:46349  for (uint256 i = 0; i < _rewardTokens.length; i++) {\r... */\n  jump(tag_15)\ntag_16:\n  pop\n    /* \"KyberFairLaunch_flat.sol\":45768:46356  constructor(\r... */\n  pop\n  pop\n  pop\n    /* \"KyberFairLaunch_flat.sol\":41959:64319  contract KyberFairLaunch is IKyberFairLaunch, PermissionAdmin, ReentrancyGuard {\r... */\n  jump(tag_83)\n    /* \"KyberFairLaunch_flat.sol\":36366:36988  function safeApprove(IERC20 token, address spender, uint256 value) internal {\r... */\ntag_22:\n    /* \"KyberFairLaunch_flat.sol\":36736:36746  value == 0 */\n  dup1\n  iszero\n  dup1\n    /* \"KyberFairLaunch_flat.sol\":36735:36797  (value == 0) || (token.allowance(address(this), spender) == 0) */\n  tag_25\n  jumpi\n  pop\n    /* \"KyberFairLaunch_flat.sol\":36752:36791  token.allowance(address(this), spender) */\n  mload(0x40)\n  shl(0xe1, 0x6eb1769f)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"KyberFairLaunch_flat.sol\":36752:36767  token.allowance */\n  dup5\n  and\n  swap1\n  0xdd62ed3e\n  swap1\n    /* \"KyberFairLaunch_flat.sol\":36752:36791  token.allowance(address(this), spender) */\n  tag_26\n  swap1\n    /* \"KyberFairLaunch_flat.sol\":36776:36780  this */\n  address\n  swap1\n    /* \"KyberFairLaunch_flat.sol\":36783:36790  spender */\n  dup7\n  swap1\n    /* \"KyberFairLaunch_flat.sol\":36752:36791  token.allowance(address(this), spender) */\n  0x04\n  add\n  tag_27\n  jump\t// in\ntag_26:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_28\n  jumpi\n  0x00\n  dup1\n  revert\ntag_28:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_30\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_30:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_31\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"KyberFairLaunch_flat.sol\":36752:36796  token.allowance(address(this), spender) == 0 */\n  iszero\n    /* \"KyberFairLaunch_flat.sol\":36735:36797  (value == 0) || (token.allowance(address(this), spender) == 0) */\ntag_25:\n    /* \"KyberFairLaunch_flat.sol\":36727:36879  require((value == 0) || (token.allowance(address(this), spender) == 0),\r... */\n  tag_33\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap1\n  tag_35\n  jump\t// in\ntag_33:\n    /* \"KyberFairLaunch_flat.sol\":36890:36980  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n  tag_36\n    /* \"KyberFairLaunch_flat.sol\":36910:36915  token */\n  dup4\n    /* \"KyberFairLaunch_flat.sol\":36940:36962  token.approve.selector */\n  shl(0xe0, 0x095ea7b3)\n    /* \"KyberFairLaunch_flat.sol\":36964:36971  spender */\n  dup5\n    /* \"KyberFairLaunch_flat.sol\":36973:36978  value */\n  dup5\n    /* \"KyberFairLaunch_flat.sol\":36917:36979  abi.encodeWithSelector(token.approve.selector, spender, value) */\n  add(0x24, mload(0x40))\n  tag_37\n  swap3\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  0x40\n  dup1\n  mload\n  dup1\n  dup4\n  sub\n  not(0x1f)\n  add\n  dup2\n  mstore\n  swap2\n  swap1\n  mstore\n  0x20\n  dup2\n  add\n  dup1\n  mload\n  not(sub(shl(0xe0, 0x01), 0x01))\n  swap4\n  swap1\n  swap4\n  and\n  sub(shl(0xe0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  or\n  swap1\n  mstore\n  swap1\n    /* \"KyberFairLaunch_flat.sol\":36890:36909  _callOptionalReturn */\n  tag_39\n    /* \"KyberFairLaunch_flat.sol\":36890:36980  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n  and\n  jump\t// in\ntag_36:\n    /* \"KyberFairLaunch_flat.sol\":36366:36988  function safeApprove(IERC20 token, address spender, uint256 value) internal {\r... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"KyberFairLaunch_flat.sol\":38012:38773  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\ntag_39:\n    /* \"KyberFairLaunch_flat.sol\":38436:38459  bytes memory returndata */\n  0x00\n    /* \"KyberFairLaunch_flat.sol\":38462:38531  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  tag_41\n    /* \"KyberFairLaunch_flat.sol\":38490:38494  data */\n  dup3\n    /* \"KyberFairLaunch_flat.sol\":38462:38531  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x20\n  dup2\n  mstore\n  0x20\n  add\n  0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n  dup2\n  mstore\n  pop\n    /* \"KyberFairLaunch_flat.sol\":38470:38475  token */\n  dup6\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"KyberFairLaunch_flat.sol\":38462:38489  address(token).functionCall */\n  and\n  or(tag_0_150, shl(0x20, tag_42))\n  swap1\n    /* \"KyberFairLaunch_flat.sol\":38462:38531  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  swap3\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_41:\n    /* \"KyberFairLaunch_flat.sol\":38546:38563  returndata.length */\n  dup1\n  mload\n    /* \"KyberFairLaunch_flat.sol\":38436:38531  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  swap1\n  swap2\n  pop\n    /* \"KyberFairLaunch_flat.sol\":38546:38567  returndata.length > 0 */\n  iszero\n    /* \"KyberFairLaunch_flat.sol\":38542:38766  if (returndata.length > 0) { // Return data is optional\r... */\n  tag_36\n  jumpi\n    /* \"KyberFairLaunch_flat.sol\":38688:38698  returndata */\n  dup1\n    /* \"KyberFairLaunch_flat.sol\":38677:38707  abi.decode(returndata, (bool)) */\n  dup1\n  0x20\n  add\n  swap1\n  mload\n  dup2\n  add\n  swap1\n  tag_44\n  swap2\n  swap1\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"KyberFairLaunch_flat.sol\":38669:38754  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n  tag_36\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap1\n  tag_48\n  jump\t// in\n    /* \"KyberFairLaunch_flat.sol\":16689:16884  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\ntag_42:\n    /* \"KyberFairLaunch_flat.sol\":16792:16804  bytes memory */\n  0x60\n    /* \"KyberFairLaunch_flat.sol\":16824:16876  functionCallWithValue(target, data, 0, errorMessage) */\n  tag_50\n    /* \"KyberFairLaunch_flat.sol\":16846:16852  target */\n  dup5\n    /* \"KyberFairLaunch_flat.sol\":16854:16858  data */\n  dup5\n    /* \"KyberFairLaunch_flat.sol\":16860:16861  0 */\n  0x00\n    /* \"KyberFairLaunch_flat.sol\":16863:16875  errorMessage */\n  dup6\n    /* \"KyberFairLaunch_flat.sol\":16824:16845  functionCallWithValue */\n  tag_51\n    /* \"KyberFairLaunch_flat.sol\":16824:16876  functionCallWithValue(target, data, 0, errorMessage) */\n  jump\t// in\ntag_50:\n    /* \"KyberFairLaunch_flat.sol\":16817:16876  return functionCallWithValue(target, data, 0, errorMessage) */\n  swap1\n  pop\n    /* \"KyberFairLaunch_flat.sol\":16689:16884  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\ntag_49:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"KyberFairLaunch_flat.sol\":17741:18271  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r... */\ntag_51:\n    /* \"KyberFairLaunch_flat.sol\":17868:17880  bytes memory */\n  0x60\n    /* \"KyberFairLaunch_flat.sol\":17926:17931  value */\n  dup3\n    /* \"KyberFairLaunch_flat.sol\":17901:17922  address(this).balance */\n  selfbalance\n    /* \"KyberFairLaunch_flat.sol\":17901:17931  address(this).balance >= value */\n  lt\n  iszero\n    /* \"KyberFairLaunch_flat.sol\":17893:17974  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n  tag_53\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap1\n  tag_55\n  jump\t// in\ntag_53:\n    /* \"KyberFairLaunch_flat.sol\":17993:18011  isContract(target) */\n  tag_56\n    /* \"KyberFairLaunch_flat.sol\":18004:18010  target */\n  dup6\n    /* \"KyberFairLaunch_flat.sol\":17993:18003  isContract */\n  tag_57\n    /* \"KyberFairLaunch_flat.sol\":17993:18011  isContract(target) */\n  jump\t// in\ntag_56:\n    /* \"KyberFairLaunch_flat.sol\":17985:18045  require(isContract(target), \"Address: call to non-contract\") */\n  tag_58\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap1\n  tag_60\n  jump\t// in\ntag_58:\n    /* \"KyberFairLaunch_flat.sol\":18119:18131  bool success */\n  0x00\n    /* \"KyberFairLaunch_flat.sol\":18133:18156  bytes memory returndata */\n  dup1\n    /* \"KyberFairLaunch_flat.sol\":18160:18166  target */\n  dup7\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"KyberFairLaunch_flat.sol\":18160:18171  target.call */\n  and\n    /* \"KyberFairLaunch_flat.sol\":18180:18185  value */\n  dup6\n    /* \"KyberFairLaunch_flat.sol\":18188:18192  data */\n  dup8\n    /* \"KyberFairLaunch_flat.sol\":18160:18193  target.call{ value: value }(data) */\n  mload(0x40)\n  tag_61\n  swap2\n  swap1\n  tag_62\n  jump\t// in\ntag_61:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  dup8\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_65\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_64)\ntag_65:\n  0x60\n  swap2\n  pop\ntag_64:\n  pop\n    /* \"KyberFairLaunch_flat.sol\":18118:18193  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n  swap1\n  swap3\n  pop\n  swap1\n  pop\n    /* \"KyberFairLaunch_flat.sol\":18211:18263  _verifyCallResult(success, returndata, errorMessage) */\n  tag_66\n    /* \"KyberFairLaunch_flat.sol\":18118:18193  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n  dup3\n  dup3\n    /* \"KyberFairLaunch_flat.sol\":18250:18262  errorMessage */\n  dup7\n    /* \"KyberFairLaunch_flat.sol\":18211:18228  _verifyCallResult */\n  tag_67\n    /* \"KyberFairLaunch_flat.sol\":18211:18263  _verifyCallResult(success, returndata, errorMessage) */\n  jump\t// in\ntag_66:\n    /* \"KyberFairLaunch_flat.sol\":18204:18263  return _verifyCallResult(success, returndata, errorMessage) */\n  swap8\n    /* \"KyberFairLaunch_flat.sol\":17741:18271  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r... */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"KyberFairLaunch_flat.sol\":13771:14193  function isContract(address account) internal view returns (bool) {\r... */\ntag_57:\n    /* \"KyberFairLaunch_flat.sol\":14138:14158  extcodesize(account) */\n  dup1\n  extcodesize\n    /* \"KyberFairLaunch_flat.sol\":14177:14185  size > 0 */\n  iszero\n  iszero\n    /* \"KyberFairLaunch_flat.sol\":13771:14193  function isContract(address account) internal view returns (bool) {\r... */\ntag_68:\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"KyberFairLaunch_flat.sol\":20281:21023  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r... */\ntag_67:\n    /* \"KyberFairLaunch_flat.sol\":20396:20408  bytes memory */\n  0x60\n    /* \"KyberFairLaunch_flat.sol\":20425:20432  success */\n  dup4\n    /* \"KyberFairLaunch_flat.sol\":20421:21016  if (success) {\r... */\n  iszero\n  tag_70\n  jumpi\n  pop\n    /* \"KyberFairLaunch_flat.sol\":20456:20466  returndata */\n  dup2\n    /* \"KyberFairLaunch_flat.sol\":20449:20466  return returndata */\n  jump(tag_49)\n    /* \"KyberFairLaunch_flat.sol\":20421:21016  if (success) {\r... */\ntag_70:\n    /* \"KyberFairLaunch_flat.sol\":20570:20587  returndata.length */\n  dup3\n  mload\n    /* \"KyberFairLaunch_flat.sol\":20570:20591  returndata.length > 0 */\n  iszero\n    /* \"KyberFairLaunch_flat.sol\":20566:21005  if (returndata.length > 0) {\r... */\n  tag_72\n  jumpi\n    /* \"KyberFairLaunch_flat.sol\":20833:20843  returndata */\n  dup3\n    /* \"KyberFairLaunch_flat.sol\":20827:20844  mload(returndata) */\n  mload\n    /* \"KyberFairLaunch_flat.sol\":20894:20909  returndata_size */\n  dup1\n    /* \"KyberFairLaunch_flat.sol\":20881:20891  returndata */\n  dup5\n    /* \"KyberFairLaunch_flat.sol\":20877:20879  32 */\n  0x20\n    /* \"KyberFairLaunch_flat.sol\":20873:20892  add(32, returndata) */\n  add\n    /* \"KyberFairLaunch_flat.sol\":20866:20910  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"KyberFairLaunch_flat.sol\":20781:20929  {\r... */\ntag_72:\n    /* \"KyberFairLaunch_flat.sol\":20976:20988  errorMessage */\n  dup2\n    /* \"KyberFairLaunch_flat.sol\":20969:20989  revert(errorMessage) */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_75\n  jump\t// in\n    /* \"KyberFairLaunch_flat.sol\":41959:64319  contract KyberFairLaunch is IKyberFairLaunch, PermissionAdmin, ReentrancyGuard {\r... */\ntag_14:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_78\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_77:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_78\n  jumpi\n  dup3\n  mload\n  dup3\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  or\n  dup3\n  sstore\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  0x01\n  swap1\n  swap2\n  add\n  swap1\n  jump(tag_77)\ntag_78:\n  pop\n  tag_79\n  swap3\n  swap2\n  pop\n  tag_80\n  jump\t// in\ntag_79:\n  pop\n  swap1\n  jump\t// out\ntag_80:\ntag_81:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_79\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_81)\n    /* \"#utility.yul\":14:156   */\ntag_84:\n    /* \"#utility.yul\":95:108   */\n  dup1\n  mload\n    /* \"#utility.yul\":117:150   */\n  tag_68\n    /* \"#utility.yul\":95:108   */\n  dup2\n    /* \"#utility.yul\":117:150   */\n  tag_87\n  jump\t// in\n    /* \"#utility.yul\":161:1561   */\ntag_3:\n  0x00\n  dup1\n  0x00\n    /* \"#utility.yul\":370:372   */\n  0x60\n    /* \"#utility.yul\":358:367   */\n  dup5\n    /* \"#utility.yul\":349:356   */\n  dup7\n    /* \"#utility.yul\":345:368   */\n  sub\n    /* \"#utility.yul\":341:373   */\n  slt\n    /* \"#utility.yul\":338:340   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":391:397   */\n  dup3\n    /* \"#utility.yul\":383:389   */\n  dup4\n    /* \"#utility.yul\":376:398   */\n  revert\n    /* \"#utility.yul\":338:340   */\ntag_89:\n    /* \"#utility.yul\":428:437   */\n  dup4\n    /* \"#utility.yul\":422:438   */\n  mload\n    /* \"#utility.yul\":447:480   */\n  tag_90\n    /* \"#utility.yul\":474:479   */\n  dup2\n    /* \"#utility.yul\":447:480   */\n  tag_87\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":523:525   */\n  0x20\n    /* \"#utility.yul\":554:572   */\n  dup6\n  dup2\n  add\n    /* \"#utility.yul\":548:573   */\n  mload\n    /* \"#utility.yul\":499:504   */\n  swap2\n  swap5\n  pop\n    /* \"#utility.yul\":523:525   */\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":622:636   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":619:621   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":654:660   */\n  dup5\n    /* \"#utility.yul\":646:652   */\n  dup6\n    /* \"#utility.yul\":639:661   */\n  revert\n    /* \"#utility.yul\":619:621   */\ntag_91:\n    /* \"#utility.yul\":697:703   */\n  dup2\n    /* \"#utility.yul\":686:695   */\n  dup8\n    /* \"#utility.yul\":682:704   */\n  add\n    /* \"#utility.yul\":672:704   */\n  swap2\n  pop\n    /* \"#utility.yul\":742:749   */\n  dup8\n    /* \"#utility.yul\":735:739   */\n  0x1f\n    /* \"#utility.yul\":731:733   */\n  dup4\n    /* \"#utility.yul\":727:740   */\n  add\n    /* \"#utility.yul\":723:750   */\n  slt\n    /* \"#utility.yul\":713:715   */\n  tag_92\n  jumpi\n    /* \"#utility.yul\":769:775   */\n  dup5\n    /* \"#utility.yul\":761:767   */\n  dup6\n    /* \"#utility.yul\":754:776   */\n  revert\n    /* \"#utility.yul\":713:715   */\ntag_92:\n    /* \"#utility.yul\":803:805   */\n  dup2\n    /* \"#utility.yul\":797:806   */\n  mload\n    /* \"#utility.yul\":825:827   */\n  dup2\n    /* \"#utility.yul\":821:823   */\n  dup2\n    /* \"#utility.yul\":818:828   */\n  gt\n    /* \"#utility.yul\":815:817   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":831:840   */\n  invalid\n    /* \"#utility.yul\":815:817   */\ntag_93:\n    /* \"#utility.yul\":869:871   */\n  dup4\n    /* \"#utility.yul\":865:867   */\n  dup2\n    /* \"#utility.yul\":861:872   */\n  mul\n    /* \"#utility.yul\":901:903   */\n  0x40\n    /* \"#utility.yul\":895:904   */\n  mload\n    /* \"#utility.yul\":952:954   */\n  dup6\n    /* \"#utility.yul\":947:949   */\n  dup3\n    /* \"#utility.yul\":939:945   */\n  dup3\n    /* \"#utility.yul\":935:950   */\n  add\n    /* \"#utility.yul\":931:955   */\n  add\n    /* \"#utility.yul\":1005:1011   */\n  dup2\n    /* \"#utility.yul\":993:1003   */\n  dup2\n    /* \"#utility.yul\":990:1012   */\n  lt\n    /* \"#utility.yul\":985:987   */\n  dup6\n    /* \"#utility.yul\":973:983   */\n  dup3\n    /* \"#utility.yul\":970:988   */\n  gt\n    /* \"#utility.yul\":967:1013   */\n  or\n    /* \"#utility.yul\":964:966   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":1016:1025   */\n  invalid\n    /* \"#utility.yul\":964:966   */\ntag_94:\n    /* \"#utility.yul\":1043:1045   */\n  0x40\n    /* \"#utility.yul\":1036:1058   */\n  mstore\n    /* \"#utility.yul\":1093:1111   */\n  dup3\n  dup2\n  mstore\n    /* \"#utility.yul\":1127:1142   */\n  dup6\n  dup2\n  add\n  swap4\n  pop\n    /* \"#utility.yul\":1162:1173   */\n  dup5\n  dup7\n  add\n    /* \"#utility.yul\":1192:1203   */\n  dup3\n  dup7\n  add\n    /* \"#utility.yul\":1188:1208   */\n  dup8\n  add\n    /* \"#utility.yul\":1185:1218   */\n  dup13\n  lt\n    /* \"#utility.yul\":1182:1184   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":1236:1242   */\n  dup9\n    /* \"#utility.yul\":1228:1234   */\n  dup10\n    /* \"#utility.yul\":1221:1243   */\n  revert\n    /* \"#utility.yul\":1182:1184   */\ntag_95:\n    /* \"#utility.yul\":1263:1269   */\n  dup9\n    /* \"#utility.yul\":1254:1269   */\n  swap6\n  pop\n    /* \"#utility.yul\":1278:1460   */\ntag_96:\n    /* \"#utility.yul\":1292:1294   */\n  dup4\n    /* \"#utility.yul\":1289:1290   */\n  dup7\n    /* \"#utility.yul\":1286:1295   */\n  lt\n    /* \"#utility.yul\":1278:1460   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":1349:1385   */\n  tag_99\n    /* \"#utility.yul\":1381:1384   */\n  dup2\n    /* \"#utility.yul\":1349:1385   */\n  tag_84\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1337:1386   */\n  dup6\n  mstore\n    /* \"#utility.yul\":1310:1311   */\n  0x01\n    /* \"#utility.yul\":1303:1312   */\n  swap6\n  swap1\n  swap6\n  add\n  swap5\n    /* \"#utility.yul\":1406:1418   */\n  swap4\n  dup7\n  add\n  swap4\n    /* \"#utility.yul\":1438:1450   */\n  dup7\n  add\n    /* \"#utility.yul\":1278:1460   */\n  jump(tag_96)\ntag_98:\n    /* \"#utility.yul\":1282:1285   */\n  pop\n    /* \"#utility.yul\":1479:1485   */\n  dup1\n    /* \"#utility.yul\":1469:1485   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1504:1555   */\n  tag_100\n    /* \"#utility.yul\":1551:1553   */\n  0x40\n    /* \"#utility.yul\":1540:1549   */\n  dup6\n    /* \"#utility.yul\":1536:1554   */\n  add\n    /* \"#utility.yul\":1504:1555   */\n  tag_84\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1494:1555   */\n  swap1\n  pop\n    /* \"#utility.yul\":328:1561   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1566:1863   */\ntag_45:\n  0x00\n    /* \"#utility.yul\":1686:1688   */\n  0x20\n    /* \"#utility.yul\":1674:1683   */\n  dup3\n    /* \"#utility.yul\":1665:1672   */\n  dup5\n    /* \"#utility.yul\":1661:1684   */\n  sub\n    /* \"#utility.yul\":1657:1689   */\n  slt\n    /* \"#utility.yul\":1654:1656   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":1707:1713   */\n  dup1\n    /* \"#utility.yul\":1699:1705   */\n  dup2\n    /* \"#utility.yul\":1692:1714   */\n  revert\n    /* \"#utility.yul\":1654:1656   */\ntag_102:\n    /* \"#utility.yul\":1744:1753   */\n  dup2\n    /* \"#utility.yul\":1738:1754   */\n  mload\n    /* \"#utility.yul\":1797:1802   */\n  dup1\n    /* \"#utility.yul\":1790:1803   */\n  iszero\n    /* \"#utility.yul\":1783:1804   */\n  iszero\n    /* \"#utility.yul\":1776:1781   */\n  dup2\n    /* \"#utility.yul\":1773:1805   */\n  eq\n    /* \"#utility.yul\":1763:1765   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1824:1830   */\n  dup2\n    /* \"#utility.yul\":1816:1822   */\n  dup3\n    /* \"#utility.yul\":1809:1831   */\n  revert\n    /* \"#utility.yul\":1868:2062   */\ntag_32:\n  0x00\n    /* \"#utility.yul\":1991:1993   */\n  0x20\n    /* \"#utility.yul\":1979:1988   */\n  dup3\n    /* \"#utility.yul\":1970:1977   */\n  dup5\n    /* \"#utility.yul\":1966:1989   */\n  sub\n    /* \"#utility.yul\":1962:1994   */\n  slt\n    /* \"#utility.yul\":1959:1961   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":2012:2018   */\n  dup1\n    /* \"#utility.yul\":2004:2010   */\n  dup2\n    /* \"#utility.yul\":1997:2019   */\n  revert\n    /* \"#utility.yul\":1959:1961   */\ntag_105:\n  pop\n    /* \"#utility.yul\":2040:2056   */\n  mload\n  swap2\n    /* \"#utility.yul\":1949:2062   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2067:2341   */\ntag_62:\n  0x00\n    /* \"#utility.yul\":2234:2240   */\n  dup3\n    /* \"#utility.yul\":2228:2241   */\n  mload\n    /* \"#utility.yul\":2250:2303   */\n  tag_107\n    /* \"#utility.yul\":2296:2302   */\n  dup2\n    /* \"#utility.yul\":2291:2294   */\n  dup5\n    /* \"#utility.yul\":2284:2288   */\n  0x20\n    /* \"#utility.yul\":2276:2282   */\n  dup8\n    /* \"#utility.yul\":2272:2289   */\n  add\n    /* \"#utility.yul\":2250:2303   */\n  tag_108\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2319:2335   */\n  swap2\n  swap1\n  swap2\n  add\n  swap3\n    /* \"#utility.yul\":2204:2341   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2346:2650   */\ntag_27:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":2576:2591   */\n  swap3\n  dup4\n  and\n    /* \"#utility.yul\":2558:2592   */\n  dup2\n  mstore\n    /* \"#utility.yul\":2628:2643   */\n  swap2\n  and\n    /* \"#utility.yul\":2623:2625   */\n  0x20\n    /* \"#utility.yul\":2608:2626   */\n  dup3\n  add\n    /* \"#utility.yul\":2601:2644   */\n  mstore\n    /* \"#utility.yul\":2508:2510   */\n  0x40\n    /* \"#utility.yul\":2493:2511   */\n  add\n  swap1\n    /* \"#utility.yul\":2475:2650   */\n  jump\t// out\n    /* \"#utility.yul\":2655:2929   */\ntag_38:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":2847:2879   */\n  swap3\n  swap1\n  swap3\n  and\n    /* \"#utility.yul\":2829:2880   */\n  dup3\n  mstore\n    /* \"#utility.yul\":2911:2913   */\n  0x20\n    /* \"#utility.yul\":2896:2914   */\n  dup3\n  add\n    /* \"#utility.yul\":2889:2923   */\n  mstore\n    /* \"#utility.yul\":2817:2819   */\n  0x40\n    /* \"#utility.yul\":2802:2820   */\n  add\n  swap1\n    /* \"#utility.yul\":2784:2929   */\n  jump\t// out\n    /* \"#utility.yul\":2934:3317   */\ntag_75:\n  0x00\n    /* \"#utility.yul\":3083:3085   */\n  0x20\n    /* \"#utility.yul\":3072:3081   */\n  dup3\n    /* \"#utility.yul\":3065:3086   */\n  mstore\n    /* \"#utility.yul\":3115:3121   */\n  dup3\n    /* \"#utility.yul\":3109:3122   */\n  mload\n    /* \"#utility.yul\":3158:3164   */\n  dup1\n    /* \"#utility.yul\":3153:3155   */\n  0x20\n    /* \"#utility.yul\":3142:3151   */\n  dup5\n    /* \"#utility.yul\":3138:3156   */\n  add\n    /* \"#utility.yul\":3131:3165   */\n  mstore\n    /* \"#utility.yul\":3174:3240   */\n  tag_112\n    /* \"#utility.yul\":3233:3239   */\n  dup2\n    /* \"#utility.yul\":3228:3230   */\n  0x40\n    /* \"#utility.yul\":3217:3226   */\n  dup6\n    /* \"#utility.yul\":3213:3231   */\n  add\n    /* \"#utility.yul\":3208:3210   */\n  0x20\n    /* \"#utility.yul\":3200:3206   */\n  dup8\n    /* \"#utility.yul\":3196:3211   */\n  add\n    /* \"#utility.yul\":3174:3240   */\n  tag_108\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3301:3303   */\n  0x1f\n    /* \"#utility.yul\":3280:3295   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":3276:3305   */\n  and\n    /* \"#utility.yul\":3261:3306   */\n  swap2\n  swap1\n  swap2\n  add\n    /* \"#utility.yul\":3308:3310   */\n  0x40\n    /* \"#utility.yul\":3257:3311   */\n  add\n  swap3\n    /* \"#utility.yul\":3055:3317   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3322:3724   */\ntag_55:\n    /* \"#utility.yul\":3524:3526   */\n  0x20\n    /* \"#utility.yul\":3506:3527   */\n  dup1\n  dup3\n  mstore\n    /* \"#utility.yul\":3563:3565   */\n  0x26\n    /* \"#utility.yul\":3543:3561   */\n  swap1\n  dup3\n  add\n    /* \"#utility.yul\":3536:3566   */\n  mstore\n    /* \"#utility.yul\":3602:3636   */\n  0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n    /* \"#utility.yul\":3597:3599   */\n  0x40\n    /* \"#utility.yul\":3582:3600   */\n  dup3\n  add\n    /* \"#utility.yul\":3575:3637   */\n  mstore\n  shl(0xd2, 0x1c8818d85b1b)\n    /* \"#utility.yul\":3668:3670   */\n  0x60\n    /* \"#utility.yul\":3653:3671   */\n  dup3\n  add\n    /* \"#utility.yul\":3646:3682   */\n  mstore\n    /* \"#utility.yul\":3714:3717   */\n  0x80\n    /* \"#utility.yul\":3699:3718   */\n  add\n  swap1\n    /* \"#utility.yul\":3496:3724   */\n  jump\t// out\n    /* \"#utility.yul\":3729:4059   */\ntag_10:\n    /* \"#utility.yul\":3931:3933   */\n  0x20\n    /* \"#utility.yul\":3913:3934   */\n  dup1\n  dup3\n  mstore\n    /* \"#utility.yul\":3970:3971   */\n  0x07\n    /* \"#utility.yul\":3950:3968   */\n  swap1\n  dup3\n  add\n    /* \"#utility.yul\":3943:3972   */\n  mstore\n  shl(0xcc, 0x061646d696e203)\n    /* \"#utility.yul\":4003:4005   */\n  0x40\n    /* \"#utility.yul\":3988:4006   */\n  dup3\n  add\n    /* \"#utility.yul\":3981:4018   */\n  mstore\n    /* \"#utility.yul\":4050:4052   */\n  0x60\n    /* \"#utility.yul\":4035:4053   */\n  add\n  swap1\n    /* \"#utility.yul\":3903:4059   */\n  jump\t// out\n    /* \"#utility.yul\":4064:4417   */\ntag_60:\n    /* \"#utility.yul\":4266:4268   */\n  0x20\n    /* \"#utility.yul\":4248:4269   */\n  dup1\n  dup3\n  mstore\n    /* \"#utility.yul\":4305:4307   */\n  0x1d\n    /* \"#utility.yul\":4285:4303   */\n  swap1\n  dup3\n  add\n    /* \"#utility.yul\":4278:4308   */\n  mstore\n    /* \"#utility.yul\":4344:4375   */\n  0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n    /* \"#utility.yul\":4339:4341   */\n  0x40\n    /* \"#utility.yul\":4324:4342   */\n  dup3\n  add\n    /* \"#utility.yul\":4317:4376   */\n  mstore\n    /* \"#utility.yul\":4408:4410   */\n  0x60\n    /* \"#utility.yul\":4393:4411   */\n  add\n  swap1\n    /* \"#utility.yul\":4238:4417   */\n  jump\t// out\n    /* \"#utility.yul\":4422:4828   */\ntag_48:\n    /* \"#utility.yul\":4624:4626   */\n  0x20\n    /* \"#utility.yul\":4606:4627   */\n  dup1\n  dup3\n  mstore\n    /* \"#utility.yul\":4663:4665   */\n  0x2a\n    /* \"#utility.yul\":4643:4661   */\n  swap1\n  dup3\n  add\n    /* \"#utility.yul\":4636:4666   */\n  mstore\n    /* \"#utility.yul\":4702:4736   */\n  0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n    /* \"#utility.yul\":4697:4699   */\n  0x40\n    /* \"#utility.yul\":4682:4700   */\n  dup3\n  add\n    /* \"#utility.yul\":4675:4737   */\n  mstore\n  shl(0xb2, 0x1bdd081cdd58d8d95959)\n    /* \"#utility.yul\":4768:4770   */\n  0x60\n    /* \"#utility.yul\":4753:4771   */\n  dup3\n  add\n    /* \"#utility.yul\":4746:4786   */\n  mstore\n    /* \"#utility.yul\":4818:4821   */\n  0x80\n    /* \"#utility.yul\":4803:4822   */\n  add\n  swap1\n    /* \"#utility.yul\":4596:4828   */\n  jump\t// out\n    /* \"#utility.yul\":4833:5251   */\ntag_35:\n    /* \"#utility.yul\":5035:5037   */\n  0x20\n    /* \"#utility.yul\":5017:5038   */\n  dup1\n  dup3\n  mstore\n    /* \"#utility.yul\":5074:5076   */\n  0x36\n    /* \"#utility.yul\":5054:5072   */\n  swap1\n  dup3\n  add\n    /* \"#utility.yul\":5047:5077   */\n  mstore\n    /* \"#utility.yul\":5113:5147   */\n  0x5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f\n    /* \"#utility.yul\":5108:5110   */\n  0x40\n    /* \"#utility.yul\":5093:5111   */\n  dup3\n  add\n    /* \"#utility.yul\":5086:5148   */\n  mstore\n    /* \"#utility.yul\":5184:5208   */\n  0x20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000\n    /* \"#utility.yul\":5179:5181   */\n  0x60\n    /* \"#utility.yul\":5164:5182   */\n  dup3\n  add\n    /* \"#utility.yul\":5157:5209   */\n  mstore\n    /* \"#utility.yul\":5241:5244   */\n  0x80\n    /* \"#utility.yul\":5226:5245   */\n  add\n  swap1\n    /* \"#utility.yul\":5007:5251   */\n  jump\t// out\n    /* \"#utility.yul\":5256:5514   */\ntag_108:\n    /* \"#utility.yul\":5328:5329   */\n  0x00\n    /* \"#utility.yul\":5338:5451   */\ntag_119:\n    /* \"#utility.yul\":5352:5358   */\n  dup4\n    /* \"#utility.yul\":5349:5350   */\n  dup2\n    /* \"#utility.yul\":5346:5359   */\n  lt\n    /* \"#utility.yul\":5338:5451   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":5428:5439   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":5422:5440   */\n  mload\n    /* \"#utility.yul\":5409:5420   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":5402:5441   */\n  mstore\n    /* \"#utility.yul\":5374:5376   */\n  0x20\n    /* \"#utility.yul\":5367:5377   */\n  add\n    /* \"#utility.yul\":5338:5451   */\n  jump(tag_119)\ntag_121:\n    /* \"#utility.yul\":5469:5475   */\n  dup4\n    /* \"#utility.yul\":5466:5467   */\n  dup2\n    /* \"#utility.yul\":5463:5476   */\n  gt\n    /* \"#utility.yul\":5460:5462   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":5504:5505   */\n  0x00\n    /* \"#utility.yul\":5495:5501   */\n  dup5\n    /* \"#utility.yul\":5490:5493   */\n  dup5\n    /* \"#utility.yul\":5486:5502   */\n  add\n    /* \"#utility.yul\":5479:5506   */\n  mstore\n    /* \"#utility.yul\":5460:5462   */\ntag_122:\n  pop\n    /* \"#utility.yul\":5309:5514   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5519:5652   */\ntag_87:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":5596:5627   */\n  dup2\n  and\n    /* \"#utility.yul\":5586:5628   */\n  dup2\n  eq\n    /* \"#utility.yul\":5576:5578   */\n  tag_124\n  jumpi\n    /* \"#utility.yul\":5642:5643   */\n  0x00\n    /* \"#utility.yul\":5639:5640   */\n  dup1\n    /* \"#utility.yul\":5632:5644   */\n  revert\n    /* \"#utility.yul\":5576:5578   */\ntag_124:\n    /* \"#utility.yul\":5566:5652   */\n  pop\n  jump\t// out\ntag_83:\n    /* \"KyberFairLaunch_flat.sol\":41959:64319  contract KyberFairLaunch is IKyberFairLaunch, PermissionAdmin, ReentrancyGuard {\r... */\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x6772a9c6a385733854edcf781b908dda6fb77b4c4e7d1b2635179db6842609d0\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"KyberFairLaunch_flat.sol\":41959:64319  contract KyberFairLaunch is IKyberFairLaunch, PermissionAdmin, ReentrancyGuard {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x77f50f97\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xb43c6270\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xb43c6270\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc4f59f9b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd12e4ceb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd18df53c\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xddc63262\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x77f50f97\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7acc8678\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7bb7bed1\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x958e2d31\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xadb82b31\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xaffb9fc8\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x3892601c\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x3892601c\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x43a0d066\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x52fd9f2f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x75829def\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x081e3eda\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1069f3b5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1e1c6a07\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x26782247\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2f380b35\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2fb40ce1\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"KyberFairLaunch_flat.sol\":44424:44458  uint256 public override poolLength */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"KyberFairLaunch_flat.sol\":58687:59409  function getUserInfo(uint256 _pid, address _account)\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_35\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":44064:44106  mapping(address => bool) public poolExists */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":4725:4752  address public pendingAdmin */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":57554:58586  function getPoolInfo(uint256 _pid)\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_35\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":47299:48529  function addPool(\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"KyberFairLaunch_flat.sol\":44149:44197  IKyberRewardLocker public immutable rewardLocker */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_52\n      tag_70\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":51598:52419  function deposit(\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_64\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":52614:52769  function withdraw(uint256 _pid, uint256 _amount)\r... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_64\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":54213:55627  function harvestMultiplePools(uint256[] calldata _pids) external override {\r... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_64\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":53305:54047  function emergencyWithdraw(uint256 _pid) external override nonReentrant {\r... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_64\n      tag_90\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":5259:5462  function transferAdmin(address newAdmin) public onlyAdmin {\r... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_64\n      tag_94\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":5996:6210  function claimAdmin() public {\r... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_64\n      tag_98\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":5643:5887  function transferAdminQuickly(address newAdmin) public onlyAdmin {\r... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_64\n      tag_101\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":44359:44388  address[] public rewardTokens */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_52\n      tag_105\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":52911:53046  function withdrawAll(uint256 _pid) external override nonReentrant {\r... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_64\n      tag_110\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":59735:60703  function updatePoolRewards(uint256 _pid) public override {\r... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_64\n      tag_114\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":50455:51357  function updatePool(\r... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_64\n      tag_118\n      calldatasize\n      0x04\n      tag_119\n      jump\t// in\n    tag_118:\n      tag_120\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":48977:50116  function renewPool(\r... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_64\n      tag_123\n      calldatasize\n      0x04\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":57329:57485  function getRewardTokens()\r... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":46475:46929  function adminWithdraw(uint256 rewardTokenIndex, uint256 amount)\r... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_64\n      tag_133\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":55822:57264  function pendingRewards(uint256 _pid, address _user)\r... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_136\n      tag_137\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":59527:59668  function harvest(uint256 _pid) public override {\r... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_64\n      tag_143\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":4698:4718  address public admin */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_52\n      tag_147\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":44424:44458  uint256 public override poolLength */\n    tag_34:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":58687:59409  function getUserInfo(uint256 _pid, address _account)\r... */\n    tag_41:\n        /* \"KyberFairLaunch_flat.sol\":58822:58836  uint256 amount */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":58987:59001  userInfo[_pid] */\n      dup3\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":58987:58995  userInfo */\n      0x07\n        /* \"KyberFairLaunch_flat.sol\":58987:59001  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":58987:59011  userInfo[_pid][_account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":59031:59042  user.amount */\n      dup1\n      sload\n        /* \"KyberFairLaunch_flat.sol\":59086:59098  rewardTokens */\n      0x04\n        /* \"KyberFairLaunch_flat.sol\":59086:59105  rewardTokens.length */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":59031:59042  user.amount */\n      swap1\n      swap2\n        /* \"KyberFairLaunch_flat.sol\":58851:58884  uint256[] memory unclaimedRewards */\n      0x60\n      swap2\n      dup3\n      swap2\n        /* \"KyberFairLaunch_flat.sol\":58987:59011  userInfo[_pid][_account] */\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":59072:59106  new uint256[](rewardTokens.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_153\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_153:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":59153:59165  rewardTokens */\n      0x04\n        /* \"KyberFairLaunch_flat.sol\":59153:59172  rewardTokens.length */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":59053:59106  unclaimedRewards = new uint256[](rewardTokens.length) */\n      swap1\n      swap4\n      pop\n        /* \"KyberFairLaunch_flat.sol\":59139:59173  new uint256[](rewardTokens.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_155\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_155:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":59117:59173  lastRewardPerShares = new uint256[](rewardTokens.length) */\n      swap2\n      pop\n        /* \"KyberFairLaunch_flat.sol\":59189:59198  uint256 i */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":59184:59402  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n    tag_156:\n        /* \"KyberFairLaunch_flat.sol\":59208:59220  rewardTokens */\n      0x04\n        /* \"KyberFairLaunch_flat.sol\":59208:59227  rewardTokens.length */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":59204:59227  i < rewardTokens.length */\n      dup2\n      lt\n        /* \"KyberFairLaunch_flat.sol\":59184:59402  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n      iszero\n      tag_157\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":59271:59293  user.userRewardData[i] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":59271:59290  user.userRewardData */\n      0x01\n      dup4\n      add\n        /* \"KyberFairLaunch_flat.sol\":59271:59293  user.userRewardData[i] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":59271:59309  user.userRewardData[i].unclaimedReward */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":59249:59268  unclaimedRewards[i] */\n      dup5\n      mload\n        /* \"KyberFairLaunch_flat.sol\":59249:59265  unclaimedRewards */\n      dup6\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":59291:59292  i */\n      dup4\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":59249:59268  unclaimedRewards[i] */\n      dup2\n      lt\n      tag_159\n      jumpi\n      invalid\n    tag_159:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"KyberFairLaunch_flat.sol\":59249:59309  unclaimedRewards[i] = user.userRewardData[i].unclaimedReward */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"KyberFairLaunch_flat.sol\":59349:59353  user */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":59349:59368  user.userRewardData */\n      0x01\n      add\n        /* \"KyberFairLaunch_flat.sol\":59349:59371  user.userRewardData[i] */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":59369:59370  i */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":59349:59371  user.userRewardData[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":59349:59390  user.userRewardData[i].lastRewardPerShare */\n      0x01\n      add\n      sload\n        /* \"KyberFairLaunch_flat.sol\":59324:59343  lastRewardPerShares */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":59344:59345  i */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":59324:59346  lastRewardPerShares[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_160\n      jumpi\n      invalid\n    tag_160:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"KyberFairLaunch_flat.sol\":59324:59390  lastRewardPerShares[i] = user.userRewardData[i].lastRewardPerShare */\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":59229:59232  i++ */\n      0x01\n      add\n        /* \"KyberFairLaunch_flat.sol\":59184:59402  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n      jump(tag_156)\n    tag_157:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":58687:59409  function getUserInfo(uint256 _pid, address _account)\r... */\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":44064:44106  mapping(address => bool) public poolExists */\n    tag_48:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":4725:4752  address public pendingAdmin */\n    tag_53:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":57554:58586  function getPoolInfo(uint256 _pid)\r... */\n    tag_60:\n        /* \"KyberFairLaunch_flat.sol\":57671:57689  uint256 totalStake */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":57970:57984  poolInfo[_pid] */\n      dup2\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":57970:57978  poolInfo */\n      0x06\n        /* \"KyberFairLaunch_flat.sol\":57970:57984  poolInfo[_pid] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":58076:58091  pool.totalStake */\n      dup1\n      sload\n        /* \"KyberFairLaunch_flat.sol\":58106:58121  pool.stakeToken */\n      0x01\n      dup3\n      add\n      sload\n        /* \"KyberFairLaunch_flat.sol\":58268:58280  rewardTokens */\n      0x04\n        /* \"KyberFairLaunch_flat.sol\":58268:58287  rewardTokens.length */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":58076:58091  pool.totalStake */\n      swap2\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":58106:58121  pool.stakeToken */\n      dup3\n      and\n      swap3\n        /* \"KyberFairLaunch_flat.sol\":58136:58151  pool.startBlock */\n      0xffffffff\n      shl(0xa0, 0x01)\n      dup5\n      div\n      dup2\n      and\n      swap4\n      shl(0xc0, 0x01)\n        /* \"KyberFairLaunch_flat.sol\":58166:58179  pool.endBlock */\n      dup2\n      div\n      dup3\n      and\n      swap4\n      shl(0xe0, 0x01)\n        /* \"KyberFairLaunch_flat.sol\":58194:58214  pool.lastRewardBlock */\n      swap1\n      swap2\n      div\n      swap1\n      swap2\n      and\n      swap2\n        /* \"KyberFairLaunch_flat.sol\":57836:57868  uint256[] memory rewardPerBlocks */\n      0x60\n      swap2\n      dup3\n      swap2\n        /* \"KyberFairLaunch_flat.sol\":58254:58288  new uint256[](rewardTokens.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_163\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_163:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":58334:58346  rewardTokens */\n      0x04\n        /* \"KyberFairLaunch_flat.sol\":58334:58353  rewardTokens.length */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":58236:58288  rewardPerBlocks = new uint256[](rewardTokens.length) */\n      swap1\n      swap4\n      pop\n        /* \"KyberFairLaunch_flat.sol\":58320:58354  new uint256[](rewardTokens.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_165\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_165:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":58299:58354  accRewardPerShares = new uint256[](rewardTokens.length) */\n      swap2\n      pop\n        /* \"KyberFairLaunch_flat.sol\":58370:58379  uint256 i */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":58365:58579  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n    tag_166:\n        /* \"KyberFairLaunch_flat.sol\":58389:58401  rewardTokens */\n      0x04\n        /* \"KyberFairLaunch_flat.sol\":58389:58408  rewardTokens.length */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":58385:58408  i < rewardTokens.length */\n      dup2\n      lt\n        /* \"KyberFairLaunch_flat.sol\":58365:58579  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n      iszero\n      tag_167\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":58451:58473  pool.poolRewardData[i] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":58451:58470  pool.poolRewardData */\n      0x02\n      dup4\n      add\n        /* \"KyberFairLaunch_flat.sol\":58451:58473  pool.poolRewardData[i] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":58451:58488  pool.poolRewardData[i].rewardPerBlock */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":58430:58448  rewardPerBlocks[i] */\n      dup5\n      mload\n        /* \"KyberFairLaunch_flat.sol\":58430:58445  rewardPerBlocks */\n      dup6\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":58471:58472  i */\n      dup4\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":58430:58448  rewardPerBlocks[i] */\n      dup2\n      lt\n      tag_169\n      jumpi\n      invalid\n    tag_169:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"KyberFairLaunch_flat.sol\":58430:58488  rewardPerBlocks[i] = pool.poolRewardData[i].rewardPerBlock */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"KyberFairLaunch_flat.sol\":58527:58531  pool */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":58527:58546  pool.poolRewardData */\n      0x02\n      add\n        /* \"KyberFairLaunch_flat.sol\":58527:58549  pool.poolRewardData[i] */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":58547:58548  i */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":58527:58549  pool.poolRewardData[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":58527:58567  pool.poolRewardData[i].accRewardPerShare */\n      0x01\n      add\n      sload\n        /* \"KyberFairLaunch_flat.sol\":58503:58521  accRewardPerShares */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":58522:58523  i */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":58503:58524  accRewardPerShares[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_170\n      jumpi\n      invalid\n    tag_170:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"KyberFairLaunch_flat.sol\":58503:58567  accRewardPerShares[i] = pool.poolRewardData[i].accRewardPerShare */\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":58410:58413  i++ */\n      0x01\n      add\n        /* \"KyberFairLaunch_flat.sol\":58365:58579  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n      jump(tag_166)\n    tag_167:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":57554:58586  function getPoolInfo(uint256 _pid)\r... */\n      pop\n      swap2\n      swap4\n      swap6\n      swap8\n      swap1\n      swap3\n      swap5\n      swap7\n      pop\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":47299:48529  function addPool(\r... */\n    tag_67:\n        /* \"KyberFairLaunch_flat.sol\":5060:5065  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"KyberFairLaunch_flat.sol\":5046:5056  msg.sender */\n      caller\n        /* \"KyberFairLaunch_flat.sol\":5046:5065  msg.sender == admin */\n      eq\n        /* \"KyberFairLaunch_flat.sol\":5038:5080  require(msg.sender == admin, \"only admin\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":47503:47526  poolExists[_stakeToken] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":47503:47513  poolExists */\n      0x03\n        /* \"KyberFairLaunch_flat.sol\":47503:47526  poolExists[_stakeToken] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"KyberFairLaunch_flat.sol\":47502:47526  !poolExists[_stakeToken] */\n      iszero\n        /* \"KyberFairLaunch_flat.sol\":47494:47551  require(!poolExists[_stakeToken], \"add: duplicated pool\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_178\n      jump\t// in\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":47570:47595  _stakeToken != address(0) */\n      dup6\n      and\n        /* \"KyberFairLaunch_flat.sol\":47562:47624  require(_stakeToken != address(0), \"add: invalid stake token\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_181\n      jump\t// in\n    tag_179:\n        /* \"KyberFairLaunch_flat.sol\":47657:47669  rewardTokens */\n      0x04\n        /* \"KyberFairLaunch_flat.sol\":47657:47676  rewardTokens.length */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":47657:47703  rewardTokens.length == _rewardPerBlocks.length */\n      dup2\n      eq\n        /* \"KyberFairLaunch_flat.sol\":47635:47750  require(\r... */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_184\n      jump\t// in\n    tag_182:\n        /* \"KyberFairLaunch_flat.sol\":47799:47811  block.number */\n      number\n        /* \"KyberFairLaunch_flat.sol\":47785:47796  _startBlock */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":47785:47811  _startBlock > block.number */\n      0xffffffff\n      and\n      gt\n        /* \"KyberFairLaunch_flat.sol\":47785:47838  _startBlock > block.number && _endBlock > _startBlock */\n      dup1\n      iszero\n      tag_185\n      jumpi\n      pop\n        /* \"KyberFairLaunch_flat.sol\":47827:47838  _startBlock */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":47815:47838  _endBlock > _startBlock */\n      0xffffffff\n      and\n        /* \"KyberFairLaunch_flat.sol\":47815:47824  _endBlock */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":47815:47838  _endBlock > _startBlock */\n      0xffffffff\n      and\n      gt\n        /* \"KyberFairLaunch_flat.sol\":47785:47838  _startBlock > block.number && _endBlock > _startBlock */\n    tag_185:\n        /* \"KyberFairLaunch_flat.sol\":47763:47885  require(\r... */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_188\n      jump\t// in\n    tag_186:\n        /* \"KyberFairLaunch_flat.sol\":47907:47917  poolLength */\n      0x05\n      dup1\n      sload\n        /* \"KyberFairLaunch_flat.sol\":47898:47918  poolInfo[poolLength] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":47898:47906  poolInfo */\n      0x06\n        /* \"KyberFairLaunch_flat.sol\":47898:47918  poolInfo[poolLength] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":47898:47929  poolInfo[poolLength].stakeToken */\n      0x01\n      swap1\n      dup2\n      add\n        /* \"KyberFairLaunch_flat.sol\":47898:47943  poolInfo[poolLength].stakeToken = _stakeToken */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup12\n      and\n      or\n      swap1\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":47963:47973  poolLength */\n      dup4\n      sload\n        /* \"KyberFairLaunch_flat.sol\":47954:47974  poolInfo[poolLength] */\n      dup4\n      mstore\n      dup2\n      dup4\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":47954:47985  poolInfo[poolLength].startBlock */\n      dup2\n      add\n        /* \"KyberFairLaunch_flat.sol\":47954:47999  poolInfo[poolLength].startBlock = _startBlock */\n      dup1\n      sload\n      not(shl(0xa0, 0xffffffff))\n      and\n      shl(0xa0, 0x01)\n      0xffffffff\n      dup12\n      dup2\n      and\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":48019:48029  poolLength */\n      dup6\n      sload\n        /* \"KyberFairLaunch_flat.sol\":48010:48030  poolInfo[poolLength] */\n      dup6\n      mstore\n      dup4\n      dup6\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":48010:48039  poolInfo[poolLength].endBlock */\n      dup4\n      add\n        /* \"KyberFairLaunch_flat.sol\":48010:48051  poolInfo[poolLength].endBlock = _endBlock */\n      dup1\n      sload\n      not(shl(0xc0, 0xffffffff))\n      and\n      shl(0xc0, 0x01)\n      swap3\n      dup12\n      and\n      swap3\n      swap1\n      swap3\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":48071:48081  poolLength */\n      swap4\n      sload\n        /* \"KyberFairLaunch_flat.sol\":48062:48082  poolInfo[poolLength] */\n      dup4\n      mstore\n      swap1\n      dup3\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":48062:48098  poolInfo[poolLength].lastRewardBlock */\n      add\n        /* \"KyberFairLaunch_flat.sol\":48062:48112  poolInfo[poolLength].lastRewardBlock = _startBlock */\n      dup1\n      sload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x01)\n      swap1\n      swap4\n      mul\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":48125:48371  for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r... */\n    tag_189:\n        /* \"KyberFairLaunch_flat.sol\":48145:48172  i < _rewardPerBlocks.length */\n      dup2\n      dup2\n      lt\n        /* \"KyberFairLaunch_flat.sol\":48125:48371  for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r... */\n      iszero\n      tag_190\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":48235:48359  PoolRewardData({\r... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"KyberFairLaunch_flat.sol\":48285:48301  _rewardPerBlocks */\n      dup5\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":48302:48303  i */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":48285:48304  _rewardPerBlocks[i] */\n      dup2\n      dup2\n      lt\n      tag_192\n      jumpi\n      invalid\n    tag_192:\n      0x20\n      swap1\n      dup2\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      calldataload\n        /* \"KyberFairLaunch_flat.sol\":48235:48359  PoolRewardData({\r... */\n      dup4\n      mstore\n      pop\n        /* \"KyberFairLaunch_flat.sol\":48342:48343  0 */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":48235:48359  PoolRewardData({\r... */\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":48203:48213  poolLength */\n      sload(0x05)\n        /* \"KyberFairLaunch_flat.sol\":48194:48214  poolInfo[poolLength] */\n      dup3\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":48194:48202  poolInfo */\n      0x06\n        /* \"KyberFairLaunch_flat.sol\":48194:48214  poolInfo[poolLength] */\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":48194:48232  poolInfo[poolLength].poolRewardData[i] */\n      dup6\n      dup5\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":48194:48229  poolInfo[poolLength].poolRewardData */\n      0x02\n      add\n        /* \"KyberFairLaunch_flat.sol\":48194:48232  poolInfo[poolLength].poolRewardData[i] */\n      dup3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":48194:48359  poolInfo[poolLength].poolRewardData[i] = PoolRewardData({\r... */\n      dup3\n      mload\n      dup2\n      sstore\n      swap2\n      add\n      mload\n      0x01\n      swap2\n      dup3\n      add\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":48174:48177  i++ */\n      add\n        /* \"KyberFairLaunch_flat.sol\":48125:48371  for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r... */\n      jump(tag_189)\n    tag_190:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":48383:48393  poolLength */\n      0x05\n        /* \"KyberFairLaunch_flat.sol\":48383:48395  poolLength++ */\n      dup1\n      sload\n      0x01\n      swap1\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":48408:48431  poolExists[_stakeToken] */\n      dup7\n      and\n        /* \"KyberFairLaunch_flat.sol\":48383:48393  poolLength */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":48408:48431  poolExists[_stakeToken] */\n      dup2\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":48408:48418  poolExists */\n      0x03\n        /* \"KyberFairLaunch_flat.sol\":48408:48431  poolExists[_stakeToken] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":48408:48438  poolExists[_stakeToken] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":48456:48521  AddNewPool(_stakeToken, _startBlock, _endBlock, _rewardPerBlocks) */\n      swap1\n      mload\n      0xffffffff\n      dup1\n      dup7\n      and\n      swap3\n      swap1\n      dup8\n      and\n      swap2\n      0xeb19e76b03b99eff4d0329a19e44569c131f242c9590234f19b76f2c56a817a1\n      swap1\n      tag_193\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":48504:48520  _rewardPerBlocks */\n      dup8\n      swap1\n      dup8\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":48456:48521  AddNewPool(_stakeToken, _startBlock, _endBlock, _rewardPerBlocks) */\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"KyberFairLaunch_flat.sol\":47299:48529  function addPool(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":44149:44197  IKyberRewardLocker public immutable rewardLocker */\n    tag_70:\n      immutable(\"0x6772a9c6a385733854edcf781b908dda6fb77b4c4e7d1b2635179db6842609d0\")\n      dup2\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":51598:52419  function deposit(\r... */\n    tag_77:\n        /* \"KyberFairLaunch_flat.sol\":40532:40533  2 */\n      0x02\n        /* \"KyberFairLaunch_flat.sol\":41138:41145  _status */\n      dup1\n      sload\n        /* \"KyberFairLaunch_flat.sol\":41138:41157  _status != _ENTERED */\n      eq\n      iszero\n        /* \"KyberFairLaunch_flat.sol\":41130:41193  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_198\n      jump\t// in\n    tag_196:\n        /* \"KyberFairLaunch_flat.sol\":40532:40533  2 */\n      0x02\n        /* \"KyberFairLaunch_flat.sol\":41271:41289  _status = _ENTERED */\n      dup1\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":51791:51814  updatePoolRewards(_pid) */\n      tag_200\n        /* \"KyberFairLaunch_flat.sol\":51809:51813  _pid */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":51791:51808  updatePoolRewards */\n      tag_115\n        /* \"KyberFairLaunch_flat.sol\":51791:51814  updatePoolRewards(_pid) */\n      jump\t// in\n    tag_200:\n        /* \"KyberFairLaunch_flat.sol\":51825:51876  _updateUserReward(msg.sender, _pid, _shouldHarvest) */\n      tag_201\n        /* \"KyberFairLaunch_flat.sol\":51843:51853  msg.sender */\n      caller\n        /* \"KyberFairLaunch_flat.sol\":51855:51859  _pid */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":51861:51875  _shouldHarvest */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":51825:51842  _updateUserReward */\n      tag_202\n        /* \"KyberFairLaunch_flat.sol\":51825:51876  _updateUserReward(msg.sender, _pid, _shouldHarvest) */\n      jump\t// in\n    tag_201:\n        /* \"KyberFairLaunch_flat.sol\":51889:51910  PoolInfo storage pool */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":51913:51927  poolInfo[_pid] */\n      dup4\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":51913:51921  poolInfo */\n      0x06\n        /* \"KyberFairLaunch_flat.sol\":51913:51927  poolInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":51962:51970  userInfo */\n      0x07\n        /* \"KyberFairLaunch_flat.sol\":51962:51976  userInfo[_pid] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":51977:51987  msg.sender */\n      caller\n        /* \"KyberFairLaunch_flat.sol\":51962:51988  userInfo[_pid][msg.sender] */\n      dup1\n      dup7\n      mstore\n      swap4\n      mstore\n      swap3\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":52042:52057  pool.stakeToken */\n      0x01\n      dup4\n      add\n      sload\n        /* \"KyberFairLaunch_flat.sol\":51962:51988  userInfo[_pid][msg.sender] */\n      swap1\n      swap2\n        /* \"KyberFairLaunch_flat.sol\":52032:52161  IERC20Ext(pool.stakeToken).safeTransferFrom(\r... */\n      tag_203\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":52042:52057  pool.stakeToken */\n      and\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":52123:52127  this */\n      address\n        /* \"KyberFairLaunch_flat.sol\":52143:52150  _amount */\n      dup8\n        /* \"KyberFairLaunch_flat.sol\":52032:52075  IERC20Ext(pool.stakeToken).safeTransferFrom */\n      tag_204\n        /* \"KyberFairLaunch_flat.sol\":52032:52161  IERC20Ext(pool.stakeToken).safeTransferFrom(\r... */\n      jump\t// in\n    tag_203:\n        /* \"KyberFairLaunch_flat.sol\":52264:52275  user.amount */\n      dup1\n      sload\n        /* \"KyberFairLaunch_flat.sol\":52264:52288  user.amount.add(_amount) */\n      tag_205\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":52280:52287  _amount */\n      dup6\n        /* \"KyberFairLaunch_flat.sol\":52264:52279  user.amount.add */\n      tag_206\n        /* \"KyberFairLaunch_flat.sol\":52264:52288  user.amount.add(_amount) */\n      jump\t// in\n    tag_205:\n        /* \"KyberFairLaunch_flat.sol\":52250:52288  user.amount = user.amount.add(_amount) */\n      dup2\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":52317:52332  pool.totalStake */\n      dup2\n      sload\n        /* \"KyberFairLaunch_flat.sol\":52317:52345  pool.totalStake.add(_amount) */\n      tag_207\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":52337:52344  _amount */\n      dup6\n        /* \"KyberFairLaunch_flat.sol\":52317:52336  pool.totalStake.add */\n      tag_206\n        /* \"KyberFairLaunch_flat.sol\":52317:52345  pool.totalStake.add(_amount) */\n      jump\t// in\n    tag_207:\n        /* \"KyberFairLaunch_flat.sol\":52299:52345  pool.totalStake = pool.totalStake.add(_amount) */\n      dup3\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":52363:52411  Deposit(msg.sender, _pid, block.number, _amount) */\n      mload(0x40)\n        /* \"KyberFairLaunch_flat.sol\":52389:52401  block.number */\n      number\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":52383:52387  _pid */\n      dup7\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":52371:52381  msg.sender */\n      caller\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":52363:52411  Deposit(msg.sender, _pid, block.number, _amount) */\n      0x36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e\n      swap1\n      tag_208\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":52403:52410  _amount */\n      dup10\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":52363:52411  Deposit(msg.sender, _pid, block.number, _amount) */\n      tag_36\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n      pop\n        /* \"KyberFairLaunch_flat.sol\":40488:40489  1 */\n      0x01\n        /* \"KyberFairLaunch_flat.sol\":41450:41457  _status */\n      0x02\n        /* \"KyberFairLaunch_flat.sol\":41450:41472  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n      pop\n        /* \"KyberFairLaunch_flat.sol\":51598:52419  function deposit(\r... */\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":52614:52769  function withdraw(uint256 _pid, uint256 _amount)\r... */\n    tag_82:\n        /* \"KyberFairLaunch_flat.sol\":40532:40533  2 */\n      0x02\n        /* \"KyberFairLaunch_flat.sol\":41138:41145  _status */\n      dup1\n      sload\n        /* \"KyberFairLaunch_flat.sol\":41138:41157  _status != _ENTERED */\n      eq\n      iszero\n        /* \"KyberFairLaunch_flat.sol\":41130:41193  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_198\n      jump\t// in\n    tag_210:\n        /* \"KyberFairLaunch_flat.sol\":40532:40533  2 */\n      0x02\n        /* \"KyberFairLaunch_flat.sol\":41271:41289  _status = _ENTERED */\n      dup1\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":52737:52761  _withdraw(_pid, _amount) */\n      tag_213\n        /* \"KyberFairLaunch_flat.sol\":52747:52751  _pid */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":52753:52760  _amount */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":52737:52746  _withdraw */\n      tag_214\n        /* \"KyberFairLaunch_flat.sol\":52737:52761  _withdraw(_pid, _amount) */\n      jump\t// in\n    tag_213:\n      pop\n      pop\n        /* \"KyberFairLaunch_flat.sol\":40488:40489  1 */\n      0x01\n        /* \"KyberFairLaunch_flat.sol\":41450:41457  _status */\n      0x02\n        /* \"KyberFairLaunch_flat.sol\":41450:41472  _status = _NOT_ENTERED */\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":52614:52769  function withdraw(uint256 _pid, uint256 _amount)\r... */\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":54213:55627  function harvestMultiplePools(uint256[] calldata _pids) external override {\r... */\n    tag_87:\n        /* \"KyberFairLaunch_flat.sol\":54298:54322  address[] memory rTokens */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":54325:54337  rewardTokens */\n      0x04\n        /* \"KyberFairLaunch_flat.sol\":54298:54337  address[] memory rTokens = rewardTokens */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_216\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_217:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_217\n      jumpi\n    tag_216:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"KyberFairLaunch_flat.sol\":54348:54377  uint256[] memory totalRewards */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":54394:54401  rTokens */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":54394:54408  rTokens.length */\n      mload\n        /* \"KyberFairLaunch_flat.sol\":54380:54409  new uint256[](rTokens.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_218\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_218:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_219\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_219:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":54348:54409  uint256[] memory totalRewards = new uint256[](rTokens.length) */\n      swap1\n      pop\n        /* \"KyberFairLaunch_flat.sol\":54438:54448  msg.sender */\n      caller\n        /* \"KyberFairLaunch_flat.sol\":54420:54435  address account */\n      0x00\n      dup1\n        /* \"KyberFairLaunch_flat.sol\":54483:55412  for (uint256 i = 0; i < _pids.length; i++) {\r... */\n    tag_220:\n        /* \"KyberFairLaunch_flat.sol\":54503:54519  i < _pids.length */\n      dup6\n      dup2\n      lt\n        /* \"KyberFairLaunch_flat.sol\":54483:55412  for (uint256 i = 0; i < _pids.length; i++) {\r... */\n      iszero\n      tag_221\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":54547:54552  _pids */\n      dup7\n      dup7\n        /* \"KyberFairLaunch_flat.sol\":54553:54554  i */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":54547:54555  _pids[i] */\n      dup2\n      dup2\n      lt\n      tag_223\n      jumpi\n      invalid\n    tag_223:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"KyberFairLaunch_flat.sol\":54541:54555  pid = _pids[i] */\n      swap2\n      pop\n        /* \"KyberFairLaunch_flat.sol\":54570:54592  updatePoolRewards(pid) */\n      tag_224\n        /* \"KyberFairLaunch_flat.sol\":54588:54591  pid */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":54570:54587  updatePoolRewards */\n      tag_115\n        /* \"KyberFairLaunch_flat.sol\":54570:54592  updatePoolRewards(pid) */\n      jump\t// in\n    tag_224:\n        /* \"KyberFairLaunch_flat.sol\":54661:54699  _updateUserReward(account, pid, false) */\n      tag_225\n        /* \"KyberFairLaunch_flat.sol\":54679:54686  account */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":54688:54691  pid */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":54693:54698  false */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":54661:54678  _updateUserReward */\n      tag_202\n        /* \"KyberFairLaunch_flat.sol\":54661:54699  _updateUserReward(account, pid, false) */\n      jump\t// in\n    tag_225:\n        /* \"KyberFairLaunch_flat.sol\":54721:54730  uint256 j */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":54716:55401  for (uint256 j = 0; j < rTokens.length; j++) {\r... */\n    tag_226:\n        /* \"KyberFairLaunch_flat.sol\":54740:54747  rTokens */\n      dup6\n        /* \"KyberFairLaunch_flat.sol\":54740:54754  rTokens.length */\n      mload\n        /* \"KyberFairLaunch_flat.sol\":54736:54737  j */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":54736:54754  j < rTokens.length */\n      lt\n        /* \"KyberFairLaunch_flat.sol\":54716:55401  for (uint256 j = 0; j < rTokens.length; j++) {\r... */\n      iszero\n      tag_227\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":54780:54794  uint256 reward */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":54797:54810  userInfo[pid] */\n      dup4\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":54797:54805  userInfo */\n      0x07\n        /* \"KyberFairLaunch_flat.sol\":54797:54810  userInfo[pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":54797:54819  userInfo[pid][account] */\n      dup9\n      and\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":54797:54859  userInfo[pid][account]\r... */\n      dup5\n      dup5\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":54797:54856  userInfo[pid][account]\r... */\n      0x01\n      add\n        /* \"KyberFairLaunch_flat.sol\":54797:54859  userInfo[pid][account]\r... */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":54797:54897  userInfo[pid][account]\r... */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":54920:54930  reward > 0 */\n      dup1\n      iszero\n        /* \"KyberFairLaunch_flat.sol\":54916:55386  if (reward > 0) {\r... */\n      tag_229\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":54973:55000  totalRewards[j].add(reward) */\n      tag_230\n        /* \"KyberFairLaunch_flat.sol\":54993:54999  reward */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":54973:54985  totalRewards */\n      dup8\n        /* \"KyberFairLaunch_flat.sol\":54986:54987  j */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":54973:54988  totalRewards[j] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_231\n      jumpi\n      invalid\n    tag_231:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"KyberFairLaunch_flat.sol\":54973:54992  totalRewards[j].add */\n      tag_206\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":54973:55000  totalRewards[j].add(reward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_230:\n        /* \"KyberFairLaunch_flat.sol\":54955:54967  totalRewards */\n      dup7\n        /* \"KyberFairLaunch_flat.sol\":54968:54969  j */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":54955:54970  totalRewards[j] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_232\n      jumpi\n      invalid\n    tag_232:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n        /* \"KyberFairLaunch_flat.sol\":54955:55000  totalRewards[j] = totalRewards[j].add(reward) */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":55134:55135  0 */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":55023:55036  userInfo[pid] */\n      dup6\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":55023:55031  userInfo */\n      0x07\n        /* \"KyberFairLaunch_flat.sol\":55023:55036  userInfo[pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":55023:55045  userInfo[pid][account] */\n      dup10\n      and\n      dup4\n      mstore\n      dup4\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":55023:55089  userInfo[pid][account]\r... */\n      dup6\n      dup4\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":55023:55086  userInfo[pid][account]\r... */\n      0x01\n      add\n        /* \"KyberFairLaunch_flat.sol\":55023:55089  userInfo[pid][account]\r... */\n      swap1\n      swap3\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":55023:55135  userInfo[pid][account]\r... */\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":55261:55271  rTokens[j] */\n      dup7\n      mload\n        /* \"KyberFairLaunch_flat.sol\":55261:55268  rTokens */\n      dup8\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":55087:55088  j */\n      dup4\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":55261:55271  rTokens[j] */\n      dup2\n      lt\n      tag_233\n      jumpi\n      invalid\n    tag_233:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":55163:55366  Harvest(\r... */\n      and\n        /* \"KyberFairLaunch_flat.sol\":55231:55234  pid */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":55197:55204  account */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":55163:55366  Harvest(\r... */\n      and\n      0xf75f3d433c6628e04e01a0be1a2c6692a6011ce4b00389824cfa8b8a12f3c1c4\n        /* \"KyberFairLaunch_flat.sol\":55298:55304  reward */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":55331:55343  block.number */\n      number\n        /* \"KyberFairLaunch_flat.sol\":55163:55366  Harvest(\r... */\n      mload(0x40)\n      tag_234\n      swap3\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"KyberFairLaunch_flat.sol\":54916:55386  if (reward > 0) {\r... */\n    tag_229:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":54756:54759  j++ */\n      0x01\n      add\n        /* \"KyberFairLaunch_flat.sol\":54716:55401  for (uint256 j = 0; j < rTokens.length; j++) {\r... */\n      jump(tag_226)\n    tag_227:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":54521:54524  i++ */\n      0x01\n      add\n        /* \"KyberFairLaunch_flat.sol\":54483:55412  for (uint256 i = 0; i < _pids.length; i++) {\r... */\n      jump(tag_220)\n    tag_221:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":55429:55438  uint256 i */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":55424:55620  for (uint256 i = 0; i < totalRewards.length; i++) {\r... */\n    tag_236:\n        /* \"KyberFairLaunch_flat.sol\":55448:55460  totalRewards */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":55448:55467  totalRewards.length */\n      mload\n        /* \"KyberFairLaunch_flat.sol\":55444:55445  i */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":55444:55467  i < totalRewards.length */\n      lt\n        /* \"KyberFairLaunch_flat.sol\":55424:55620  for (uint256 i = 0; i < totalRewards.length; i++) {\r... */\n      iszero\n      tag_237\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":55511:55512  0 */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":55493:55505  totalRewards */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":55506:55507  i */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":55493:55508  totalRewards[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_239\n      jumpi\n      invalid\n    tag_239:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"KyberFairLaunch_flat.sol\":55493:55512  totalRewards[i] > 0 */\n      gt\n        /* \"KyberFairLaunch_flat.sol\":55489:55609  if (totalRewards[i] > 0) {\r... */\n      iszero\n      tag_241\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":55533:55593  _lockReward(IERC20Ext(rTokens[i]), account, totalRewards[i]) */\n      tag_241\n        /* \"KyberFairLaunch_flat.sol\":55555:55562  rTokens */\n      dup6\n        /* \"KyberFairLaunch_flat.sol\":55563:55564  i */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":55555:55565  rTokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_242\n      jumpi\n      invalid\n    tag_242:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"KyberFairLaunch_flat.sol\":55568:55575  account */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":55577:55589  totalRewards */\n      dup7\n        /* \"KyberFairLaunch_flat.sol\":55590:55591  i */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":55577:55592  totalRewards[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_243\n      jumpi\n      invalid\n    tag_243:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"KyberFairLaunch_flat.sol\":55533:55544  _lockReward */\n      tag_244\n        /* \"KyberFairLaunch_flat.sol\":55533:55593  _lockReward(IERC20Ext(rTokens[i]), account, totalRewards[i]) */\n      jump\t// in\n    tag_241:\n        /* \"KyberFairLaunch_flat.sol\":55469:55472  i++ */\n      0x01\n      add\n        /* \"KyberFairLaunch_flat.sol\":55424:55620  for (uint256 i = 0; i < totalRewards.length; i++) {\r... */\n      jump(tag_236)\n    tag_237:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":54213:55627  function harvestMultiplePools(uint256[] calldata _pids) external override {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":53305:54047  function emergencyWithdraw(uint256 _pid) external override nonReentrant {\r... */\n    tag_91:\n        /* \"KyberFairLaunch_flat.sol\":40532:40533  2 */\n      0x02\n        /* \"KyberFairLaunch_flat.sol\":41138:41145  _status */\n      dup1\n      sload\n        /* \"KyberFairLaunch_flat.sol\":41138:41157  _status != _ENTERED */\n      eq\n      iszero\n        /* \"KyberFairLaunch_flat.sol\":41130:41193  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_198\n      jump\t// in\n    tag_246:\n        /* \"KyberFairLaunch_flat.sol\":40532:40533  2 */\n      0x02\n        /* \"KyberFairLaunch_flat.sol\":41271:41289  _status = _ENTERED */\n      dup1\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":53388:53409  PoolInfo storage pool */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":53412:53426  poolInfo[_pid] */\n      dup2\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":53412:53420  poolInfo */\n      0x06\n        /* \"KyberFairLaunch_flat.sol\":53412:53426  poolInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":53461:53469  userInfo */\n      0x07\n        /* \"KyberFairLaunch_flat.sol\":53461:53475  userInfo[_pid] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":53476:53486  msg.sender */\n      caller\n        /* \"KyberFairLaunch_flat.sol\":53461:53487  userInfo[_pid][msg.sender] */\n      dup6\n      mstore\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":53515:53526  user.amount */\n      dup1\n      sload\n        /* \"KyberFairLaunch_flat.sol\":53539:53554  user.amount = 0 */\n      dup4\n      dup3\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":53412:53426  poolInfo[_pid] */\n      swap2\n      swap3\n        /* \"KyberFairLaunch_flat.sol\":53461:53487  userInfo[_pid][msg.sender] */\n      swap1\n      swap2\n        /* \"KyberFairLaunch_flat.sol\":53515:53526  user.amount */\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":53565:53793  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n    tag_249:\n        /* \"KyberFairLaunch_flat.sol\":53589:53601  rewardTokens */\n      0x04\n        /* \"KyberFairLaunch_flat.sol\":53589:53608  rewardTokens.length */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":53585:53608  i < rewardTokens.length */\n      dup2\n      lt\n        /* \"KyberFairLaunch_flat.sol\":53565:53793  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n      iszero\n      tag_250\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":53630:53663  UserRewardData storage rewardData */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":53666:53688  user.userRewardData[i] */\n      dup2\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":53666:53685  user.userRewardData */\n      0x01\n      dup1\n      dup6\n      add\n        /* \"KyberFairLaunch_flat.sol\":53666:53688  user.userRewardData[i] */\n      0x20\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":53703:53732  rewardData.lastRewardPerShare */\n      dup1\n      dup3\n      add\n        /* \"KyberFairLaunch_flat.sol\":53703:53736  rewardData.lastRewardPerShare = 0 */\n      dup4\n      swap1\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":53751:53781  rewardData.unclaimedReward = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":53610:53613  i++ */\n      add\n        /* \"KyberFairLaunch_flat.sol\":53565:53793  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n      jump(tag_249)\n    tag_250:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":53823:53838  pool.totalStake */\n      dup3\n      sload\n        /* \"KyberFairLaunch_flat.sol\":53823:53850  pool.totalStake.sub(amount) */\n      tag_252\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":53843:53849  amount */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":53823:53842  pool.totalStake.sub */\n      tag_253\n        /* \"KyberFairLaunch_flat.sol\":53823:53850  pool.totalStake.sub(amount) */\n      jump\t// in\n    tag_252:\n        /* \"KyberFairLaunch_flat.sol\":53805:53850  pool.totalStake = pool.totalStake.sub(amount) */\n      dup4\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":53867:53877  amount > 0 */\n      dup1\n      iszero\n        /* \"KyberFairLaunch_flat.sol\":53863:53965  if (amount > 0) {\r... */\n      tag_255\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":53904:53919  pool.stakeToken */\n      0x01\n      dup4\n      add\n      sload\n        /* \"KyberFairLaunch_flat.sol\":53894:53953  IERC20Ext(pool.stakeToken).safeTransfer(msg.sender, amount) */\n      tag_255\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":53904:53919  pool.stakeToken */\n      and\n        /* \"KyberFairLaunch_flat.sol\":53934:53944  msg.sender */\n      caller\n        /* \"KyberFairLaunch_flat.sol\":53946:53952  amount */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":53894:53933  IERC20Ext(pool.stakeToken).safeTransfer */\n      tag_256\n        /* \"KyberFairLaunch_flat.sol\":53894:53953  IERC20Ext(pool.stakeToken).safeTransfer(msg.sender, amount) */\n      jump\t// in\n    tag_255:\n        /* \"KyberFairLaunch_flat.sol\":54018:54030  block.number */\n      number\n        /* \"KyberFairLaunch_flat.sol\":54012:54016  _pid */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":54000:54010  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":53982:54039  EmergencyWithdraw(msg.sender, _pid, block.number, amount) */\n      and\n      0x2369db1bafee945aee5630782f4a170682e3f8188d8dc247a4c73eb8c9e692d2\n        /* \"KyberFairLaunch_flat.sol\":54032:54038  amount */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":53982:54039  EmergencyWithdraw(msg.sender, _pid, block.number, amount) */\n      mload(0x40)\n      tag_257\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n      pop\n        /* \"KyberFairLaunch_flat.sol\":40488:40489  1 */\n      0x01\n        /* \"KyberFairLaunch_flat.sol\":41450:41457  _status */\n      0x02\n        /* \"KyberFairLaunch_flat.sol\":41450:41472  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n        /* \"KyberFairLaunch_flat.sol\":53305:54047  function emergencyWithdraw(uint256 _pid) external override nonReentrant {\r... */\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":5259:5462  function transferAdmin(address newAdmin) public onlyAdmin {\r... */\n    tag_95:\n        /* \"KyberFairLaunch_flat.sol\":5060:5065  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"KyberFairLaunch_flat.sol\":5046:5056  msg.sender */\n      caller\n        /* \"KyberFairLaunch_flat.sol\":5046:5065  msg.sender == admin */\n      eq\n        /* \"KyberFairLaunch_flat.sol\":5038:5080  require(msg.sender == admin, \"only admin\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":5336:5358  newAdmin != address(0) */\n      dup2\n      and\n        /* \"KyberFairLaunch_flat.sol\":5328:5374  require(newAdmin != address(0), \"new admin 0\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_264\n      jump\t// in\n    tag_262:\n        /* \"KyberFairLaunch_flat.sol\":5390:5420  TransferAdminPending(newAdmin) */\n      0x3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc40\n        /* \"KyberFairLaunch_flat.sol\":5411:5419  newAdmin */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":5390:5420  TransferAdminPending(newAdmin) */\n      mload(0x40)\n      tag_265\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"KyberFairLaunch_flat.sol\":5431:5443  pendingAdmin */\n      0x01\n        /* \"KyberFairLaunch_flat.sol\":5431:5454  pendingAdmin = newAdmin */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":5259:5462  function transferAdmin(address newAdmin) public onlyAdmin {\r... */\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":5996:6210  function claimAdmin() public {\r... */\n    tag_98:\n        /* \"KyberFairLaunch_flat.sol\":6044:6056  pendingAdmin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"KyberFairLaunch_flat.sol\":6060:6070  msg.sender */\n      caller\n        /* \"KyberFairLaunch_flat.sol\":6044:6070  pendingAdmin == msg.sender */\n      eq\n        /* \"KyberFairLaunch_flat.sol\":6036:6086  require(pendingAdmin == msg.sender, \"not pending\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_269\n      jump\t// in\n    tag_267:\n        /* \"KyberFairLaunch_flat.sol\":6115:6127  pendingAdmin */\n      sload(0x01)\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":6129:6134  admin */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":6102:6135  AdminClaimed(pendingAdmin, admin) */\n      mload(0x40)\n      0x65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed\n      swap3\n      tag_270\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":6115:6127  pendingAdmin */\n      swap2\n      dup3\n      and\n      swap3\n        /* \"KyberFairLaunch_flat.sol\":6129:6134  admin */\n      swap2\n      and\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":6102:6135  AdminClaimed(pendingAdmin, admin) */\n      tag_271\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"KyberFairLaunch_flat.sol\":6154:6166  pendingAdmin */\n      0x01\n      dup1\n      sload\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":6146:6166  admin = pendingAdmin */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":6154:6166  pendingAdmin */\n      dup5\n      and\n        /* \"KyberFairLaunch_flat.sol\":6146:6166  admin = pendingAdmin */\n      or\n      swap1\n      swap2\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":6177:6202  pendingAdmin = address(0) */\n      and\n      swap1\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":5996:6210  function claimAdmin() public {\r... */\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":5643:5887  function transferAdminQuickly(address newAdmin) public onlyAdmin {\r... */\n    tag_102:\n        /* \"KyberFairLaunch_flat.sol\":5060:5065  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"KyberFairLaunch_flat.sol\":5046:5056  msg.sender */\n      caller\n        /* \"KyberFairLaunch_flat.sol\":5046:5065  msg.sender == admin */\n      eq\n        /* \"KyberFairLaunch_flat.sol\":5038:5080  require(msg.sender == admin, \"only admin\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_273:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":5727:5749  newAdmin != address(0) */\n      dup2\n      and\n        /* \"KyberFairLaunch_flat.sol\":5719:5761  require(newAdmin != address(0), \"admin 0\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_278\n      jump\t// in\n    tag_276:\n        /* \"KyberFairLaunch_flat.sol\":5777:5807  TransferAdminPending(newAdmin) */\n      0x3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc40\n        /* \"KyberFairLaunch_flat.sol\":5798:5806  newAdmin */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":5777:5807  TransferAdminPending(newAdmin) */\n      mload(0x40)\n      tag_279\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"KyberFairLaunch_flat.sol\":5846:5851  admin */\n      sload(0x00)\n        /* \"KyberFairLaunch_flat.sol\":5823:5852  AdminClaimed(newAdmin, admin) */\n      mload(0x40)\n      0x65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed\n      swap2\n      tag_280\n      swap2\n        /* \"KyberFairLaunch_flat.sol\":5836:5844  newAdmin */\n      dup5\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":5846:5851  admin */\n      and\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":5823:5852  AdminClaimed(newAdmin, admin) */\n      tag_271\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"KyberFairLaunch_flat.sol\":5863:5868  admin */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":5863:5879  admin = newAdmin */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":5643:5887  function transferAdminQuickly(address newAdmin) public onlyAdmin {\r... */\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":44359:44388  address[] public rewardTokens */\n    tag_106:\n      0x04\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_281\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_281:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":52911:53046  function withdrawAll(uint256 _pid) external override nonReentrant {\r... */\n    tag_111:\n        /* \"KyberFairLaunch_flat.sol\":40532:40533  2 */\n      0x02\n        /* \"KyberFairLaunch_flat.sol\":41138:41145  _status */\n      dup1\n      sload\n        /* \"KyberFairLaunch_flat.sol\":41138:41157  _status != _ENTERED */\n      eq\n      iszero\n        /* \"KyberFairLaunch_flat.sol\":41130:41193  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_198\n      jump\t// in\n    tag_284:\n        /* \"KyberFairLaunch_flat.sol\":40532:40533  2 */\n      0x02\n        /* \"KyberFairLaunch_flat.sol\":41271:41289  _status = _ENTERED */\n      dup1\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":53004:53018  userInfo[_pid] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":53004:53012  userInfo */\n      0x07\n        /* \"KyberFairLaunch_flat.sol\":53004:53018  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":53019:53029  msg.sender */\n      caller\n        /* \"KyberFairLaunch_flat.sol\":53004:53030  userInfo[_pid][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":53004:53037  userInfo[_pid][msg.sender].amount */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":52988:53038  _withdraw(_pid, userInfo[_pid][msg.sender].amount) */\n      tag_287\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":52998:53002  _pid */\n      dup3\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":52988:52997  _withdraw */\n      tag_214\n        /* \"KyberFairLaunch_flat.sol\":52988:53038  _withdraw(_pid, userInfo[_pid][msg.sender].amount) */\n      jump\t// in\n    tag_287:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":40488:40489  1 */\n      0x01\n        /* \"KyberFairLaunch_flat.sol\":41450:41457  _status */\n      0x02\n        /* \"KyberFairLaunch_flat.sol\":41450:41472  _status = _NOT_ENTERED */\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":52911:53046  function withdrawAll(uint256 _pid) external override nonReentrant {\r... */\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":59735:60703  function updatePoolRewards(uint256 _pid) public override {\r... */\n    tag_115:\n        /* \"KyberFairLaunch_flat.sol\":59818:59828  poolLength */\n      sload(0x05)\n        /* \"KyberFairLaunch_flat.sol\":59811:59815  _pid */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":59811:59828  _pid < poolLength */\n      lt\n        /* \"KyberFairLaunch_flat.sol\":59803:59848  require(_pid < poolLength, \"invalid pool id\") */\n      tag_289\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_291\n      jump\t// in\n    tag_289:\n        /* \"KyberFairLaunch_flat.sol\":59859:59880  PoolInfo storage pool */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":59883:59897  poolInfo[_pid] */\n      dup2\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":59883:59891  poolInfo */\n      0x06\n        /* \"KyberFairLaunch_flat.sol\":59883:59897  poolInfo[_pid] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":59936:59967  _lastAccountedRewardBlock(_pid) */\n      tag_292\n        /* \"KyberFairLaunch_flat.sol\":59892:59896  _pid */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":59936:59961  _lastAccountedRewardBlock */\n      tag_293\n        /* \"KyberFairLaunch_flat.sol\":59936:59967  _lastAccountedRewardBlock(_pid) */\n      jump\t// in\n    tag_292:\n        /* \"KyberFairLaunch_flat.sol\":60004:60024  pool.lastRewardBlock */\n      0x01\n      dup4\n      add\n      sload\n        /* \"KyberFairLaunch_flat.sol\":59908:59967  uint32 lastAccountedBlock = _lastAccountedRewardBlock(_pid) */\n      swap1\n      swap2\n      pop\n        /* \"KyberFairLaunch_flat.sol\":60004:60024  pool.lastRewardBlock */\n      0xffffffff\n      shl(0xe0, 0x01)\n      swap1\n      swap2\n      div\n      dup2\n      and\n        /* \"KyberFairLaunch_flat.sol\":59982:60024  lastAccountedBlock <= pool.lastRewardBlock */\n      swap1\n      dup3\n      and\n      gt\n        /* \"KyberFairLaunch_flat.sol\":59978:60033  if (lastAccountedBlock <= pool.lastRewardBlock) return; */\n      tag_294\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":60026:60033  return; */\n      pop\n      pop\n      jump(tag_288)\n        /* \"KyberFairLaunch_flat.sol\":59978:60033  if (lastAccountedBlock <= pool.lastRewardBlock) return; */\n    tag_294:\n        /* \"KyberFairLaunch_flat.sol\":60065:60080  pool.totalStake */\n      dup2\n      sload\n        /* \"KyberFairLaunch_flat.sol\":60095:60111  _totalStake == 0 */\n      dup1\n        /* \"KyberFairLaunch_flat.sol\":60091:60202  if (_totalStake == 0) {\r... */\n      tag_295\n      jumpi\n      pop\n        /* \"KyberFairLaunch_flat.sol\":60128:60148  pool.lastRewardBlock */\n      0x01\n      swap1\n      swap2\n      add\n        /* \"KyberFairLaunch_flat.sol\":60128:60169  pool.lastRewardBlock = lastAccountedBlock */\n      dup1\n      sload\n      0xffffffff\n      swap1\n      swap3\n      and\n      shl(0xe0, 0x01)\n      mul\n      sub(shl(0xe0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":60184:60191  return; */\n      jump(tag_288)\n        /* \"KyberFairLaunch_flat.sol\":60091:60202  if (_totalStake == 0) {\r... */\n    tag_295:\n        /* \"KyberFairLaunch_flat.sol\":60256:60276  pool.lastRewardBlock */\n      0x01\n      dup4\n      add\n      sload\n      0xffffffff\n      shl(0xe0, 0x01)\n      swap1\n      swap2\n      div\n      dup2\n      and\n        /* \"KyberFairLaunch_flat.sol\":60235:60276  lastAccountedBlock - pool.lastRewardBlock */\n      dup4\n      sub\n        /* \"KyberFairLaunch_flat.sol\":60212:60276  uint256 numberBlocks = lastAccountedBlock - pool.lastRewardBlock */\n      and\n        /* \"KyberFairLaunch_flat.sol\":60212:60232  uint256 numberBlocks */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":60287:60644  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n    tag_296:\n        /* \"KyberFairLaunch_flat.sol\":60311:60323  rewardTokens */\n      0x04\n        /* \"KyberFairLaunch_flat.sol\":60311:60330  rewardTokens.length */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":60307:60330  i < rewardTokens.length */\n      dup2\n      lt\n        /* \"KyberFairLaunch_flat.sol\":60287:60644  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n      iszero\n      tag_297\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":60352:60385  PoolRewardData storage rewardData */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":60388:60410  pool.poolRewardData[i] */\n      dup2\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":60388:60407  pool.poolRewardData */\n      0x02\n      dup7\n      add\n        /* \"KyberFairLaunch_flat.sol\":60388:60410  pool.poolRewardData[i] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":60459:60484  rewardData.rewardPerBlock */\n      dup1\n      sload\n        /* \"KyberFairLaunch_flat.sol\":60388:60410  pool.poolRewardData[i] */\n      swap1\n      swap2\n        /* \"KyberFairLaunch_flat.sol\":60352:60385  PoolRewardData storage rewardData */\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":60442:60485  numberBlocks.mul(rewardData.rewardPerBlock) */\n      tag_299\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":60442:60454  numberBlocks */\n      dup6\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":60442:60458  numberBlocks.mul */\n      tag_300\n        /* \"KyberFairLaunch_flat.sol\":60442:60485  numberBlocks.mul(rewardData.rewardPerBlock) */\n      jump\t// in\n    tag_299:\n        /* \"KyberFairLaunch_flat.sol\":60425:60485  uint256 reward = numberBlocks.mul(rewardData.rewardPerBlock) */\n      swap1\n      pop\n        /* \"KyberFairLaunch_flat.sol\":60531:60632  rewardData.accRewardPerShare.add(\r... */\n      tag_301\n        /* \"KyberFairLaunch_flat.sol\":60606:60617  _totalStake */\n      dup6\n        /* \"KyberFairLaunch_flat.sol\":60582:60603  reward.mul(PRECISION) */\n      tag_302\n        /* \"KyberFairLaunch_flat.sol\":60425:60485  uint256 reward = numberBlocks.mul(rewardData.rewardPerBlock) */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":42187:42191  1e12 */\n      0xe8d4a51000\n        /* \"KyberFairLaunch_flat.sol\":60582:60592  reward.mul */\n      tag_300\n        /* \"KyberFairLaunch_flat.sol\":60582:60603  reward.mul(PRECISION) */\n      jump\t// in\n    tag_302:\n        /* \"KyberFairLaunch_flat.sol\":60582:60617  reward.mul(PRECISION) / _totalStake */\n      dup2\n      tag_303\n      jumpi\n      invalid\n    tag_303:\n        /* \"KyberFairLaunch_flat.sol\":60531:60559  rewardData.accRewardPerShare */\n      0x01\n      dup6\n      add\n      sload\n      swap2\n        /* \"KyberFairLaunch_flat.sol\":60582:60617  reward.mul(PRECISION) / _totalStake */\n      swap1\n      div\n        /* \"KyberFairLaunch_flat.sol\":60531:60563  rewardData.accRewardPerShare.add */\n      tag_206\n        /* \"KyberFairLaunch_flat.sol\":60531:60632  rewardData.accRewardPerShare.add(\r... */\n      jump\t// in\n    tag_301:\n        /* \"KyberFairLaunch_flat.sol\":60500:60528  rewardData.accRewardPerShare */\n      0x01\n      swap3\n      dup4\n      add\n        /* \"KyberFairLaunch_flat.sol\":60500:60632  rewardData.accRewardPerShare = rewardData.accRewardPerShare.add(\r... */\n      sstore\n      pop\n        /* \"KyberFairLaunch_flat.sol\":60332:60335  i++ */\n      add\n        /* \"KyberFairLaunch_flat.sol\":60287:60644  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n      jump(tag_296)\n    tag_297:\n      pop\n      pop\n      pop\n        /* \"KyberFairLaunch_flat.sol\":60654:60674  pool.lastRewardBlock */\n      0x01\n      swap1\n      swap2\n      add\n        /* \"KyberFairLaunch_flat.sol\":60654:60695  pool.lastRewardBlock = lastAccountedBlock */\n      dup1\n      sload\n      0xffffffff\n      swap1\n      swap3\n      and\n      shl(0xe0, 0x01)\n      mul\n      sub(shl(0xe0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":59735:60703  function updatePoolRewards(uint256 _pid) public override {\r... */\n    tag_288:\n      pop\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":50455:51357  function updatePool(\r... */\n    tag_120:\n        /* \"KyberFairLaunch_flat.sol\":5060:5065  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"KyberFairLaunch_flat.sol\":5046:5056  msg.sender */\n      caller\n        /* \"KyberFairLaunch_flat.sol\":5046:5065  msg.sender == admin */\n      eq\n        /* \"KyberFairLaunch_flat.sol\":5038:5080  require(msg.sender == admin, \"only admin\") */\n      tag_305\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_305:\n        /* \"KyberFairLaunch_flat.sol\":50617:50640  updatePoolRewards(_pid) */\n      tag_308\n        /* \"KyberFairLaunch_flat.sol\":50635:50639  _pid */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":50617:50634  updatePoolRewards */\n      tag_115\n        /* \"KyberFairLaunch_flat.sol\":50617:50640  updatePoolRewards(_pid) */\n      jump\t// in\n    tag_308:\n        /* \"KyberFairLaunch_flat.sol\":50653:50674  PoolInfo storage pool */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":50677:50691  poolInfo[_pid] */\n      dup5\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":50677:50685  poolInfo */\n      0x06\n        /* \"KyberFairLaunch_flat.sol\":50677:50691  poolInfo[_pid] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":50769:50782  pool.endBlock */\n      0x01\n      dup2\n      add\n      sload\n        /* \"KyberFairLaunch_flat.sol\":50785:50797  block.number */\n      number\n      shl(0xc0, 0x01)\n        /* \"KyberFairLaunch_flat.sol\":50769:50782  pool.endBlock */\n      swap1\n      swap2\n      div\n      0xffffffff\n      and\n        /* \"KyberFairLaunch_flat.sol\":50769:50797  pool.endBlock > block.number */\n      gt\n        /* \"KyberFairLaunch_flat.sol\":50761:50828  require(pool.endBlock > block.number, \"update: pool already ended\") */\n      tag_309\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_311\n      jump\t// in\n    tag_309:\n        /* \"KyberFairLaunch_flat.sol\":50861:50873  rewardTokens */\n      0x04\n        /* \"KyberFairLaunch_flat.sol\":50861:50880  rewardTokens.length */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":50861:50907  rewardTokens.length == _rewardPerBlocks.length */\n      dup3\n      eq\n        /* \"KyberFairLaunch_flat.sol\":50839:50957  require(\r... */\n      tag_312\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_314\n      jump\t// in\n    tag_312:\n        /* \"KyberFairLaunch_flat.sol\":51002:51014  block.number */\n      number\n        /* \"KyberFairLaunch_flat.sol\":50990:50999  _endBlock */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":50990:51014  _endBlock > block.number */\n      0xffffffff\n      and\n      gt\n        /* \"KyberFairLaunch_flat.sol\":50990:51045  _endBlock > block.number && _endBlock > pool.startBlock */\n      dup1\n      iszero\n      tag_315\n      jumpi\n      pop\n        /* \"KyberFairLaunch_flat.sol\":51030:51045  pool.startBlock */\n      0x01\n      dup2\n      add\n      sload\n      0xffffffff\n      shl(0xa0, 0x01)\n      swap1\n      swap2\n      div\n      dup2\n      and\n        /* \"KyberFairLaunch_flat.sol\":51018:51045  _endBlock > pool.startBlock */\n      swap1\n      dup6\n      and\n      gt\n        /* \"KyberFairLaunch_flat.sol\":50990:51045  _endBlock > block.number && _endBlock > pool.startBlock */\n    tag_315:\n        /* \"KyberFairLaunch_flat.sol\":50968:51098  require(\r... */\n      tag_316\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_318\n      jump\t// in\n    tag_316:\n        /* \"KyberFairLaunch_flat.sol\":51111:51124  pool.endBlock */\n      0x01\n      dup2\n      add\n        /* \"KyberFairLaunch_flat.sol\":51111:51136  pool.endBlock = _endBlock */\n      dup1\n      sload\n      not(shl(0xc0, 0xffffffff))\n      and\n      shl(0xc0, 0x01)\n      0xffffffff\n      dup8\n      and\n      mul\n      or\n      swap1\n      sstore\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":51147:51287  for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r... */\n    tag_319:\n        /* \"KyberFairLaunch_flat.sol\":51167:51194  i < _rewardPerBlocks.length */\n      dup3\n      dup2\n      lt\n        /* \"KyberFairLaunch_flat.sol\":51147:51287  for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r... */\n      iszero\n      tag_320\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":51256:51272  _rewardPerBlocks */\n      dup4\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":51273:51274  i */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":51256:51275  _rewardPerBlocks[i] */\n      dup2\n      dup2\n      lt\n      tag_322\n      jumpi\n      invalid\n    tag_322:\n        /* \"KyberFairLaunch_flat.sol\":51216:51238  pool.poolRewardData[i] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":51216:51235  pool.poolRewardData */\n      0x02\n      dup7\n      add\n        /* \"KyberFairLaunch_flat.sol\":51256:51275  _rewardPerBlocks[i] */\n      0x20\n        /* \"KyberFairLaunch_flat.sol\":51216:51238  pool.poolRewardData[i] */\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":51256:51275  _rewardPerBlocks[i] */\n      swap2\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      calldataload\n        /* \"KyberFairLaunch_flat.sol\":51216:51275  pool.poolRewardData[i].rewardPerBlock = _rewardPerBlocks[i] */\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"KyberFairLaunch_flat.sol\":51196:51199  i++ */\n      0x01\n      add\n        /* \"KyberFairLaunch_flat.sol\":51147:51287  for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r... */\n      jump(tag_319)\n    tag_320:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":51321:51330  _endBlock */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":51304:51349  UpdatePool(_pid, _endBlock, _rewardPerBlocks) */\n      0xffffffff\n      and\n        /* \"KyberFairLaunch_flat.sol\":51315:51319  _pid */\n      dup6\n        /* \"KyberFairLaunch_flat.sol\":51304:51349  UpdatePool(_pid, _endBlock, _rewardPerBlocks) */\n      0xba2d8506275d684e80223910f1065a195ea279f37e27eb97ac24f4107eba6cf9\n        /* \"KyberFairLaunch_flat.sol\":51332:51348  _rewardPerBlocks */\n      dup6\n      dup6\n        /* \"KyberFairLaunch_flat.sol\":51304:51349  UpdatePool(_pid, _endBlock, _rewardPerBlocks) */\n      mload(0x40)\n      tag_323\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"KyberFairLaunch_flat.sol\":5091:5092  _ */\n      pop\n        /* \"KyberFairLaunch_flat.sol\":50455:51357  function updatePool(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":48977:50116  function renewPool(\r... */\n    tag_125:\n        /* \"KyberFairLaunch_flat.sol\":5060:5065  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"KyberFairLaunch_flat.sol\":5046:5056  msg.sender */\n      caller\n        /* \"KyberFairLaunch_flat.sol\":5046:5065  msg.sender == admin */\n      eq\n        /* \"KyberFairLaunch_flat.sol\":5038:5080  require(msg.sender == admin, \"only admin\") */\n      tag_325\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_325:\n        /* \"KyberFairLaunch_flat.sol\":49167:49190  updatePoolRewards(_pid) */\n      tag_328\n        /* \"KyberFairLaunch_flat.sol\":49185:49189  _pid */\n      dup6\n        /* \"KyberFairLaunch_flat.sol\":49167:49184  updatePoolRewards */\n      tag_115\n        /* \"KyberFairLaunch_flat.sol\":49167:49190  updatePoolRewards(_pid) */\n      jump\t// in\n    tag_328:\n        /* \"KyberFairLaunch_flat.sol\":49203:49224  PoolInfo storage pool */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":49227:49241  poolInfo[_pid] */\n      dup6\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":49227:49235  poolInfo */\n      0x06\n        /* \"KyberFairLaunch_flat.sol\":49227:49241  poolInfo[_pid] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":49333:49348  pool.startBlock */\n      0x01\n      dup2\n      add\n      sload\n        /* \"KyberFairLaunch_flat.sol\":49351:49363  block.number */\n      number\n      shl(0xa0, 0x01)\n        /* \"KyberFairLaunch_flat.sol\":49333:49348  pool.startBlock */\n      swap1\n      swap2\n      div\n      0xffffffff\n      and\n        /* \"KyberFairLaunch_flat.sol\":49333:49363  pool.startBlock > block.number */\n      gt\n      dup1\n        /* \"KyberFairLaunch_flat.sol\":49333:49395  pool.startBlock > block.number || pool.endBlock < block.number */\n      tag_329\n      jumpi\n      pop\n        /* \"KyberFairLaunch_flat.sol\":49367:49380  pool.endBlock */\n      0x01\n      dup2\n      add\n      sload\n        /* \"KyberFairLaunch_flat.sol\":49383:49395  block.number */\n      number\n      shl(0xc0, 0x01)\n        /* \"KyberFairLaunch_flat.sol\":49367:49380  pool.endBlock */\n      swap1\n      swap2\n      div\n      0xffffffff\n      and\n        /* \"KyberFairLaunch_flat.sol\":49367:49395  pool.endBlock < block.number */\n      lt\n        /* \"KyberFairLaunch_flat.sol\":49333:49395  pool.startBlock > block.number || pool.endBlock < block.number */\n    tag_329:\n        /* \"KyberFairLaunch_flat.sol\":49311:49457  require(\r... */\n      tag_330\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_332\n      jump\t// in\n    tag_330:\n        /* \"KyberFairLaunch_flat.sol\":49528:49540  rewardTokens */\n      0x04\n        /* \"KyberFairLaunch_flat.sol\":49528:49547  rewardTokens.length */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":49528:49574  rewardTokens.length == _rewardPerBlocks.length */\n      dup3\n      eq\n        /* \"KyberFairLaunch_flat.sol\":49506:49623  require(\r... */\n      tag_333\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_335\n      jump\t// in\n    tag_333:\n        /* \"KyberFairLaunch_flat.sol\":49670:49682  block.number */\n      number\n        /* \"KyberFairLaunch_flat.sol\":49656:49667  _startBlock */\n      dup6\n        /* \"KyberFairLaunch_flat.sol\":49656:49682  _startBlock > block.number */\n      0xffffffff\n      and\n      gt\n        /* \"KyberFairLaunch_flat.sol\":49656:49709  _startBlock > block.number && _endBlock > _startBlock */\n      dup1\n      iszero\n      tag_336\n      jumpi\n      pop\n        /* \"KyberFairLaunch_flat.sol\":49698:49709  _startBlock */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":49686:49709  _endBlock > _startBlock */\n      0xffffffff\n      and\n        /* \"KyberFairLaunch_flat.sol\":49686:49695  _endBlock */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":49686:49709  _endBlock > _startBlock */\n      0xffffffff\n      and\n      gt\n        /* \"KyberFairLaunch_flat.sol\":49656:49709  _startBlock > block.number && _endBlock > _startBlock */\n    tag_336:\n        /* \"KyberFairLaunch_flat.sol\":49634:49758  require(\r... */\n      tag_337\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_339\n      jump\t// in\n    tag_337:\n        /* \"KyberFairLaunch_flat.sol\":49771:49786  pool.startBlock */\n      0x01\n      dup2\n      add\n        /* \"KyberFairLaunch_flat.sol\":49771:49800  pool.startBlock = _startBlock */\n      dup1\n      sload\n      not(shl(0xa0, 0xffffffff))\n      and\n      shl(0xa0, 0x01)\n      0xffffffff\n      dup9\n      dup2\n      and\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      or\n      not(shl(0xc0, 0xffffffff))\n        /* \"KyberFairLaunch_flat.sol\":49811:49836  pool.endBlock = _endBlock */\n      and\n      shl(0xc0, 0x01)\n      swap3\n      dup9\n      and\n      swap3\n      swap1\n      swap3\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":49847:49881  pool.lastRewardBlock = _startBlock */\n      and\n      shl(0xe0, 0x01)\n      swap2\n      swap1\n      swap2\n      mul\n      or\n      swap1\n      sstore\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":49894:50034  for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r... */\n    tag_340:\n        /* \"KyberFairLaunch_flat.sol\":49914:49941  i < _rewardPerBlocks.length */\n      dup3\n      dup2\n      lt\n        /* \"KyberFairLaunch_flat.sol\":49894:50034  for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r... */\n      iszero\n      tag_341\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":50003:50019  _rewardPerBlocks */\n      dup4\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":50020:50021  i */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":50003:50022  _rewardPerBlocks[i] */\n      dup2\n      dup2\n      lt\n      tag_343\n      jumpi\n      invalid\n    tag_343:\n        /* \"KyberFairLaunch_flat.sol\":49963:49985  pool.poolRewardData[i] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":49963:49982  pool.poolRewardData */\n      0x02\n      dup7\n      add\n        /* \"KyberFairLaunch_flat.sol\":50003:50022  _rewardPerBlocks[i] */\n      0x20\n        /* \"KyberFairLaunch_flat.sol\":49963:49985  pool.poolRewardData[i] */\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":50003:50022  _rewardPerBlocks[i] */\n      swap2\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      calldataload\n        /* \"KyberFairLaunch_flat.sol\":49963:50022  pool.poolRewardData[i].rewardPerBlock = _rewardPerBlocks[i] */\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"KyberFairLaunch_flat.sol\":49943:49946  i++ */\n      0x01\n      add\n        /* \"KyberFairLaunch_flat.sol\":49894:50034  for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r... */\n      jump(tag_340)\n    tag_341:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":50080:50089  _endBlock */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":50051:50108  RenewPool(_pid, _startBlock, _endBlock, _rewardPerBlocks) */\n      0xffffffff\n      and\n        /* \"KyberFairLaunch_flat.sol\":50067:50078  _startBlock */\n      dup6\n        /* \"KyberFairLaunch_flat.sol\":50051:50108  RenewPool(_pid, _startBlock, _endBlock, _rewardPerBlocks) */\n      0xffffffff\n      and\n        /* \"KyberFairLaunch_flat.sol\":50061:50065  _pid */\n      dup8\n        /* \"KyberFairLaunch_flat.sol\":50051:50108  RenewPool(_pid, _startBlock, _endBlock, _rewardPerBlocks) */\n      0x4f863dc93468acf71ff8f5770599fbead4d0ff8ea6bd0c3251576f68fdad0904\n        /* \"KyberFairLaunch_flat.sol\":50091:50107  _rewardPerBlocks */\n      dup7\n      dup7\n        /* \"KyberFairLaunch_flat.sol\":50051:50108  RenewPool(_pid, _startBlock, _endBlock, _rewardPerBlocks) */\n      mload(0x40)\n      tag_344\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_344:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"KyberFairLaunch_flat.sol\":5091:5092  _ */\n      pop\n        /* \"KyberFairLaunch_flat.sol\":48977:50116  function renewPool(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":57329:57485  function getRewardTokens()\r... */\n    tag_128:\n        /* \"KyberFairLaunch_flat.sol\":57424:57440  address[] memory */\n      0x60\n        /* \"KyberFairLaunch_flat.sol\":57465:57477  rewardTokens */\n      0x04\n        /* \"KyberFairLaunch_flat.sol\":57458:57477  return rewardTokens */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_346\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_347:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_347\n      jumpi\n    tag_346:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"KyberFairLaunch_flat.sol\":57329:57485  function getRewardTokens()\r... */\n      swap1\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":46475:46929  function adminWithdraw(uint256 rewardTokenIndex, uint256 amount)\r... */\n    tag_134:\n        /* \"KyberFairLaunch_flat.sol\":5060:5065  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"KyberFairLaunch_flat.sol\":5046:5056  msg.sender */\n      caller\n        /* \"KyberFairLaunch_flat.sol\":5046:5065  msg.sender == admin */\n      eq\n        /* \"KyberFairLaunch_flat.sol\":5038:5080  require(msg.sender == admin, \"only admin\") */\n      tag_349\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_349:\n        /* \"KyberFairLaunch_flat.sol\":46593:46614  IERC20Ext rewardToken */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":46627:46639  rewardTokens */\n      0x04\n        /* \"KyberFairLaunch_flat.sol\":46640:46656  rewardTokenIndex */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":46627:46657  rewardTokens[rewardTokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_352\n      jumpi\n      invalid\n    tag_352:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n        /* \"KyberFairLaunch_flat.sol\":46673:46700  rewardToken == IERC20Ext(0) */\n      dup1\n        /* \"KyberFairLaunch_flat.sol\":46669:46922  if (rewardToken == IERC20Ext(0)) {\r... */\n      tag_354\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":46718:46730  bool success */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":46736:46746  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":46736:46751  msg.sender.call */\n      and\n        /* \"KyberFairLaunch_flat.sol\":46759:46765  amount */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":46736:46770  msg.sender.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_355:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_359\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_358)\n    tag_359:\n      0x60\n      swap2\n      pop\n    tag_358:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":46717:46770  (bool success, ) = msg.sender.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"KyberFairLaunch_flat.sol\":46793:46800  success */\n      dup1\n        /* \"KyberFairLaunch_flat.sol\":46785:46833  require(success, \"transfer reward token failed\") */\n      tag_360\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_362\n      jump\t// in\n    tag_360:\n        /* \"KyberFairLaunch_flat.sol\":46669:46922  if (rewardToken == IERC20Ext(0)) {\r... */\n      pop\n      jump(tag_364)\n    tag_354:\n        /* \"KyberFairLaunch_flat.sol\":46866:46910  rewardToken.safeTransfer(msg.sender, amount) */\n      tag_364\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":46866:46890  rewardToken.safeTransfer */\n      dup3\n      and\n        /* \"KyberFairLaunch_flat.sol\":46891:46901  msg.sender */\n      caller\n        /* \"KyberFairLaunch_flat.sol\":46903:46909  amount */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":46866:46890  rewardToken.safeTransfer */\n      tag_256\n        /* \"KyberFairLaunch_flat.sol\":46866:46910  rewardToken.safeTransfer(msg.sender, amount) */\n      jump\t// in\n    tag_364:\n        /* \"KyberFairLaunch_flat.sol\":5091:5092  _ */\n      pop\n        /* \"KyberFairLaunch_flat.sol\":46475:46929  function adminWithdraw(uint256 rewardTokenIndex, uint256 amount)\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":55822:57264  function pendingRewards(uint256 _pid, address _user)\r... */\n    tag_138:\n        /* \"KyberFairLaunch_flat.sol\":56009:56021  rewardTokens */\n      0x04\n        /* \"KyberFairLaunch_flat.sol\":56009:56028  rewardTokens.length */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":55943:55967  uint256[] memory rewards */\n      0x60\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":56009:56028  rewardTokens.length */\n      dup1\n        /* \"KyberFairLaunch_flat.sol\":56049:56077  new uint256[](rTokensLength) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_366\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_366:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_367\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_367:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":56088:56109  PoolInfo storage pool */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":56112:56126  poolInfo[_pid] */\n      dup6\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":56112:56120  poolInfo */\n      0x06\n        /* \"KyberFairLaunch_flat.sol\":56112:56126  poolInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":56161:56169  userInfo */\n      0x07\n        /* \"KyberFairLaunch_flat.sol\":56161:56175  userInfo[_pid] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":56161:56182  userInfo[_pid][_user] */\n      dup10\n      and\n      dup6\n      mstore\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":56215:56230  pool.totalStake */\n      dup2\n      sload\n        /* \"KyberFairLaunch_flat.sol\":56272:56292  pool.lastRewardBlock */\n      0x01\n      dup4\n      add\n      sload\n        /* \"KyberFairLaunch_flat.sol\":56039:56077  rewards = new uint256[](rTokensLength) */\n      swap5\n      swap7\n      pop\n        /* \"KyberFairLaunch_flat.sol\":56112:56126  poolInfo[_pid] */\n      swap2\n      swap4\n        /* \"KyberFairLaunch_flat.sol\":56161:56182  userInfo[_pid][_user] */\n      swap1\n      swap3\n      shl(0xe0, 0x01)\n        /* \"KyberFairLaunch_flat.sol\":56272:56292  pool.lastRewardBlock */\n      swap1\n      swap2\n      div\n      0xffffffff\n      and\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":56331:56362  _lastAccountedRewardBlock(_pid) */\n      tag_368\n        /* \"KyberFairLaunch_flat.sol\":56112:56126  poolInfo[_pid] */\n      dup10\n        /* \"KyberFairLaunch_flat.sol\":56331:56356  _lastAccountedRewardBlock */\n      tag_293\n        /* \"KyberFairLaunch_flat.sol\":56331:56362  _lastAccountedRewardBlock(_pid) */\n      jump\t// in\n    tag_368:\n        /* \"KyberFairLaunch_flat.sol\":56303:56362  uint32 lastAccountedBlock = _lastAccountedRewardBlock(_pid) */\n      swap1\n      pop\n        /* \"KyberFairLaunch_flat.sol\":56378:56387  uint256 i */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":56373:57257  for (uint256 i = 0; i < rTokensLength; i++) {\r... */\n    tag_369:\n        /* \"KyberFairLaunch_flat.sol\":56397:56410  rTokensLength */\n      dup7\n        /* \"KyberFairLaunch_flat.sol\":56393:56394  i */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":56393:56410  i < rTokensLength */\n      lt\n        /* \"KyberFairLaunch_flat.sol\":56373:57257  for (uint256 i = 0; i < rTokensLength; i++) {\r... */\n      iszero\n      tag_370\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":56432:56458  uint256 _accRewardPerShare */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":56461:56501  pool\r... */\n      dup2\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":56461:56498  pool\r... */\n      0x02\n      dup8\n      add\n        /* \"KyberFairLaunch_flat.sol\":56461:56501  pool\r... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":56461:56537  pool\r... */\n      0x01\n      add\n      sload\n        /* \"KyberFairLaunch_flat.sol\":56556:56597  lastAccountedBlock > _poolLastRewardBlock */\n      0xffffffff\n      dup4\n      and\n      dup5\n      lt\n        /* \"KyberFairLaunch_flat.sol\":56556:56617  lastAccountedBlock > _poolLastRewardBlock && _totalStake != 0 */\n      dup1\n      iszero\n      tag_372\n      jumpi\n      pop\n        /* \"KyberFairLaunch_flat.sol\":56601:56617  _totalStake != 0 */\n      dup5\n      iszero\n      iszero\n        /* \"KyberFairLaunch_flat.sol\":56556:56617  lastAccountedBlock > _poolLastRewardBlock && _totalStake != 0 */\n    tag_372:\n        /* \"KyberFairLaunch_flat.sol\":56552:56918  if (lastAccountedBlock > _poolLastRewardBlock && _totalStake != 0) {\r... */\n      iszero\n      tag_373\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":56638:56652  uint256 reward */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":56725:56747  pool.poolRewardData[i] */\n      dup3\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":56725:56744  pool.poolRewardData */\n      0x02\n      dup9\n      add\n        /* \"KyberFairLaunch_flat.sol\":56725:56747  pool.poolRewardData[i] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":56725:56762  pool.poolRewardData[i].rewardPerBlock */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":56655:56763  (lastAccountedBlock - _poolLastRewardBlock)\r... */\n      tag_374\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":56656:56697  lastAccountedBlock - _poolLastRewardBlock */\n      0xffffffff\n      dup1\n      dup8\n      and\n      dup9\n      swap1\n      sub\n      swap2\n        /* \"KyberFairLaunch_flat.sol\":56725:56762  pool.poolRewardData[i].rewardPerBlock */\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":56655:56724  (lastAccountedBlock - _poolLastRewardBlock)\r... */\n      tag_300\n        /* \"KyberFairLaunch_flat.sol\":56655:56763  (lastAccountedBlock - _poolLastRewardBlock)\r... */\n      and\n      jump\t// in\n    tag_374:\n        /* \"KyberFairLaunch_flat.sol\":56638:56763  uint256 reward = (lastAccountedBlock - _poolLastRewardBlock)\r... */\n      swap1\n      pop\n        /* \"KyberFairLaunch_flat.sol\":56803:56902  _accRewardPerShare.add(\r... */\n      tag_375\n        /* \"KyberFairLaunch_flat.sol\":56872:56883  _totalStake */\n      dup7\n        /* \"KyberFairLaunch_flat.sol\":56848:56869  reward.mul(PRECISION) */\n      tag_376\n        /* \"KyberFairLaunch_flat.sol\":56638:56763  uint256 reward = (lastAccountedBlock - _poolLastRewardBlock)\r... */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":42187:42191  1e12 */\n      0xe8d4a51000\n        /* \"KyberFairLaunch_flat.sol\":56848:56858  reward.mul */\n      tag_300\n        /* \"KyberFairLaunch_flat.sol\":56848:56869  reward.mul(PRECISION) */\n      jump\t// in\n    tag_376:\n        /* \"KyberFairLaunch_flat.sol\":56848:56883  reward.mul(PRECISION) / _totalStake */\n      dup2\n      tag_377\n      jumpi\n      invalid\n    tag_377:\n        /* \"KyberFairLaunch_flat.sol\":56803:56821  _accRewardPerShare */\n      dup5\n      swap2\n        /* \"KyberFairLaunch_flat.sol\":56848:56883  reward.mul(PRECISION) / _totalStake */\n      swap1\n      div\n        /* \"KyberFairLaunch_flat.sol\":56803:56825  _accRewardPerShare.add */\n      tag_206\n        /* \"KyberFairLaunch_flat.sol\":56803:56902  _accRewardPerShare.add(\r... */\n      jump\t// in\n    tag_375:\n        /* \"KyberFairLaunch_flat.sol\":56782:56902  _accRewardPerShare = _accRewardPerShare.add(\r... */\n      swap2\n      pop\n        /* \"KyberFairLaunch_flat.sol\":56552:56918  if (lastAccountedBlock > _poolLastRewardBlock && _totalStake != 0) {\r... */\n      pop\n    tag_373:\n        /* \"KyberFairLaunch_flat.sol\":57051:57073  user.userRewardData[i] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":57051:57070  user.userRewardData */\n      0x01\n      dup1\n      dup9\n      add\n        /* \"KyberFairLaunch_flat.sol\":57051:57073  user.userRewardData[i] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":57051:57092  user.userRewardData[i].lastRewardPerShare */\n      add\n      sload\n        /* \"KyberFairLaunch_flat.sol\":42187:42191  1e12 */\n      0xe8d4a51000\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":56964:57134  user.amount.mul(\r... */\n      tag_378\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":57002:57115  _accRewardPerShare.sub(\r... */\n      tag_379\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":57002:57020  _accRewardPerShare */\n      dup5\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":57002:57024  _accRewardPerShare.sub */\n      tag_253\n        /* \"KyberFairLaunch_flat.sol\":57002:57115  _accRewardPerShare.sub(\r... */\n      jump\t// in\n    tag_379:\n        /* \"KyberFairLaunch_flat.sol\":56964:56975  user.amount */\n      dup9\n      sload\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":56964:56979  user.amount.mul */\n      tag_300\n        /* \"KyberFairLaunch_flat.sol\":56964:57134  user.amount.mul(\r... */\n      jump\t// in\n    tag_378:\n        /* \"KyberFairLaunch_flat.sol\":56964:57163  user.amount.mul(\r... */\n      dup2\n      tag_380\n      jumpi\n      invalid\n    tag_380:\n      div\n        /* \"KyberFairLaunch_flat.sol\":56934:56941  rewards */\n      dup10\n        /* \"KyberFairLaunch_flat.sol\":56942:56943  i */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":56934:56944  rewards[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_381\n      jumpi\n      invalid\n    tag_381:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"KyberFairLaunch_flat.sol\":56934:57163  rewards[i] =\r... */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"KyberFairLaunch_flat.sol\":57191:57245  rewards[i].add(user.userRewardData[i].unclaimedReward) */\n      tag_382\n        /* \"KyberFairLaunch_flat.sol\":57206:57210  user */\n      dup7\n        /* \"KyberFairLaunch_flat.sol\":57206:57225  user.userRewardData */\n      0x01\n      add\n        /* \"KyberFairLaunch_flat.sol\":57206:57228  user.userRewardData[i] */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":57226:57227  i */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":57206:57228  user.userRewardData[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":57206:57244  user.userRewardData[i].unclaimedReward */\n      0x00\n      add\n      sload\n        /* \"KyberFairLaunch_flat.sol\":57191:57198  rewards */\n      dup11\n        /* \"KyberFairLaunch_flat.sol\":57199:57200  i */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":57191:57201  rewards[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_231\n      jumpi\n      invalid\n        /* \"KyberFairLaunch_flat.sol\":57191:57245  rewards[i].add(user.userRewardData[i].unclaimedReward) */\n    tag_382:\n        /* \"KyberFairLaunch_flat.sol\":57178:57185  rewards */\n      dup10\n        /* \"KyberFairLaunch_flat.sol\":57186:57187  i */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":57178:57188  rewards[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_384\n      jumpi\n      invalid\n    tag_384:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"KyberFairLaunch_flat.sol\":57178:57245  rewards[i] = rewards[i].add(user.userRewardData[i].unclaimedReward) */\n      mstore\n      pop\n        /* \"KyberFairLaunch_flat.sol\":56412:56415  i++ */\n      0x01\n      add\n        /* \"KyberFairLaunch_flat.sol\":56373:57257  for (uint256 i = 0; i < rTokensLength; i++) {\r... */\n      jump(tag_369)\n    tag_370:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":55822:57264  function pendingRewards(uint256 _pid, address _user)\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":59527:59668  function harvest(uint256 _pid) public override {\r... */\n    tag_144:\n        /* \"KyberFairLaunch_flat.sol\":59585:59608  updatePoolRewards(_pid) */\n      tag_386\n        /* \"KyberFairLaunch_flat.sol\":59603:59607  _pid */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":59585:59602  updatePoolRewards */\n      tag_115\n        /* \"KyberFairLaunch_flat.sol\":59585:59608  updatePoolRewards(_pid) */\n      jump\t// in\n    tag_386:\n        /* \"KyberFairLaunch_flat.sol\":59619:59660  _updateUserReward(msg.sender, _pid, true) */\n      tag_288\n        /* \"KyberFairLaunch_flat.sol\":59637:59647  msg.sender */\n      caller\n        /* \"KyberFairLaunch_flat.sol\":59649:59653  _pid */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":59655:59659  true */\n      0x01\n        /* \"KyberFairLaunch_flat.sol\":59619:59636  _updateUserReward */\n      tag_202\n        /* \"KyberFairLaunch_flat.sol\":59619:59660  _updateUserReward(msg.sender, _pid, true) */\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":4698:4718  address public admin */\n    tag_147:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":36366:36988  function safeApprove(IERC20 token, address spender, uint256 value) internal {\r... */\n    tag_149:\n        /* \"KyberFairLaunch_flat.sol\":36736:36746  value == 0 */\n      dup1\n      iszero\n      dup1\n        /* \"KyberFairLaunch_flat.sol\":36735:36797  (value == 0) || (token.allowance(address(this), spender) == 0) */\n      tag_389\n      jumpi\n      pop\n        /* \"KyberFairLaunch_flat.sol\":36752:36791  token.allowance(address(this), spender) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":36752:36767  token.allowance */\n      dup5\n      and\n      swap1\n      0xdd62ed3e\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":36752:36791  token.allowance(address(this), spender) */\n      tag_390\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":36776:36780  this */\n      address\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":36783:36790  spender */\n      dup7\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":36752:36791  token.allowance(address(this), spender) */\n      0x04\n      add\n      tag_271\n      jump\t// in\n    tag_390:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_391\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_391:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_393\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_393:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_394\n      swap2\n      swap1\n      tag_395\n      jump\t// in\n    tag_394:\n        /* \"KyberFairLaunch_flat.sol\":36752:36796  token.allowance(address(this), spender) == 0 */\n      iszero\n        /* \"KyberFairLaunch_flat.sol\":36735:36797  (value == 0) || (token.allowance(address(this), spender) == 0) */\n    tag_389:\n        /* \"KyberFairLaunch_flat.sol\":36727:36879  require((value == 0) || (token.allowance(address(this), spender) == 0),\r... */\n      tag_396\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_398\n      jump\t// in\n    tag_396:\n        /* \"KyberFairLaunch_flat.sol\":36890:36980  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      tag_364\n        /* \"KyberFairLaunch_flat.sol\":36910:36915  token */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":36940:36962  token.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"KyberFairLaunch_flat.sol\":36964:36971  spender */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":36973:36978  value */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":36917:36979  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      add(0x24, mload(0x40))\n      tag_400\n      swap3\n      swap2\n      swap1\n      tag_401\n      jump\t// in\n    tag_400:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":36890:36909  _callOptionalReturn */\n      tag_402\n        /* \"KyberFairLaunch_flat.sol\":36890:36980  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":16689:16884  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n    tag_150:\n        /* \"KyberFairLaunch_flat.sol\":16792:16804  bytes memory */\n      0x60\n        /* \"KyberFairLaunch_flat.sol\":16824:16876  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_404\n        /* \"KyberFairLaunch_flat.sol\":16846:16852  target */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":16854:16858  data */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":16860:16861  0 */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":16863:16875  errorMessage */\n      dup6\n        /* \"KyberFairLaunch_flat.sol\":16824:16845  functionCallWithValue */\n      tag_405\n        /* \"KyberFairLaunch_flat.sol\":16824:16876  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_404:\n        /* \"KyberFairLaunch_flat.sol\":16817:16876  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"KyberFairLaunch_flat.sol\":16689:16884  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n    tag_403:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":61557:63610  function _updateUserReward(\r... */\n    tag_202:\n        /* \"KyberFairLaunch_flat.sol\":61685:61703  uint256 userAmount */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":61706:61720  userInfo[_pid] */\n      dup3\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":61706:61714  userInfo */\n      0x07\n        /* \"KyberFairLaunch_flat.sol\":61706:61720  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":61706:61725  userInfo[_pid][_to] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":61706:61732  userInfo[_pid][_to].amount */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":61767:61779  rewardTokens */\n      0x04\n        /* \"KyberFairLaunch_flat.sol\":61767:61786  rewardTokens.length */\n      sload\n        /* \"KyberFairLaunch_flat.sol\":61803:61818  userAmount == 0 */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":61799:62382  if (userAmount == 0) {\r... */\n      tag_407\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":62079:62088  uint256 i */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":62074:62350  for (uint256 i = 0; i < rTokensLength; i++) {\r... */\n    tag_408:\n        /* \"KyberFairLaunch_flat.sol\":62098:62111  rTokensLength */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":62094:62095  i */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":62094:62111  i < rTokensLength */\n      lt\n        /* \"KyberFairLaunch_flat.sol\":62074:62350  for (uint256 i = 0; i < rTokensLength; i++) {\r... */\n      iszero\n      tag_409\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":62240:62254  poolInfo[_pid] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":62240:62248  poolInfo */\n      0x06\n        /* \"KyberFairLaunch_flat.sol\":62240:62254  poolInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":62240:62294  poolInfo[_pid]\r... */\n      dup5\n      dup5\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":62240:62291  poolInfo[_pid]\r... */\n      0x02\n      add\n        /* \"KyberFairLaunch_flat.sol\":62240:62294  poolInfo[_pid]\r... */\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":62240:62334  poolInfo[_pid]\r... */\n      0x01\n      swap1\n      dup2\n      add\n      sload\n        /* \"KyberFairLaunch_flat.sol\":62137:62151  userInfo[_pid] */\n      dup10\n      dup6\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":62137:62145  userInfo */\n      0x07\n        /* \"KyberFairLaunch_flat.sol\":62137:62151  userInfo[_pid] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":62137:62156  userInfo[_pid][_to] */\n      dup13\n      and\n      dup7\n      mstore\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":62137:62196  userInfo[_pid][_to]\r... */\n      dup7\n      dup7\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":62137:62193  userInfo[_pid][_to]\r... */\n      dup3\n      add\n        /* \"KyberFairLaunch_flat.sol\":62137:62196  userInfo[_pid][_to]\r... */\n      swap1\n      swap4\n      mstore\n      swap3\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":62137:62237  userInfo[_pid][_to]\r... */\n      dup3\n      add\n        /* \"KyberFairLaunch_flat.sol\":62137:62334  userInfo[_pid][_to]\r... */\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":62113:62116  i++ */\n      add\n        /* \"KyberFairLaunch_flat.sol\":62074:62350  for (uint256 i = 0; i < rTokensLength; i++) {\r... */\n      jump(tag_408)\n    tag_409:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":62364:62371  return; */\n      pop\n      pop\n      jump(tag_364)\n        /* \"KyberFairLaunch_flat.sol\":61799:62382  if (userAmount == 0) {\r... */\n    tag_407:\n        /* \"KyberFairLaunch_flat.sol\":62399:62408  uint256 i */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":62394:63603  for (uint256 i = 0; i < rTokensLength; i++) {\r... */\n    tag_411:\n        /* \"KyberFairLaunch_flat.sol\":62418:62431  rTokensLength */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":62414:62415  i */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":62414:62431  i < rTokensLength */\n      lt\n        /* \"KyberFairLaunch_flat.sol\":62394:63603  for (uint256 i = 0; i < rTokensLength; i++) {\r... */\n      iszero\n      tag_412\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":62453:62482  uint256 lastAccRewardPerShare */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":62485:62499  poolInfo[_pid] */\n      dup6\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":62485:62493  poolInfo */\n      0x06\n        /* \"KyberFairLaunch_flat.sol\":62485:62499  poolInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":62485:62535  poolInfo[_pid]\r... */\n      dup5\n      dup5\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":62485:62532  poolInfo[_pid]\r... */\n      0x02\n      add\n        /* \"KyberFairLaunch_flat.sol\":62485:62535  poolInfo[_pid]\r... */\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":62485:62571  poolInfo[_pid]\r... */\n      0x01\n      swap1\n      dup2\n      add\n      sload\n        /* \"KyberFairLaunch_flat.sol\":62622:62636  userInfo[_pid] */\n      dup10\n      dup6\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":62622:62630  userInfo */\n      0x07\n        /* \"KyberFairLaunch_flat.sol\":62622:62636  userInfo[_pid] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":62622:62641  userInfo[_pid][_to] */\n      dup13\n      and\n      dup7\n      mstore\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":62622:62677  userInfo[_pid][_to]\r... */\n      dup7\n      dup7\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":62622:62674  userInfo[_pid][_to]\r... */\n      dup3\n      add\n        /* \"KyberFairLaunch_flat.sol\":62622:62677  userInfo[_pid][_to]\r... */\n      swap1\n      swap4\n      mstore\n      swap1\n      dup4\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":62893:62922  rewardData.lastRewardPerShare */\n      swap1\n      dup2\n      add\n      sload\n        /* \"KyberFairLaunch_flat.sol\":62485:62571  poolInfo[_pid]\r... */\n      swap2\n      swap3\n        /* \"KyberFairLaunch_flat.sol\":62622:62677  userInfo[_pid][_to]\r... */\n      swap1\n      swap2\n        /* \"KyberFairLaunch_flat.sol\":42187:42191  1e12 */\n      0xe8d4a51000\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":62834:62938  userAmount.mul(\r... */\n      tag_414\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":62867:62923  lastAccRewardPerShare.sub(rewardData.lastRewardPerShare) */\n      tag_415\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":62485:62571  poolInfo[_pid]\r... */\n      dup7\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":62867:62892  lastAccRewardPerShare.sub */\n      tag_253\n        /* \"KyberFairLaunch_flat.sol\":62867:62923  lastAccRewardPerShare.sub(rewardData.lastRewardPerShare) */\n      jump\t// in\n    tag_415:\n        /* \"KyberFairLaunch_flat.sol\":62834:62844  userAmount */\n      dup9\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":62834:62848  userAmount.mul */\n      tag_300\n        /* \"KyberFairLaunch_flat.sol\":62834:62938  userAmount.mul(\r... */\n      jump\t// in\n    tag_414:\n        /* \"KyberFairLaunch_flat.sol\":62834:62950  userAmount.mul(\r... */\n      dup2\n      tag_416\n      jumpi\n      invalid\n    tag_416:\n        /* \"KyberFairLaunch_flat.sol\":62989:63015  rewardData.unclaimedReward */\n      dup4\n      sload\n        /* \"KyberFairLaunch_flat.sol\":62834:62950  userAmount.mul(\r... */\n      swap2\n      swap1\n      div\n      swap2\n      pop\n        /* \"KyberFairLaunch_flat.sol\":62976:63016  _pending.add(rewardData.unclaimedReward) */\n      tag_417\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":62834:62950  userAmount.mul(\r... */\n      dup3\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":62976:62988  _pending.add */\n      tag_206\n        /* \"KyberFairLaunch_flat.sol\":62976:63016  _pending.add(rewardData.unclaimedReward) */\n      jump\t// in\n    tag_417:\n        /* \"KyberFairLaunch_flat.sol\":62965:63016  _pending = _pending.add(rewardData.unclaimedReward) */\n      swap1\n      pop\n        /* \"KyberFairLaunch_flat.sol\":63062:63075  shouldHarvest */\n      dup7\n        /* \"KyberFairLaunch_flat.sol\":63062:63090  shouldHarvest ? 0 : _pending */\n      tag_418\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":63082:63090  _pending */\n      dup1\n        /* \"KyberFairLaunch_flat.sol\":63062:63090  shouldHarvest ? 0 : _pending */\n      jump(tag_419)\n    tag_418:\n        /* \"KyberFairLaunch_flat.sol\":63078:63079  0 */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":63062:63090  shouldHarvest ? 0 : _pending */\n    tag_419:\n        /* \"KyberFairLaunch_flat.sol\":63033:63090  rewardData.unclaimedReward = shouldHarvest ? 0 : _pending */\n      dup3\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":63191:63220  rewardData.lastRewardPerShare */\n      0x01\n      dup3\n      add\n        /* \"KyberFairLaunch_flat.sol\":63191:63244  rewardData.lastRewardPerShare = lastAccRewardPerShare */\n      dup4\n      swap1\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":63265:63278  shouldHarvest */\n      dup7\n        /* \"KyberFairLaunch_flat.sol\":63265:63294  shouldHarvest && _pending > 0 */\n      dup1\n      iszero\n      tag_420\n      jumpi\n      pop\n        /* \"KyberFairLaunch_flat.sol\":63293:63294  0 */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":63282:63290  _pending */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":63282:63294  _pending > 0 */\n      gt\n        /* \"KyberFairLaunch_flat.sol\":63265:63294  shouldHarvest && _pending > 0 */\n    tag_420:\n        /* \"KyberFairLaunch_flat.sol\":63261:63592  if (shouldHarvest && _pending > 0) {\r... */\n      iszero\n      tag_421\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":63315:63369  _lockReward(IERC20Ext(rewardTokens[i]), _to, _pending) */\n      tag_422\n        /* \"KyberFairLaunch_flat.sol\":63337:63349  rewardTokens */\n      0x04\n        /* \"KyberFairLaunch_flat.sol\":63350:63351  i */\n      dup6\n        /* \"KyberFairLaunch_flat.sol\":63337:63352  rewardTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_423\n      jumpi\n      invalid\n    tag_423:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"KyberFairLaunch_flat.sol\":63355:63358  _to */\n      dup11\n        /* \"KyberFairLaunch_flat.sol\":63360:63368  _pending */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":63315:63326  _lockReward */\n      tag_244\n        /* \"KyberFairLaunch_flat.sol\":63315:63369  _lockReward(IERC20Ext(rewardTokens[i]), _to, _pending) */\n      jump\t// in\n    tag_422:\n        /* \"KyberFairLaunch_flat.sol\":63476:63488  rewardTokens */\n      0x04\n        /* \"KyberFairLaunch_flat.sol\":63489:63490  i */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":63476:63491  rewardTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_425\n      jumpi\n      invalid\n    tag_425:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"KyberFairLaunch_flat.sol\":63393:63576  Harvest(\r... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":63476:63491  rewardTokens[i] */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"KyberFairLaunch_flat.sol\":63449:63453  _pid */\n      dup11\n      swap2\n        /* \"KyberFairLaunch_flat.sol\":63393:63576  Harvest(\r... */\n      swap1\n      dup13\n      and\n      swap1\n      0xf75f3d433c6628e04e01a0be1a2c6692a6011ce4b00389824cfa8b8a12f3c1c4\n      swap1\n      tag_427\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":63514:63522  _pending */\n      dup7\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":63545:63557  block.number */\n      number\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":63393:63576  Harvest(\r... */\n      tag_235\n      jump\t// in\n    tag_427:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"KyberFairLaunch_flat.sol\":63261:63592  if (shouldHarvest && _pending > 0) {\r... */\n    tag_421:\n      pop\n      pop\n      pop\n        /* \"KyberFairLaunch_flat.sol\":62433:62436  i++ */\n      0x01\n      add\n        /* \"KyberFairLaunch_flat.sol\":62394:63603  for (uint256 i = 0; i < rTokensLength; i++) {\r... */\n      jump(tag_411)\n    tag_412:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":61557:63610  function _updateUserReward(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":35892:36097  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r... */\n    tag_204:\n        /* \"KyberFairLaunch_flat.sol\":35993:36089  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_429\n        /* \"KyberFairLaunch_flat.sol\":36013:36018  token */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":36043:36070  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"KyberFairLaunch_flat.sol\":36072:36076  from */\n      dup6\n        /* \"KyberFairLaunch_flat.sol\":36078:36080  to */\n      dup6\n        /* \"KyberFairLaunch_flat.sol\":36082:36087  value */\n      dup6\n        /* \"KyberFairLaunch_flat.sol\":36020:36088  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_400\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_431\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":35993:36089  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n    tag_429:\n        /* \"KyberFairLaunch_flat.sol\":35892:36097  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":30374:30553  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_206:\n        /* \"KyberFairLaunch_flat.sol\":30432:30439  uint256 */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":30464:30469  a + b */\n      dup3\n      dup3\n      add\n        /* \"KyberFairLaunch_flat.sol\":30488:30494  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"KyberFairLaunch_flat.sol\":30480:30526  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_433\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_435\n      jump\t// in\n    tag_433:\n        /* \"KyberFairLaunch_flat.sol\":30544:30545  c */\n      swap1\n      pop\n        /* \"KyberFairLaunch_flat.sol\":30374:30553  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_432:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":60824:61455  function _withdraw(uint256 _pid, uint256 _amount) internal {\r... */\n    tag_214:\n        /* \"KyberFairLaunch_flat.sol\":60894:60915  PoolInfo storage pool */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":60918:60932  poolInfo[_pid] */\n      dup3\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":60918:60926  poolInfo */\n      0x06\n        /* \"KyberFairLaunch_flat.sol\":60918:60932  poolInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":60967:60975  userInfo */\n      0x07\n        /* \"KyberFairLaunch_flat.sol\":60967:60981  userInfo[_pid] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":60982:60992  msg.sender */\n      caller\n        /* \"KyberFairLaunch_flat.sol\":60967:60993  userInfo[_pid][msg.sender] */\n      dup6\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":61012:61023  user.amount */\n      dup1\n      sload\n        /* \"KyberFairLaunch_flat.sol\":61012:61034  user.amount >= _amount */\n      dup4\n      gt\n      iszero\n        /* \"KyberFairLaunch_flat.sol\":61004:61068  require(user.amount >= _amount, \"withdraw: insufficient amount\") */\n      tag_437\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_439\n      jump\t// in\n    tag_437:\n        /* \"KyberFairLaunch_flat.sol\":61124:61147  updatePoolRewards(_pid) */\n      tag_440\n        /* \"KyberFairLaunch_flat.sol\":61142:61146  _pid */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":61124:61141  updatePoolRewards */\n      tag_115\n        /* \"KyberFairLaunch_flat.sol\":61124:61147  updatePoolRewards(_pid) */\n      jump\t// in\n    tag_440:\n        /* \"KyberFairLaunch_flat.sol\":61158:61199  _updateUserReward(msg.sender, _pid, true) */\n      tag_441\n        /* \"KyberFairLaunch_flat.sol\":61176:61186  msg.sender */\n      caller\n        /* \"KyberFairLaunch_flat.sol\":61188:61192  _pid */\n      dup6\n        /* \"KyberFairLaunch_flat.sol\":61194:61198  true */\n      0x01\n        /* \"KyberFairLaunch_flat.sol\":61158:61175  _updateUserReward */\n      tag_202\n        /* \"KyberFairLaunch_flat.sol\":61158:61199  _updateUserReward(msg.sender, _pid, true) */\n      jump\t// in\n    tag_441:\n        /* \"KyberFairLaunch_flat.sol\":61226:61237  user.amount */\n      dup1\n      sload\n        /* \"KyberFairLaunch_flat.sol\":61226:61250  user.amount.sub(_amount) */\n      tag_442\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":61242:61249  _amount */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":61226:61241  user.amount.sub */\n      tag_253\n        /* \"KyberFairLaunch_flat.sol\":61226:61250  user.amount.sub(_amount) */\n      jump\t// in\n    tag_442:\n        /* \"KyberFairLaunch_flat.sol\":61212:61250  user.amount = user.amount.sub(_amount) */\n      dup2\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":61279:61294  pool.totalStake */\n      dup2\n      sload\n        /* \"KyberFairLaunch_flat.sol\":61279:61307  pool.totalStake.sub(_amount) */\n      tag_443\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":61299:61306  _amount */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":61279:61298  pool.totalStake.sub */\n      tag_253\n        /* \"KyberFairLaunch_flat.sol\":61279:61307  pool.totalStake.sub(_amount) */\n      jump\t// in\n    tag_443:\n        /* \"KyberFairLaunch_flat.sol\":61261:61307  pool.totalStake = pool.totalStake.sub(_amount) */\n      dup3\n      sstore\n        /* \"KyberFairLaunch_flat.sol\":61330:61345  pool.stakeToken */\n      0x01\n      dup3\n      add\n      sload\n        /* \"KyberFairLaunch_flat.sol\":61320:61380  IERC20Ext(pool.stakeToken).safeTransfer(msg.sender, _amount) */\n      tag_444\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":61330:61345  pool.stakeToken */\n      and\n        /* \"KyberFairLaunch_flat.sol\":61360:61370  msg.sender */\n      caller\n        /* \"KyberFairLaunch_flat.sol\":61372:61379  _amount */\n      dup6\n        /* \"KyberFairLaunch_flat.sol\":61320:61359  IERC20Ext(pool.stakeToken).safeTransfer */\n      tag_256\n        /* \"KyberFairLaunch_flat.sol\":61320:61380  IERC20Ext(pool.stakeToken).safeTransfer(msg.sender, _amount) */\n      jump\t// in\n    tag_444:\n        /* \"KyberFairLaunch_flat.sol\":61425:61437  block.number */\n      number\n        /* \"KyberFairLaunch_flat.sol\":61419:61423  _pid */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":61407:61417  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":61398:61447  Withdraw(msg.sender, _pid, block.number, _amount) */\n      and\n      0x02f25270a4d87bea75db541cdfe559334a275b4a233520ed6c0a2429667cca94\n        /* \"KyberFairLaunch_flat.sol\":61439:61446  _amount */\n      dup7\n        /* \"KyberFairLaunch_flat.sol\":61398:61447  Withdraw(msg.sender, _pid, block.number, _amount) */\n      mload(0x40)\n      tag_445\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_445:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"KyberFairLaunch_flat.sol\":60824:61455  function _withdraw(uint256 _pid, uint256 _amount) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":64062:64316  function _lockReward(\r... */\n    tag_244:\n        /* \"KyberFairLaunch_flat.sol\":64189:64202  uint256 value */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":64205:64226  token == IERC20Ext(0) */\n      dup5\n      and\n      iszero\n        /* \"KyberFairLaunch_flat.sol\":64205:64240  token == IERC20Ext(0) ? _amount : 0 */\n      tag_447\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":64239:64240  0 */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":64205:64240  token == IERC20Ext(0) ? _amount : 0 */\n      jump(tag_448)\n    tag_447:\n        /* \"KyberFairLaunch_flat.sol\":64229:64236  _amount */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":64205:64240  token == IERC20Ext(0) ? _amount : 0 */\n    tag_448:\n        /* \"KyberFairLaunch_flat.sol\":64189:64240  uint256 value = token == IERC20Ext(0) ? _amount : 0 */\n      swap1\n      pop\n        /* \"KyberFairLaunch_flat.sol\":64251:64263  rewardLocker */\n      immutable(\"0x6772a9c6a385733854edcf781b908dda6fb77b4c4e7d1b2635179db6842609d0\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":64251:64268  rewardLocker.lock */\n      and\n      0x7750c9f0\n        /* \"KyberFairLaunch_flat.sol\":64276:64281  value */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":64283:64288  token */\n      dup7\n        /* \"KyberFairLaunch_flat.sol\":64290:64298  _account */\n      dup7\n        /* \"KyberFairLaunch_flat.sol\":64300:64307  _amount */\n      dup7\n        /* \"KyberFairLaunch_flat.sol\":64251:64308  rewardLocker.lock{value: value}(token, _account, _amount) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_449\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_431\n      jump\t// in\n    tag_449:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_451\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_451:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_453\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_453:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"KyberFairLaunch_flat.sol\":64062:64316  function _lockReward(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":30836:30994  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_253:\n        /* \"KyberFairLaunch_flat.sol\":30894:30901  uint256 */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":30927:30928  a */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":30922:30923  b */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":30922:30928  b <= a */\n      gt\n      iszero\n        /* \"KyberFairLaunch_flat.sol\":30914:30963  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_455\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_457\n      jump\t// in\n    tag_455:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":30981:30986  a - b */\n      swap1\n      sub\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":30836:30994  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":35707:35884  function safeTransfer(IERC20 token, address to, uint256 value) internal {\r... */\n    tag_256:\n        /* \"KyberFairLaunch_flat.sol\":35790:35876  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_364\n        /* \"KyberFairLaunch_flat.sol\":35810:35815  token */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":35840:35863  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"KyberFairLaunch_flat.sol\":35865:35867  to */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":35869:35874  value */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":35817:35875  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_400\n      swap3\n      swap2\n      swap1\n      tag_401\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":63746:63986  function _lastAccountedRewardBlock(uint256 _pid)\r... */\n    tag_293:\n        /* \"KyberFairLaunch_flat.sol\":63845:63858  uint32 _value */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":63885:63899  poolInfo[_pid] */\n      dup2\n      dup2\n      mstore\n        /* \"KyberFairLaunch_flat.sol\":63885:63893  poolInfo */\n      0x06\n        /* \"KyberFairLaunch_flat.sol\":63885:63899  poolInfo[_pid] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"KyberFairLaunch_flat.sol\":63885:63908  poolInfo[_pid].endBlock */\n      0x01\n      add\n      sload\n      shl(0xc0, 0x01)\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"KyberFairLaunch_flat.sol\":63932:63944  block.number */\n      number\n        /* \"KyberFairLaunch_flat.sol\":63923:63944  _value > block.number */\n      dup2\n      gt\n        /* \"KyberFairLaunch_flat.sol\":63919:63978  if (_value > block.number) _value = block.number.toUint32() */\n      iszero\n      tag_462\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":63955:63978  block.number.toUint32() */\n      tag_463\n        /* \"KyberFairLaunch_flat.sol\":63955:63967  block.number */\n      number\n        /* \"KyberFairLaunch_flat.sol\":63955:63976  block.number.toUint32 */\n      tag_464\n        /* \"KyberFairLaunch_flat.sol\":63955:63978  block.number.toUint32() */\n      jump\t// in\n    tag_463:\n        /* \"KyberFairLaunch_flat.sol\":63946:63978  _value = block.number.toUint32() */\n      swap1\n      pop\n        /* \"KyberFairLaunch_flat.sol\":63919:63978  if (_value > block.number) _value = block.number.toUint32() */\n    tag_462:\n        /* \"KyberFairLaunch_flat.sol\":63746:63986  function _lastAccountedRewardBlock(uint256 _pid)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":31253:31473  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_300:\n        /* \"KyberFairLaunch_flat.sol\":31311:31318  uint256 */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":31335:31341  a == 0 */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":31331:31351  if (a == 0) return 0 */\n      tag_466\n      jumpi\n      pop\n        /* \"KyberFairLaunch_flat.sol\":31350:31351  0 */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":31343:31351  return 0 */\n      jump(tag_432)\n        /* \"KyberFairLaunch_flat.sol\":31331:31351  if (a == 0) return 0 */\n    tag_466:\n        /* \"KyberFairLaunch_flat.sol\":31374:31379  a * b */\n      dup3\n      dup3\n      mul\n        /* \"KyberFairLaunch_flat.sol\":31378:31379  b */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":31374:31375  a */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":31374:31379  a * b */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":31374:31375  a */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":31398:31403  c / a */\n      tag_467\n      jumpi\n      invalid\n    tag_467:\n      div\n        /* \"KyberFairLaunch_flat.sol\":31398:31408  c / a == b */\n      eq\n        /* \"KyberFairLaunch_flat.sol\":31390:31446  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_433\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_470\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":38012:38773  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n    tag_402:\n        /* \"KyberFairLaunch_flat.sol\":38436:38459  bytes memory returndata */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":38462:38531  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_472\n        /* \"KyberFairLaunch_flat.sol\":38490:38494  data */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":38462:38531  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"KyberFairLaunch_flat.sol\":38470:38475  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":38462:38489  address(token).functionCall */\n      and\n      tag_150\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":38462:38531  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_472:\n        /* \"KyberFairLaunch_flat.sol\":38546:38563  returndata.length */\n      dup1\n      mload\n        /* \"KyberFairLaunch_flat.sol\":38436:38531  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"KyberFairLaunch_flat.sol\":38546:38567  returndata.length > 0 */\n      iszero\n        /* \"KyberFairLaunch_flat.sol\":38542:38766  if (returndata.length > 0) { // Return data is optional\r... */\n      tag_364\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":38688:38698  returndata */\n      dup1\n        /* \"KyberFairLaunch_flat.sol\":38677:38707  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_474\n      swap2\n      swap1\n      tag_475\n      jump\t// in\n    tag_474:\n        /* \"KyberFairLaunch_flat.sol\":38669:38754  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_364\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_478\n      jump\t// in\n        /* \"KyberFairLaunch_flat.sol\":17741:18271  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r... */\n    tag_405:\n        /* \"KyberFairLaunch_flat.sol\":17868:17880  bytes memory */\n      0x60\n        /* \"KyberFairLaunch_flat.sol\":17926:17931  value */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":17901:17922  address(this).balance */\n      selfbalance\n        /* \"KyberFairLaunch_flat.sol\":17901:17931  address(this).balance >= value */\n      lt\n      iszero\n        /* \"KyberFairLaunch_flat.sol\":17893:17974  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_480\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_482\n      jump\t// in\n    tag_480:\n        /* \"KyberFairLaunch_flat.sol\":17993:18011  isContract(target) */\n      tag_483\n        /* \"KyberFairLaunch_flat.sol\":18004:18010  target */\n      dup6\n        /* \"KyberFairLaunch_flat.sol\":17993:18003  isContract */\n      tag_484\n        /* \"KyberFairLaunch_flat.sol\":17993:18011  isContract(target) */\n      jump\t// in\n    tag_483:\n        /* \"KyberFairLaunch_flat.sol\":17985:18045  require(isContract(target), \"Address: call to non-contract\") */\n      tag_485\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_487\n      jump\t// in\n    tag_485:\n        /* \"KyberFairLaunch_flat.sol\":18119:18131  bool success */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":18133:18156  bytes memory returndata */\n      dup1\n        /* \"KyberFairLaunch_flat.sol\":18160:18166  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"KyberFairLaunch_flat.sol\":18160:18171  target.call */\n      and\n        /* \"KyberFairLaunch_flat.sol\":18180:18185  value */\n      dup6\n        /* \"KyberFairLaunch_flat.sol\":18188:18192  data */\n      dup8\n        /* \"KyberFairLaunch_flat.sol\":18160:18193  target.call{ value: value }(data) */\n      mload(0x40)\n      tag_488\n      swap2\n      swap1\n      tag_489\n      jump\t// in\n    tag_488:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_492\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_491)\n    tag_492:\n      0x60\n      swap2\n      pop\n    tag_491:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":18118:18193  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"KyberFairLaunch_flat.sol\":18211:18263  _verifyCallResult(success, returndata, errorMessage) */\n      tag_493\n        /* \"KyberFairLaunch_flat.sol\":18229:18236  success */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":18238:18248  returndata */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":18250:18262  errorMessage */\n      dup7\n        /* \"KyberFairLaunch_flat.sol\":18211:18228  _verifyCallResult */\n      tag_494\n        /* \"KyberFairLaunch_flat.sol\":18211:18263  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_493:\n        /* \"KyberFairLaunch_flat.sol\":18204:18263  return _verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"KyberFairLaunch_flat.sol\":17741:18271  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":8320:8499  function toUint32(uint256 value) internal pure returns (uint32) {\r... */\n    tag_464:\n        /* \"KyberFairLaunch_flat.sol\":8376:8382  uint32 */\n      0x00\n        /* \"KyberFairLaunch_flat.sol\":8411:8416  2**32 */\n      0x0100000000\n        /* \"KyberFairLaunch_flat.sol\":8403:8408  value */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":8403:8416  value < 2**32 */\n      lt\n        /* \"KyberFairLaunch_flat.sol\":8395:8460  require(value < 2**32, \"SafeCast: value doesn\\'t fit in 32 bits\") */\n      tag_496\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_498\n      jump\t// in\n    tag_496:\n      pop\n        /* \"KyberFairLaunch_flat.sol\":8485:8490  value */\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":8320:8499  function toUint32(uint256 value) internal pure returns (uint32) {\r... */\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":13771:14193  function isContract(address account) internal view returns (bool) {\r... */\n    tag_484:\n        /* \"KyberFairLaunch_flat.sol\":14138:14158  extcodesize(account) */\n      extcodesize\n        /* \"KyberFairLaunch_flat.sol\":14177:14185  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"KyberFairLaunch_flat.sol\":13771:14193  function isContract(address account) internal view returns (bool) {\r... */\n      jump\t// out\n        /* \"KyberFairLaunch_flat.sol\":20281:21023  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r... */\n    tag_494:\n        /* \"KyberFairLaunch_flat.sol\":20396:20408  bytes memory */\n      0x60\n        /* \"KyberFairLaunch_flat.sol\":20425:20432  success */\n      dup4\n        /* \"KyberFairLaunch_flat.sol\":20421:21016  if (success) {\r... */\n      iszero\n      tag_501\n      jumpi\n      pop\n        /* \"KyberFairLaunch_flat.sol\":20456:20466  returndata */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":20449:20466  return returndata */\n      jump(tag_403)\n        /* \"KyberFairLaunch_flat.sol\":20421:21016  if (success) {\r... */\n    tag_501:\n        /* \"KyberFairLaunch_flat.sol\":20570:20587  returndata.length */\n      dup3\n      mload\n        /* \"KyberFairLaunch_flat.sol\":20570:20591  returndata.length > 0 */\n      iszero\n        /* \"KyberFairLaunch_flat.sol\":20566:21005  if (returndata.length > 0) {\r... */\n      tag_503\n      jumpi\n        /* \"KyberFairLaunch_flat.sol\":20833:20843  returndata */\n      dup3\n        /* \"KyberFairLaunch_flat.sol\":20827:20844  mload(returndata) */\n      mload\n        /* \"KyberFairLaunch_flat.sol\":20894:20909  returndata_size */\n      dup1\n        /* \"KyberFairLaunch_flat.sol\":20881:20891  returndata */\n      dup5\n        /* \"KyberFairLaunch_flat.sol\":20877:20879  32 */\n      0x20\n        /* \"KyberFairLaunch_flat.sol\":20873:20892  add(32, returndata) */\n      add\n        /* \"KyberFairLaunch_flat.sol\":20866:20910  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"KyberFairLaunch_flat.sol\":20781:20929  {\r... */\n    tag_503:\n        /* \"KyberFairLaunch_flat.sol\":20976:20988  errorMessage */\n      dup2\n        /* \"KyberFairLaunch_flat.sol\":20969:20989  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap2\n      swap1\n      tag_506\n      jump\t// in\n        /* \"#utility.yul\":14:189   */\n    tag_508:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_462\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":194:598   */\n    tag_511:\n      0x00\n      dup1\n        /* \"#utility.yul\":327:330   */\n      dup4\n        /* \"#utility.yul\":320:324   */\n      0x1f\n        /* \"#utility.yul\":312:318   */\n      dup5\n        /* \"#utility.yul\":308:325   */\n      add\n        /* \"#utility.yul\":304:331   */\n      slt\n        /* \"#utility.yul\":294:296   */\n      tag_513\n      jumpi\n        /* \"#utility.yul\":352:360   */\n      dup2\n        /* \"#utility.yul\":342:350   */\n      dup3\n        /* \"#utility.yul\":335:361   */\n      revert\n        /* \"#utility.yul\":294:296   */\n    tag_513:\n      pop\n        /* \"#utility.yul\":382:402   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":425:443   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":414:444   */\n      dup2\n      gt\n        /* \"#utility.yul\":411:413   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":464:472   */\n      dup2\n        /* \"#utility.yul\":454:462   */\n      dup3\n        /* \"#utility.yul\":447:473   */\n      revert\n        /* \"#utility.yul\":411:413   */\n    tag_514:\n        /* \"#utility.yul\":508:512   */\n      0x20\n        /* \"#utility.yul\":500:506   */\n      dup4\n        /* \"#utility.yul\":496:513   */\n      add\n        /* \"#utility.yul\":484:513   */\n      swap2\n      pop\n        /* \"#utility.yul\":571:574   */\n      dup4\n        /* \"#utility.yul\":564:568   */\n      0x20\n        /* \"#utility.yul\":556:560   */\n      dup1\n        /* \"#utility.yul\":548:554   */\n      dup4\n        /* \"#utility.yul\":544:561   */\n      mul\n        /* \"#utility.yul\":536:542   */\n      dup6\n        /* \"#utility.yul\":532:562   */\n      add\n        /* \"#utility.yul\":528:569   */\n      add\n        /* \"#utility.yul\":525:575   */\n      gt\n        /* \"#utility.yul\":522:524   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":588:589   */\n      0x00\n        /* \"#utility.yul\":585:586   */\n      dup1\n        /* \"#utility.yul\":578:590   */\n      revert\n        /* \"#utility.yul\":522:524   */\n    tag_515:\n        /* \"#utility.yul\":284:598   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":603:768   */\n    tag_516:\n        /* \"#utility.yul\":672:692   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":732:742   */\n      0xffffffff\n        /* \"#utility.yul\":721:743   */\n      dup2\n      and\n        /* \"#utility.yul\":711:744   */\n      dup2\n      eq\n        /* \"#utility.yul\":701:703   */\n      tag_462\n      jumpi\n        /* \"#utility.yul\":758:759   */\n      0x00\n        /* \"#utility.yul\":755:756   */\n      dup1\n        /* \"#utility.yul\":748:760   */\n      revert\n        /* \"#utility.yul\":773:971   */\n    tag_47:\n      0x00\n        /* \"#utility.yul\":885:887   */\n      0x20\n        /* \"#utility.yul\":873:882   */\n      dup3\n        /* \"#utility.yul\":864:871   */\n      dup5\n        /* \"#utility.yul\":860:883   */\n      sub\n        /* \"#utility.yul\":856:888   */\n      slt\n        /* \"#utility.yul\":853:855   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":906:912   */\n      dup1\n        /* \"#utility.yul\":898:904   */\n      dup2\n        /* \"#utility.yul\":891:913   */\n      revert\n        /* \"#utility.yul\":853:855   */\n    tag_520:\n        /* \"#utility.yul\":934:965   */\n      tag_403\n        /* \"#utility.yul\":955:964   */\n      dup3\n        /* \"#utility.yul\":934:965   */\n      tag_508\n      jump\t// in\n        /* \"#utility.yul\":976:1664   */\n    tag_66:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":1172:1175   */\n      0x80\n        /* \"#utility.yul\":1160:1169   */\n      dup7\n        /* \"#utility.yul\":1151:1158   */\n      dup9\n        /* \"#utility.yul\":1147:1170   */\n      sub\n        /* \"#utility.yul\":1143:1176   */\n      slt\n        /* \"#utility.yul\":1140:1142   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":1194:1200   */\n      dup1\n        /* \"#utility.yul\":1186:1192   */\n      dup2\n        /* \"#utility.yul\":1179:1201   */\n      revert\n        /* \"#utility.yul\":1140:1142   */\n    tag_523:\n        /* \"#utility.yul\":1222:1253   */\n      tag_524\n        /* \"#utility.yul\":1243:1252   */\n      dup7\n        /* \"#utility.yul\":1222:1253   */\n      tag_508\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":1212:1253   */\n      swap5\n      pop\n        /* \"#utility.yul\":1272:1311   */\n      tag_525\n        /* \"#utility.yul\":1307:1309   */\n      0x20\n        /* \"#utility.yul\":1296:1305   */\n      dup8\n        /* \"#utility.yul\":1292:1310   */\n      add\n        /* \"#utility.yul\":1272:1311   */\n      tag_516\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":1262:1311   */\n      swap4\n      pop\n        /* \"#utility.yul\":1330:1369   */\n      tag_526\n        /* \"#utility.yul\":1365:1367   */\n      0x40\n        /* \"#utility.yul\":1354:1363   */\n      dup8\n        /* \"#utility.yul\":1350:1368   */\n      add\n        /* \"#utility.yul\":1330:1369   */\n      tag_516\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":1320:1369   */\n      swap3\n      pop\n        /* \"#utility.yul\":1420:1422   */\n      0x60\n        /* \"#utility.yul\":1409:1418   */\n      dup7\n        /* \"#utility.yul\":1405:1423   */\n      add\n        /* \"#utility.yul\":1392:1424   */\n      calldataload\n        /* \"#utility.yul\":1447:1465   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1439:1445   */\n      dup2\n        /* \"#utility.yul\":1436:1466   */\n      gt\n        /* \"#utility.yul\":1433:1435   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":1484:1490   */\n      dup2\n        /* \"#utility.yul\":1476:1482   */\n      dup3\n        /* \"#utility.yul\":1469:1491   */\n      revert\n        /* \"#utility.yul\":1433:1435   */\n    tag_527:\n        /* \"#utility.yul\":1528:1604   */\n      tag_528\n        /* \"#utility.yul\":1596:1603   */\n      dup9\n        /* \"#utility.yul\":1587:1593   */\n      dup3\n        /* \"#utility.yul\":1576:1585   */\n      dup10\n        /* \"#utility.yul\":1572:1594   */\n      add\n        /* \"#utility.yul\":1528:1604   */\n      tag_511\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":1130:1664   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":1623:1631   */\n      swap3\n      swap5\n        /* \"#utility.yul\":1502:1604   */\n      swap4\n        /* \"#utility.yul\":1130:1664   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1669:2132   */\n    tag_86:\n      0x00\n      dup1\n        /* \"#utility.yul\":1816:1818   */\n      0x20\n        /* \"#utility.yul\":1804:1813   */\n      dup4\n        /* \"#utility.yul\":1795:1802   */\n      dup6\n        /* \"#utility.yul\":1791:1814   */\n      sub\n        /* \"#utility.yul\":1787:1819   */\n      slt\n        /* \"#utility.yul\":1784:1786   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":1837:1843   */\n      dup2\n        /* \"#utility.yul\":1829:1835   */\n      dup3\n        /* \"#utility.yul\":1822:1844   */\n      revert\n        /* \"#utility.yul\":1784:1786   */\n    tag_530:\n        /* \"#utility.yul\":1882:1891   */\n      dup3\n        /* \"#utility.yul\":1869:1892   */\n      calldataload\n        /* \"#utility.yul\":1915:1933   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1907:1913   */\n      dup2\n        /* \"#utility.yul\":1904:1934   */\n      gt\n        /* \"#utility.yul\":1901:1903   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":1952:1958   */\n      dup3\n        /* \"#utility.yul\":1944:1950   */\n      dup4\n        /* \"#utility.yul\":1937:1959   */\n      revert\n        /* \"#utility.yul\":1901:1903   */\n    tag_531:\n        /* \"#utility.yul\":1996:2072   */\n      tag_532\n        /* \"#utility.yul\":2064:2071   */\n      dup6\n        /* \"#utility.yul\":2055:2061   */\n      dup3\n        /* \"#utility.yul\":2044:2053   */\n      dup7\n        /* \"#utility.yul\":2040:2062   */\n      add\n        /* \"#utility.yul\":1996:2072   */\n      tag_511\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":2091:2099   */\n      swap1\n      swap7\n        /* \"#utility.yul\":1970:2072   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":1774:2132   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2137:2394   */\n    tag_475:\n      0x00\n        /* \"#utility.yul\":2257:2259   */\n      0x20\n        /* \"#utility.yul\":2245:2254   */\n      dup3\n        /* \"#utility.yul\":2236:2243   */\n      dup5\n        /* \"#utility.yul\":2232:2255   */\n      sub\n        /* \"#utility.yul\":2228:2260   */\n      slt\n        /* \"#utility.yul\":2225:2227   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":2278:2284   */\n      dup1\n        /* \"#utility.yul\":2270:2276   */\n      dup2\n        /* \"#utility.yul\":2263:2285   */\n      revert\n        /* \"#utility.yul\":2225:2227   */\n    tag_534:\n        /* \"#utility.yul\":2315:2324   */\n      dup2\n        /* \"#utility.yul\":2309:2325   */\n      mload\n        /* \"#utility.yul\":2334:2364   */\n      tag_433\n        /* \"#utility.yul\":2358:2363   */\n      dup2\n        /* \"#utility.yul\":2334:2364   */\n      tag_536\n      jump\t// in\n        /* \"#utility.yul\":2399:2589   */\n    tag_59:\n      0x00\n        /* \"#utility.yul\":2511:2513   */\n      0x20\n        /* \"#utility.yul\":2499:2508   */\n      dup3\n        /* \"#utility.yul\":2490:2497   */\n      dup5\n        /* \"#utility.yul\":2486:2509   */\n      sub\n        /* \"#utility.yul\":2482:2514   */\n      slt\n        /* \"#utility.yul\":2479:2481   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":2532:2538   */\n      dup1\n        /* \"#utility.yul\":2524:2530   */\n      dup2\n        /* \"#utility.yul\":2517:2539   */\n      revert\n        /* \"#utility.yul\":2479:2481   */\n    tag_538:\n      pop\n        /* \"#utility.yul\":2560:2583   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2469:2589   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2594:2788   */\n    tag_395:\n      0x00\n        /* \"#utility.yul\":2717:2719   */\n      0x20\n        /* \"#utility.yul\":2705:2714   */\n      dup3\n        /* \"#utility.yul\":2696:2703   */\n      dup5\n        /* \"#utility.yul\":2692:2715   */\n      sub\n        /* \"#utility.yul\":2688:2720   */\n      slt\n        /* \"#utility.yul\":2685:2687   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":2738:2744   */\n      dup1\n        /* \"#utility.yul\":2730:2736   */\n      dup2\n        /* \"#utility.yul\":2723:2745   */\n      revert\n        /* \"#utility.yul\":2685:2687   */\n    tag_540:\n      pop\n        /* \"#utility.yul\":2766:2782   */\n      mload\n      swap2\n        /* \"#utility.yul\":2675:2788   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2793:3059   */\n    tag_40:\n      0x00\n      dup1\n        /* \"#utility.yul\":2922:2924   */\n      0x40\n        /* \"#utility.yul\":2910:2919   */\n      dup4\n        /* \"#utility.yul\":2901:2908   */\n      dup6\n        /* \"#utility.yul\":2897:2920   */\n      sub\n        /* \"#utility.yul\":2893:2925   */\n      slt\n        /* \"#utility.yul\":2890:2892   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":2943:2949   */\n      dup2\n        /* \"#utility.yul\":2935:2941   */\n      dup3\n        /* \"#utility.yul\":2928:2950   */\n      revert\n        /* \"#utility.yul\":2890:2892   */\n    tag_542:\n        /* \"#utility.yul\":2984:2993   */\n      dup3\n        /* \"#utility.yul\":2971:2994   */\n      calldataload\n        /* \"#utility.yul\":2961:2994   */\n      swap2\n      pop\n        /* \"#utility.yul\":3013:3053   */\n      tag_543\n        /* \"#utility.yul\":3049:3051   */\n      0x20\n        /* \"#utility.yul\":3038:3047   */\n      dup5\n        /* \"#utility.yul\":3034:3052   */\n      add\n        /* \"#utility.yul\":3013:3053   */\n      tag_508\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":3003:3053   */\n      swap1\n      pop\n        /* \"#utility.yul\":2880:3059   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3064:3322   */\n    tag_81:\n      0x00\n      dup1\n        /* \"#utility.yul\":3193:3195   */\n      0x40\n        /* \"#utility.yul\":3181:3190   */\n      dup4\n        /* \"#utility.yul\":3172:3179   */\n      dup6\n        /* \"#utility.yul\":3168:3191   */\n      sub\n        /* \"#utility.yul\":3164:3196   */\n      slt\n        /* \"#utility.yul\":3161:3163   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":3214:3220   */\n      dup2\n        /* \"#utility.yul\":3206:3212   */\n      dup3\n        /* \"#utility.yul\":3199:3221   */\n      revert\n        /* \"#utility.yul\":3161:3163   */\n    tag_545:\n      pop\n      pop\n        /* \"#utility.yul\":3242:3265   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":3312:3314   */\n      0x20\n        /* \"#utility.yul\":3297:3315   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3284:3316   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3151:3322   */\n      jump\t// out\n        /* \"#utility.yul\":3327:3716   */\n    tag_76:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":3470:3472   */\n      0x60\n        /* \"#utility.yul\":3458:3467   */\n      dup5\n        /* \"#utility.yul\":3449:3456   */\n      dup7\n        /* \"#utility.yul\":3445:3468   */\n      sub\n        /* \"#utility.yul\":3441:3473   */\n      slt\n        /* \"#utility.yul\":3438:3440   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":3491:3497   */\n      dup3\n        /* \"#utility.yul\":3483:3489   */\n      dup4\n        /* \"#utility.yul\":3476:3498   */\n      revert\n        /* \"#utility.yul\":3438:3440   */\n    tag_547:\n        /* \"#utility.yul\":3532:3541   */\n      dup4\n        /* \"#utility.yul\":3519:3542   */\n      calldataload\n        /* \"#utility.yul\":3509:3542   */\n      swap3\n      pop\n        /* \"#utility.yul\":3589:3591   */\n      0x20\n        /* \"#utility.yul\":3578:3587   */\n      dup5\n        /* \"#utility.yul\":3574:3592   */\n      add\n        /* \"#utility.yul\":3561:3593   */\n      calldataload\n        /* \"#utility.yul\":3551:3593   */\n      swap2\n      pop\n        /* \"#utility.yul\":3643:3645   */\n      0x40\n        /* \"#utility.yul\":3632:3641   */\n      dup5\n        /* \"#utility.yul\":3628:3646   */\n      add\n        /* \"#utility.yul\":3615:3647   */\n      calldataload\n        /* \"#utility.yul\":3656:3686   */\n      tag_548\n        /* \"#utility.yul\":3680:3685   */\n      dup2\n        /* \"#utility.yul\":3656:3686   */\n      tag_536\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":3705:3710   */\n      dup1\n        /* \"#utility.yul\":3695:3710   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3428:3716   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3721:4326   */\n    tag_119:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":3901:3903   */\n      0x60\n        /* \"#utility.yul\":3889:3898   */\n      dup6\n        /* \"#utility.yul\":3880:3887   */\n      dup8\n        /* \"#utility.yul\":3876:3899   */\n      sub\n        /* \"#utility.yul\":3872:3904   */\n      slt\n        /* \"#utility.yul\":3869:3871   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":3922:3928   */\n      dup4\n        /* \"#utility.yul\":3914:3920   */\n      dup5\n        /* \"#utility.yul\":3907:3929   */\n      revert\n        /* \"#utility.yul\":3869:3871   */\n    tag_550:\n        /* \"#utility.yul\":3963:3972   */\n      dup5\n        /* \"#utility.yul\":3950:3973   */\n      calldataload\n        /* \"#utility.yul\":3940:3973   */\n      swap4\n      pop\n        /* \"#utility.yul\":3992:4031   */\n      tag_551\n        /* \"#utility.yul\":4027:4029   */\n      0x20\n        /* \"#utility.yul\":4016:4025   */\n      dup7\n        /* \"#utility.yul\":4012:4030   */\n      add\n        /* \"#utility.yul\":3992:4031   */\n      tag_516\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":3982:4031   */\n      swap3\n      pop\n        /* \"#utility.yul\":4082:4084   */\n      0x40\n        /* \"#utility.yul\":4071:4080   */\n      dup6\n        /* \"#utility.yul\":4067:4085   */\n      add\n        /* \"#utility.yul\":4054:4086   */\n      calldataload\n        /* \"#utility.yul\":4109:4127   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4101:4107   */\n      dup2\n        /* \"#utility.yul\":4098:4128   */\n      gt\n        /* \"#utility.yul\":4095:4097   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":4146:4152   */\n      dup3\n        /* \"#utility.yul\":4138:4144   */\n      dup4\n        /* \"#utility.yul\":4131:4153   */\n      revert\n        /* \"#utility.yul\":4095:4097   */\n    tag_552:\n        /* \"#utility.yul\":4190:4266   */\n      tag_553\n        /* \"#utility.yul\":4258:4265   */\n      dup8\n        /* \"#utility.yul\":4249:4255   */\n      dup3\n        /* \"#utility.yul\":4238:4247   */\n      dup9\n        /* \"#utility.yul\":4234:4256   */\n      add\n        /* \"#utility.yul\":4190:4266   */\n      tag_511\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":3859:4326   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n        /* \"#utility.yul\":4285:4293   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3859:4326   */\n      jump\t// out\n        /* \"#utility.yul\":4331:5011   */\n    tag_124:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":4527:4530   */\n      0x80\n        /* \"#utility.yul\":4515:4524   */\n      dup7\n        /* \"#utility.yul\":4506:4513   */\n      dup9\n        /* \"#utility.yul\":4502:4525   */\n      sub\n        /* \"#utility.yul\":4498:4531   */\n      slt\n        /* \"#utility.yul\":4495:4497   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":4549:4555   */\n      dup1\n        /* \"#utility.yul\":4541:4547   */\n      dup2\n        /* \"#utility.yul\":4534:4556   */\n      revert\n        /* \"#utility.yul\":4495:4497   */\n    tag_555:\n        /* \"#utility.yul\":4590:4599   */\n      dup6\n        /* \"#utility.yul\":4577:4600   */\n      calldataload\n        /* \"#utility.yul\":4567:4600   */\n      swap5\n      pop\n        /* \"#utility.yul\":4619:4658   */\n      tag_525\n        /* \"#utility.yul\":4654:4656   */\n      0x20\n        /* \"#utility.yul\":4643:4652   */\n      dup8\n        /* \"#utility.yul\":4639:4657   */\n      add\n        /* \"#utility.yul\":4619:4658   */\n      tag_516\n      jump\t// in\n        /* \"#utility.yul\":5016:5459   */\n    tag_560:\n      0x00\n        /* \"#utility.yul\":5113:5118   */\n      dup2\n        /* \"#utility.yul\":5107:5119   */\n      mload\n        /* \"#utility.yul\":5140:5146   */\n      dup1\n        /* \"#utility.yul\":5135:5138   */\n      dup5\n        /* \"#utility.yul\":5128:5147   */\n      mstore\n        /* \"#utility.yul\":5166:5170   */\n      0x20\n        /* \"#utility.yul\":5195:5197   */\n      dup1\n        /* \"#utility.yul\":5190:5193   */\n      dup6\n        /* \"#utility.yul\":5186:5198   */\n      add\n        /* \"#utility.yul\":5179:5198   */\n      swap5\n      pop\n        /* \"#utility.yul\":5232:5234   */\n      dup1\n        /* \"#utility.yul\":5225:5230   */\n      dup5\n        /* \"#utility.yul\":5221:5235   */\n      add\n        /* \"#utility.yul\":5253:5256   */\n      dup4\n        /* \"#utility.yul\":5265:5434   */\n    tag_562:\n        /* \"#utility.yul\":5279:5285   */\n      dup4\n        /* \"#utility.yul\":5276:5277   */\n      dup2\n        /* \"#utility.yul\":5273:5286   */\n      lt\n        /* \"#utility.yul\":5265:5434   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":5340:5353   */\n      dup2\n      mload\n        /* \"#utility.yul\":5328:5354   */\n      dup8\n      mstore\n        /* \"#utility.yul\":5374:5386   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":5409:5424   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5301:5302   */\n      0x01\n        /* \"#utility.yul\":5294:5303   */\n      add\n        /* \"#utility.yul\":5265:5434   */\n      jump(tag_562)\n    tag_564:\n      pop\n        /* \"#utility.yul\":5450:5453   */\n      swap5\n      swap6\n        /* \"#utility.yul\":5083:5459   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5464:5738   */\n    tag_489:\n      0x00\n        /* \"#utility.yul\":5631:5637   */\n      dup3\n        /* \"#utility.yul\":5625:5638   */\n      mload\n        /* \"#utility.yul\":5647:5700   */\n      tag_566\n        /* \"#utility.yul\":5693:5699   */\n      dup2\n        /* \"#utility.yul\":5688:5691   */\n      dup5\n        /* \"#utility.yul\":5681:5685   */\n      0x20\n        /* \"#utility.yul\":5673:5679   */\n      dup8\n        /* \"#utility.yul\":5669:5686   */\n      add\n        /* \"#utility.yul\":5647:5700   */\n      tag_567\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":5716:5732   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":5601:5738   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5743:5948   */\n    tag_356:\n        /* \"#utility.yul\":5943:5946   */\n      swap1\n        /* \"#utility.yul\":5934:5948   */\n      jump\t// out\n        /* \"#utility.yul\":5953:6156   */\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6117:6149   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":6099:6150   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6087:6089   */\n      0x20\n        /* \"#utility.yul\":6072:6090   */\n      add\n      swap1\n        /* \"#utility.yul\":6054:6156   */\n      jump\t// out\n        /* \"#utility.yul\":6161:6465   */\n    tag_271:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6391:6406   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":6373:6407   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6443:6458   */\n      swap2\n      and\n        /* \"#utility.yul\":6438:6440   */\n      0x20\n        /* \"#utility.yul\":6423:6441   */\n      dup3\n      add\n        /* \"#utility.yul\":6416:6459   */\n      mstore\n        /* \"#utility.yul\":6323:6325   */\n      0x40\n        /* \"#utility.yul\":6308:6326   */\n      add\n      swap1\n        /* \"#utility.yul\":6290:6465   */\n      jump\t// out\n        /* \"#utility.yul\":6470:6845   */\n    tag_431:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6728:6743   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":6710:6744   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6780:6795   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":6775:6777   */\n      0x20\n        /* \"#utility.yul\":6760:6778   */\n      dup3\n      add\n        /* \"#utility.yul\":6753:6796   */\n      mstore\n        /* \"#utility.yul\":6827:6829   */\n      0x40\n        /* \"#utility.yul\":6812:6830   */\n      dup2\n      add\n        /* \"#utility.yul\":6805:6839   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6660:6662   */\n      0x60\n        /* \"#utility.yul\":6645:6663   */\n      add\n      swap1\n        /* \"#utility.yul\":6627:6845   */\n      jump\t// out\n        /* \"#utility.yul\":6850:7124   */\n    tag_401:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7042:7074   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":7024:7075   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7106:7108   */\n      0x20\n        /* \"#utility.yul\":7091:7109   */\n      dup3\n      add\n        /* \"#utility.yul\":7084:7118   */\n      mstore\n        /* \"#utility.yul\":7012:7014   */\n      0x40\n        /* \"#utility.yul\":6997:7015   */\n      add\n      swap1\n        /* \"#utility.yul\":6979:7124   */\n      jump\t// out\n        /* \"#utility.yul\":7129:7790   */\n    tag_130:\n        /* \"#utility.yul\":7300:7302   */\n      0x20\n        /* \"#utility.yul\":7352:7373   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7422:7435   */\n      dup3\n      mload\n        /* \"#utility.yul\":7325:7343   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":7444:7466   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7129:7790   */\n      0x00\n      swap2\n        /* \"#utility.yul\":7300:7302   */\n      swap1\n        /* \"#utility.yul\":7523:7538   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":7497:7499   */\n      0x40\n        /* \"#utility.yul\":7482:7500   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":7129:7790   */\n      dup5\n        /* \"#utility.yul\":7569:7764   */\n    tag_574:\n        /* \"#utility.yul\":7583:7589   */\n      dup2\n        /* \"#utility.yul\":7580:7581   */\n      dup2\n        /* \"#utility.yul\":7577:7590   */\n      lt\n        /* \"#utility.yul\":7569:7764   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":7648:7661   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7644:7683   */\n      and\n        /* \"#utility.yul\":7632:7684   */\n      dup4\n      mstore\n        /* \"#utility.yul\":7739:7754   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":7704:7716   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":7680:7681   */\n      0x01\n        /* \"#utility.yul\":7598:7607   */\n      add\n        /* \"#utility.yul\":7569:7764   */\n      jump(tag_574)\n    tag_576:\n      pop\n        /* \"#utility.yul\":7781:7784   */\n      swap1\n      swap7\n        /* \"#utility.yul\":7280:7790   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7795:8291   */\n    tag_194:\n        /* \"#utility.yul\":7984:7986   */\n      0x20\n        /* \"#utility.yul\":7966:7987   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8003:8021   */\n      dup2\n      add\n        /* \"#utility.yul\":7996:8030   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":7795:8291   */\n      0x00\n      sub(shl(0xfb, 0x01), 0x01)\n        /* \"#utility.yul\":8042:8073   */\n      dup4\n      gt\n        /* \"#utility.yul\":8039:8041   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":8089:8093   */\n      dup1\n        /* \"#utility.yul\":8083:8087   */\n      dup2\n        /* \"#utility.yul\":8076:8094   */\n      revert\n        /* \"#utility.yul\":8039:8041   */\n    tag_578:\n        /* \"#utility.yul\":8131:8133   */\n      0x20\n        /* \"#utility.yul\":8123:8129   */\n      dup4\n        /* \"#utility.yul\":8119:8134   */\n      mul\n        /* \"#utility.yul\":8184:8190   */\n      dup1\n        /* \"#utility.yul\":8176:8182   */\n      dup6\n        /* \"#utility.yul\":8171:8173   */\n      0x40\n        /* \"#utility.yul\":8160:8169   */\n      dup6\n        /* \"#utility.yul\":8156:8174   */\n      add\n        /* \"#utility.yul\":8143:8191   */\n      calldatacopy\n        /* \"#utility.yul\":8214:8236   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":8238:8240   */\n      0x40\n        /* \"#utility.yul\":8210:8241   */\n      add\n        /* \"#utility.yul\":8250:8266   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":8210:8241   */\n      swap3\n        /* \"#utility.yul\":7956:8291   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8296:8563   */\n    tag_140:\n      0x00\n        /* \"#utility.yul\":8475:8477   */\n      0x20\n        /* \"#utility.yul\":8464:8473   */\n      dup3\n        /* \"#utility.yul\":8457:8478   */\n      mstore\n        /* \"#utility.yul\":8495:8557   */\n      tag_403\n        /* \"#utility.yul\":8553:8555   */\n      0x20\n        /* \"#utility.yul\":8542:8551   */\n      dup4\n        /* \"#utility.yul\":8538:8556   */\n      add\n        /* \"#utility.yul\":8530:8536   */\n      dup5\n        /* \"#utility.yul\":8495:8557   */\n      tag_560\n      jump\t// in\n        /* \"#utility.yul\":8568:8755   */\n    tag_50:\n        /* \"#utility.yul\":8733:8747   */\n      swap1\n      iszero\n        /* \"#utility.yul\":8726:8748   */\n      iszero\n        /* \"#utility.yul\":8708:8749   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8696:8698   */\n      0x20\n        /* \"#utility.yul\":8681:8699   */\n      add\n      swap1\n        /* \"#utility.yul\":8663:8755   */\n      jump\t// out\n        /* \"#utility.yul\":9392:9775   */\n    tag_506:\n      0x00\n        /* \"#utility.yul\":9541:9543   */\n      0x20\n        /* \"#utility.yul\":9530:9539   */\n      dup3\n        /* \"#utility.yul\":9523:9544   */\n      mstore\n        /* \"#utility.yul\":9573:9579   */\n      dup3\n        /* \"#utility.yul\":9567:9580   */\n      mload\n        /* \"#utility.yul\":9616:9622   */\n      dup1\n        /* \"#utility.yul\":9611:9613   */\n      0x20\n        /* \"#utility.yul\":9600:9609   */\n      dup5\n        /* \"#utility.yul\":9596:9614   */\n      add\n        /* \"#utility.yul\":9589:9623   */\n      mstore\n        /* \"#utility.yul\":9632:9698   */\n      tag_585\n        /* \"#utility.yul\":9691:9697   */\n      dup2\n        /* \"#utility.yul\":9686:9688   */\n      0x40\n        /* \"#utility.yul\":9675:9684   */\n      dup6\n        /* \"#utility.yul\":9671:9689   */\n      add\n        /* \"#utility.yul\":9666:9668   */\n      0x20\n        /* \"#utility.yul\":9658:9664   */\n      dup8\n        /* \"#utility.yul\":9654:9669   */\n      add\n        /* \"#utility.yul\":9632:9698   */\n      tag_567\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":9759:9761   */\n      0x1f\n        /* \"#utility.yul\":9738:9753   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":9734:9763   */\n      and\n        /* \"#utility.yul\":9719:9764   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":9766:9768   */\n      0x40\n        /* \"#utility.yul\":9715:9769   */\n      add\n      swap3\n        /* \"#utility.yul\":9513:9775   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9780:10128   */\n    tag_181:\n        /* \"#utility.yul\":9982:9984   */\n      0x20\n        /* \"#utility.yul\":9964:9985   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10021:10023   */\n      0x18\n        /* \"#utility.yul\":10001:10019   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9994:10024   */\n      mstore\n        /* \"#utility.yul\":10060:10086   */\n      0x6164643a20696e76616c6964207374616b6520746f6b656e0000000000000000\n        /* \"#utility.yul\":10055:10057   */\n      0x40\n        /* \"#utility.yul\":10040:10058   */\n      dup3\n      add\n        /* \"#utility.yul\":10033:10087   */\n      mstore\n        /* \"#utility.yul\":10119:10121   */\n      0x60\n        /* \"#utility.yul\":10104:10122   */\n      add\n      swap1\n        /* \"#utility.yul\":9954:10128   */\n      jump\t// out\n        /* \"#utility.yul\":10133:10478   */\n    tag_339:\n        /* \"#utility.yul\":10335:10337   */\n      0x20\n        /* \"#utility.yul\":10317:10338   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10374:10376   */\n      0x15\n        /* \"#utility.yul\":10354:10372   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10347:10377   */\n      mstore\n      shl(0x58, 0x72656e65773a20696e76616c696420626c6f636b73)\n        /* \"#utility.yul\":10408:10410   */\n      0x40\n        /* \"#utility.yul\":10393:10411   */\n      dup3\n      add\n        /* \"#utility.yul\":10386:10437   */\n      mstore\n        /* \"#utility.yul\":10469:10471   */\n      0x60\n        /* \"#utility.yul\":10454:10472   */\n      add\n      swap1\n        /* \"#utility.yul\":10307:10478   */\n      jump\t// out\n        /* \"#utility.yul\":10483:10829   */\n    tag_314:\n        /* \"#utility.yul\":10685:10687   */\n      0x20\n        /* \"#utility.yul\":10667:10688   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10724:10726   */\n      0x16\n        /* \"#utility.yul\":10704:10722   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10697:10727   */\n      mstore\n      shl(0x53, 0x0eae0c8c2e8ca7440d2dcecc2d8d2c840d8cadccee8d)\n        /* \"#utility.yul\":10758:10760   */\n      0x40\n        /* \"#utility.yul\":10743:10761   */\n      dup3\n      add\n        /* \"#utility.yul\":10736:10788   */\n      mstore\n        /* \"#utility.yul\":10820:10822   */\n      0x60\n        /* \"#utility.yul\":10805:10823   */\n      add\n      swap1\n        /* \"#utility.yul\":10657:10829   */\n      jump\t// out\n        /* \"#utility.yul\":10834:11173   */\n    tag_291:\n        /* \"#utility.yul\":11036:11038   */\n      0x20\n        /* \"#utility.yul\":11018:11039   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11075:11077   */\n      0x0f\n        /* \"#utility.yul\":11055:11073   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11048:11078   */\n      mstore\n      shl(0x8a, 0x1a5b9d985b1a59081c1bdbdb081a59)\n        /* \"#utility.yul\":11109:11111   */\n      0x40\n        /* \"#utility.yul\":11094:11112   */\n      dup3\n      add\n        /* \"#utility.yul\":11087:11132   */\n      mstore\n        /* \"#utility.yul\":11164:11166   */\n      0x60\n        /* \"#utility.yul\":11149:11167   */\n      add\n      swap1\n        /* \"#utility.yul\":11008:11173   */\n      jump\t// out\n        /* \"#utility.yul\":11178:11529   */\n    tag_435:\n        /* \"#utility.yul\":11380:11382   */\n      0x20\n        /* \"#utility.yul\":11362:11383   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11419:11421   */\n      0x1b\n        /* \"#utility.yul\":11399:11417   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11392:11422   */\n      mstore\n        /* \"#utility.yul\":11458:11487   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":11453:11455   */\n      0x40\n        /* \"#utility.yul\":11438:11456   */\n      dup3\n      add\n        /* \"#utility.yul\":11431:11488   */\n      mstore\n        /* \"#utility.yul\":11520:11522   */\n      0x60\n        /* \"#utility.yul\":11505:11523   */\n      add\n      swap1\n        /* \"#utility.yul\":11352:11529   */\n      jump\t// out\n        /* \"#utility.yul\":11534:11877   */\n    tag_184:\n        /* \"#utility.yul\":11736:11738   */\n      0x20\n        /* \"#utility.yul\":11718:11739   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11775:11777   */\n      0x13\n        /* \"#utility.yul\":11755:11773   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11748:11778   */\n      mstore\n      shl(0x6b, 0x0c2c8c87440d2dcecc2d8d2c840d8cadccee8d)\n        /* \"#utility.yul\":11809:11811   */\n      0x40\n        /* \"#utility.yul\":11794:11812   */\n      dup3\n      add\n        /* \"#utility.yul\":11787:11836   */\n      mstore\n        /* \"#utility.yul\":11868:11870   */\n      0x60\n        /* \"#utility.yul\":11853:11871   */\n      add\n      swap1\n        /* \"#utility.yul\":11708:11877   */\n      jump\t// out\n        /* \"#utility.yul\":11882:12216   */\n    tag_174:\n        /* \"#utility.yul\":12084:12086   */\n      0x20\n        /* \"#utility.yul\":12066:12087   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12123:12125   */\n      0x0a\n        /* \"#utility.yul\":12103:12121   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12096:12126   */\n      mstore\n      shl(0xb1, 0x37b7363c9030b236b4b7)\n        /* \"#utility.yul\":12157:12159   */\n      0x40\n        /* \"#utility.yul\":12142:12160   */\n      dup3\n      add\n        /* \"#utility.yul\":12135:12175   */\n      mstore\n        /* \"#utility.yul\":12207:12209   */\n      0x60\n        /* \"#utility.yul\":12192:12210   */\n      add\n      swap1\n        /* \"#utility.yul\":12056:12216   */\n      jump\t// out\n        /* \"#utility.yul\":12221:12575   */\n    tag_457:\n        /* \"#utility.yul\":12423:12425   */\n      0x20\n        /* \"#utility.yul\":12405:12426   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12462:12464   */\n      0x1e\n        /* \"#utility.yul\":12442:12460   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12435:12465   */\n      mstore\n        /* \"#utility.yul\":12501:12533   */\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n        /* \"#utility.yul\":12496:12498   */\n      0x40\n        /* \"#utility.yul\":12481:12499   */\n      dup3\n      add\n        /* \"#utility.yul\":12474:12534   */\n      mstore\n        /* \"#utility.yul\":12566:12568   */\n      0x60\n        /* \"#utility.yul\":12551:12569   */\n      add\n      swap1\n        /* \"#utility.yul\":12395:12575   */\n      jump\t// out\n        /* \"#utility.yul\":12580:12982   */\n    tag_482:\n        /* \"#utility.yul\":12782:12784   */\n      0x20\n        /* \"#utility.yul\":12764:12785   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12821:12823   */\n      0x26\n        /* \"#utility.yul\":12801:12819   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12794:12824   */\n      mstore\n        /* \"#utility.yul\":12860:12894   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":12855:12857   */\n      0x40\n        /* \"#utility.yul\":12840:12858   */\n      dup3\n      add\n        /* \"#utility.yul\":12833:12895   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":12926:12928   */\n      0x60\n        /* \"#utility.yul\":12911:12929   */\n      dup3\n      add\n        /* \"#utility.yul\":12904:12940   */\n      mstore\n        /* \"#utility.yul\":12972:12975   */\n      0x80\n        /* \"#utility.yul\":12957:12976   */\n      add\n      swap1\n        /* \"#utility.yul\":12754:12982   */\n      jump\t// out\n        /* \"#utility.yul\":12987:13332   */\n    tag_335:\n        /* \"#utility.yul\":13189:13191   */\n      0x20\n        /* \"#utility.yul\":13171:13192   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13228:13230   */\n      0x15\n        /* \"#utility.yul\":13208:13226   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13201:13231   */\n      mstore\n      shl(0x5b, 0x0e4cadccaee7440d2dcecc2d8d2c840d8cadccee8d)\n        /* \"#utility.yul\":13262:13264   */\n      0x40\n        /* \"#utility.yul\":13247:13265   */\n      dup3\n      add\n        /* \"#utility.yul\":13240:13291   */\n      mstore\n        /* \"#utility.yul\":13323:13325   */\n      0x60\n        /* \"#utility.yul\":13308:13326   */\n      add\n      swap1\n        /* \"#utility.yul\":13161:13332   */\n      jump\t// out\n        /* \"#utility.yul\":13337:13690   */\n    tag_439:\n        /* \"#utility.yul\":13539:13541   */\n      0x20\n        /* \"#utility.yul\":13521:13542   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13578:13580   */\n      0x1d\n        /* \"#utility.yul\":13558:13576   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13551:13581   */\n      mstore\n        /* \"#utility.yul\":13617:13648   */\n      0x77697468647261773a20696e73756666696369656e7420616d6f756e74000000\n        /* \"#utility.yul\":13612:13614   */\n      0x40\n        /* \"#utility.yul\":13597:13615   */\n      dup3\n      add\n        /* \"#utility.yul\":13590:13649   */\n      mstore\n        /* \"#utility.yul\":13681:13683   */\n      0x60\n        /* \"#utility.yul\":13666:13684   */\n      add\n      swap1\n        /* \"#utility.yul\":13511:13690   */\n      jump\t// out\n        /* \"#utility.yul\":13695:14044   */\n    tag_318:\n        /* \"#utility.yul\":13897:13899   */\n      0x20\n        /* \"#utility.yul\":13879:13900   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13936:13938   */\n      0x19\n        /* \"#utility.yul\":13916:13934   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13909:13939   */\n      mstore\n        /* \"#utility.yul\":13975:14002   */\n      0x7570646174653a20696e76616c696420656e6420626c6f636b00000000000000\n        /* \"#utility.yul\":13970:13972   */\n      0x40\n        /* \"#utility.yul\":13955:13973   */\n      dup3\n      add\n        /* \"#utility.yul\":13948:14003   */\n      mstore\n        /* \"#utility.yul\":14035:14037   */\n      0x60\n        /* \"#utility.yul\":14020:14038   */\n      add\n      swap1\n        /* \"#utility.yul\":13869:14044   */\n      jump\t// out\n        /* \"#utility.yul\":14049:14446   */\n    tag_470:\n        /* \"#utility.yul\":14251:14253   */\n      0x20\n        /* \"#utility.yul\":14233:14254   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14290:14292   */\n      0x21\n        /* \"#utility.yul\":14270:14288   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14263:14293   */\n      mstore\n        /* \"#utility.yul\":14329:14363   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":14324:14326   */\n      0x40\n        /* \"#utility.yul\":14309:14327   */\n      dup3\n      add\n        /* \"#utility.yul\":14302:14364   */\n      mstore\n      shl(0xf8, 0x77)\n        /* \"#utility.yul\":14395:14397   */\n      0x60\n        /* \"#utility.yul\":14380:14398   */\n      dup3\n      add\n        /* \"#utility.yul\":14373:14404   */\n      mstore\n        /* \"#utility.yul\":14436:14439   */\n      0x80\n        /* \"#utility.yul\":14421:14440   */\n      add\n      swap1\n        /* \"#utility.yul\":14223:14446   */\n      jump\t// out\n        /* \"#utility.yul\":14451:14803   */\n    tag_362:\n        /* \"#utility.yul\":14653:14655   */\n      0x20\n        /* \"#utility.yul\":14635:14656   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14692:14694   */\n      0x1c\n        /* \"#utility.yul\":14672:14690   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14665:14695   */\n      mstore\n        /* \"#utility.yul\":14731:14761   */\n      0x7472616e736665722072657761726420746f6b656e206661696c656400000000\n        /* \"#utility.yul\":14726:14728   */\n      0x40\n        /* \"#utility.yul\":14711:14729   */\n      dup3\n      add\n        /* \"#utility.yul\":14704:14762   */\n      mstore\n        /* \"#utility.yul\":14794:14796   */\n      0x60\n        /* \"#utility.yul\":14779:14797   */\n      add\n      swap1\n        /* \"#utility.yul\":14625:14803   */\n      jump\t// out\n        /* \"#utility.yul\":14808:15143   */\n    tag_269:\n        /* \"#utility.yul\":15010:15012   */\n      0x20\n        /* \"#utility.yul\":14992:15013   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15049:15051   */\n      0x0b\n        /* \"#utility.yul\":15029:15047   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15022:15052   */\n      mstore\n      shl(0xa8, 0x6e6f742070656e64696e67)\n        /* \"#utility.yul\":15083:15085   */\n      0x40\n        /* \"#utility.yul\":15068:15086   */\n      dup3\n      add\n        /* \"#utility.yul\":15061:15102   */\n      mstore\n        /* \"#utility.yul\":15134:15136   */\n      0x60\n        /* \"#utility.yul\":15119:15137   */\n      add\n      swap1\n        /* \"#utility.yul\":14982:15143   */\n      jump\t// out\n        /* \"#utility.yul\":15148:15478   */\n    tag_278:\n        /* \"#utility.yul\":15350:15352   */\n      0x20\n        /* \"#utility.yul\":15332:15353   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15389:15390   */\n      0x07\n        /* \"#utility.yul\":15369:15387   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15362:15391   */\n      mstore\n      shl(0xcc, 0x061646d696e203)\n        /* \"#utility.yul\":15422:15424   */\n      0x40\n        /* \"#utility.yul\":15407:15425   */\n      dup3\n      add\n        /* \"#utility.yul\":15400:15437   */\n      mstore\n        /* \"#utility.yul\":15469:15471   */\n      0x60\n        /* \"#utility.yul\":15454:15472   */\n      add\n      swap1\n        /* \"#utility.yul\":15322:15478   */\n      jump\t// out\n        /* \"#utility.yul\":15483:15827   */\n    tag_178:\n        /* \"#utility.yul\":15685:15687   */\n      0x20\n        /* \"#utility.yul\":15667:15688   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15724:15726   */\n      0x14\n        /* \"#utility.yul\":15704:15722   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15697:15727   */\n      mstore\n      shl(0x62, 0x1859190e88191d5c1b1a58d85d1959081c1bdbdb)\n        /* \"#utility.yul\":15758:15760   */\n      0x40\n        /* \"#utility.yul\":15743:15761   */\n      dup3\n      add\n        /* \"#utility.yul\":15736:15786   */\n      mstore\n        /* \"#utility.yul\":15818:15820   */\n      0x60\n        /* \"#utility.yul\":15803:15821   */\n      add\n      swap1\n        /* \"#utility.yul\":15657:15827   */\n      jump\t// out\n        /* \"#utility.yul\":15832:16230   */\n    tag_332:\n        /* \"#utility.yul\":16034:16036   */\n      0x20\n        /* \"#utility.yul\":16016:16037   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16073:16075   */\n      0x22\n        /* \"#utility.yul\":16053:16071   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16046:16076   */\n      mstore\n        /* \"#utility.yul\":16112:16146   */\n      0x72656e65773a20696e76616c696420706f6f6c20737461746520746f2072656e\n        /* \"#utility.yul\":16107:16109   */\n      0x40\n        /* \"#utility.yul\":16092:16110   */\n      dup3\n      add\n        /* \"#utility.yul\":16085:16147   */\n      mstore\n      shl(0xf0, 0x6577)\n        /* \"#utility.yul\":16178:16180   */\n      0x60\n        /* \"#utility.yul\":16163:16181   */\n      dup3\n      add\n        /* \"#utility.yul\":16156:16188   */\n      mstore\n        /* \"#utility.yul\":16220:16223   */\n      0x80\n        /* \"#utility.yul\":16205:16224   */\n      add\n      swap1\n        /* \"#utility.yul\":16006:16230   */\n      jump\t// out\n        /* \"#utility.yul\":16235:16585   */\n    tag_311:\n        /* \"#utility.yul\":16437:16439   */\n      0x20\n        /* \"#utility.yul\":16419:16440   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16476:16478   */\n      0x1a\n        /* \"#utility.yul\":16456:16474   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16449:16479   */\n      mstore\n        /* \"#utility.yul\":16515:16543   */\n      0x7570646174653a20706f6f6c20616c726561647920656e646564000000000000\n        /* \"#utility.yul\":16510:16512   */\n      0x40\n        /* \"#utility.yul\":16495:16513   */\n      dup3\n      add\n        /* \"#utility.yul\":16488:16544   */\n      mstore\n        /* \"#utility.yul\":16576:16578   */\n      0x60\n        /* \"#utility.yul\":16561:16579   */\n      add\n      swap1\n        /* \"#utility.yul\":16409:16585   */\n      jump\t// out\n        /* \"#utility.yul\":16590:16992   */\n    tag_498:\n        /* \"#utility.yul\":16792:16794   */\n      0x20\n        /* \"#utility.yul\":16774:16795   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16831:16833   */\n      0x26\n        /* \"#utility.yul\":16811:16829   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16804:16834   */\n      mstore\n        /* \"#utility.yul\":16870:16904   */\n      0x53616665436173743a2076616c756520646f65736e27742066697420696e2033\n        /* \"#utility.yul\":16865:16867   */\n      0x40\n        /* \"#utility.yul\":16850:16868   */\n      dup3\n      add\n        /* \"#utility.yul\":16843:16905   */\n      mstore\n      shl(0xd0, 0x322062697473)\n        /* \"#utility.yul\":16936:16938   */\n      0x60\n        /* \"#utility.yul\":16921:16939   */\n      dup3\n      add\n        /* \"#utility.yul\":16914:16950   */\n      mstore\n        /* \"#utility.yul\":16982:16985   */\n      0x80\n        /* \"#utility.yul\":16967:16986   */\n      add\n      swap1\n        /* \"#utility.yul\":16764:16992   */\n      jump\t// out\n        /* \"#utility.yul\":16997:17350   */\n    tag_487:\n        /* \"#utility.yul\":17199:17201   */\n      0x20\n        /* \"#utility.yul\":17181:17202   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17238:17240   */\n      0x1d\n        /* \"#utility.yul\":17218:17236   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17211:17241   */\n      mstore\n        /* \"#utility.yul\":17277:17308   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":17272:17274   */\n      0x40\n        /* \"#utility.yul\":17257:17275   */\n      dup3\n      add\n        /* \"#utility.yul\":17250:17309   */\n      mstore\n        /* \"#utility.yul\":17341:17343   */\n      0x60\n        /* \"#utility.yul\":17326:17344   */\n      add\n      swap1\n        /* \"#utility.yul\":17171:17350   */\n      jump\t// out\n        /* \"#utility.yul\":17355:17698   */\n    tag_188:\n        /* \"#utility.yul\":17557:17559   */\n      0x20\n        /* \"#utility.yul\":17539:17560   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17596:17598   */\n      0x13\n        /* \"#utility.yul\":17576:17594   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17569:17599   */\n      mstore\n      shl(0x68, 0x6164643a20696e76616c696420626c6f636b73)\n        /* \"#utility.yul\":17630:17632   */\n      0x40\n        /* \"#utility.yul\":17615:17633   */\n      dup3\n      add\n        /* \"#utility.yul\":17608:17657   */\n      mstore\n        /* \"#utility.yul\":17689:17691   */\n      0x60\n        /* \"#utility.yul\":17674:17692   */\n      add\n      swap1\n        /* \"#utility.yul\":17529:17698   */\n      jump\t// out\n        /* \"#utility.yul\":17703:18038   */\n    tag_264:\n        /* \"#utility.yul\":17905:17907   */\n      0x20\n        /* \"#utility.yul\":17887:17908   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17944:17946   */\n      0x0b\n        /* \"#utility.yul\":17924:17942   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17917:17947   */\n      mstore\n      shl(0xac, 0x06e65772061646d696e203)\n        /* \"#utility.yul\":17978:17980   */\n      0x40\n        /* \"#utility.yul\":17963:17981   */\n      dup3\n      add\n        /* \"#utility.yul\":17956:17997   */\n      mstore\n        /* \"#utility.yul\":18029:18031   */\n      0x60\n        /* \"#utility.yul\":18014:18032   */\n      add\n      swap1\n        /* \"#utility.yul\":17877:18038   */\n      jump\t// out\n        /* \"#utility.yul\":18043:18449   */\n    tag_478:\n        /* \"#utility.yul\":18245:18247   */\n      0x20\n        /* \"#utility.yul\":18227:18248   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":18284:18286   */\n      0x2a\n        /* \"#utility.yul\":18264:18282   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":18257:18287   */\n      mstore\n        /* \"#utility.yul\":18323:18357   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":18318:18320   */\n      0x40\n        /* \"#utility.yul\":18303:18321   */\n      dup3\n      add\n        /* \"#utility.yul\":18296:18358   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":18389:18391   */\n      0x60\n        /* \"#utility.yul\":18374:18392   */\n      dup3\n      add\n        /* \"#utility.yul\":18367:18407   */\n      mstore\n        /* \"#utility.yul\":18439:18442   */\n      0x80\n        /* \"#utility.yul\":18424:18443   */\n      add\n      swap1\n        /* \"#utility.yul\":18217:18449   */\n      jump\t// out\n        /* \"#utility.yul\":18454:18809   */\n    tag_198:\n        /* \"#utility.yul\":18656:18658   */\n      0x20\n        /* \"#utility.yul\":18638:18659   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":18695:18697   */\n      0x1f\n        /* \"#utility.yul\":18675:18693   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":18668:18698   */\n      mstore\n        /* \"#utility.yul\":18734:18767   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":18729:18731   */\n      0x40\n        /* \"#utility.yul\":18714:18732   */\n      dup3\n      add\n        /* \"#utility.yul\":18707:18768   */\n      mstore\n        /* \"#utility.yul\":18800:18802   */\n      0x60\n        /* \"#utility.yul\":18785:18803   */\n      add\n      swap1\n        /* \"#utility.yul\":18628:18809   */\n      jump\t// out\n        /* \"#utility.yul\":18814:19232   */\n    tag_398:\n        /* \"#utility.yul\":19016:19018   */\n      0x20\n        /* \"#utility.yul\":18998:19019   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":19055:19057   */\n      0x36\n        /* \"#utility.yul\":19035:19053   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":19028:19058   */\n      mstore\n        /* \"#utility.yul\":19094:19128   */\n      0x5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f\n        /* \"#utility.yul\":19089:19091   */\n      0x40\n        /* \"#utility.yul\":19074:19092   */\n      dup3\n      add\n        /* \"#utility.yul\":19067:19129   */\n      mstore\n      shl(0x50, 0x20746f206e6f6e2d7a65726f20616c6c6f77616e6365)\n        /* \"#utility.yul\":19160:19162   */\n      0x60\n        /* \"#utility.yul\":19145:19163   */\n      dup3\n      add\n        /* \"#utility.yul\":19138:19190   */\n      mstore\n        /* \"#utility.yul\":19222:19225   */\n      0x80\n        /* \"#utility.yul\":19207:19226   */\n      add\n      swap1\n        /* \"#utility.yul\":18988:19232   */\n      jump\t// out\n        /* \"#utility.yul\":19237:19414   */\n    tag_36:\n        /* \"#utility.yul\":19383:19408   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":19371:19373   */\n      0x20\n        /* \"#utility.yul\":19356:19374   */\n      add\n      swap1\n        /* \"#utility.yul\":19338:19414   */\n      jump\t// out\n        /* \"#utility.yul\":19419:20332   */\n    tag_62:\n        /* \"#utility.yul\":19792:19817   */\n      dup8\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":19853:19885   */\n      dup8\n      and\n        /* \"#utility.yul\":19848:19850   */\n      0x20\n        /* \"#utility.yul\":19833:19851   */\n      dup3\n      add\n        /* \"#utility.yul\":19826:19886   */\n      mstore\n        /* \"#utility.yul\":19905:19915   */\n      0xffffffff\n        /* \"#utility.yul\":19951:19966   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":19946:19948   */\n      0x40\n        /* \"#utility.yul\":19931:19949   */\n      dup4\n      add\n        /* \"#utility.yul\":19924:19967   */\n      mstore\n        /* \"#utility.yul\":20003:20018   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":19998:20000   */\n      0x60\n        /* \"#utility.yul\":19983:20001   */\n      dup4\n      add\n        /* \"#utility.yul\":19976:20019   */\n      mstore\n        /* \"#utility.yul\":20056:20071   */\n      dup5\n      and\n        /* \"#utility.yul\":20050:20053   */\n      0x80\n        /* \"#utility.yul\":20035:20054   */\n      dup3\n      add\n        /* \"#utility.yul\":20028:20072   */\n      mstore\n        /* \"#utility.yul\":20109:20112   */\n      0xe0\n        /* \"#utility.yul\":19873:19876   */\n      0xa0\n        /* \"#utility.yul\":20088:20107   */\n      dup3\n      add\n        /* \"#utility.yul\":20081:20113   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":19419:20332   */\n      0x00\n      swap1\n        /* \"#utility.yul\":20136:20199   */\n      tag_614\n      swap1\n        /* \"#utility.yul\":20179:20198   */\n      dup4\n      add\n        /* \"#utility.yul\":20171:20177   */\n      dup6\n        /* \"#utility.yul\":20136:20199   */\n      tag_560\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":20248:20257   */\n      dup3\n        /* \"#utility.yul\":20240:20246   */\n      dup2\n        /* \"#utility.yul\":20236:20258   */\n      sub\n        /* \"#utility.yul\":20230:20233   */\n      0xc0\n        /* \"#utility.yul\":20219:20228   */\n      dup5\n        /* \"#utility.yul\":20215:20234   */\n      add\n        /* \"#utility.yul\":20208:20259   */\n      mstore\n        /* \"#utility.yul\":20276:20326   */\n      tag_615\n        /* \"#utility.yul\":20319:20325   */\n      dup2\n        /* \"#utility.yul\":20311:20317   */\n      dup6\n        /* \"#utility.yul\":20276:20326   */\n      tag_560\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":20268:20326   */\n      swap11\n        /* \"#utility.yul\":19782:20332   */\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20337:20885   */\n    tag_43:\n      0x00\n        /* \"#utility.yul\":20622:20628   */\n      dup5\n        /* \"#utility.yul\":20611:20620   */\n      dup3\n        /* \"#utility.yul\":20604:20629   */\n      mstore\n        /* \"#utility.yul\":20665:20667   */\n      0x60\n        /* \"#utility.yul\":20660:20662   */\n      0x20\n        /* \"#utility.yul\":20649:20658   */\n      dup4\n        /* \"#utility.yul\":20645:20663   */\n      add\n        /* \"#utility.yul\":20638:20668   */\n      mstore\n        /* \"#utility.yul\":20691:20753   */\n      tag_617\n        /* \"#utility.yul\":20749:20751   */\n      0x60\n        /* \"#utility.yul\":20738:20747   */\n      dup4\n        /* \"#utility.yul\":20734:20752   */\n      add\n        /* \"#utility.yul\":20726:20732   */\n      dup6\n        /* \"#utility.yul\":20691:20753   */\n      tag_560\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":20801:20810   */\n      dup3\n        /* \"#utility.yul\":20793:20799   */\n      dup2\n        /* \"#utility.yul\":20789:20811   */\n      sub\n        /* \"#utility.yul\":20784:20786   */\n      0x40\n        /* \"#utility.yul\":20773:20782   */\n      dup5\n        /* \"#utility.yul\":20769:20787   */\n      add\n        /* \"#utility.yul\":20762:20812   */\n      mstore\n        /* \"#utility.yul\":20829:20879   */\n      tag_618\n        /* \"#utility.yul\":20872:20878   */\n      dup2\n        /* \"#utility.yul\":20864:20870   */\n      dup6\n        /* \"#utility.yul\":20829:20879   */\n      tag_560\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":20821:20879   */\n      swap7\n        /* \"#utility.yul\":20594:20885   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20890:21138   */\n    tag_235:\n        /* \"#utility.yul\":21064:21089   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":21120:21122   */\n      0x20\n        /* \"#utility.yul\":21105:21123   */\n      dup3\n      add\n        /* \"#utility.yul\":21098:21132   */\n      mstore\n        /* \"#utility.yul\":21052:21054   */\n      0x40\n        /* \"#utility.yul\":21037:21055   */\n      add\n      swap1\n        /* \"#utility.yul\":21019:21138   */\n      jump\t// out\n        /* \"#utility.yul\":21143:21401   */\n    tag_567:\n        /* \"#utility.yul\":21215:21216   */\n      0x00\n        /* \"#utility.yul\":21225:21338   */\n    tag_621:\n        /* \"#utility.yul\":21239:21245   */\n      dup4\n        /* \"#utility.yul\":21236:21237   */\n      dup2\n        /* \"#utility.yul\":21233:21246   */\n      lt\n        /* \"#utility.yul\":21225:21338   */\n      iszero\n      tag_623\n      jumpi\n        /* \"#utility.yul\":21315:21326   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":21309:21327   */\n      mload\n        /* \"#utility.yul\":21296:21307   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":21289:21328   */\n      mstore\n        /* \"#utility.yul\":21261:21263   */\n      0x20\n        /* \"#utility.yul\":21254:21264   */\n      add\n        /* \"#utility.yul\":21225:21338   */\n      jump(tag_621)\n    tag_623:\n        /* \"#utility.yul\":21356:21362   */\n      dup4\n        /* \"#utility.yul\":21353:21354   */\n      dup2\n        /* \"#utility.yul\":21350:21363   */\n      gt\n        /* \"#utility.yul\":21347:21349   */\n      iszero\n      tag_429\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":21391:21392   */\n      0x00\n        /* \"#utility.yul\":21373:21389   */\n      swap2\n      add\n        /* \"#utility.yul\":21366:21393   */\n      mstore\n        /* \"#utility.yul\":21196:21401   */\n      jump\t// out\n        /* \"#utility.yul\":21406:21526   */\n    tag_536:\n        /* \"#utility.yul\":21494:21499   */\n      dup1\n        /* \"#utility.yul\":21487:21500   */\n      iszero\n        /* \"#utility.yul\":21480:21501   */\n      iszero\n        /* \"#utility.yul\":21473:21478   */\n      dup2\n        /* \"#utility.yul\":21470:21502   */\n      eq\n        /* \"#utility.yul\":21460:21462   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":21516:21517   */\n      0x00\n        /* \"#utility.yul\":21513:21514   */\n      dup1\n        /* \"#utility.yul\":21506:21518   */\n      revert\n\n    auxdata: 0xa26469706673582212206501143e6c5177ba1bc2dfabf70bab6305305873d3987ac034439213b119322064736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5654:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "76:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "86:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "101:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "95:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "95:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "144:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "117:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "117:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "117:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "55:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "66:5:1",
														"type": ""
													}
												],
												"src": "14:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "328:1233:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "374:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "383:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "391:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "376:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "376:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "376:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "349:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "358:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "345:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "370:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "341:32:1"
															},
															"nodeType": "YulIf",
															"src": "338:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "409:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "422:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "422:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "413:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "474:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "447:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "447:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "447:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "489:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "499:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "489:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "513:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "523:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "517:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "534:39:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "558:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "569:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "554:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "554:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "548:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "548:25:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "538:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "582:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "600:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "604:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "596:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "596:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "608:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "592:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "592:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "586:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "637:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "646:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "654:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "639:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "639:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "639:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "625:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "633:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "622:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:14:1"
															},
															"nodeType": "YulIf",
															"src": "619:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "672:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "686:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "682:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "676:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "752:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "761:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "769:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "754:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "754:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "754:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "731:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "735:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "727:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "727:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "742:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "723:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:35:1"
															},
															"nodeType": "YulIf",
															"src": "713:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "787:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "803:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "797:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:9:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "791:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "829:13:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "831:7:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "831:9:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "831:9:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "821:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "825:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "818:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:10:1"
															},
															"nodeType": "YulIf",
															"src": "815:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "851:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "865:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "869:2:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "861:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:11:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "855:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "881:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "901:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "895:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "885:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "913:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "939:6:1"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "947:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "935:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "935:15:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "952:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "931:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "931:24:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "917:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1014:13:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "1016:7:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1016:9:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1016:9:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "973:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "985:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "970:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "970:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "993:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1005:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "990:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "990:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "967:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:46:1"
															},
															"nodeType": "YulIf",
															"src": "964:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1043:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1047:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1036:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1036:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1036:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1067:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1078:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1071:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1100:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1108:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1093:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1093:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1093:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1120:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1131:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1139:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1127:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1120:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1151:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1166:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1170:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1162:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1162:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1155:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1219:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1228:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1236:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1221:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1221:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1221:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1196:2:1"
																					},
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "1200:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1192:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1192:11:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1205:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1188:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1188:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1210:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1185:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1185:33:1"
															},
															"nodeType": "YulIf",
															"src": "1182:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1254:15:1",
															"value": {
																"name": "value1",
																"nodeType": "YulIdentifier",
																"src": "1263:6:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1258:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1323:137:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1344:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1381:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "1349:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1349:36:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1337:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1337:49:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1337:49:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1399:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1410:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1415:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1406:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1406:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1399:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1431:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1442:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1447:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1438:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1438:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1431:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1289:1:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1292:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1286:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1296:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1298:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1307:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1310:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1303:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1303:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1298:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1282:3:1",
																"statements": []
															},
															"src": "1278:182:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1469:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1479:6:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1494:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1540:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1551:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1504:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1504:51:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_contract$_IKyberRewardLocker_$1138_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "278:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "289:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "301:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "309:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "317:6:1",
														"type": ""
													}
												],
												"src": "161:1400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1644:219:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1690:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1699:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1707:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1692:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1692:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1692:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1665:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1674:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1661:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1657:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1657:32:1"
															},
															"nodeType": "YulIf",
															"src": "1654:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1725:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1744:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1738:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1738:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1729:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1807:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1816:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1824:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1809:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1809:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1809:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1776:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1797:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1790:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1790:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1783:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1783:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1773:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1773:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1766:40:1"
															},
															"nodeType": "YulIf",
															"src": "1763:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1842:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1852:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1842:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1610:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1621:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1633:6:1",
														"type": ""
													}
												],
												"src": "1566:297:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1949:113:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1995:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2004:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2012:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1997:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1997:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1997:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1970:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1979:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1966:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1966:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1991:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1962:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:32:1"
															},
															"nodeType": "YulIf",
															"src": "1959:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2030:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2046:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2040:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2030:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1915:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1926:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1938:6:1",
														"type": ""
													}
												],
												"src": "1868:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2204:137:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2214:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2234:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2228:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2228:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2218:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2276:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2284:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2272:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2272:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2291:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2296:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2250:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2250:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2250:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2312:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2323:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2328:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2319:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2319:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2312:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2180:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2196:3:1",
														"type": ""
													}
												],
												"src": "2067:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2475:175:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2485:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2497:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2508:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2493:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2493:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2485:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2520:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2538:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2543:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2534:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2534:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2547:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2530:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2530:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2524:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2565:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2588:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2576:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2576:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2558:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2558:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2612:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2623:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2608:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2608:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2632:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2640:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2628:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2628:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2601:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2601:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2601:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2436:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2447:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2455:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2466:4:1",
														"type": ""
													}
												],
												"src": "2346:304:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2784:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2794:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2806:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2817:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2802:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2802:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2794:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2836:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2851:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2867:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2872:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2863:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2863:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2876:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2859:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2859:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2847:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2847:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2829:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2829:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2829:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2900:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2911:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2896:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2896:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2916:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2889:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2889:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2889:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2745:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2756:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2764:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2775:4:1",
														"type": ""
													}
												],
												"src": "2655:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3055:262:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3072:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3083:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3065:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3065:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3095:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3115:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3109:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3109:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3099:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3142:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3153:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3138:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3138:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3158:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3131:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3131:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3131:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3200:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3208:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3196:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3217:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3228:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3213:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3213:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3233:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3174:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3174:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3174:66:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3249:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3265:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3284:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3292:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3280:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3280:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3301:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3297:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3297:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3276:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3276:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3261:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3261:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3308:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3257:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3257:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3249:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3024:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3035:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3046:4:1",
														"type": ""
													}
												],
												"src": "2934:383:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3496:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3513:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3524:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3506:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3506:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3547:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3558:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3543:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3543:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3563:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3536:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3536:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3536:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3586:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3597:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3582:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3582:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3602:34:1",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3575:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3575:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3657:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3668:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3653:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3653:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3673:8:1",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3646:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3646:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3646:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3691:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3703:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3714:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3699:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3699:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3691:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3473:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3487:4:1",
														"type": ""
													}
												],
												"src": "3322:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3903:156:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3920:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3931:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3913:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3913:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3913:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3954:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3965:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3950:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3950:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3970:1:1",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3943:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3943:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3943:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3992:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4003:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3988:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3988:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4008:9:1",
																		"type": "",
																		"value": "admin 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3981:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3981:37:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4027:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4039:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4050:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4035:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4035:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4027:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a124f9f9a98ac379e9de3a1a59322560b257fec3dfe6894084a822062ab78fc3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3880:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3894:4:1",
														"type": ""
													}
												],
												"src": "3729:330:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4238:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4255:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4266:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4248:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4248:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4248:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4289:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4300:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4285:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4285:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4305:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4278:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4278:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4328:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4339:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4324:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4324:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4344:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4317:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4317:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4317:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4385:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4397:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4408:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4393:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4393:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4385:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4215:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4229:4:1",
														"type": ""
													}
												],
												"src": "4064:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4596:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4613:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4624:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4606:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4606:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4606:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4647:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4658:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4643:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4643:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4663:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4636:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4636:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4636:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4686:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4697:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4682:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4682:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4702:34:1",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4675:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4675:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4675:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4757:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4768:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4753:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4753:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4773:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4746:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4746:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4746:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4795:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4807:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4818:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4803:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4803:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4795:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4573:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4587:4:1",
														"type": ""
													}
												],
												"src": "4422:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5007:244:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5024:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5035:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5017:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5017:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5017:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5058:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5069:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5054:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5054:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5074:2:1",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5047:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5047:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5047:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5097:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5108:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5093:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5093:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5113:34:1",
																		"type": "",
																		"value": "SafeERC20: approve from non-zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5086:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5086:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5086:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5168:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5179:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5164:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5184:24:1",
																		"type": "",
																		"value": " to non-zero allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5157:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5157:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5157:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5218:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5230:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5241:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5226:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5226:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5218:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4984:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4998:4:1",
														"type": ""
													}
												],
												"src": "4833:418:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5309:205:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5319:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5328:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5323:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5388:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5413:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5418:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5409:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5409:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "5432:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5437:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5428:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5428:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5422:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5422:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5402:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5402:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5402:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5349:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5352:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5346:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5346:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5360:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5362:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5371:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5374:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5367:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5367:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5362:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5342:3:1",
																"statements": []
															},
															"src": "5338:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5477:31:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5490:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "5495:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5486:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5486:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5504:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5479:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5479:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5479:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5466:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5469:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5463:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5463:13:1"
															},
															"nodeType": "YulIf",
															"src": "5460:2:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5287:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5292:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5297:6:1",
														"type": ""
													}
												],
												"src": "5256:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5566:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5630:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5639:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5642:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5632:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5632:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5632:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5589:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5600:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5615:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5620:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "5611:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5611:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5624:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "5607:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5607:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5596:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5596:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5586:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5586:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5579:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5579:50:1"
															},
															"nodeType": "YulIf",
															"src": "5576:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5555:5:1",
														"type": ""
													}
												],
												"src": "5519:133:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_contract$_IKyberRewardLocker_$1138_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let _1 := 32\n        let offset := mload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(value1, value1) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { invalid() }\n        let _5 := mul(_4, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, _5), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(value1, value1) }\n        let i := value1\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_t_address_fromMemory(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value1 := memPtr\n        value2 := abi_decode_t_address_fromMemory(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a124f9f9a98ac379e9de3a1a59322560b257fec3dfe6894084a822062ab78fc3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"admin 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"SafeERC20: approve from non-zero\")\n        mstore(add(headStart, 96), \" to non-zero allowance\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523480156200001157600080fd5b50604051620032c0380380620032c08339810160408190526200003491620004a8565b826001600160a01b038116620000675760405162461bcd60e51b81526004016200005e9062000698565b60405180910390fd5b600080546001600160a01b0319166001600160a01b039290921691909117905560016002558151620000a19060049060208501906200041a565b506001600160601b0319606082901b1660805260005b8251811015620001345760006001600160a01b0316838281518110620000d957fe5b60200260200101516001600160a01b0316146200012b576200012b826000198584815181106200010557fe5b60200260200101516001600160a01b03166200013e60201b620018bd179092919060201c565b600101620000b7565b50505050620007e3565b801580620001cd5750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e90620001779030908690600401620005ea565b60206040518083038186803b1580156200019057600080fd5b505afa158015620001a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001cb9190620005b3565b155b620001ec5760405162461bcd60e51b81526004016200005e906200073a565b620002478363095ea7b360e01b84846040516024016200020e92919062000604565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b03938416179052906200024c16565b505050565b6000620002a8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620002e860201b620019b7179092919060201c565b805190915015620002475780806020019051810190620002c9919062000591565b620002475760405162461bcd60e51b81526004016200005e90620006f0565b6060620002f9848460008562000303565b90505b9392505050565b606082471015620003285760405162461bcd60e51b81526004016200005e9062000652565b6200033385620003d2565b620003525760405162461bcd60e51b81526004016200005e90620006b9565b600080866001600160a01b03168587604051620003709190620005cc565b60006040518083038185875af1925050503d8060008114620003af576040519150601f19603f3d011682016040523d82523d6000602084013e620003b4565b606091505b509092509050620003c7828286620003dc565b979650505050505050565b803b15155b919050565b60608315620003ed575081620002fc565b825115620003fe5782518084602001fd5b8160405162461bcd60e51b81526004016200005e91906200061d565b82805482825590600052602060002090810192821562000472579160200282015b828111156200047257825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200043b565b506200048092915062000484565b5090565b5b8082111562000480576000815560010162000485565b8051620003d781620007ca565b600080600060608486031215620004bd578283fd5b8351620004ca81620007ca565b602085810151919450906001600160401b0380821115620004e9578485fd5b818701915087601f830112620004fd578485fd5b8151818111156200050a57fe5b838102604051858282010181811085821117156200052457fe5b604052828152858101935084860182860187018c101562000543578889fd5b8895505b8386101562000570576200055b816200049b565b85526001959095019493860193860162000547565b5080975050505050505062000588604085016200049b565b90509250925092565b600060208284031215620005a3578081fd5b81518015158114620002fc578182fd5b600060208284031215620005c5578081fd5b5051919050565b60008251620005e081846020870162000797565b9190910192915050565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b60006020825282518060208401526200063e81604085016020870162000797565b601f01601f19169190910160400192915050565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b602080825260079082015266061646d696e20360cc1b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526036908201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60408201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606082015260800190565b60005b83811015620007b45781810151838201526020016200079a565b83811115620007c4576000848401525b50505050565b6001600160a01b0381168114620007e057600080fd5b50565b60805160601c612aba62000806600039806109b15280611d075250612aba6000f3fe60806040526004361061014f5760003560e01c806377f50f97116100b6578063b43c62701161006f578063b43c6270146103c3578063c4f59f9b146103e3578063d12e4ceb14610405578063d18df53c14610425578063ddc6326214610452578063f851a4401461047257610156565b806377f50f971461030e5780637acc8678146103235780637bb7bed114610343578063958e2d3114610363578063adb82b3114610383578063affb9fc8146103a357610156565b80633892601c116101085780633892601c1461025957806343a0d0661461026e578063441a3e701461028e57806352fd9f2f146102ae5780635312ea8e146102ce57806375829def146102ee57610156565b8063081e3eda1461015b5780631069f3b5146101865780631e1c6a07146101b557806326782247146101e25780632f380b35146102045780632fb40ce11461023757610156565b3661015657005b600080fd5b34801561016757600080fd5b50610170610487565b60405161017d9190612998565b60405180910390f35b34801561019257600080fd5b506101a66101a136600461218d565b61048d565b60405161017d93929190612a07565b3480156101c157600080fd5b506101d56101d0366004612073565b6105bf565b60405161017d91906123ee565b3480156101ee57600080fd5b506101f76105d4565b60405161017d91906122e9565b34801561021057600080fd5b5061022461021f36600461215d565b6105e3565b60405161017d97969594939291906129a1565b34801561024357600080fd5b5061025761025236600461208d565b610739565b005b34801561026557600080fd5b506101f76109af565b34801561027a57600080fd5b506102576102893660046121d9565b6109d3565b34801561029a57600080fd5b506102576102a93660046121b8565b610aaf565b3480156102ba57600080fd5b506102576102c9366004612101565b610ae8565b3480156102da57600080fd5b506102576102e936600461215d565b610d53565b3480156102fa57600080fd5b50610257610309366004612073565b610e4b565b34801561031a57600080fd5b50610257610ef4565b34801561032f57600080fd5b5061025761033e366004612073565b610f90565b34801561034f57600080fd5b506101f761035e36600461215d565b61107e565b34801561036f57600080fd5b5061025761037e36600461215d565b6110a8565b34801561038f57600080fd5b5061025761039e36600461215d565b6110fb565b3480156103af57600080fd5b506102576103be366004612211565b611234565b3480156103cf57600080fd5b506102576103de366004612269565b6113b2565b3480156103ef57600080fd5b506103f861157e565b60405161017d9190612354565b34801561041157600080fd5b506102576104203660046121b8565b6115e0565b34801561043157600080fd5b5061044561044036600461218d565b6116d0565b60405161017d91906123db565b34801561045e57600080fd5b5061025761046d36600461215d565b611899565b34801561047e57600080fd5b506101f76118ae565b60055481565b60008281526007602090815260408083206001600160a01b038516845290915290208054600454909160609182919067ffffffffffffffff811180156104d257600080fd5b506040519080825280602002602001820160405280156104fc578160200160208202803683370190505b5060045490935067ffffffffffffffff8111801561051957600080fd5b50604051908082528060200260200182016040528015610543578160200160208202803683370190505b50915060005b6004548110156105b6576000818152600183016020526040902054845185908390811061057257fe5b602002602001018181525050816001016000828152602001908152602001600020600101548382815181106105a357fe5b6020908102919091010152600101610549565b50509250925092565b60036020526000908152604090205460ff1681565b6001546001600160a01b031681565b60008181526006602052604090208054600182015460045491926001600160a01b0382169263ffffffff600160a01b8404811693600160c01b8104821693600160e01b90910490911691606091829167ffffffffffffffff8111801561064857600080fd5b50604051908082528060200260200182016040528015610672578160200160208202803683370190505b5060045490935067ffffffffffffffff8111801561068f57600080fd5b506040519080825280602002602001820160405280156106b9578160200160208202803683370190505b50915060005b60045481101561072c57600081815260028301602052604090205484518590839081106106e857fe5b6020026020010181815250508160020160008281526020019081526020016000206001015483828151811061071957fe5b60209081029190910101526001016106bf565b5050919395979092949650565b6000546001600160a01b0316331461076c5760405162461bcd60e51b81526004016107639061254f565b60405180910390fd5b6001600160a01b03851660009081526003602052604090205460ff16156107a55760405162461bcd60e51b81526004016107639061274b565b6001600160a01b0385166107cb5760405162461bcd60e51b81526004016107639061242c565b60045481146107ec5760405162461bcd60e51b815260040161076390612522565b438463ffffffff1611801561080c57508363ffffffff168363ffffffff16115b6108285760405162461bcd60e51b81526004016107639061286f565b60058054600090815260066020526040808220600190810180546001600160a01b0319166001600160a01b038b16179055835483528183208101805463ffffffff60a01b1916600160a01b63ffffffff8b811691820292909217909255855485528385208301805463ffffffff60c01b1916600160c01b928b1692909202919091179055935483529082200180546001600160e01b0316600160e01b909302929092179091555b8181101561092f5760405180604001604052808484848181106108ee57fe5b6020908102929092013583525060009181018290526005548252600681526040808320858452600201825290912082518155910151600191820155016108cf565b506005805460019081019091556001600160a01b03861660008181526003602052604090819020805460ff1916909317909255905163ffffffff80861692908716917feb19e76b03b99eff4d0329a19e44569c131f242c9590234f19b76f2c56a817a1906109a090879087906123a1565b60405180910390a45050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002805414156109f55760405162461bcd60e51b81526004016107639061290b565b60028055610a02836110fb565b610a0d3384836119d0565b600083815260066020908152604080832060078352818420338086529352922060018301549091610a49916001600160a01b0316903087611bbf565b8054610a559085611be6565b81558154610a639085611be6565b82556040514390869033907f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e90610a9b908990612998565b60405180910390a450506001600255505050565b600280541415610ad15760405162461bcd60e51b81526004016107639061290b565b60028055610adf8282611c14565b50506001600255565b60006004805480602002602001604051908101604052809291908181526020018280548015610b4057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b22575b505050505090506000815167ffffffffffffffff81118015610b6157600080fd5b50604051908082528060200260200182016040528015610b8b578160200160208202803683370190505b509050336000805b85811015610ce857868682818110610ba757fe5b905060200201359150610bb9826110fb565b610bc5838360006119d0565b60005b8551811015610cdf5760008381526007602090815260408083206001600160a01b038816845282528083208484526001019091529020548015610cd657610c2b81878481518110610c1557fe5b6020026020010151611be690919063ffffffff16565b868381518110610c3757fe5b60209081029190910181019190915260008581526007825260408082206001600160a01b03891683528352808220858352600101909252908120558651879083908110610c8057fe5b60200260200101516001600160a01b031684866001600160a01b03167ff75f3d433c6628e04e01a0be1a2c6692a6011ce4b00389824cfa8b8a12f3c1c48443604051610ccd929190612a3c565b60405180910390a45b50600101610bc8565b50600101610b93565b5060005b8351811015610d4a576000848281518110610d0357fe5b60200260200101511115610d4257610d42858281518110610d2057fe5b602002602001015184868481518110610d3557fe5b6020026020010151611ce9565b600101610cec565b50505050505050565b600280541415610d755760405162461bcd60e51b81526004016107639061290b565b600280556000818152600660209081526040808320600783528184203385529092528220805483825591929091905b600454811015610dcf5760008181526001808501602052604082208082018390559190915501610da4565b508254610ddc9082611d8e565b83558015610dfd576001830154610dfd906001600160a01b03163383611db6565b4384336001600160a01b03167f2369db1bafee945aee5630782f4a170682e3f8188d8dc247a4c73eb8c9e692d284604051610e389190612998565b60405180910390a4505060016002555050565b6000546001600160a01b03163314610e755760405162461bcd60e51b81526004016107639061254f565b6001600160a01b038116610e9b5760405162461bcd60e51b81526004016107639061289c565b7f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc4081604051610eca91906122e9565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610f1e5760405162461bcd60e51b815260040161076390612705565b6001546000546040517f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed92610f61926001600160a01b03918216929116906122fd565b60405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b03163314610fba5760405162461bcd60e51b81526004016107639061254f565b6001600160a01b038116610fe05760405162461bcd60e51b81526004016107639061272a565b7f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc408160405161100f91906122e9565b60405180910390a16000546040517f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed916110549184916001600160a01b0316906122fd565b60405180910390a1600080546001600160a01b0319166001600160a01b0392909216919091179055565b6004818154811061108e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6002805414156110ca5760405162461bcd60e51b81526004016107639061290b565b6002805560008181526007602090815260408083203384529091529020546110f3908290611c14565b506001600255565b600554811061111c5760405162461bcd60e51b8152600401610763906124c2565b60008181526006602052604081209061113483611dd5565b600183015490915063ffffffff600160e01b90910481169082161161115a575050611231565b81548061118d57506001909101805463ffffffff909216600160e01b026001600160e01b03909216919091179055611231565b600183015463ffffffff600160e01b909104811683031660005b600454811015611207576000818152600286016020526040812080549091906111d1908590611e0d565b90506111fa856111e68364e8d4a51000611e0d565b816111ed57fe5b6001850154919004611be6565b60019283015550016111a7565b5050506001909101805463ffffffff909216600160e01b026001600160e01b039092169190911790555b50565b6000546001600160a01b0316331461125e5760405162461bcd60e51b81526004016107639061254f565b611267846110fb565b6000848152600660205260409020600181015443600160c01b90910463ffffffff16116112a65760405162461bcd60e51b8152600401610763906127bb565b60045482146112c75760405162461bcd60e51b815260040161076390612492565b438463ffffffff161180156112f05750600181015463ffffffff600160a01b9091048116908516115b61130c5760405162461bcd60e51b815260040161076390612656565b60018101805463ffffffff60c01b1916600160c01b63ffffffff87160217905560005b828110156113695783838281811061134357fe5b60008481526002860160209081526040909120910292909201359091555060010161132f565b508363ffffffff16857fba2d8506275d684e80223910f1065a195ea279f37e27eb97ac24f4107eba6cf985856040516113a39291906123a1565b60405180910390a35050505050565b6000546001600160a01b031633146113dc5760405162461bcd60e51b81526004016107639061254f565b6113e5856110fb565b6000858152600660205260409020600181015443600160a01b90910463ffffffff1611806114245750600181015443600160c01b90910463ffffffff16105b6114405760405162461bcd60e51b815260040161076390612779565b60045482146114615760405162461bcd60e51b8152600401610763906125f0565b438563ffffffff1611801561148157508463ffffffff168463ffffffff16115b61149d5760405162461bcd60e51b815260040161076390612463565b60018101805463ffffffff60a01b1916600160a01b63ffffffff8881169182029290921763ffffffff60c01b1916600160c01b92881692909202919091176001600160e01b0316600160e01b9190910217905560005b8281101561152d5783838281811061150757fe5b6000848152600286016020908152604090912091029290920135909155506001016114f3565b508363ffffffff168563ffffffff16877f4f863dc93468acf71ff8f5770599fbead4d0ff8ea6bd0c3251576f68fdad0904868660405161156e9291906123a1565b60405180910390a4505050505050565b606060048054806020026020016040519081016040528092919081815260200182805480156115d657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116115b8575b5050505050905090565b6000546001600160a01b0316331461160a5760405162461bcd60e51b81526004016107639061254f565b60006004838154811061161957fe5b6000918252602090912001546001600160a01b03169050806116b7576000336001600160a01b03168360405161164e906122e6565b60006040518083038185875af1925050503d806000811461168b576040519150601f19603f3d011682016040523d82523d6000602084013e611690565b606091505b50509050806116b15760405162461bcd60e51b8152600401610763906126ce565b506116cb565b6116cb6001600160a01b0382163384611db6565b505050565b6004546060908067ffffffffffffffff811180156116ed57600080fd5b50604051908082528060200260200182016040528015611717578160200160208202803683370190505b506000858152600660209081526040808320600783528184206001600160a01b038916855290925282208154600183015494965091939092600160e01b90910463ffffffff169061176789611dd5565b905060005b8681101561188c57600081815260028701602052604090206001015463ffffffff83168410801561179c57508415155b156117f25760008281526002880160205260408120546117c99063ffffffff8087168890039190611e0d16565b90506117ee866117de8364e8d4a51000611e0d565b816117e557fe5b84919004611be6565b9150505b600082815260018088016020526040909120015464e8d4a51000906118249061181c908490611d8e565b885490611e0d565b8161182b57fe5b0489838151811061183857fe5b60200260200101818152505061186c866001016000848152602001908152602001600020600001548a8481518110610c1557fe5b89838151811061187857fe5b60209081029190910101525060010161176c565b5050505050505092915050565b6118a2816110fb565b611231338260016119d0565b6000546001600160a01b031681565b8015806119455750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e906118f390309086906004016122fd565b60206040518083038186803b15801561190b57600080fd5b505afa15801561191f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119439190612175565b155b6119615760405162461bcd60e51b815260040161076390612942565b6116cb8363095ea7b360e01b848460405160240161198092919061233b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611e47565b60606119c68484600085611ed6565b90505b9392505050565b60008281526007602090815260408083206001600160a01b038716845290915290205460045481611a5e5760005b81811015611a565760008581526006602090815260408083208484526002018252808320600190810154898552600784528285206001600160a01b038c168652845282852086865282019093529220820155016119fe565b5050506116cb565b60005b81811015611bb75760008581526006602090815260408083208484526002018252808320600190810154898552600784528285206001600160a01b038c16865284528285208686528201909352908320908101549192909164e8d4a5100090611ad690611acf908690611d8e565b8890611e0d565b81611add57fe5b83549190049150611aef908290611be6565b905086611afc5780611aff565b60005b825560018201839055868015611b155750600081115b15611bac57611b4660048581548110611b2a57fe5b6000918252602090912001546001600160a01b03168a83611ce9565b60048481548110611b5357fe5b6000918252602090912001546040516001600160a01b03918216918a91908c16907ff75f3d433c6628e04e01a0be1a2c6692a6011ce4b00389824cfa8b8a12f3c1c490611ba39086904390612a3c565b60405180910390a45b505050600101611a61565b505050505050565b611be0846323b872dd60e01b85858560405160240161198093929190612317565b50505050565b600082820183811015611c0b5760405162461bcd60e51b8152600401610763906124eb565b90505b92915050565b6000828152600660209081526040808320600783528184203385529092529091208054831115611c565760405162461bcd60e51b81526004016107639061261f565b611c5f846110fb565b611c6b338560016119d0565b8054611c779084611d8e565b81558154611c859084611d8e565b82556001820154611ca0906001600160a01b03163385611db6565b4384336001600160a01b03167f02f25270a4d87bea75db541cdfe559334a275b4a233520ed6c0a2429667cca9486604051611cdb9190612998565b60405180910390a450505050565b60006001600160a01b03841615611d01576000611d03565b815b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637750c9f0828686866040518563ffffffff1660e01b8152600401611d5693929190612317565b6000604051808303818588803b158015611d6f57600080fd5b505af1158015611d83573d6000803e3d6000fd5b505050505050505050565b600082821115611db05760405162461bcd60e51b815260040161076390612573565b50900390565b6116cb8363a9059cbb60e01b848460405160240161198092919061233b565b600081815260066020526040902060010154600160c01b900463ffffffff1643811115611e0857611e0543611f96565b90505b919050565b600082611e1c57506000611c0e565b82820282848281611e2957fe5b0414611c0b5760405162461bcd60e51b81526004016107639061268d565b6000611e9c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119b79092919063ffffffff16565b8051909150156116cb5780806020019051810190611eba9190612141565b6116cb5760405162461bcd60e51b8152600401610763906128c1565b606082471015611ef85760405162461bcd60e51b8152600401610763906125aa565b611f0185611fc0565b611f1d5760405162461bcd60e51b815260040161076390612838565b600080866001600160a01b03168587604051611f3991906122ca565b60006040518083038185875af1925050503d8060008114611f76576040519150601f19603f3d011682016040523d82523d6000602084013e611f7b565b606091505b5091509150611f8b828286611fc6565b979650505050505050565b60006401000000008210611fbc5760405162461bcd60e51b8152600401610763906127f2565b5090565b3b151590565b60608315611fd55750816119c9565b825115611fe55782518084602001fd5b8160405162461bcd60e51b815260040161076391906123f9565b80356001600160a01b0381168114611e0857600080fd5b60008083601f840112612027578182fd5b50813567ffffffffffffffff81111561203e578182fd5b602083019150836020808302850101111561205857600080fd5b9250929050565b803563ffffffff81168114611e0857600080fd5b600060208284031215612084578081fd5b6119c982611fff565b6000806000806000608086880312156120a4578081fd5b6120ad86611fff565b94506120bb6020870161205f565b93506120c96040870161205f565b9250606086013567ffffffffffffffff8111156120e4578182fd5b6120f088828901612016565b969995985093965092949392505050565b60008060208385031215612113578182fd5b823567ffffffffffffffff811115612129578283fd5b61213585828601612016565b90969095509350505050565b600060208284031215612152578081fd5b8151611c0b81612a76565b60006020828403121561216e578081fd5b5035919050565b600060208284031215612186578081fd5b5051919050565b6000806040838503121561219f578182fd5b823591506121af60208401611fff565b90509250929050565b600080604083850312156121ca578182fd5b50508035926020909101359150565b6000806000606084860312156121ed578283fd5b8335925060208401359150604084013561220681612a76565b809150509250925092565b60008060008060608587031215612226578384fd5b843593506122366020860161205f565b9250604085013567ffffffffffffffff811115612251578283fd5b61225d87828801612016565b95989497509550505050565b600080600080600060808688031215612280578081fd5b853594506120bb6020870161205f565b6000815180845260208085019450808401835b838110156122bf578151875295820195908201906001016122a3565b509495945050505050565b600082516122dc818460208701612a4a565b9190910192915050565b90565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156123955783516001600160a01b031683529284019291840191600101612370565b50909695505050505050565b6020808252810182905260006001600160fb1b038311156123c0578081fd5b60208302808560408501379190910160400190815292915050565b6000602082526119c96020830184612290565b901515815260200190565b6000602082528251806020840152612418816040850160208701612a4a565b601f01601f19169190910160400192915050565b60208082526018908201527f6164643a20696e76616c6964207374616b6520746f6b656e0000000000000000604082015260600190565b60208082526015908201527472656e65773a20696e76616c696420626c6f636b7360581b604082015260600190565b6020808252601690820152750eae0c8c2e8ca7440d2dcecc2d8d2c840d8cadccee8d60531b604082015260600190565b6020808252600f908201526e1a5b9d985b1a59081c1bdbdb081a59608a1b604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601390820152720c2c8c87440d2dcecc2d8d2c840d8cadccee8d606b1b604082015260600190565b6020808252600a908201526937b7363c9030b236b4b760b11b604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252601590820152740e4cadccaee7440d2dcecc2d8d2c840d8cadccee8d605b1b604082015260600190565b6020808252601d908201527f77697468647261773a20696e73756666696369656e7420616d6f756e74000000604082015260600190565b60208082526019908201527f7570646174653a20696e76616c696420656e6420626c6f636b00000000000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252601c908201527f7472616e736665722072657761726420746f6b656e206661696c656400000000604082015260600190565b6020808252600b908201526a6e6f742070656e64696e6760a81b604082015260600190565b602080825260079082015266061646d696e20360cc1b604082015260600190565b6020808252601490820152731859190e88191d5c1b1a58d85d1959081c1bdbdb60621b604082015260600190565b60208082526022908201527f72656e65773a20696e76616c696420706f6f6c20737461746520746f2072656e604082015261657760f01b606082015260800190565b6020808252601a908201527f7570646174653a20706f6f6c20616c726561647920656e646564000000000000604082015260600190565b60208082526026908201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360408201526532206269747360d01b606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252601390820152726164643a20696e76616c696420626c6f636b7360681b604082015260600190565b6020808252600b908201526a06e65772061646d696e20360ac1b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526036908201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60408201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606082015260800190565b90815260200190565b8781526001600160a01b038716602082015263ffffffff868116604083015285811660608301528416608082015260e060a082018190526000906129e790830185612290565b82810360c08401526129f98185612290565b9a9950505050505050505050565b600084825260606020830152612a206060830185612290565b8281036040840152612a328185612290565b9695505050505050565b918252602082015260400190565b60005b83811015612a65578181015183820152602001612a4d565b83811115611be05750506000910152565b801515811461123157600080fdfea26469706673582212206501143e6c5177ba1bc2dfabf70bab6305305873d3987ac034439213b119322064736f6c63430007060033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x32C0 CODESIZE SUB DUP1 PUSH3 0x32C0 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x4A8 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x5E SWAP1 PUSH3 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x2 SSTORE DUP2 MLOAD PUSH3 0xA1 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x41A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP3 SWAP1 SHL AND PUSH1 0x80 MSTORE PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH3 0x134 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0xD9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x12B JUMPI PUSH3 0x12B DUP3 PUSH1 0x0 NOT DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x105 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x13E PUSH1 0x20 SHL PUSH3 0x18BD OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 ADD PUSH3 0xB7 JUMP JUMPDEST POP POP POP POP PUSH3 0x7E3 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH3 0x1CD JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH3 0x177 SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH3 0x5EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1CB SWAP2 SWAP1 PUSH3 0x5B3 JUMP JUMPDEST ISZERO JUMPDEST PUSH3 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x5E SWAP1 PUSH3 0x73A JUMP JUMPDEST PUSH3 0x247 DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x20E SWAP3 SWAP2 SWAP1 PUSH3 0x604 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP4 DUP5 AND OR SWAP1 MSTORE SWAP1 PUSH3 0x24C AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2A8 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2E8 PUSH1 0x20 SHL PUSH3 0x19B7 OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH3 0x247 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH3 0x2C9 SWAP2 SWAP1 PUSH3 0x591 JUMP JUMPDEST PUSH3 0x247 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x5E SWAP1 PUSH3 0x6F0 JUMP JUMPDEST PUSH1 0x60 PUSH3 0x2F9 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH3 0x303 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH3 0x328 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x5E SWAP1 PUSH3 0x652 JUMP JUMPDEST PUSH3 0x333 DUP6 PUSH3 0x3D2 JUMP JUMPDEST PUSH3 0x352 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x5E SWAP1 PUSH3 0x6B9 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH3 0x370 SWAP2 SWAP1 PUSH3 0x5CC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x3AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x3B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0x3C7 DUP3 DUP3 DUP7 PUSH3 0x3DC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO ISZERO JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH3 0x3ED JUMPI POP DUP2 PUSH3 0x2FC JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH3 0x3FE JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x5E SWAP2 SWAP1 PUSH3 0x61D JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x472 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x472 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x43B JUMP JUMPDEST POP PUSH3 0x480 SWAP3 SWAP2 POP PUSH3 0x484 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x480 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x485 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x3D7 DUP2 PUSH3 0x7CA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x4BD JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x4CA DUP2 PUSH3 0x7CA JUMP JUMPDEST PUSH1 0x20 DUP6 DUP2 ADD MLOAD SWAP2 SWAP5 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x4E9 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x4FD JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x50A JUMPI INVALID JUMPDEST DUP4 DUP2 MUL PUSH1 0x40 MLOAD DUP6 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH3 0x524 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP13 LT ISZERO PUSH3 0x543 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH3 0x570 JUMPI PUSH3 0x55B DUP2 PUSH3 0x49B JUMP JUMPDEST DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH3 0x547 JUMP JUMPDEST POP DUP1 SWAP8 POP POP POP POP POP POP POP PUSH3 0x588 PUSH1 0x40 DUP6 ADD PUSH3 0x49B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x5A3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x2FC JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x5C5 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH3 0x5E0 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH3 0x797 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x63E DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x797 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x61646D696E203 PUSH1 0xCC SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x7B4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x79A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x7C4 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x7E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x2ABA PUSH3 0x806 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x9B1 MSTORE DUP1 PUSH2 0x1D07 MSTORE POP PUSH2 0x2ABA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77F50F97 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xB43C6270 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB43C6270 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xC4F59F9B EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0xD12E4CEB EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xD18DF53C EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0xDDC63262 EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x472 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x77F50F97 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x7ACC8678 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x7BB7BED1 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x958E2D31 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xADB82B31 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xAFFB9FC8 EQ PUSH2 0x3A3 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x3892601C GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x3892601C EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x43A0D066 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x52FD9F2F EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x75829DEF EQ PUSH2 0x2EE JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x1069F3B5 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x1E1C6A07 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x26782247 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x2F380B35 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x2FB40CE1 EQ PUSH2 0x237 JUMPI PUSH2 0x156 JUMP JUMPDEST CALLDATASIZE PUSH2 0x156 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x2998 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x218D JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A07 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D5 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x23EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x215D JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x208D JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x9AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2101 JUMP JUMPDEST PUSH2 0xAE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x215D JUMP JUMPDEST PUSH2 0xD53 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x309 CALLDATASIZE PUSH1 0x4 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0xE4B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0xEF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0xF90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x215D JUMP JUMPDEST PUSH2 0x107E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x215D JUMP JUMPDEST PUSH2 0x10A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x215D JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2211 JUMP JUMPDEST PUSH2 0x1234 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x3DE CALLDATASIZE PUSH1 0x4 PUSH2 0x2269 JUMP JUMPDEST PUSH2 0x13B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F8 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x2354 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x420 CALLDATASIZE PUSH1 0x4 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x15E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x445 PUSH2 0x440 CALLDATASIZE PUSH1 0x4 PUSH2 0x218D JUMP JUMPDEST PUSH2 0x16D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x23DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x46D CALLDATASIZE PUSH1 0x4 PUSH2 0x215D JUMP JUMPDEST PUSH2 0x1899 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x4 SLOAD SWAP1 SWAP2 PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4FC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 SWAP4 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x543 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 MLOAD DUP6 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x572 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A3 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x549 JUMP JUMPDEST POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x4 SLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP3 PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL DUP5 DIV DUP2 AND SWAP4 PUSH1 0x1 PUSH1 0xC0 SHL DUP2 DIV DUP3 AND SWAP4 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x60 SWAP2 DUP3 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x672 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 SWAP4 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6B9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x72C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 MLOAD DUP6 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x6E8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x719 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x6BF JUMP JUMPDEST POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x76C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x274B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x242C JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 EQ PUSH2 0x7EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2522 JUMP JUMPDEST NUMBER DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x80C JUMPI POP DUP4 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT JUMPDEST PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x286F JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND OR SWAP1 SSTORE DUP4 SLOAD DUP4 MSTORE DUP2 DUP4 KECCAK256 DUP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH4 0xFFFFFFFF DUP12 DUP2 AND SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE DUP6 SLOAD DUP6 MSTORE DUP4 DUP6 KECCAK256 DUP4 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP3 DUP12 AND SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP4 SLOAD DUP4 MSTORE SWAP1 DUP3 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x92F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x8EE JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x5 SLOAD DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x2 ADD DUP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP2 ADD MLOAD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE ADD PUSH2 0x8CF JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH4 0xFFFFFFFF DUP1 DUP7 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH32 0xEB19E76B03B99EFF4D0329A19E44569C131F242C9590234F19B76F2C56A817A1 SWAP1 PUSH2 0x9A0 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x23A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x290B JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0xA02 DUP4 PUSH2 0x10FB JUMP JUMPDEST PUSH2 0xA0D CALLER DUP5 DUP4 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 CALLER DUP1 DUP7 MSTORE SWAP4 MSTORE SWAP3 KECCAK256 PUSH1 0x1 DUP4 ADD SLOAD SWAP1 SWAP2 PUSH2 0xA49 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 ADDRESS DUP8 PUSH2 0x1BBF JUMP JUMPDEST DUP1 SLOAD PUSH2 0xA55 SWAP1 DUP6 PUSH2 0x1BE6 JUMP JUMPDEST DUP2 SSTORE DUP2 SLOAD PUSH2 0xA63 SWAP1 DUP6 PUSH2 0x1BE6 JUMP JUMPDEST DUP3 SSTORE PUSH1 0x40 MLOAD NUMBER SWAP1 DUP7 SWAP1 CALLER SWAP1 PUSH32 0x36AF321EC8D3C75236829C5317AFFD40DDB308863A1236D2D277A4025CCCEE1E SWAP1 PUSH2 0xA9B SWAP1 DUP10 SWAP1 PUSH2 0x2998 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ ISZERO PUSH2 0xAD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x290B JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0xADF DUP3 DUP3 PUSH2 0x1C14 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xB40 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB22 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xB61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB8B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP CALLER PUSH1 0x0 DUP1 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xCE8 JUMPI DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0xBA7 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP2 POP PUSH2 0xBB9 DUP3 PUSH2 0x10FB JUMP JUMPDEST PUSH2 0xBC5 DUP4 DUP4 PUSH1 0x0 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0xCDF JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xCD6 JUMPI PUSH2 0xC2B DUP2 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC15 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1BE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC37 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP4 MSTORE DUP4 MSTORE DUP1 DUP3 KECCAK256 DUP6 DUP4 MSTORE PUSH1 0x1 ADD SWAP1 SWAP3 MSTORE SWAP1 DUP2 KECCAK256 SSTORE DUP7 MLOAD DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xC80 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF75F3D433C6628E04E01A0BE1A2C6692A6011CE4B00389824CFA8B8A12F3C1C4 DUP5 NUMBER PUSH1 0x40 MLOAD PUSH2 0xCCD SWAP3 SWAP2 SWAP1 PUSH2 0x2A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xBC8 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xB93 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xD4A JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD03 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0xD42 JUMPI PUSH2 0xD42 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD20 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD35 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xCEC JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ ISZERO PUSH2 0xD75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x290B JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD DUP4 DUP3 SSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xDCF JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 DUP3 ADD DUP4 SWAP1 SSTORE SWAP2 SWAP1 SWAP2 SSTORE ADD PUSH2 0xDA4 JUMP JUMPDEST POP DUP3 SLOAD PUSH2 0xDDC SWAP1 DUP3 PUSH2 0x1D8E JUMP JUMPDEST DUP4 SSTORE DUP1 ISZERO PUSH2 0xDFD JUMPI PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0xDFD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x1DB6 JUMP JUMPDEST NUMBER DUP5 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2369DB1BAFEE945AEE5630782F4A170682E3F8188D8DC247A4C73EB8C9E692D2 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE38 SWAP2 SWAP1 PUSH2 0x2998 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH32 0x3B81CAF78FA51ECBC8ACB482FD7012A277B428D9B80F9D156E8A54107496CC40 DUP2 PUSH1 0x40 MLOAD PUSH2 0xECA SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2705 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x65DA1CFC2C2E81576AD96AFB24A581F8E109B7A403B35CBD3243A1C99EFDB9ED SWAP3 PUSH2 0xF61 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 PUSH2 0x22FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x272A JUMP JUMPDEST PUSH32 0x3B81CAF78FA51ECBC8ACB482FD7012A277B428D9B80F9D156E8A54107496CC40 DUP2 PUSH1 0x40 MLOAD PUSH2 0x100F SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x65DA1CFC2C2E81576AD96AFB24A581F8E109B7A403B35CBD3243A1C99EFDB9ED SWAP2 PUSH2 0x1054 SWAP2 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x22FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x108E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ ISZERO PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x290B JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x10F3 SWAP1 DUP3 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT PUSH2 0x111C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x24C2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1134 DUP4 PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD SWAP1 SWAP2 POP PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP3 AND GT PUSH2 0x115A JUMPI POP POP PUSH2 0x1231 JUMP JUMPDEST DUP2 SLOAD DUP1 PUSH2 0x118D JUMPI POP PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV DUP2 AND DUP4 SUB AND PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1207 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x11D1 SWAP1 DUP6 SWAP1 PUSH2 0x1E0D JUMP JUMPDEST SWAP1 POP PUSH2 0x11FA DUP6 PUSH2 0x11E6 DUP4 PUSH5 0xE8D4A51000 PUSH2 0x1E0D JUMP JUMPDEST DUP2 PUSH2 0x11ED JUMPI INVALID JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD SWAP2 SWAP1 DIV PUSH2 0x1BE6 JUMP JUMPDEST PUSH1 0x1 SWAP3 DUP4 ADD SSTORE POP ADD PUSH2 0x11A7 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x125E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH2 0x1267 DUP5 PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD NUMBER PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND GT PUSH2 0x12A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x27BB JUMP JUMPDEST PUSH1 0x4 SLOAD DUP3 EQ PUSH2 0x12C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2492 JUMP JUMPDEST NUMBER DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x12F0 JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP6 AND GT JUMPDEST PUSH2 0x130C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2656 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL PUSH4 0xFFFFFFFF DUP8 AND MUL OR SWAP1 SSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1369 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x1343 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 DUP7 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD SWAP1 SWAP2 SSTORE POP PUSH1 0x1 ADD PUSH2 0x132F JUMP JUMPDEST POP DUP4 PUSH4 0xFFFFFFFF AND DUP6 PUSH32 0xBA2D8506275D684E80223910F1065A195EA279F37E27EB97AC24F4107EBA6CF9 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x13A3 SWAP3 SWAP2 SWAP1 PUSH2 0x23A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH2 0x13E5 DUP6 PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD NUMBER PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND GT DUP1 PUSH2 0x1424 JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD NUMBER PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND LT JUMPDEST PUSH2 0x1440 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2779 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP3 EQ PUSH2 0x1461 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x25F0 JUMP JUMPDEST NUMBER DUP6 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1481 JUMPI POP DUP5 PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND GT JUMPDEST PUSH2 0x149D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH4 0xFFFFFFFF DUP9 DUP2 AND SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 OR PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP3 DUP9 AND SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x152D JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x1507 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 DUP7 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD SWAP1 SWAP2 SSTORE POP PUSH1 0x1 ADD PUSH2 0x14F3 JUMP JUMPDEST POP DUP4 PUSH4 0xFFFFFFFF AND DUP6 PUSH4 0xFFFFFFFF AND DUP8 PUSH32 0x4F863DC93468ACF71FF8F5770599FBEAD4D0FF8EA6BD0C3251576F68FDAD0904 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x156E SWAP3 SWAP2 SWAP1 PUSH2 0x23A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x15D6 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15B8 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x160A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1619 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH2 0x16B7 JUMPI PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x164E SWAP1 PUSH2 0x22E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x168B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x16B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x26CE JUMP JUMPDEST POP PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x16CB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER DUP5 PUSH2 0x1DB6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x60 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x16ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1717 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP6 MSTORE SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP2 SLOAD PUSH1 0x1 DUP4 ADD SLOAD SWAP5 SWAP7 POP SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP1 PUSH2 0x1767 DUP10 PUSH2 0x1DD5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x188C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH4 0xFFFFFFFF DUP4 AND DUP5 LT DUP1 ISZERO PUSH2 0x179C JUMPI POP DUP5 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP9 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x17C9 SWAP1 PUSH4 0xFFFFFFFF DUP1 DUP8 AND DUP9 SWAP1 SUB SWAP2 SWAP1 PUSH2 0x1E0D AND JUMP JUMPDEST SWAP1 POP PUSH2 0x17EE DUP7 PUSH2 0x17DE DUP4 PUSH5 0xE8D4A51000 PUSH2 0x1E0D JUMP JUMPDEST DUP2 PUSH2 0x17E5 JUMPI INVALID JUMPDEST DUP5 SWAP2 SWAP1 DIV PUSH2 0x1BE6 JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP1 DUP9 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x1824 SWAP1 PUSH2 0x181C SWAP1 DUP5 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST DUP9 SLOAD SWAP1 PUSH2 0x1E0D JUMP JUMPDEST DUP2 PUSH2 0x182B JUMPI INVALID JUMPDEST DIV DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1838 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x186C DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC15 JUMPI INVALID JUMPDEST DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1878 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x176C JUMP JUMPDEST POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18A2 DUP2 PUSH2 0x10FB JUMP JUMPDEST PUSH2 0x1231 CALLER DUP3 PUSH1 0x1 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x1945 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH2 0x18F3 SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x22FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x190B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x191F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1943 SWAP2 SWAP1 PUSH2 0x2175 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1961 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2942 JUMP JUMPDEST PUSH2 0x16CB DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1980 SWAP3 SWAP2 SWAP1 PUSH2 0x233B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1E47 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x19C6 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1ED6 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x4 SLOAD DUP2 PUSH2 0x1A5E JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A56 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x2 ADD DUP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP10 DUP6 MSTORE PUSH1 0x7 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP7 DUP7 MSTORE DUP3 ADD SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 DUP3 ADD SSTORE ADD PUSH2 0x19FE JUMP JUMPDEST POP POP POP PUSH2 0x16CB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BB7 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x2 ADD DUP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP10 DUP6 MSTORE PUSH1 0x7 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP7 DUP7 MSTORE DUP3 ADD SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 SWAP1 DUP2 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x1AD6 SWAP1 PUSH2 0x1ACF SWAP1 DUP7 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST DUP9 SWAP1 PUSH2 0x1E0D JUMP JUMPDEST DUP2 PUSH2 0x1ADD JUMPI INVALID JUMPDEST DUP4 SLOAD SWAP2 SWAP1 DIV SWAP2 POP PUSH2 0x1AEF SWAP1 DUP3 SWAP1 PUSH2 0x1BE6 JUMP JUMPDEST SWAP1 POP DUP7 PUSH2 0x1AFC JUMPI DUP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SWAP1 SSTORE DUP7 DUP1 ISZERO PUSH2 0x1B15 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1BAC JUMPI PUSH2 0x1B46 PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1B2A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 DUP4 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1B53 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP11 SWAP2 SWAP1 DUP13 AND SWAP1 PUSH32 0xF75F3D433C6628E04E01A0BE1A2C6692A6011CE4B00389824CFA8B8A12F3C1C4 SWAP1 PUSH2 0x1BA3 SWAP1 DUP7 SWAP1 NUMBER SWAP1 PUSH2 0x2A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0x1A61 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1BE0 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1980 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2317 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1C0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x24EB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD DUP4 GT ISZERO PUSH2 0x1C56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x261F JUMP JUMPDEST PUSH2 0x1C5F DUP5 PUSH2 0x10FB JUMP JUMPDEST PUSH2 0x1C6B CALLER DUP6 PUSH1 0x1 PUSH2 0x19D0 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x1C77 SWAP1 DUP5 PUSH2 0x1D8E JUMP JUMPDEST DUP2 SSTORE DUP2 SLOAD PUSH2 0x1C85 SWAP1 DUP5 PUSH2 0x1D8E JUMP JUMPDEST DUP3 SSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x1CA0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP6 PUSH2 0x1DB6 JUMP JUMPDEST NUMBER DUP5 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2F25270A4D87BEA75DB541CDFE559334A275B4A233520ED6C0A2429667CCA94 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1CDB SWAP2 SWAP1 PUSH2 0x2998 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x1D01 JUMPI PUSH1 0x0 PUSH2 0x1D03 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7750C9F0 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D56 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1DB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2573 JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x16CB DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1980 SWAP3 SWAP2 SWAP1 PUSH2 0x233B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND NUMBER DUP2 GT ISZERO PUSH2 0x1E08 JUMPI PUSH2 0x1E05 NUMBER PUSH2 0x1F96 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1E1C JUMPI POP PUSH1 0x0 PUSH2 0x1C0E JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1E29 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1C0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x268D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E9C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19B7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x16CB JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1EBA SWAP2 SWAP1 PUSH2 0x2141 JUMP JUMPDEST PUSH2 0x16CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x28C1 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1EF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x1F01 DUP6 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0x1F1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1F39 SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F76 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F7B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1F8B DUP3 DUP3 DUP7 PUSH2 0x1FC6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP3 LT PUSH2 0x1FBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x27F2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1FD5 JUMPI POP DUP2 PUSH2 0x19C9 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1FE5 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0x23F9 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2027 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x203E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x2058 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1E08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2084 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x19C9 DUP3 PUSH2 0x1FFF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x20A4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x20AD DUP7 PUSH2 0x1FFF JUMP JUMPDEST SWAP5 POP PUSH2 0x20BB PUSH1 0x20 DUP8 ADD PUSH2 0x205F JUMP JUMPDEST SWAP4 POP PUSH2 0x20C9 PUSH1 0x40 DUP8 ADD PUSH2 0x205F JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E4 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x20F0 DUP9 DUP3 DUP10 ADD PUSH2 0x2016 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2113 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2129 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2135 DUP6 DUP3 DUP7 ADD PUSH2 0x2016 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2152 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1C0B DUP2 PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x216E JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2186 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x219F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x21AF PUSH1 0x20 DUP5 ADD PUSH2 0x1FFF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21CA JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21ED JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x2206 DUP2 PUSH2 0x2A76 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2226 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x2236 PUSH1 0x20 DUP7 ADD PUSH2 0x205F JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2251 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x225D DUP8 DUP3 DUP9 ADD PUSH2 0x2016 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2280 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH2 0x20BB PUSH1 0x20 DUP8 ADD PUSH2 0x205F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22BF JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x22A3 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x22DC DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2A4A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2395 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2370 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x23C0 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x20 DUP4 MUL DUP1 DUP6 PUSH1 0x40 DUP6 ADD CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP1 DUP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x19C9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2290 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2418 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2A4A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x6164643A20696E76616C6964207374616B6520746F6B656E0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x72656E65773A20696E76616C696420626C6F636B73 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0xEAE0C8C2E8CA7440D2DCECC2D8D2C840D8CADCCEE8D PUSH1 0x53 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x1A5B9D985B1A59081C1BDBDB081A59 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0xC2C8C87440D2DCECC2D8D2C840D8CADCCEE8D PUSH1 0x6B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x37B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0xE4CADCCAEE7440D2DCECC2D8D2C840D8CADCCEE8D PUSH1 0x5B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x77697468647261773A20696E73756666696369656E7420616D6F756E74000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x7570646174653A20696E76616C696420656E6420626C6F636B00000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x7472616E736665722072657761726420746F6B656E206661696C656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x6E6F742070656E64696E67 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x61646D696E203 PUSH1 0xCC SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x1859190E88191D5C1B1A58D85D1959081C1BDBDB PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x72656E65773A20696E76616C696420706F6F6C20737461746520746F2072656E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6577 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x7570646174653A20706F6F6C20616C726561647920656E646564000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x322062697473 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x6164643A20696E76616C696420626C6F636B73 PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x6E65772061646D696E203 PUSH1 0xAC SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x20746F206E6F6E2D7A65726F20616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF DUP7 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x29E7 SWAP1 DUP4 ADD DUP6 PUSH2 0x2290 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x29F9 DUP2 DUP6 PUSH2 0x2290 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP3 MSTORE PUSH1 0x60 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2A20 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2290 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2A32 DUP2 DUP6 PUSH2 0x2290 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A65 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A4D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1BE0 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1231 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x1143E6C5177 0xBA SHL 0xC2 0xDF 0xAB 0xF7 SIGNEXTEND 0xAB PUSH4 0x5305873 0xD3 SWAP9 PUSH27 0xC034439213B119322064736F6C6343000706003300000000000000 ",
							"sourceMap": "41959:22360:0:-:0;;;45768:588;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;45912:6;-1:-1:-1;;;;;4933:20:0;;4925:40;;;;-1:-1:-1;;;4925:40:0;;;;;;;:::i;:::-;;;;;;;;;4976:5;:14;;-1:-1:-1;;;;;;4976:14:0;-1:-1:-1;;;;;4976:14:0;;;;;;;;;;-1:-1:-1;40609:7:0;:22;45931:28;;::::1;::::0;:12:::1;::::0;:28:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;;;45970:28:0::1;::::0;;;;::::1;::::0;46063:9:::1;46058:291;46082:13;:20;46078:1;:24;46058:291;;;46156:1;-1:-1:-1::0;;;;;46128:30:0::1;:13;46142:1;46128:16;;;;;;;;;;;;;;-1:-1:-1::0;;;;;46128:30:0::1;;46124:214;;46179:143;46249:13;-1:-1:-1::0;;46189:13:0::1;46203:1;46189:16;;;;;;;;;;;;;;-1:-1:-1::0;;;;;46179:39:0::1;;;;;;;:143;;;;;:::i;:::-;46104:3;;46058:291;;;;45768:588:::0;;;41959:22360;;36366:622;36736:10;;;36735:62;;-1:-1:-1;36752:39:0;;-1:-1:-1;;;36752:39:0;;-1:-1:-1;;;;;36752:15:0;;;;;:39;;36776:4;;36783:7;;36752:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;36735:62;36727:152;;;;-1:-1:-1;;;36727:152:0;;;;;;;:::i;:::-;36890:90;36910:5;36940:22;;;36964:7;36973:5;36917:62;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;36917:62:0;;;;;;;;;;;-1:-1:-1;;;;;;36917:62:0;;;;-1:-1:-1;;;;;36917:62:0;;;;;;;36890:19;:90;:::i;:::-;36366:622;;;:::o;38012:761::-;38436:23;38462:69;38490:4;38462:69;;;;;;;;;;;;;;;;;38470:5;-1:-1:-1;;;;;38462:27:0;;;;;;;:69;;;;;:::i;:::-;38546:17;;38436:95;;-1:-1:-1;38546:21:0;38542:224;;38688:10;38677:30;;;;;;;;;;;;:::i;:::-;38669:85;;;;-1:-1:-1;;;38669:85:0;;;;;;;:::i;16689:195::-;16792:12;16824:52;16846:6;16854:4;16860:1;16863:12;16824:21;:52::i;:::-;16817:59;;16689:195;;;;;;:::o;17741:530::-;17868:12;17926:5;17901:21;:30;;17893:81;;;;-1:-1:-1;;;17893:81:0;;;;;;;:::i;:::-;17993:18;18004:6;17993:10;:18::i;:::-;17985:60;;;;-1:-1:-1;;;17985:60:0;;;;;;;:::i;:::-;18119:12;18133:23;18160:6;-1:-1:-1;;;;;18160:11:0;18180:5;18188:4;18160:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18118:75:0;;-1:-1:-1;18118:75:0;-1:-1:-1;18211:52:0;18118:75;;18250:12;18211:17;:52::i;:::-;18204:59;17741:530;-1:-1:-1;;;;;;;17741:530:0:o;13771:422::-;14138:20;;14177:8;;13771:422;;;;:::o;20281:742::-;20396:12;20425:7;20421:595;;;-1:-1:-1;20456:10:0;20449:17;;20421:595;20570:17;;:21;20566:439;;20833:10;20827:17;20894:15;20881:10;20877:2;20873:19;20866:44;20781:148;20976:12;20969:20;;-1:-1:-1;;;20969:20:0;;;;;;;;:::i;41959:22360::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;41959:22360:0;-1:-1:-1;;;;;41959:22360:0;;;;;;;;;;;-1:-1:-1;41959:22360:0;;;;;;;-1:-1:-1;41959:22360:0;;;-1:-1:-1;41959:22360:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:142:1;95:13;;117:33;95:13;117:33;:::i;161:1400::-;;;;370:2;358:9;349:7;345:23;341:32;338:2;;;391:6;383;376:22;338:2;428:9;422:16;447:33;474:5;447:33;:::i;:::-;523:2;554:18;;;548:25;499:5;;-1:-1:-1;523:2:1;-1:-1:-1;;;;;622:14:1;;;619:2;;;654:6;646;639:22;619:2;697:6;686:9;682:22;672:32;;742:7;735:4;731:2;727:13;723:27;713:2;;769:6;761;754:22;713:2;803;797:9;825:2;821;818:10;815:2;;;831:9;815:2;869;865;861:11;901:2;895:9;952:2;947;939:6;935:15;931:24;1005:6;993:10;990:22;985:2;973:10;970:18;967:46;964:2;;;1016:9;964:2;1043;1036:22;1093:18;;;1127:15;;;;-1:-1:-1;1162:11:1;;;1192;;;1188:20;;1185:33;-1:-1:-1;1182:2:1;;;1236:6;1228;1221:22;1182:2;1263:6;1254:15;;1278:182;1292:2;1289:1;1286:9;1278:182;;;1349:36;1381:3;1349:36;:::i;:::-;1337:49;;1310:1;1303:9;;;;;1406:12;;;;1438;;1278:182;;;1282:3;1479:6;1469:16;;;;;;;;1504:51;1551:2;1540:9;1536:18;1504:51;:::i;:::-;1494:61;;328:1233;;;;;:::o;1566:297::-;;1686:2;1674:9;1665:7;1661:23;1657:32;1654:2;;;1707:6;1699;1692:22;1654:2;1744:9;1738:16;1797:5;1790:13;1783:21;1776:5;1773:32;1763:2;;1824:6;1816;1809:22;1868:194;;1991:2;1979:9;1970:7;1966:23;1962:32;1959:2;;;2012:6;2004;1997:22;1959:2;-1:-1:-1;2040:16:1;;1949:113;-1:-1:-1;1949:113:1:o;2067:274::-;;2234:6;2228:13;2250:53;2296:6;2291:3;2284:4;2276:6;2272:17;2250:53;:::i;:::-;2319:16;;;;;2204:137;-1:-1:-1;;2204:137:1:o;2346:304::-;-1:-1:-1;;;;;2576:15:1;;;2558:34;;2628:15;;2623:2;2608:18;;2601:43;2508:2;2493:18;;2475:175::o;2655:274::-;-1:-1:-1;;;;;2847:32:1;;;;2829:51;;2911:2;2896:18;;2889:34;2817:2;2802:18;;2784:145::o;2934:383::-;;3083:2;3072:9;3065:21;3115:6;3109:13;3158:6;3153:2;3142:9;3138:18;3131:34;3174:66;3233:6;3228:2;3217:9;3213:18;3208:2;3200:6;3196:15;3174:66;:::i;:::-;3301:2;3280:15;-1:-1:-1;;3276:29:1;3261:45;;;;3308:2;3257:54;;3055:262;-1:-1:-1;;3055:262:1:o;3322:402::-;3524:2;3506:21;;;3563:2;3543:18;;;3536:30;3602:34;3597:2;3582:18;;3575:62;-1:-1:-1;;;3668:2:1;3653:18;;3646:36;3714:3;3699:19;;3496:228::o;3729:330::-;3931:2;3913:21;;;3970:1;3950:18;;;3943:29;-1:-1:-1;;;4003:2:1;3988:18;;3981:37;4050:2;4035:18;;3903:156::o;4064:353::-;4266:2;4248:21;;;4305:2;4285:18;;;4278:30;4344:31;4339:2;4324:18;;4317:59;4408:2;4393:18;;4238:179::o;4422:406::-;4624:2;4606:21;;;4663:2;4643:18;;;4636:30;4702:34;4697:2;4682:18;;4675:62;-1:-1:-1;;;4768:2:1;4753:18;;4746:40;4818:3;4803:19;;4596:232::o;4833:418::-;5035:2;5017:21;;;5074:2;5054:18;;;5047:30;5113:34;5108:2;5093:18;;5086:62;5184:24;5179:2;5164:18;;5157:52;5241:3;5226:19;;5007:244::o;5256:258::-;5328:1;5338:113;5352:6;5349:1;5346:13;5338:113;;;5428:11;;;5422:18;5409:11;;;5402:39;5374:2;5367:10;5338:113;;;5469:6;5466:1;5463:13;5460:2;;;5504:1;5495:6;5490:3;5486:16;5479:27;5460:2;;5309:205;;;:::o;5519:133::-;-1:-1:-1;;;;;5596:31:1;;5586:42;;5576:2;;5642:1;5639;5632:12;5576:2;5566:86;:::o;:::-;41959:22360:0;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21528:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:1"
															},
															"nodeType": "YulIf",
															"src": "113:2:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:1",
														"type": ""
													}
												],
												"src": "14:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "284:314:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "333:30:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "arrayPos",
																					"nodeType": "YulIdentifier",
																					"src": "342:8:1"
																				},
																				{
																					"name": "arrayPos",
																					"nodeType": "YulIdentifier",
																					"src": "352:8:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:26:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:26:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "312:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "320:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "308:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "308:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "327:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "304:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "304:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "297:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "297:35:1"
															},
															"nodeType": "YulIf",
															"src": "294:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "372:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "395:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "382:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:20:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "372:6:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "445:30:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "arrayPos",
																					"nodeType": "YulIdentifier",
																					"src": "454:8:1"
																				},
																				{
																					"name": "arrayPos",
																					"nodeType": "YulIdentifier",
																					"src": "464:8:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "447:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "447:26:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "447:26:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "417:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "425:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "414:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "414:30:1"
															},
															"nodeType": "YulIf",
															"src": "411:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "484:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "500:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "496:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "496:17:1"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "484:8:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "576:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "585:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "588:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "578:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "578:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "578:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "536:6:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "548:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "556:4:1",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "544:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "544:17:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "532:30:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "564:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "528:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "528:41:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "571:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "525:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:50:1"
															},
															"nodeType": "YulIf",
															"src": "522:2:1"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "247:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "255:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "263:8:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "273:6:1",
														"type": ""
													}
												],
												"src": "194:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "653:115:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "663:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "685:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "672:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "672:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "663:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "746:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "755:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "758:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "748:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "748:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "748:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "714:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "725:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "732:10:1",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "721:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "721:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "711:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "711:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "704:41:1"
															},
															"nodeType": "YulIf",
															"src": "701:2:1"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "632:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "643:5:1",
														"type": ""
													}
												],
												"src": "603:165:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "843:128:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "889:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "898:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "906:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "891:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "891:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "891:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "864:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "873:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "860:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "860:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "885:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "856:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:32:1"
															},
															"nodeType": "YulIf",
															"src": "853:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "924:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "955:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "934:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "934:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "924:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "809:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "820:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "832:6:1",
														"type": ""
													}
												],
												"src": "773:198:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1130:534:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1177:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1186:6:1"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1194:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1179:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1179:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1179:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1151:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1160:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1147:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1147:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1172:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1143:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1143:33:1"
															},
															"nodeType": "YulIf",
															"src": "1140:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1243:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1222:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1262:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1296:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1307:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1292:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1292:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "1272:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:39:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1262:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1320:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1354:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1365:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1350:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1350:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "1330:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1330:39:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1320:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1378:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1409:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1420:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1405:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1392:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1392:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1382:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1467:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1476:6:1"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1484:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1469:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1469:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1469:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1439:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1447:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1436:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1436:30:1"
															},
															"nodeType": "YulIf",
															"src": "1433:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1502:102:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1587:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1596:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_uint256_$dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "1528:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1528:76:1"
															},
															"variables": [
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "1506:8:1",
																	"type": ""
																},
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "1516:8:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1613:18:1",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "1623:8:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1613:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1640:18:1",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "1650:8:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1640:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint32t_uint32t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1064:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1075:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1087:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1095:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1103:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1111:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1119:6:1",
														"type": ""
													}
												],
												"src": "976:688:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1774:358:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1820:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1829:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1837:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1822:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1822:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1822:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1795:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1804:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1791:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1791:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1816:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:32:1"
															},
															"nodeType": "YulIf",
															"src": "1784:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1855:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1882:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1869:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1869:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1859:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1935:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1944:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1952:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1937:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1937:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1937:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1907:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1915:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1904:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1904:30:1"
															},
															"nodeType": "YulIf",
															"src": "1901:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1970:102:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2044:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2055:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2040:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2040:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2064:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_uint256_$dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "1996:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1996:76:1"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "1974:8:1",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "1984:8:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2081:18:1",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "2091:8:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2081:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2108:18:1",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "2118:8:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1732:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1743:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1755:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1763:6:1",
														"type": ""
													}
												],
												"src": "1669:463:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2215:179:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2261:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2270:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2278:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2263:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2263:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2236:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2245:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2232:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2232:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2257:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2228:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2228:32:1"
															},
															"nodeType": "YulIf",
															"src": "2225:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2296:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2315:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2309:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2309:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2300:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2358:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2334:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2334:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2334:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2373:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2383:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2373:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2181:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2192:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2204:6:1",
														"type": ""
													}
												],
												"src": "2137:257:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2469:120:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2515:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2524:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2532:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2517:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2517:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2517:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2490:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2499:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2486:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2511:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2482:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2482:32:1"
															},
															"nodeType": "YulIf",
															"src": "2479:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2550:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2573:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2560:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2560:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2550:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2435:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2446:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2458:6:1",
														"type": ""
													}
												],
												"src": "2399:190:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2675:113:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2721:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2730:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2738:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2723:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2723:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2723:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2696:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2705:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2692:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2717:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2688:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2688:32:1"
															},
															"nodeType": "YulIf",
															"src": "2685:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2756:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2772:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2766:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2766:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2756:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2641:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2652:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2664:6:1",
														"type": ""
													}
												],
												"src": "2594:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2880:179:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2926:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2935:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2943:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2928:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2928:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2928:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2901:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2910:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2897:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2897:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2922:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2893:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2893:32:1"
															},
															"nodeType": "YulIf",
															"src": "2890:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2961:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2984:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2971:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2971:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2961:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3003:50:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3038:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3049:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3034:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3034:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3013:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3013:40:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3003:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2838:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2849:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2861:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2869:6:1",
														"type": ""
													}
												],
												"src": "2793:266:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3151:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3197:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3206:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3214:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3199:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3199:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3199:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3172:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3181:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3168:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3168:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3193:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3164:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3164:32:1"
															},
															"nodeType": "YulIf",
															"src": "3161:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3232:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3255:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3242:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3242:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3232:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3274:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3301:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3297:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3297:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3284:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3284:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3274:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3109:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3120:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3132:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3140:6:1",
														"type": ""
													}
												],
												"src": "3064:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3428:288:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3474:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3483:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3491:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3476:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3476:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3476:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3449:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3458:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3445:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3445:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3470:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3441:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3441:32:1"
															},
															"nodeType": "YulIf",
															"src": "3438:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3509:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3532:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3519:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3519:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3509:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3551:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3578:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3589:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3574:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3574:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3561:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3561:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3551:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3602:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3632:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3643:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3628:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3628:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3615:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3615:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3606:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3680:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3656:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3656:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3656:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3695:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3705:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3695:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3378:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3389:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3401:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3409:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3417:6:1",
														"type": ""
													}
												],
												"src": "3327:389:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3859:467:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3905:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3914:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3922:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3907:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3907:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3907:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3880:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3889:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3876:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3876:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3901:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3872:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3872:32:1"
															},
															"nodeType": "YulIf",
															"src": "3869:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3940:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3963:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3950:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3940:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3982:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4016:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4027:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4012:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4012:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "3992:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3992:39:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3982:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4040:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4071:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4082:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4067:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4067:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4054:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4054:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4044:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4129:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "4138:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "4146:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4131:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4131:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4131:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4101:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4109:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4098:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4098:30:1"
															},
															"nodeType": "YulIf",
															"src": "4095:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4164:102:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4238:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4249:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4234:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4234:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4258:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_uint256_$dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4190:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4190:76:1"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "4168:8:1",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "4178:8:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4275:18:1",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "4285:8:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4275:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4302:18:1",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "4312:8:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4302:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint32t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3801:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3812:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3824:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3832:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3840:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3848:6:1",
														"type": ""
													}
												],
												"src": "3721:605:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4485:526:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4532:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4541:6:1"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4549:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4534:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4534:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4534:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4506:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4515:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4502:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4502:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4527:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4498:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4498:33:1"
															},
															"nodeType": "YulIf",
															"src": "4495:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4567:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4590:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4577:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4577:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4567:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4609:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4643:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4654:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4639:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4639:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "4619:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4619:39:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4609:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4667:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4701:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4712:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4697:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4697:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "4677:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4677:39:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4667:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4725:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4756:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4767:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4752:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4752:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4739:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4739:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4729:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4814:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4823:6:1"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4831:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4816:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4816:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4816:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4786:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4783:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4783:30:1"
															},
															"nodeType": "YulIf",
															"src": "4780:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4849:102:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4923:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4934:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4919:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4919:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4943:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_uint256_$dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4875:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4875:76:1"
															},
															"variables": [
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "4853:8:1",
																	"type": ""
																},
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "4863:8:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:18:1",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "4970:8:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4960:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4987:18:1",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "4997:8:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4987:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint32t_uint32t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4419:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4430:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4442:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4450:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4458:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4466:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4474:6:1",
														"type": ""
													}
												],
												"src": "4331:680:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5083:376:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5093:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5113:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5107:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5107:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5097:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5135:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5140:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5128:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5128:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5128:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5156:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5166:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5160:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5179:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5190:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5195:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5186:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5186:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5179:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5207:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5225:5:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5232:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5221:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5221:14:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5211:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5244:12:1",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "5253:3:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5248:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5314:120:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5335:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "5346:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5340:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5340:13:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5328:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5328:26:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5328:26:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5367:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5378:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5383:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5374:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5374:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5367:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5399:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5413:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5421:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5409:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5409:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5399:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5276:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5279:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5273:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5273:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5287:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5289:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5298:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5301:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5294:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5294:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5289:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5269:3:1",
																"statements": []
															},
															"src": "5265:169:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5443:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5450:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5443:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5060:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5067:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5075:3:1",
														"type": ""
													}
												],
												"src": "5016:443:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5601:137:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5611:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5631:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5625:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5625:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5615:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5673:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5681:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5669:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5669:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5688:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5693:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5647:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5647:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5647:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5709:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5720:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5725:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5716:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5716:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5709:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5577:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5582:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5593:3:1",
														"type": ""
													}
												],
												"src": "5464:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5934:14:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5936:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5943:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5936:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5918:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5926:3:1",
														"type": ""
													}
												],
												"src": "5743:205:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6054:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6064:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6076:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6087:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6072:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6072:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6064:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6106:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6121:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6137:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6142:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6133:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6133:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6146:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6129:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6129:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6117:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6117:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6099:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6099:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6099:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6023:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6034:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6045:4:1",
														"type": ""
													}
												],
												"src": "5953:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6290:175:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6300:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6312:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6323:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6308:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6308:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6300:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6335:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6353:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6358:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6349:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6349:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6362:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6345:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6345:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6339:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6380:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6395:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6403:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6391:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6391:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6373:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6373:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6373:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6427:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6438:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6423:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6423:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6447:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6455:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6443:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6443:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6416:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6416:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6416:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6251:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6262:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6270:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6281:4:1",
														"type": ""
													}
												],
												"src": "6161:304:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6627:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6637:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6649:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6660:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6645:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6645:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6637:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6672:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6690:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6695:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6686:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6686:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6699:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6682:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6682:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6676:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6717:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6732:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6740:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6728:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6728:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6710:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6710:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6710:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6764:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6775:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6760:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6760:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6784:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6792:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6780:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6780:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6753:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6753:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6753:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6816:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6827:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6812:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6812:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6832:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6805:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6805:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6805:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6580:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6591:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6599:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6607:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6618:4:1",
														"type": ""
													}
												],
												"src": "6470:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6979:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6989:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7001:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7012:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6997:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6997:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6989:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7031:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7046:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7062:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7067:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7058:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7058:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7071:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7054:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7054:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7042:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7042:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7024:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7024:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7024:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7095:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7106:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7091:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7091:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7111:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7084:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6940:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6951:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6959:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6970:4:1",
														"type": ""
													}
												],
												"src": "6850:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7280:510:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7290:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7300:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7294:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7311:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7329:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7340:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7325:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7325:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "7315:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7359:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7370:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7352:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7352:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7352:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7382:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "7393:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "7386:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7408:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7428:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7422:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7422:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7412:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "7451:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7459:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7444:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7444:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7444:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7475:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7486:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7497:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7482:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7482:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7475:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7509:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7527:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7535:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7523:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7523:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "7513:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7547:13:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "7556:4:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7551:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7618:146:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7639:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7654:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "7648:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7648:13:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "7671:3:1",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "7676:1:1",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "7667:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7667:11:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7680:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "7663:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7663:19:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7644:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7644:39:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7632:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7632:52:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7632:52:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7697:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7708:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7713:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7704:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7704:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7697:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7729:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7743:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7751:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7739:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7739:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7729:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7580:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7583:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7577:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7577:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7591:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7593:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7602:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7605:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7598:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7598:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7593:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7573:3:1",
																"statements": []
															},
															"src": "7569:195:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7773:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7781:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7773:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7249:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7260:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7271:4:1",
														"type": ""
													}
												],
												"src": "7129:661:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7956:335:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7973:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7984:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7966:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7966:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7966:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8007:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8018:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8003:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8003:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8023:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7996:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7996:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7996:34:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8074:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "8083:4:1"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "8089:4:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8076:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8076:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8076:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8045:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8061:3:1",
																						"type": "",
																						"value": "251"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8066:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "8057:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8057:11:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8070:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8053:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8053:19:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8042:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8042:31:1"
															},
															"nodeType": "YulIf",
															"src": "8039:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8105:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8123:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8131:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8119:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8119:15:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8109:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8160:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8171:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8156:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8156:18:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8176:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8184:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8143:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8143:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8143:48:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8200:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8218:9:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8229:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8214:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8214:22:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8238:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8210:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8210:31:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8204:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8257:2:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8261:4:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8250:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8250:16:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8250:16:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8275:10:1",
															"value": {
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "8283:2:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8275:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7917:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7928:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7936:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7947:4:1",
														"type": ""
													}
												],
												"src": "7795:496:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8447:116:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8464:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8475:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8457:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8457:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8457:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8487:70:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8530:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8542:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8553:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8538:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8538:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8495:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8495:62:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8487:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8416:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8427:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8438:4:1",
														"type": ""
													}
												],
												"src": "8296:267:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8663:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8673:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8685:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8696:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8681:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8681:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8673:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8715:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "8740:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8733:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8733:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8726:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8726:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8708:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8708:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8708:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8632:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8643:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8654:4:1",
														"type": ""
													}
												],
												"src": "8568:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8934:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8944:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8956:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8967:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8952:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8944:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8979:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8997:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9002:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8993:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8993:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9006:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8989:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8989:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8983:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9024:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9039:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9047:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9035:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9035:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9017:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9017:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9017:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9071:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9082:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9067:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9067:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9091:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9099:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9087:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9087:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9060:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9060:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9060:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9123:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9134:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9119:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9119:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9139:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9112:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9112:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9112:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20Ext_$982_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8887:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8898:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8906:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8914:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8925:4:1",
														"type": ""
													}
												],
												"src": "8760:392:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9285:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9295:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9307:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9318:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9303:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9303:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9295:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9337:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9352:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9368:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9373:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9364:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9364:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9377:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9360:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9360:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9348:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9348:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9330:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9330:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9330:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IKyberRewardLocker_$1138__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9254:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9265:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9276:4:1",
														"type": ""
													}
												],
												"src": "9157:230:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9513:262:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9530:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9541:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9523:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9523:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9523:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9553:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9573:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9567:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9567:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9557:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9600:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9611:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9596:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9596:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9616:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9589:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9589:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9589:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9658:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9666:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9654:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9654:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9675:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9686:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9671:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9671:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9691:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "9632:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9632:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9632:66:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9707:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9723:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "9742:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9750:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9738:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9738:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9759:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "9755:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9755:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "9734:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9734:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9719:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9766:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9715:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9715:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9707:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9482:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9493:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9504:4:1",
														"type": ""
													}
												],
												"src": "9392:383:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9954:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9971:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9982:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9964:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9964:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9964:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10005:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10016:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10001:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10001:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10021:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9994:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9994:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9994:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10044:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10055:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10040:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10040:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10060:26:1",
																		"type": "",
																		"value": "add: invalid stake token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10033:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10033:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10033:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10096:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10108:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10119:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10104:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10104:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10096:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0cf1347f111c1e2e524e09dc610066c7514c5455b7c1a7117c8c57b811f17690__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9931:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9945:4:1",
														"type": ""
													}
												],
												"src": "9780:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10307:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10324:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10335:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10317:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10317:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10317:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10358:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10369:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10354:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10374:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10347:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10347:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10347:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10397:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10408:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10393:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10393:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10413:23:1",
																		"type": "",
																		"value": "renew: invalid blocks"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10386:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10386:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10386:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10446:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10458:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10469:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10454:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10454:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10446:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14a26bf1715a2883885317c99f65178522cdf3543484696b4d8003a4076f0c02__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10284:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10298:4:1",
														"type": ""
													}
												],
												"src": "10133:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10657:172:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10674:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10685:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10667:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10667:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10708:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10719:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10704:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10724:2:1",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10697:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10697:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10697:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10747:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10758:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10743:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10743:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10763:24:1",
																		"type": "",
																		"value": "update: invalid length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10736:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10736:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10736:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10797:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10809:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10820:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10805:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10805:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10797:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_206226b2ca3d5a0c768271d8fc891ab16534a45d602f4dc09f7557c6e414751a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10634:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10648:4:1",
														"type": ""
													}
												],
												"src": "10483:346:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11008:165:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11025:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11036:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11018:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11018:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11018:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11059:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11070:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11055:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11055:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11075:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11048:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11048:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11048:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11098:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11109:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11094:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11094:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11114:17:1",
																		"type": "",
																		"value": "invalid pool id"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11087:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11087:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11087:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11141:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11153:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11164:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11149:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11149:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11141:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10985:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10999:4:1",
														"type": ""
													}
												],
												"src": "10834:339:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11352:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11369:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11380:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11362:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11362:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11362:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11403:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11414:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11399:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11399:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11419:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11392:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11392:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11392:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11442:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11453:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11438:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11438:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11458:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11431:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11431:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11431:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11497:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11509:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11520:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11505:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11505:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11497:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11329:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11343:4:1",
														"type": ""
													}
												],
												"src": "11178:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11708:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11725:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11736:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11718:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11718:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11718:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11759:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11770:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11755:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11755:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11775:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11748:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11748:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11748:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11798:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11809:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11794:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11794:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11814:21:1",
																		"type": "",
																		"value": "add: invalid length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11787:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11787:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11787:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11845:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11857:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11868:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11853:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11853:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11845:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_462aec2277423072c98fc656350ffd9dcbb353e1fa9c1cfa13a2fa86f5fec88c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11685:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11699:4:1",
														"type": ""
													}
												],
												"src": "11534:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12056:160:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12073:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12084:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12066:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12066:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12066:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12107:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12118:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12103:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12103:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12123:2:1",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12096:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12096:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12096:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12146:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12157:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12142:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12142:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12162:12:1",
																		"type": "",
																		"value": "only admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12135:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12135:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12135:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12184:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12196:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12207:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12192:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12192:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12184:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12033:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12047:4:1",
														"type": ""
													}
												],
												"src": "11882:334:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12395:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12412:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12423:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12405:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12405:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12405:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12446:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12457:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12442:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12442:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12462:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12435:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12435:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12435:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12485:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12496:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12481:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12481:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12501:32:1",
																		"type": "",
																		"value": "SafeMath: subtraction overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12474:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12474:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12474:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12543:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12555:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12566:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12551:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12543:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12372:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12386:4:1",
														"type": ""
													}
												],
												"src": "12221:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12754:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12771:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12782:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12764:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12764:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12764:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12805:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12816:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12801:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12801:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12821:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12794:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12794:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12794:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12844:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12855:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12840:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12860:34:1",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12833:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12833:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12833:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12915:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12926:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12911:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12911:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12931:8:1",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12904:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12904:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12904:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12949:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12961:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12972:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12957:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12957:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12949:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12731:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12745:4:1",
														"type": ""
													}
												],
												"src": "12580:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13161:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13178:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13189:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13171:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13171:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13171:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13212:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13223:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13208:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13208:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13228:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13201:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13201:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13201:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13251:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13262:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13247:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13247:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13267:23:1",
																		"type": "",
																		"value": "renew: invalid length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13240:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13240:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13240:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13300:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13312:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13323:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13308:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13308:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13300:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_77180fafa0374a12058c9de85e5d1dcedc0242f76b18f525037a0f5138de63c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13138:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13152:4:1",
														"type": ""
													}
												],
												"src": "12987:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13511:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13528:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13539:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13521:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13521:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13521:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13562:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13573:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13558:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13558:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13578:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13551:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13551:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13551:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13601:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13612:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13597:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13597:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13617:31:1",
																		"type": "",
																		"value": "withdraw: insufficient amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13590:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13590:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13590:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13658:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13670:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13681:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13666:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13666:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13658:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8bc8c43108bc0174d691040f1b26bcfd2f362490f17ce12c09ee43c30f8abc24__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13488:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13502:4:1",
														"type": ""
													}
												],
												"src": "13337:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13869:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13886:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13897:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13879:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13879:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13879:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13920:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13931:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13916:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13916:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13936:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13909:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13909:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13909:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13959:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13970:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13955:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13955:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13975:27:1",
																		"type": "",
																		"value": "update: invalid end block"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13948:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13948:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13948:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14012:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14024:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14035:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14020:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14020:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14012:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_900c8e0e4572d8a0c190c3451f1d947ef66467077e2ac335d0c50ed07c0fd304__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13846:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13860:4:1",
														"type": ""
													}
												],
												"src": "13695:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14223:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14240:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14251:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14233:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14233:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14233:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14274:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14285:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14270:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14270:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14290:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14263:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14263:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14263:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14313:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14324:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14309:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14309:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14329:34:1",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14302:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14302:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14302:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14384:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14395:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14380:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14380:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14400:3:1",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14373:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14373:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14373:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14413:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14425:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14436:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14421:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14421:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14413:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14200:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14214:4:1",
														"type": ""
													}
												],
												"src": "14049:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14625:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14642:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14653:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14635:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14635:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14635:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14676:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14687:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14672:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14672:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14692:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14665:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14665:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14665:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14715:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14726:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14711:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14711:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14731:30:1",
																		"type": "",
																		"value": "transfer reward token failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14704:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14704:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14771:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14783:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14794:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14779:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14779:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14771:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_93667b8e945a805956ebe9ea399ecb8c4162704042e6f100fb7621efea8e2b35__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14602:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14616:4:1",
														"type": ""
													}
												],
												"src": "14451:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14982:161:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14999:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15010:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14992:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14992:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14992:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15033:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15044:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15029:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15029:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15049:2:1",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15022:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15022:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15022:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15072:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15083:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15068:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15068:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15088:13:1",
																		"type": "",
																		"value": "not pending"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15061:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15061:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15061:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15111:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15123:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15134:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15119:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15119:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15111:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_98b6cf0d74821485c9d6d314b9997aa0d68cdf087089df382a53d9525093d5fb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14959:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14973:4:1",
														"type": ""
													}
												],
												"src": "14808:335:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15322:156:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15339:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15350:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15332:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15332:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15332:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15373:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15384:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15369:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15369:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15389:1:1",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15362:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15362:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15362:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15411:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15422:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15407:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15407:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15427:9:1",
																		"type": "",
																		"value": "admin 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15400:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15400:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15400:37:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15446:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15458:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15469:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15454:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15454:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15446:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a124f9f9a98ac379e9de3a1a59322560b257fec3dfe6894084a822062ab78fc3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15299:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15313:4:1",
														"type": ""
													}
												],
												"src": "15148:330:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15657:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15674:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15685:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15667:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15667:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15708:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15719:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15704:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15724:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15697:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15697:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15697:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15747:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15758:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15743:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15743:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15763:22:1",
																		"type": "",
																		"value": "add: duplicated pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15736:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15736:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15736:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15795:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15807:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15818:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15803:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15803:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15795:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_afec7c11c0dafba4c83baee4a10fbaa3a43a46dce9b3e2c79ab91a6131e0e8e2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15634:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15648:4:1",
														"type": ""
													}
												],
												"src": "15483:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16006:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16023:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16034:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16016:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16016:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16016:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16057:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16068:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16053:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16053:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16073:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16046:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16046:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16046:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16096:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16107:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16092:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16092:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16112:34:1",
																		"type": "",
																		"value": "renew: invalid pool state to ren"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16085:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16085:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16085:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16167:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16178:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16163:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16163:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16183:4:1",
																		"type": "",
																		"value": "ew"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16156:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16156:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16156:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16197:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16209:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16220:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16205:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16205:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16197:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b31dc5707a57b87f831426ba8c552bc59246657a2e57bf1bc07a78701db6706b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15983:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15997:4:1",
														"type": ""
													}
												],
												"src": "15832:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16409:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16426:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16437:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16419:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16419:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16419:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16460:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16471:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16456:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16456:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16476:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16449:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16449:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16449:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16499:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16510:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16495:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16495:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16515:28:1",
																		"type": "",
																		"value": "update: pool already ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16488:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16488:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16488:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16553:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16565:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16576:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16561:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16561:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16553:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b833683b89b404991bdaae7cd6d4239375c0bb88e3b5fa21acbecc40c4f69f3d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16386:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16400:4:1",
														"type": ""
													}
												],
												"src": "16235:350:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16764:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16781:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16792:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16774:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16774:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16774:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16815:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16826:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16811:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16811:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16831:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16804:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16804:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16804:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16854:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16865:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16850:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16850:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16870:34:1",
																		"type": "",
																		"value": "SafeCast: value doesn't fit in 3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16843:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16843:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16843:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16925:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16936:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16921:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16921:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16941:8:1",
																		"type": "",
																		"value": "2 bits"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16914:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16914:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16914:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16959:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16971:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16982:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16967:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16967:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16959:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16741:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16755:4:1",
														"type": ""
													}
												],
												"src": "16590:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17171:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17188:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17199:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17181:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17181:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17181:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17222:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17233:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17218:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17218:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17238:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17211:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17211:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17211:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17261:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17272:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17257:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17257:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17277:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17250:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17250:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17250:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17318:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17330:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17341:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17326:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17318:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17148:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17162:4:1",
														"type": ""
													}
												],
												"src": "16997:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17529:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17546:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17557:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17539:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17539:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17539:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17580:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17591:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17576:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17576:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17596:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17569:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17569:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17619:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17630:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17615:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17615:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17635:21:1",
																		"type": "",
																		"value": "add: invalid blocks"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17608:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17608:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17608:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17666:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17678:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17689:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17674:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17674:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17666:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc3a2899eec1259623d92efeb6fc5017bc79c7225fde1627f50422d59e8987b9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17506:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17520:4:1",
														"type": ""
													}
												],
												"src": "17355:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17877:161:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17894:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17905:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17887:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17887:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17887:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17928:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17939:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17924:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17924:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17944:2:1",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17917:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17917:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17917:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17967:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17978:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17963:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17963:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17983:13:1",
																		"type": "",
																		"value": "new admin 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17956:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17956:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17956:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18006:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18018:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18029:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18014:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18014:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18006:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cf435a99ab9afadec653f39bd35ef416a47a382474bb2e5c476a72b3c4ffa55e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17854:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17868:4:1",
														"type": ""
													}
												],
												"src": "17703:335:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18217:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18234:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18245:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18227:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18227:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18227:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18268:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18279:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18264:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18264:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18284:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18257:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18257:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18257:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18307:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18318:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18303:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18303:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18323:34:1",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18296:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18296:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18296:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18378:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18389:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18374:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18374:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18394:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18367:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18367:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18367:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18416:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18428:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18439:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18424:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18424:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18416:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18194:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18208:4:1",
														"type": ""
													}
												],
												"src": "18043:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18628:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18645:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18656:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18638:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18638:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18638:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18679:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18690:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18675:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18675:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18695:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18668:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18668:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18668:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18718:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18729:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18714:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18734:33:1",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18707:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18707:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18707:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18777:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18789:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18800:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18785:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18785:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18777:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18605:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18619:4:1",
														"type": ""
													}
												],
												"src": "18454:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18988:244:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19005:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19016:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18998:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18998:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18998:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19039:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19050:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19035:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19035:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19055:2:1",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19028:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19028:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19028:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19078:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19089:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19074:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19074:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19094:34:1",
																		"type": "",
																		"value": "SafeERC20: approve from non-zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19067:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19067:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19067:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19149:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19160:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19145:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19145:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19165:24:1",
																		"type": "",
																		"value": " to non-zero allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19138:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19138:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19138:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19199:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19211:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19222:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19207:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19207:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19199:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18965:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18979:4:1",
														"type": ""
													}
												],
												"src": "18814:418:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19338:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19348:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19360:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19371:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19356:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19356:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19348:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19390:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19401:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19383:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19383:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19383:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19307:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19318:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19329:4:1",
														"type": ""
													}
												],
												"src": "19237:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19782:550:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19799:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19810:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19792:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19792:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19837:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19848:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19833:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19833:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "19857:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "19873:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "19878:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "19869:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19869:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19882:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "19865:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19865:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19853:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19853:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19826:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19826:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19826:60:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19895:20:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "19905:10:1",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "19899:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19935:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19946:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19931:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19931:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "19955:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "19963:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19951:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19951:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19924:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19924:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19924:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19987:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19998:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19983:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19983:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "20007:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "20015:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "20003:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20003:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19976:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19976:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19976:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20039:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20050:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20035:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20035:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "20060:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "20068:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "20056:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20056:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20028:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20028:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20028:44:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20092:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20103:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20088:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20088:19:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20109:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20081:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20081:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20081:32:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20122:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "20171:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20183:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20194:3:1",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20179:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20179:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "20136:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20136:63:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "20126:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20219:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20230:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20215:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20215:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "20240:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20236:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20236:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20208:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20208:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20208:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20268:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "20311:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "20319:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "20276:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20276:50:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20268:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint32_t_uint32_t_uint32_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_address_t_uint32_t_uint32_t_uint32_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19703:9:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "19714:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "19722:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "19730:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "19738:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19746:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19754:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19762:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19773:4:1",
														"type": ""
													}
												],
												"src": "19419:913:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20594:291:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20611:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20622:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20604:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20604:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20604:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20649:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20660:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20645:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20645:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20665:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20638:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20638:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20638:30:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20677:76:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20726:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20738:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20749:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20734:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20734:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "20691:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20691:62:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "20681:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20773:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20784:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20769:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20769:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "20793:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20801:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20789:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20789:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20762:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20762:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20762:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20821:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "20864:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "20872:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "20829:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20829:50:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20821:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20547:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20558:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20566:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20574:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20585:4:1",
														"type": ""
													}
												],
												"src": "20337:548:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21019:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21029:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21041:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21052:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21037:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21037:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21029:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21071:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21082:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21064:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21064:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21064:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21109:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21120:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21105:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21105:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21125:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21098:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21098:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21098:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20980:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20991:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20999:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21010:4:1",
														"type": ""
													}
												],
												"src": "20890:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21196:205:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21206:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "21215:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "21210:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21275:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "21300:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "21305:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "21296:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21296:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "21319:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "21324:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "21315:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "21315:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "21309:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21309:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "21289:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21289:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21289:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "21236:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21239:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "21233:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21233:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "21247:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "21249:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "21258:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21261:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "21254:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21254:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "21249:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "21229:3:1",
																"statements": []
															},
															"src": "21225:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21364:31:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "21377:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "21382:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "21373:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21373:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21391:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "21366:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21366:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21366:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "21353:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21356:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21350:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21350:13:1"
															},
															"nodeType": "YulIf",
															"src": "21347:2:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "21174:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "21179:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21184:6:1",
														"type": ""
													}
												],
												"src": "21143:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21450:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21504:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21513:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21516:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21506:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21506:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21506:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21473:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "21494:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "21487:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "21487:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "21480:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21480:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21470:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21470:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21463:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21463:40:1"
															},
															"nodeType": "YulIf",
															"src": "21460:2:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21439:5:1",
														"type": ""
													}
												],
												"src": "21406:120:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_array$_t_uint256_$dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(arrayPos, arrayPos) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, mul(length, 0x20)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_t_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint32t_uint32t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_uint32(add(headStart, 32))\n        value2 := abi_decode_t_uint32(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(value4, value4) }\n        let value3_1, value4_1 := abi_decode_t_array$_t_uint256_$dyn_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let value0_1, value1_1 := abi_decode_t_array$_t_uint256_$dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_t_bool(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint32t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_uint32(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(value2, value2) }\n        let value2_1, value3_1 := abi_decode_t_array$_t_uint256_$dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_uint256t_uint32t_uint32t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value4, value4) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_uint32(add(headStart, 32))\n        value2 := abi_decode_t_uint32(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(value4, value4) }\n        let value3_1, value4_1 := abi_decode_t_array$_t_uint256_$dyn_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_t_array$_t_uint256_$dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), value1)\n        if gt(value1, sub(shl(251, 1), 1)) { revert(tail, tail) }\n        let length := mul(value1, 32)\n        calldatacopy(add(headStart, 64), value0, length)\n        let _1 := add(add(headStart, length), 64)\n        mstore(_1, tail)\n        tail := _1\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_array$_t_uint256_$dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20Ext_$982_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_contract$_IKyberRewardLocker_$1138__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0cf1347f111c1e2e524e09dc610066c7514c5455b7c1a7117c8c57b811f17690__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"add: invalid stake token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_14a26bf1715a2883885317c99f65178522cdf3543484696b4d8003a4076f0c02__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"renew: invalid blocks\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_206226b2ca3d5a0c768271d8fc891ab16534a45d602f4dc09f7557c6e414751a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"update: invalid length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"invalid pool id\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_462aec2277423072c98fc656350ffd9dcbb353e1fa9c1cfa13a2fa86f5fec88c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"add: invalid length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"only admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"SafeMath: subtraction overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_77180fafa0374a12058c9de85e5d1dcedc0242f76b18f525037a0f5138de63c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"renew: invalid length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8bc8c43108bc0174d691040f1b26bcfd2f362490f17ce12c09ee43c30f8abc24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"withdraw: insufficient amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_900c8e0e4572d8a0c190c3451f1d947ef66467077e2ac335d0c50ed07c0fd304__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"update: invalid end block\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SafeMath: multiplication overflo\")\n        mstore(add(headStart, 96), \"w\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_93667b8e945a805956ebe9ea399ecb8c4162704042e6f100fb7621efea8e2b35__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"transfer reward token failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_98b6cf0d74821485c9d6d314b9997aa0d68cdf087089df382a53d9525093d5fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"not pending\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a124f9f9a98ac379e9de3a1a59322560b257fec3dfe6894084a822062ab78fc3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"admin 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_afec7c11c0dafba4c83baee4a10fbaa3a43a46dce9b3e2c79ab91a6131e0e8e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"add: duplicated pool\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b31dc5707a57b87f831426ba8c552bc59246657a2e57bf1bc07a78701db6706b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"renew: invalid pool state to ren\")\n        mstore(add(headStart, 96), \"ew\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b833683b89b404991bdaae7cd6d4239375c0bb88e3b5fa21acbecc40c4f69f3d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"update: pool already ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 3\")\n        mstore(add(headStart, 96), \"2 bits\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc3a2899eec1259623d92efeb6fc5017bc79c7225fde1627f50422d59e8987b9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"add: invalid blocks\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cf435a99ab9afadec653f39bd35ef416a47a382474bb2e5c476a72b3c4ffa55e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"new admin 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"SafeERC20: approve from non-zero\")\n        mstore(add(headStart, 96), \" to non-zero allowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint32_t_uint32_t_uint32_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_address_t_uint32_t_uint32_t_uint32_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        let _1 := 0xffffffff\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), 224)\n        let tail_1 := abi_encode_t_array$_t_uint256_$dyn(value5, add(headStart, 224))\n        mstore(add(headStart, 192), sub(tail_1, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn(value6, tail_1)\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        let tail_1 := abi_encode_t_array$_t_uint256_$dyn(value1, add(headStart, 96))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn(value2, tail_1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1798": [
									{
										"length": 32,
										"start": 2481
									},
									{
										"length": 32,
										"start": 7431
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061014f5760003560e01c806377f50f97116100b6578063b43c62701161006f578063b43c6270146103c3578063c4f59f9b146103e3578063d12e4ceb14610405578063d18df53c14610425578063ddc6326214610452578063f851a4401461047257610156565b806377f50f971461030e5780637acc8678146103235780637bb7bed114610343578063958e2d3114610363578063adb82b3114610383578063affb9fc8146103a357610156565b80633892601c116101085780633892601c1461025957806343a0d0661461026e578063441a3e701461028e57806352fd9f2f146102ae5780635312ea8e146102ce57806375829def146102ee57610156565b8063081e3eda1461015b5780631069f3b5146101865780631e1c6a07146101b557806326782247146101e25780632f380b35146102045780632fb40ce11461023757610156565b3661015657005b600080fd5b34801561016757600080fd5b50610170610487565b60405161017d9190612998565b60405180910390f35b34801561019257600080fd5b506101a66101a136600461218d565b61048d565b60405161017d93929190612a07565b3480156101c157600080fd5b506101d56101d0366004612073565b6105bf565b60405161017d91906123ee565b3480156101ee57600080fd5b506101f76105d4565b60405161017d91906122e9565b34801561021057600080fd5b5061022461021f36600461215d565b6105e3565b60405161017d97969594939291906129a1565b34801561024357600080fd5b5061025761025236600461208d565b610739565b005b34801561026557600080fd5b506101f76109af565b34801561027a57600080fd5b506102576102893660046121d9565b6109d3565b34801561029a57600080fd5b506102576102a93660046121b8565b610aaf565b3480156102ba57600080fd5b506102576102c9366004612101565b610ae8565b3480156102da57600080fd5b506102576102e936600461215d565b610d53565b3480156102fa57600080fd5b50610257610309366004612073565b610e4b565b34801561031a57600080fd5b50610257610ef4565b34801561032f57600080fd5b5061025761033e366004612073565b610f90565b34801561034f57600080fd5b506101f761035e36600461215d565b61107e565b34801561036f57600080fd5b5061025761037e36600461215d565b6110a8565b34801561038f57600080fd5b5061025761039e36600461215d565b6110fb565b3480156103af57600080fd5b506102576103be366004612211565b611234565b3480156103cf57600080fd5b506102576103de366004612269565b6113b2565b3480156103ef57600080fd5b506103f861157e565b60405161017d9190612354565b34801561041157600080fd5b506102576104203660046121b8565b6115e0565b34801561043157600080fd5b5061044561044036600461218d565b6116d0565b60405161017d91906123db565b34801561045e57600080fd5b5061025761046d36600461215d565b611899565b34801561047e57600080fd5b506101f76118ae565b60055481565b60008281526007602090815260408083206001600160a01b038516845290915290208054600454909160609182919067ffffffffffffffff811180156104d257600080fd5b506040519080825280602002602001820160405280156104fc578160200160208202803683370190505b5060045490935067ffffffffffffffff8111801561051957600080fd5b50604051908082528060200260200182016040528015610543578160200160208202803683370190505b50915060005b6004548110156105b6576000818152600183016020526040902054845185908390811061057257fe5b602002602001018181525050816001016000828152602001908152602001600020600101548382815181106105a357fe5b6020908102919091010152600101610549565b50509250925092565b60036020526000908152604090205460ff1681565b6001546001600160a01b031681565b60008181526006602052604090208054600182015460045491926001600160a01b0382169263ffffffff600160a01b8404811693600160c01b8104821693600160e01b90910490911691606091829167ffffffffffffffff8111801561064857600080fd5b50604051908082528060200260200182016040528015610672578160200160208202803683370190505b5060045490935067ffffffffffffffff8111801561068f57600080fd5b506040519080825280602002602001820160405280156106b9578160200160208202803683370190505b50915060005b60045481101561072c57600081815260028301602052604090205484518590839081106106e857fe5b6020026020010181815250508160020160008281526020019081526020016000206001015483828151811061071957fe5b60209081029190910101526001016106bf565b5050919395979092949650565b6000546001600160a01b0316331461076c5760405162461bcd60e51b81526004016107639061254f565b60405180910390fd5b6001600160a01b03851660009081526003602052604090205460ff16156107a55760405162461bcd60e51b81526004016107639061274b565b6001600160a01b0385166107cb5760405162461bcd60e51b81526004016107639061242c565b60045481146107ec5760405162461bcd60e51b815260040161076390612522565b438463ffffffff1611801561080c57508363ffffffff168363ffffffff16115b6108285760405162461bcd60e51b81526004016107639061286f565b60058054600090815260066020526040808220600190810180546001600160a01b0319166001600160a01b038b16179055835483528183208101805463ffffffff60a01b1916600160a01b63ffffffff8b811691820292909217909255855485528385208301805463ffffffff60c01b1916600160c01b928b1692909202919091179055935483529082200180546001600160e01b0316600160e01b909302929092179091555b8181101561092f5760405180604001604052808484848181106108ee57fe5b6020908102929092013583525060009181018290526005548252600681526040808320858452600201825290912082518155910151600191820155016108cf565b506005805460019081019091556001600160a01b03861660008181526003602052604090819020805460ff1916909317909255905163ffffffff80861692908716917feb19e76b03b99eff4d0329a19e44569c131f242c9590234f19b76f2c56a817a1906109a090879087906123a1565b60405180910390a45050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002805414156109f55760405162461bcd60e51b81526004016107639061290b565b60028055610a02836110fb565b610a0d3384836119d0565b600083815260066020908152604080832060078352818420338086529352922060018301549091610a49916001600160a01b0316903087611bbf565b8054610a559085611be6565b81558154610a639085611be6565b82556040514390869033907f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e90610a9b908990612998565b60405180910390a450506001600255505050565b600280541415610ad15760405162461bcd60e51b81526004016107639061290b565b60028055610adf8282611c14565b50506001600255565b60006004805480602002602001604051908101604052809291908181526020018280548015610b4057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b22575b505050505090506000815167ffffffffffffffff81118015610b6157600080fd5b50604051908082528060200260200182016040528015610b8b578160200160208202803683370190505b509050336000805b85811015610ce857868682818110610ba757fe5b905060200201359150610bb9826110fb565b610bc5838360006119d0565b60005b8551811015610cdf5760008381526007602090815260408083206001600160a01b038816845282528083208484526001019091529020548015610cd657610c2b81878481518110610c1557fe5b6020026020010151611be690919063ffffffff16565b868381518110610c3757fe5b60209081029190910181019190915260008581526007825260408082206001600160a01b03891683528352808220858352600101909252908120558651879083908110610c8057fe5b60200260200101516001600160a01b031684866001600160a01b03167ff75f3d433c6628e04e01a0be1a2c6692a6011ce4b00389824cfa8b8a12f3c1c48443604051610ccd929190612a3c565b60405180910390a45b50600101610bc8565b50600101610b93565b5060005b8351811015610d4a576000848281518110610d0357fe5b60200260200101511115610d4257610d42858281518110610d2057fe5b602002602001015184868481518110610d3557fe5b6020026020010151611ce9565b600101610cec565b50505050505050565b600280541415610d755760405162461bcd60e51b81526004016107639061290b565b600280556000818152600660209081526040808320600783528184203385529092528220805483825591929091905b600454811015610dcf5760008181526001808501602052604082208082018390559190915501610da4565b508254610ddc9082611d8e565b83558015610dfd576001830154610dfd906001600160a01b03163383611db6565b4384336001600160a01b03167f2369db1bafee945aee5630782f4a170682e3f8188d8dc247a4c73eb8c9e692d284604051610e389190612998565b60405180910390a4505060016002555050565b6000546001600160a01b03163314610e755760405162461bcd60e51b81526004016107639061254f565b6001600160a01b038116610e9b5760405162461bcd60e51b81526004016107639061289c565b7f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc4081604051610eca91906122e9565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610f1e5760405162461bcd60e51b815260040161076390612705565b6001546000546040517f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed92610f61926001600160a01b03918216929116906122fd565b60405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b03163314610fba5760405162461bcd60e51b81526004016107639061254f565b6001600160a01b038116610fe05760405162461bcd60e51b81526004016107639061272a565b7f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc408160405161100f91906122e9565b60405180910390a16000546040517f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed916110549184916001600160a01b0316906122fd565b60405180910390a1600080546001600160a01b0319166001600160a01b0392909216919091179055565b6004818154811061108e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6002805414156110ca5760405162461bcd60e51b81526004016107639061290b565b6002805560008181526007602090815260408083203384529091529020546110f3908290611c14565b506001600255565b600554811061111c5760405162461bcd60e51b8152600401610763906124c2565b60008181526006602052604081209061113483611dd5565b600183015490915063ffffffff600160e01b90910481169082161161115a575050611231565b81548061118d57506001909101805463ffffffff909216600160e01b026001600160e01b03909216919091179055611231565b600183015463ffffffff600160e01b909104811683031660005b600454811015611207576000818152600286016020526040812080549091906111d1908590611e0d565b90506111fa856111e68364e8d4a51000611e0d565b816111ed57fe5b6001850154919004611be6565b60019283015550016111a7565b5050506001909101805463ffffffff909216600160e01b026001600160e01b039092169190911790555b50565b6000546001600160a01b0316331461125e5760405162461bcd60e51b81526004016107639061254f565b611267846110fb565b6000848152600660205260409020600181015443600160c01b90910463ffffffff16116112a65760405162461bcd60e51b8152600401610763906127bb565b60045482146112c75760405162461bcd60e51b815260040161076390612492565b438463ffffffff161180156112f05750600181015463ffffffff600160a01b9091048116908516115b61130c5760405162461bcd60e51b815260040161076390612656565b60018101805463ffffffff60c01b1916600160c01b63ffffffff87160217905560005b828110156113695783838281811061134357fe5b60008481526002860160209081526040909120910292909201359091555060010161132f565b508363ffffffff16857fba2d8506275d684e80223910f1065a195ea279f37e27eb97ac24f4107eba6cf985856040516113a39291906123a1565b60405180910390a35050505050565b6000546001600160a01b031633146113dc5760405162461bcd60e51b81526004016107639061254f565b6113e5856110fb565b6000858152600660205260409020600181015443600160a01b90910463ffffffff1611806114245750600181015443600160c01b90910463ffffffff16105b6114405760405162461bcd60e51b815260040161076390612779565b60045482146114615760405162461bcd60e51b8152600401610763906125f0565b438563ffffffff1611801561148157508463ffffffff168463ffffffff16115b61149d5760405162461bcd60e51b815260040161076390612463565b60018101805463ffffffff60a01b1916600160a01b63ffffffff8881169182029290921763ffffffff60c01b1916600160c01b92881692909202919091176001600160e01b0316600160e01b9190910217905560005b8281101561152d5783838281811061150757fe5b6000848152600286016020908152604090912091029290920135909155506001016114f3565b508363ffffffff168563ffffffff16877f4f863dc93468acf71ff8f5770599fbead4d0ff8ea6bd0c3251576f68fdad0904868660405161156e9291906123a1565b60405180910390a4505050505050565b606060048054806020026020016040519081016040528092919081815260200182805480156115d657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116115b8575b5050505050905090565b6000546001600160a01b0316331461160a5760405162461bcd60e51b81526004016107639061254f565b60006004838154811061161957fe5b6000918252602090912001546001600160a01b03169050806116b7576000336001600160a01b03168360405161164e906122e6565b60006040518083038185875af1925050503d806000811461168b576040519150601f19603f3d011682016040523d82523d6000602084013e611690565b606091505b50509050806116b15760405162461bcd60e51b8152600401610763906126ce565b506116cb565b6116cb6001600160a01b0382163384611db6565b505050565b6004546060908067ffffffffffffffff811180156116ed57600080fd5b50604051908082528060200260200182016040528015611717578160200160208202803683370190505b506000858152600660209081526040808320600783528184206001600160a01b038916855290925282208154600183015494965091939092600160e01b90910463ffffffff169061176789611dd5565b905060005b8681101561188c57600081815260028701602052604090206001015463ffffffff83168410801561179c57508415155b156117f25760008281526002880160205260408120546117c99063ffffffff8087168890039190611e0d16565b90506117ee866117de8364e8d4a51000611e0d565b816117e557fe5b84919004611be6565b9150505b600082815260018088016020526040909120015464e8d4a51000906118249061181c908490611d8e565b885490611e0d565b8161182b57fe5b0489838151811061183857fe5b60200260200101818152505061186c866001016000848152602001908152602001600020600001548a8481518110610c1557fe5b89838151811061187857fe5b60209081029190910101525060010161176c565b5050505050505092915050565b6118a2816110fb565b611231338260016119d0565b6000546001600160a01b031681565b8015806119455750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e906118f390309086906004016122fd565b60206040518083038186803b15801561190b57600080fd5b505afa15801561191f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119439190612175565b155b6119615760405162461bcd60e51b815260040161076390612942565b6116cb8363095ea7b360e01b848460405160240161198092919061233b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611e47565b60606119c68484600085611ed6565b90505b9392505050565b60008281526007602090815260408083206001600160a01b038716845290915290205460045481611a5e5760005b81811015611a565760008581526006602090815260408083208484526002018252808320600190810154898552600784528285206001600160a01b038c168652845282852086865282019093529220820155016119fe565b5050506116cb565b60005b81811015611bb75760008581526006602090815260408083208484526002018252808320600190810154898552600784528285206001600160a01b038c16865284528285208686528201909352908320908101549192909164e8d4a5100090611ad690611acf908690611d8e565b8890611e0d565b81611add57fe5b83549190049150611aef908290611be6565b905086611afc5780611aff565b60005b825560018201839055868015611b155750600081115b15611bac57611b4660048581548110611b2a57fe5b6000918252602090912001546001600160a01b03168a83611ce9565b60048481548110611b5357fe5b6000918252602090912001546040516001600160a01b03918216918a91908c16907ff75f3d433c6628e04e01a0be1a2c6692a6011ce4b00389824cfa8b8a12f3c1c490611ba39086904390612a3c565b60405180910390a45b505050600101611a61565b505050505050565b611be0846323b872dd60e01b85858560405160240161198093929190612317565b50505050565b600082820183811015611c0b5760405162461bcd60e51b8152600401610763906124eb565b90505b92915050565b6000828152600660209081526040808320600783528184203385529092529091208054831115611c565760405162461bcd60e51b81526004016107639061261f565b611c5f846110fb565b611c6b338560016119d0565b8054611c779084611d8e565b81558154611c859084611d8e565b82556001820154611ca0906001600160a01b03163385611db6565b4384336001600160a01b03167f02f25270a4d87bea75db541cdfe559334a275b4a233520ed6c0a2429667cca9486604051611cdb9190612998565b60405180910390a450505050565b60006001600160a01b03841615611d01576000611d03565b815b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637750c9f0828686866040518563ffffffff1660e01b8152600401611d5693929190612317565b6000604051808303818588803b158015611d6f57600080fd5b505af1158015611d83573d6000803e3d6000fd5b505050505050505050565b600082821115611db05760405162461bcd60e51b815260040161076390612573565b50900390565b6116cb8363a9059cbb60e01b848460405160240161198092919061233b565b600081815260066020526040902060010154600160c01b900463ffffffff1643811115611e0857611e0543611f96565b90505b919050565b600082611e1c57506000611c0e565b82820282848281611e2957fe5b0414611c0b5760405162461bcd60e51b81526004016107639061268d565b6000611e9c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119b79092919063ffffffff16565b8051909150156116cb5780806020019051810190611eba9190612141565b6116cb5760405162461bcd60e51b8152600401610763906128c1565b606082471015611ef85760405162461bcd60e51b8152600401610763906125aa565b611f0185611fc0565b611f1d5760405162461bcd60e51b815260040161076390612838565b600080866001600160a01b03168587604051611f3991906122ca565b60006040518083038185875af1925050503d8060008114611f76576040519150601f19603f3d011682016040523d82523d6000602084013e611f7b565b606091505b5091509150611f8b828286611fc6565b979650505050505050565b60006401000000008210611fbc5760405162461bcd60e51b8152600401610763906127f2565b5090565b3b151590565b60608315611fd55750816119c9565b825115611fe55782518084602001fd5b8160405162461bcd60e51b815260040161076391906123f9565b80356001600160a01b0381168114611e0857600080fd5b60008083601f840112612027578182fd5b50813567ffffffffffffffff81111561203e578182fd5b602083019150836020808302850101111561205857600080fd5b9250929050565b803563ffffffff81168114611e0857600080fd5b600060208284031215612084578081fd5b6119c982611fff565b6000806000806000608086880312156120a4578081fd5b6120ad86611fff565b94506120bb6020870161205f565b93506120c96040870161205f565b9250606086013567ffffffffffffffff8111156120e4578182fd5b6120f088828901612016565b969995985093965092949392505050565b60008060208385031215612113578182fd5b823567ffffffffffffffff811115612129578283fd5b61213585828601612016565b90969095509350505050565b600060208284031215612152578081fd5b8151611c0b81612a76565b60006020828403121561216e578081fd5b5035919050565b600060208284031215612186578081fd5b5051919050565b6000806040838503121561219f578182fd5b823591506121af60208401611fff565b90509250929050565b600080604083850312156121ca578182fd5b50508035926020909101359150565b6000806000606084860312156121ed578283fd5b8335925060208401359150604084013561220681612a76565b809150509250925092565b60008060008060608587031215612226578384fd5b843593506122366020860161205f565b9250604085013567ffffffffffffffff811115612251578283fd5b61225d87828801612016565b95989497509550505050565b600080600080600060808688031215612280578081fd5b853594506120bb6020870161205f565b6000815180845260208085019450808401835b838110156122bf578151875295820195908201906001016122a3565b509495945050505050565b600082516122dc818460208701612a4a565b9190910192915050565b90565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156123955783516001600160a01b031683529284019291840191600101612370565b50909695505050505050565b6020808252810182905260006001600160fb1b038311156123c0578081fd5b60208302808560408501379190910160400190815292915050565b6000602082526119c96020830184612290565b901515815260200190565b6000602082528251806020840152612418816040850160208701612a4a565b601f01601f19169190910160400192915050565b60208082526018908201527f6164643a20696e76616c6964207374616b6520746f6b656e0000000000000000604082015260600190565b60208082526015908201527472656e65773a20696e76616c696420626c6f636b7360581b604082015260600190565b6020808252601690820152750eae0c8c2e8ca7440d2dcecc2d8d2c840d8cadccee8d60531b604082015260600190565b6020808252600f908201526e1a5b9d985b1a59081c1bdbdb081a59608a1b604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601390820152720c2c8c87440d2dcecc2d8d2c840d8cadccee8d606b1b604082015260600190565b6020808252600a908201526937b7363c9030b236b4b760b11b604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252601590820152740e4cadccaee7440d2dcecc2d8d2c840d8cadccee8d605b1b604082015260600190565b6020808252601d908201527f77697468647261773a20696e73756666696369656e7420616d6f756e74000000604082015260600190565b60208082526019908201527f7570646174653a20696e76616c696420656e6420626c6f636b00000000000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252601c908201527f7472616e736665722072657761726420746f6b656e206661696c656400000000604082015260600190565b6020808252600b908201526a6e6f742070656e64696e6760a81b604082015260600190565b602080825260079082015266061646d696e20360cc1b604082015260600190565b6020808252601490820152731859190e88191d5c1b1a58d85d1959081c1bdbdb60621b604082015260600190565b60208082526022908201527f72656e65773a20696e76616c696420706f6f6c20737461746520746f2072656e604082015261657760f01b606082015260800190565b6020808252601a908201527f7570646174653a20706f6f6c20616c726561647920656e646564000000000000604082015260600190565b60208082526026908201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360408201526532206269747360d01b606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252601390820152726164643a20696e76616c696420626c6f636b7360681b604082015260600190565b6020808252600b908201526a06e65772061646d696e20360ac1b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526036908201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60408201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606082015260800190565b90815260200190565b8781526001600160a01b038716602082015263ffffffff868116604083015285811660608301528416608082015260e060a082018190526000906129e790830185612290565b82810360c08401526129f98185612290565b9a9950505050505050505050565b600084825260606020830152612a206060830185612290565b8281036040840152612a328185612290565b9695505050505050565b918252602082015260400190565b60005b83811015612a65578181015183820152602001612a4d565b83811115611be05750506000910152565b801515811461123157600080fdfea26469706673582212206501143e6c5177ba1bc2dfabf70bab6305305873d3987ac034439213b119322064736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77F50F97 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xB43C6270 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB43C6270 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xC4F59F9B EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0xD12E4CEB EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xD18DF53C EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0xDDC63262 EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x472 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x77F50F97 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x7ACC8678 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x7BB7BED1 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x958E2D31 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xADB82B31 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xAFFB9FC8 EQ PUSH2 0x3A3 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x3892601C GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x3892601C EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x43A0D066 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x52FD9F2F EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x75829DEF EQ PUSH2 0x2EE JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x1069F3B5 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x1E1C6A07 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x26782247 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x2F380B35 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x2FB40CE1 EQ PUSH2 0x237 JUMPI PUSH2 0x156 JUMP JUMPDEST CALLDATASIZE PUSH2 0x156 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x2998 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x218D JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A07 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D5 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x23EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x215D JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x208D JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x9AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2101 JUMP JUMPDEST PUSH2 0xAE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x215D JUMP JUMPDEST PUSH2 0xD53 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x309 CALLDATASIZE PUSH1 0x4 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0xE4B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0xEF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0xF90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x215D JUMP JUMPDEST PUSH2 0x107E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x215D JUMP JUMPDEST PUSH2 0x10A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x215D JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2211 JUMP JUMPDEST PUSH2 0x1234 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x3DE CALLDATASIZE PUSH1 0x4 PUSH2 0x2269 JUMP JUMPDEST PUSH2 0x13B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F8 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x2354 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x420 CALLDATASIZE PUSH1 0x4 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x15E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x445 PUSH2 0x440 CALLDATASIZE PUSH1 0x4 PUSH2 0x218D JUMP JUMPDEST PUSH2 0x16D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x23DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x46D CALLDATASIZE PUSH1 0x4 PUSH2 0x215D JUMP JUMPDEST PUSH2 0x1899 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x4 SLOAD SWAP1 SWAP2 PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4FC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 SWAP4 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x543 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 MLOAD DUP6 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x572 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A3 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x549 JUMP JUMPDEST POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x4 SLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP3 PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL DUP5 DIV DUP2 AND SWAP4 PUSH1 0x1 PUSH1 0xC0 SHL DUP2 DIV DUP3 AND SWAP4 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x60 SWAP2 DUP3 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x672 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 SWAP4 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6B9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x72C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 MLOAD DUP6 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x6E8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x719 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x6BF JUMP JUMPDEST POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x76C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x274B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x242C JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 EQ PUSH2 0x7EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2522 JUMP JUMPDEST NUMBER DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x80C JUMPI POP DUP4 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT JUMPDEST PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x286F JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND OR SWAP1 SSTORE DUP4 SLOAD DUP4 MSTORE DUP2 DUP4 KECCAK256 DUP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH4 0xFFFFFFFF DUP12 DUP2 AND SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE DUP6 SLOAD DUP6 MSTORE DUP4 DUP6 KECCAK256 DUP4 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP3 DUP12 AND SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP4 SLOAD DUP4 MSTORE SWAP1 DUP3 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x92F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x8EE JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x5 SLOAD DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x2 ADD DUP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP2 ADD MLOAD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE ADD PUSH2 0x8CF JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH4 0xFFFFFFFF DUP1 DUP7 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH32 0xEB19E76B03B99EFF4D0329A19E44569C131F242C9590234F19B76F2C56A817A1 SWAP1 PUSH2 0x9A0 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x23A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x290B JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0xA02 DUP4 PUSH2 0x10FB JUMP JUMPDEST PUSH2 0xA0D CALLER DUP5 DUP4 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 CALLER DUP1 DUP7 MSTORE SWAP4 MSTORE SWAP3 KECCAK256 PUSH1 0x1 DUP4 ADD SLOAD SWAP1 SWAP2 PUSH2 0xA49 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 ADDRESS DUP8 PUSH2 0x1BBF JUMP JUMPDEST DUP1 SLOAD PUSH2 0xA55 SWAP1 DUP6 PUSH2 0x1BE6 JUMP JUMPDEST DUP2 SSTORE DUP2 SLOAD PUSH2 0xA63 SWAP1 DUP6 PUSH2 0x1BE6 JUMP JUMPDEST DUP3 SSTORE PUSH1 0x40 MLOAD NUMBER SWAP1 DUP7 SWAP1 CALLER SWAP1 PUSH32 0x36AF321EC8D3C75236829C5317AFFD40DDB308863A1236D2D277A4025CCCEE1E SWAP1 PUSH2 0xA9B SWAP1 DUP10 SWAP1 PUSH2 0x2998 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ ISZERO PUSH2 0xAD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x290B JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0xADF DUP3 DUP3 PUSH2 0x1C14 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xB40 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB22 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xB61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB8B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP CALLER PUSH1 0x0 DUP1 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xCE8 JUMPI DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0xBA7 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP2 POP PUSH2 0xBB9 DUP3 PUSH2 0x10FB JUMP JUMPDEST PUSH2 0xBC5 DUP4 DUP4 PUSH1 0x0 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0xCDF JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xCD6 JUMPI PUSH2 0xC2B DUP2 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC15 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1BE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC37 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP4 MSTORE DUP4 MSTORE DUP1 DUP3 KECCAK256 DUP6 DUP4 MSTORE PUSH1 0x1 ADD SWAP1 SWAP3 MSTORE SWAP1 DUP2 KECCAK256 SSTORE DUP7 MLOAD DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xC80 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF75F3D433C6628E04E01A0BE1A2C6692A6011CE4B00389824CFA8B8A12F3C1C4 DUP5 NUMBER PUSH1 0x40 MLOAD PUSH2 0xCCD SWAP3 SWAP2 SWAP1 PUSH2 0x2A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xBC8 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xB93 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xD4A JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD03 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0xD42 JUMPI PUSH2 0xD42 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD20 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD35 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xCEC JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ ISZERO PUSH2 0xD75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x290B JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD DUP4 DUP3 SSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xDCF JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 DUP3 ADD DUP4 SWAP1 SSTORE SWAP2 SWAP1 SWAP2 SSTORE ADD PUSH2 0xDA4 JUMP JUMPDEST POP DUP3 SLOAD PUSH2 0xDDC SWAP1 DUP3 PUSH2 0x1D8E JUMP JUMPDEST DUP4 SSTORE DUP1 ISZERO PUSH2 0xDFD JUMPI PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0xDFD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x1DB6 JUMP JUMPDEST NUMBER DUP5 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2369DB1BAFEE945AEE5630782F4A170682E3F8188D8DC247A4C73EB8C9E692D2 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE38 SWAP2 SWAP1 PUSH2 0x2998 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH32 0x3B81CAF78FA51ECBC8ACB482FD7012A277B428D9B80F9D156E8A54107496CC40 DUP2 PUSH1 0x40 MLOAD PUSH2 0xECA SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2705 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x65DA1CFC2C2E81576AD96AFB24A581F8E109B7A403B35CBD3243A1C99EFDB9ED SWAP3 PUSH2 0xF61 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 PUSH2 0x22FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x272A JUMP JUMPDEST PUSH32 0x3B81CAF78FA51ECBC8ACB482FD7012A277B428D9B80F9D156E8A54107496CC40 DUP2 PUSH1 0x40 MLOAD PUSH2 0x100F SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x65DA1CFC2C2E81576AD96AFB24A581F8E109B7A403B35CBD3243A1C99EFDB9ED SWAP2 PUSH2 0x1054 SWAP2 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x22FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x108E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ ISZERO PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x290B JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x10F3 SWAP1 DUP3 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT PUSH2 0x111C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x24C2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1134 DUP4 PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD SWAP1 SWAP2 POP PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP3 AND GT PUSH2 0x115A JUMPI POP POP PUSH2 0x1231 JUMP JUMPDEST DUP2 SLOAD DUP1 PUSH2 0x118D JUMPI POP PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV DUP2 AND DUP4 SUB AND PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1207 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x11D1 SWAP1 DUP6 SWAP1 PUSH2 0x1E0D JUMP JUMPDEST SWAP1 POP PUSH2 0x11FA DUP6 PUSH2 0x11E6 DUP4 PUSH5 0xE8D4A51000 PUSH2 0x1E0D JUMP JUMPDEST DUP2 PUSH2 0x11ED JUMPI INVALID JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD SWAP2 SWAP1 DIV PUSH2 0x1BE6 JUMP JUMPDEST PUSH1 0x1 SWAP3 DUP4 ADD SSTORE POP ADD PUSH2 0x11A7 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x125E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH2 0x1267 DUP5 PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD NUMBER PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND GT PUSH2 0x12A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x27BB JUMP JUMPDEST PUSH1 0x4 SLOAD DUP3 EQ PUSH2 0x12C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2492 JUMP JUMPDEST NUMBER DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x12F0 JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP6 AND GT JUMPDEST PUSH2 0x130C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2656 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL PUSH4 0xFFFFFFFF DUP8 AND MUL OR SWAP1 SSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1369 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x1343 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 DUP7 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD SWAP1 SWAP2 SSTORE POP PUSH1 0x1 ADD PUSH2 0x132F JUMP JUMPDEST POP DUP4 PUSH4 0xFFFFFFFF AND DUP6 PUSH32 0xBA2D8506275D684E80223910F1065A195EA279F37E27EB97AC24F4107EBA6CF9 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x13A3 SWAP3 SWAP2 SWAP1 PUSH2 0x23A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH2 0x13E5 DUP6 PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD NUMBER PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND GT DUP1 PUSH2 0x1424 JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD NUMBER PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND LT JUMPDEST PUSH2 0x1440 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2779 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP3 EQ PUSH2 0x1461 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x25F0 JUMP JUMPDEST NUMBER DUP6 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1481 JUMPI POP DUP5 PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND GT JUMPDEST PUSH2 0x149D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH4 0xFFFFFFFF DUP9 DUP2 AND SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 OR PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP3 DUP9 AND SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x152D JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x1507 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 DUP7 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD SWAP1 SWAP2 SSTORE POP PUSH1 0x1 ADD PUSH2 0x14F3 JUMP JUMPDEST POP DUP4 PUSH4 0xFFFFFFFF AND DUP6 PUSH4 0xFFFFFFFF AND DUP8 PUSH32 0x4F863DC93468ACF71FF8F5770599FBEAD4D0FF8EA6BD0C3251576F68FDAD0904 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x156E SWAP3 SWAP2 SWAP1 PUSH2 0x23A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x15D6 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15B8 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x160A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1619 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH2 0x16B7 JUMPI PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x164E SWAP1 PUSH2 0x22E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x168B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x16B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x26CE JUMP JUMPDEST POP PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x16CB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER DUP5 PUSH2 0x1DB6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x60 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x16ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1717 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP6 MSTORE SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP2 SLOAD PUSH1 0x1 DUP4 ADD SLOAD SWAP5 SWAP7 POP SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP1 PUSH2 0x1767 DUP10 PUSH2 0x1DD5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x188C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH4 0xFFFFFFFF DUP4 AND DUP5 LT DUP1 ISZERO PUSH2 0x179C JUMPI POP DUP5 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP9 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x17C9 SWAP1 PUSH4 0xFFFFFFFF DUP1 DUP8 AND DUP9 SWAP1 SUB SWAP2 SWAP1 PUSH2 0x1E0D AND JUMP JUMPDEST SWAP1 POP PUSH2 0x17EE DUP7 PUSH2 0x17DE DUP4 PUSH5 0xE8D4A51000 PUSH2 0x1E0D JUMP JUMPDEST DUP2 PUSH2 0x17E5 JUMPI INVALID JUMPDEST DUP5 SWAP2 SWAP1 DIV PUSH2 0x1BE6 JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP1 DUP9 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x1824 SWAP1 PUSH2 0x181C SWAP1 DUP5 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST DUP9 SLOAD SWAP1 PUSH2 0x1E0D JUMP JUMPDEST DUP2 PUSH2 0x182B JUMPI INVALID JUMPDEST DIV DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1838 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x186C DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC15 JUMPI INVALID JUMPDEST DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1878 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x176C JUMP JUMPDEST POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18A2 DUP2 PUSH2 0x10FB JUMP JUMPDEST PUSH2 0x1231 CALLER DUP3 PUSH1 0x1 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x1945 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH2 0x18F3 SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x22FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x190B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x191F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1943 SWAP2 SWAP1 PUSH2 0x2175 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1961 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2942 JUMP JUMPDEST PUSH2 0x16CB DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1980 SWAP3 SWAP2 SWAP1 PUSH2 0x233B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1E47 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x19C6 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1ED6 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x4 SLOAD DUP2 PUSH2 0x1A5E JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A56 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x2 ADD DUP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP10 DUP6 MSTORE PUSH1 0x7 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP7 DUP7 MSTORE DUP3 ADD SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 DUP3 ADD SSTORE ADD PUSH2 0x19FE JUMP JUMPDEST POP POP POP PUSH2 0x16CB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BB7 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x2 ADD DUP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP10 DUP6 MSTORE PUSH1 0x7 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP7 DUP7 MSTORE DUP3 ADD SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 SWAP1 DUP2 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x1AD6 SWAP1 PUSH2 0x1ACF SWAP1 DUP7 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST DUP9 SWAP1 PUSH2 0x1E0D JUMP JUMPDEST DUP2 PUSH2 0x1ADD JUMPI INVALID JUMPDEST DUP4 SLOAD SWAP2 SWAP1 DIV SWAP2 POP PUSH2 0x1AEF SWAP1 DUP3 SWAP1 PUSH2 0x1BE6 JUMP JUMPDEST SWAP1 POP DUP7 PUSH2 0x1AFC JUMPI DUP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SWAP1 SSTORE DUP7 DUP1 ISZERO PUSH2 0x1B15 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1BAC JUMPI PUSH2 0x1B46 PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1B2A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 DUP4 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1B53 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP11 SWAP2 SWAP1 DUP13 AND SWAP1 PUSH32 0xF75F3D433C6628E04E01A0BE1A2C6692A6011CE4B00389824CFA8B8A12F3C1C4 SWAP1 PUSH2 0x1BA3 SWAP1 DUP7 SWAP1 NUMBER SWAP1 PUSH2 0x2A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0x1A61 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1BE0 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1980 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2317 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1C0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x24EB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD DUP4 GT ISZERO PUSH2 0x1C56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x261F JUMP JUMPDEST PUSH2 0x1C5F DUP5 PUSH2 0x10FB JUMP JUMPDEST PUSH2 0x1C6B CALLER DUP6 PUSH1 0x1 PUSH2 0x19D0 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x1C77 SWAP1 DUP5 PUSH2 0x1D8E JUMP JUMPDEST DUP2 SSTORE DUP2 SLOAD PUSH2 0x1C85 SWAP1 DUP5 PUSH2 0x1D8E JUMP JUMPDEST DUP3 SSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x1CA0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP6 PUSH2 0x1DB6 JUMP JUMPDEST NUMBER DUP5 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2F25270A4D87BEA75DB541CDFE559334A275B4A233520ED6C0A2429667CCA94 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1CDB SWAP2 SWAP1 PUSH2 0x2998 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x1D01 JUMPI PUSH1 0x0 PUSH2 0x1D03 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7750C9F0 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D56 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1DB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2573 JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x16CB DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1980 SWAP3 SWAP2 SWAP1 PUSH2 0x233B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND NUMBER DUP2 GT ISZERO PUSH2 0x1E08 JUMPI PUSH2 0x1E05 NUMBER PUSH2 0x1F96 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1E1C JUMPI POP PUSH1 0x0 PUSH2 0x1C0E JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1E29 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1C0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x268D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E9C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19B7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x16CB JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1EBA SWAP2 SWAP1 PUSH2 0x2141 JUMP JUMPDEST PUSH2 0x16CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x28C1 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1EF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x1F01 DUP6 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0x1F1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1F39 SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F76 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F7B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1F8B DUP3 DUP3 DUP7 PUSH2 0x1FC6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP3 LT PUSH2 0x1FBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x27F2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1FD5 JUMPI POP DUP2 PUSH2 0x19C9 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1FE5 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0x23F9 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2027 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x203E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x2058 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1E08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2084 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x19C9 DUP3 PUSH2 0x1FFF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x20A4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x20AD DUP7 PUSH2 0x1FFF JUMP JUMPDEST SWAP5 POP PUSH2 0x20BB PUSH1 0x20 DUP8 ADD PUSH2 0x205F JUMP JUMPDEST SWAP4 POP PUSH2 0x20C9 PUSH1 0x40 DUP8 ADD PUSH2 0x205F JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E4 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x20F0 DUP9 DUP3 DUP10 ADD PUSH2 0x2016 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2113 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2129 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2135 DUP6 DUP3 DUP7 ADD PUSH2 0x2016 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2152 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1C0B DUP2 PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x216E JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2186 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x219F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x21AF PUSH1 0x20 DUP5 ADD PUSH2 0x1FFF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21CA JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21ED JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x2206 DUP2 PUSH2 0x2A76 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2226 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x2236 PUSH1 0x20 DUP7 ADD PUSH2 0x205F JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2251 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x225D DUP8 DUP3 DUP9 ADD PUSH2 0x2016 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2280 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH2 0x20BB PUSH1 0x20 DUP8 ADD PUSH2 0x205F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22BF JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x22A3 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x22DC DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2A4A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2395 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2370 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x23C0 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x20 DUP4 MUL DUP1 DUP6 PUSH1 0x40 DUP6 ADD CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP1 DUP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x19C9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2290 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2418 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2A4A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x6164643A20696E76616C6964207374616B6520746F6B656E0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x72656E65773A20696E76616C696420626C6F636B73 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0xEAE0C8C2E8CA7440D2DCECC2D8D2C840D8CADCCEE8D PUSH1 0x53 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x1A5B9D985B1A59081C1BDBDB081A59 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0xC2C8C87440D2DCECC2D8D2C840D8CADCCEE8D PUSH1 0x6B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x37B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0xE4CADCCAEE7440D2DCECC2D8D2C840D8CADCCEE8D PUSH1 0x5B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x77697468647261773A20696E73756666696369656E7420616D6F756E74000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x7570646174653A20696E76616C696420656E6420626C6F636B00000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x7472616E736665722072657761726420746F6B656E206661696C656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x6E6F742070656E64696E67 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x61646D696E203 PUSH1 0xCC SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x1859190E88191D5C1B1A58D85D1959081C1BDBDB PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x72656E65773A20696E76616C696420706F6F6C20737461746520746F2072656E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6577 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x7570646174653A20706F6F6C20616C726561647920656E646564000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x322062697473 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x6164643A20696E76616C696420626C6F636B73 PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x6E65772061646D696E203 PUSH1 0xAC SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x20746F206E6F6E2D7A65726F20616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF DUP7 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x29E7 SWAP1 DUP4 ADD DUP6 PUSH2 0x2290 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x29F9 DUP2 DUP6 PUSH2 0x2290 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP3 MSTORE PUSH1 0x60 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2A20 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2290 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2A32 DUP2 DUP6 PUSH2 0x2290 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A65 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A4D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1BE0 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1231 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x1143E6C5177 0xBA SHL 0xC2 0xDF 0xAB 0xF7 SIGNEXTEND 0xAB PUSH4 0x5305873 0xD3 SWAP9 PUSH27 0xC034439213B119322064736F6C6343000706003300000000000000 ",
							"sourceMap": "41959:22360:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44424:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;58687:722;;;;;;;;;;-1:-1:-1;58687:722:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;44064:42::-;;;;;;;;;;-1:-1:-1;44064:42:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4725:27::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;57554:1032::-;;;;;;;;;;-1:-1:-1;57554:1032:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;47299:1230::-;;;;;;;;;;-1:-1:-1;47299:1230:0;;;;;:::i;:::-;;:::i;:::-;;44149:48;;;;;;;;;;;;;:::i;51598:821::-;;;;;;;;;;-1:-1:-1;51598:821:0;;;;;:::i;:::-;;:::i;52614:155::-;;;;;;;;;;-1:-1:-1;52614:155:0;;;;;:::i;:::-;;:::i;54213:1414::-;;;;;;;;;;-1:-1:-1;54213:1414:0;;;;;:::i;:::-;;:::i;53305:742::-;;;;;;;;;;-1:-1:-1;53305:742:0;;;;;:::i;:::-;;:::i;5259:203::-;;;;;;;;;;-1:-1:-1;5259:203:0;;;;;:::i;:::-;;:::i;5996:214::-;;;;;;;;;;;;;:::i;5643:244::-;;;;;;;;;;-1:-1:-1;5643:244:0;;;;;:::i;:::-;;:::i;44359:29::-;;;;;;;;;;-1:-1:-1;44359:29:0;;;;;:::i;:::-;;:::i;52911:135::-;;;;;;;;;;-1:-1:-1;52911:135:0;;;;;:::i;:::-;;:::i;59735:968::-;;;;;;;;;;-1:-1:-1;59735:968:0;;;;;:::i;:::-;;:::i;50455:902::-;;;;;;;;;;-1:-1:-1;50455:902:0;;;;;:::i;:::-;;:::i;48977:1139::-;;;;;;;;;;-1:-1:-1;48977:1139:0;;;;;:::i;:::-;;:::i;57329:156::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;46475:454::-;;;;;;;;;;-1:-1:-1;46475:454:0;;;;;:::i;:::-;;:::i;55822:1442::-;;;;;;;;;;-1:-1:-1;55822:1442:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;59527:141::-;;;;;;;;;;-1:-1:-1;59527:141:0;;;;;:::i;:::-;;:::i;4698:20::-;;;;;;;;;;;;;:::i;44424:34::-;;;;:::o;58687:722::-;58822:14;58987;;;:8;:14;;;;;;;;-1:-1:-1;;;;;58987:24:0;;;;;;;;;59031:11;;59086:12;:19;59031:11;;58851:33;;;;58987:24;59072:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;59072:34:0;-1:-1:-1;59153:12:0;:19;59053:53;;-1:-1:-1;59139:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;59139:34:0;;59117:56;;59189:9;59184:218;59208:12;:19;59204:23;;59184:218;;;59271:22;;;;:19;;;:22;;;;;:38;59249:19;;:16;;59291:1;;59249:19;;;;;;;;;;;:60;;;;;59349:4;:19;;:22;59369:1;59349:22;;;;;;;;;;;:41;;;59324:19;59344:1;59324:22;;;;;;;;;;;;;;;;;:66;59229:3;;59184:218;;;;58687:722;;;;;;:::o;44064:42::-;;;;;;;;;;;;;;;:::o;4725:27::-;;;-1:-1:-1;;;;;4725:27:0;;:::o;57554:1032::-;57671:18;57970:14;;;:8;:14;;;;;58076:15;;58106;;;;58268:12;:19;58076:15;;-1:-1:-1;;;;;58106:15:0;;;58136;-1:-1:-1;;;58136:15:0;;;;;-1:-1:-1;;;58166:13:0;;;;;-1:-1:-1;;;58194:20:0;;;;;;;57836:32;;;;58254:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;58254:34:0;-1:-1:-1;58334:12:0;:19;58236:52;;-1:-1:-1;58320:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;58320:34:0;;58299:55;;58370:9;58365:214;58389:12;:19;58385:23;;58365:214;;;58451:22;;;;:19;;;:22;;;;;:37;58430:18;;:15;;58471:1;;58430:18;;;;;;;;;;;:58;;;;;58527:4;:19;;:22;58547:1;58527:22;;;;;;;;;;;:40;;;58503:18;58522:1;58503:21;;;;;;;;;;;;;;;;;:64;58410:3;;58365:214;;;;57554:1032;;;;;;;;;;:::o;47299:1230::-;5060:5;;-1:-1:-1;;;;;5060:5:0;5046:10;:19;5038:42;;;;-1:-1:-1;;;5038:42:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;47503:23:0;::::1;;::::0;;;:10:::1;:23;::::0;;;;;::::1;;47502:24;47494:57;;;;-1:-1:-1::0;;;47494:57:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;47570:25:0;::::1;47562:62;;;;-1:-1:-1::0;;;47562:62:0::1;;;;;;;:::i;:::-;47657:12;:19:::0;:46;::::1;47635:115;;;;-1:-1:-1::0;;;47635:115:0::1;;;;;;;:::i;:::-;47799:12;47785:11;:26;;;:53;;;;;47827:11;47815:23;;:9;:23;;;47785:53;47763:122;;;;-1:-1:-1::0;;;47763:122:0::1;;;;;;;:::i;:::-;47907:10;::::0;;47898:20:::1;::::0;;;:8:::1;:20;::::0;;;;;:31:::1;::::0;;::::1;:45:::0;;-1:-1:-1;;;;;;47898:45:0::1;-1:-1:-1::0;;;;;47898:45:0;::::1;;::::0;;47963:10;;47954:20;;;;;:31;::::1;:45:::0;;-1:-1:-1;;;;47954:45:0::1;-1:-1:-1::0;;;47954:45:0::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;48019:10;;48010:20;;;;;:29;::::1;:41:::0;;-1:-1:-1;;;;48010:41:0::1;-1:-1:-1::0;;;48010:41:0;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;48071:10;;48062:20;;;;;:36:::1;:50:::0;;-1:-1:-1;;;;;48062:50:0::1;-1:-1:-1::0;;;48062:50:0;;::::1;::::0;;;::::1;::::0;;;48125:246:::1;48145:27:::0;;::::1;48125:246;;;48235:124;;;;;;;;48285:16;;48302:1;48285:19;;;;;;;;::::0;;::::1;::::0;;;::::1;;48235:124:::0;;-1:-1:-1;48342:1:0::1;48235:124:::0;;::::1;::::0;;;48203:10:::1;::::0;48194:20;;:8:::1;:20:::0;;;;;;:38;;;:35:::1;;:38:::0;;;;;:165;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;48174:3:::1;48125:246;;;-1:-1:-1::0;48383:10:0::1;:12:::0;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;;;;;48408:23:0;::::1;48383:10;48408:23:::0;;;:10:::1;:23;::::0;;;;;;:30;;-1:-1:-1;;48408:30:0::1;::::0;;::::1;::::0;;;48456:65;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;48504:16;;;;48456:65:::1;:::i;:::-;;;;;;;;47299:1230:::0;;;;;:::o;44149:48::-;;;:::o;51598:821::-;40532:1;41138:7;;:19;;41130:63;;;;-1:-1:-1;;;41130:63:0;;;;;;;:::i;:::-;40532:1;41271:18;;51791:23:::1;51809:4:::0;51791:17:::1;:23::i;:::-;51825:51;51843:10;51855:4;51861:14;51825:17;:51::i;:::-;51889:21;51913:14:::0;;;:8:::1;:14;::::0;;;;;;;51962:8:::1;:14:::0;;;;;51977:10:::1;51962:26:::0;;;;;;;52042:15:::1;::::0;::::1;::::0;51962:26;;52032:129:::1;::::0;-1:-1:-1;;;;;52042:15:0::1;::::0;52123:4:::1;52143:7:::0;52032:43:::1;:129::i;:::-;52264:11:::0;;:24:::1;::::0;52280:7;52264:15:::1;:24::i;:::-;52250:38:::0;;52317:15;;:28:::1;::::0;52337:7;52317:19:::1;:28::i;:::-;52299:46:::0;;52363:48:::1;::::0;52389:12:::1;::::0;52383:4;;52371:10:::1;::::0;52363:48:::1;::::0;::::1;::::0;52403:7;;52363:48:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;;40488:1:0;41450:7;:22;-1:-1:-1;;;51598:821:0:o;52614:155::-;40532:1;41138:7;;:19;;41130:63;;;;-1:-1:-1;;;41130:63:0;;;;;;;:::i;:::-;40532:1;41271:18;;52737:24:::1;52747:4:::0;52753:7;52737:9:::1;:24::i;:::-;-1:-1:-1::0;;40488:1:0;41450:7;:22;52614:155::o;54213:1414::-;54298:24;54325:12;54298:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;54298:39:0;;;;;;;;;;;;;;;;;;;;;;;54348:29;54394:7;:14;54380:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;54380:29:0;-1:-1:-1;54348:61:0;-1:-1:-1;54438:10:0;54420:15;;54483:929;54503:16;;;54483:929;;;54547:5;;54553:1;54547:8;;;;;;;;;;;;;54541:14;;54570:22;54588:3;54570:17;:22::i;:::-;54661:38;54679:7;54688:3;54693:5;54661:17;:38::i;:::-;54721:9;54716:685;54740:7;:14;54736:1;:18;54716:685;;;54780:14;54797:13;;;:8;:13;;;;;;;;-1:-1:-1;;;;;54797:22:0;;;;;;;;;:62;;;:59;;:62;;;;;:100;54920:10;;54916:470;;54973:27;54993:6;54973:12;54986:1;54973:15;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;54955:12;54968:1;54955:15;;;;;;;;;;;;;;;;;;:45;;;;55134:1;55023:13;;;:8;:13;;;;;;-1:-1:-1;;;;;55023:22:0;;;;;;;;;:66;;;:63;;:66;;;;;;:112;55261:10;;:7;;55087:1;;55261:10;;;;;;;;;;;;-1:-1:-1;;;;;55163:203:0;55231:3;55197:7;-1:-1:-1;;;;;55163:203:0;;55298:6;55331:12;55163:203;;;;;;;:::i;:::-;;;;;;;;54916:470;-1:-1:-1;54756:3:0;;54716:685;;;-1:-1:-1;54521:3:0;;54483:929;;;;55429:9;55424:196;55448:12;:19;55444:1;:23;55424:196;;;55511:1;55493:12;55506:1;55493:15;;;;;;;;;;;;;;:19;55489:120;;;55533:60;55555:7;55563:1;55555:10;;;;;;;;;;;;;;55568:7;55577:12;55590:1;55577:15;;;;;;;;;;;;;;55533:11;:60::i;:::-;55469:3;;55424:196;;;;54213:1414;;;;;;:::o;53305:742::-;40532:1;41138:7;;:19;;41130:63;;;;-1:-1:-1;;;41130:63:0;;;;;;;:::i;:::-;40532:1;41271:18;;53388:21:::1;53412:14:::0;;;:8:::1;:14;::::0;;;;;;;53461:8:::1;:14:::0;;;;;53476:10:::1;53461:26:::0;;;;;;;53515:11;;53539:15;;;53412:14;;53461:26;;53515:11;53565:228:::1;53589:12;:19:::0;53585:23;::::1;53565:228;;;53630:33;53666:22:::0;;;:19:::1;::::0;;::::1;:22;::::0;;;;53703:29;;::::1;:33:::0;;;53751:30;;;;53610:3:::1;53565:228;;;-1:-1:-1::0;53823:15:0;;:27:::1;::::0;53843:6;53823:19:::1;:27::i;:::-;53805:45:::0;;53867:10;;53863:102:::1;;53904:15;::::0;::::1;::::0;53894:59:::1;::::0;-1:-1:-1;;;;;53904:15:0::1;53934:10;53946:6:::0;53894:39:::1;:59::i;:::-;54018:12;54012:4;54000:10;-1:-1:-1::0;;;;;53982:57:0::1;;54032:6;53982:57;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;40488:1:0;41450:7;:22;-1:-1:-1;;53305:742:0:o;5259:203::-;5060:5;;-1:-1:-1;;;;;5060:5:0;5046:10;:19;5038:42;;;;-1:-1:-1;;;5038:42:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5336:22:0;::::1;5328:46;;;;-1:-1:-1::0;;;5328:46:0::1;;;;;;;:::i;:::-;5390:30;5411:8;5390:30;;;;;;:::i;:::-;;;;;;;;5431:12;:23:::0;;-1:-1:-1;;;;;;5431:23:0::1;-1:-1:-1::0;;;;;5431:23:0;;;::::1;::::0;;;::::1;::::0;;5259:203::o;5996:214::-;6044:12;;-1:-1:-1;;;;;6044:12:0;6060:10;6044:26;6036:50;;;;-1:-1:-1;;;6036:50:0;;;;;;;:::i;:::-;6115:12;;;6129:5;6102:33;;;;;;-1:-1:-1;;;;;6115:12:0;;;;6129:5;;;6102:33;:::i;:::-;;;;;;;;6154:12;;;;6146:20;;-1:-1:-1;;;;;;6146:20:0;;;-1:-1:-1;;;;;6154:12:0;;6146:20;;;;6177:25;;;5996:214::o;5643:244::-;5060:5;;-1:-1:-1;;;;;5060:5:0;5046:10;:19;5038:42;;;;-1:-1:-1;;;5038:42:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5727:22:0;::::1;5719:42;;;;-1:-1:-1::0;;;5719:42:0::1;;;;;;;:::i;:::-;5777:30;5798:8;5777:30;;;;;;:::i;:::-;;;;;;;;5846:5;::::0;5823:29:::1;::::0;::::1;::::0;::::1;::::0;5836:8;;-1:-1:-1;;;;;5846:5:0::1;::::0;5823:29:::1;:::i;:::-;;;;;;;;5863:5;:16:::0;;-1:-1:-1;;;;;;5863:16:0::1;-1:-1:-1::0;;;;;5863:16:0;;;::::1;::::0;;;::::1;::::0;;5643:244::o;44359:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;44359:29:0;;-1:-1:-1;44359:29:0;:::o;52911:135::-;40532:1;41138:7;;:19;;41130:63;;;;-1:-1:-1;;;41130:63:0;;;;;;;:::i;:::-;40532:1;41271:18;;53004:14:::1;::::0;;;:8:::1;:14;::::0;;;;;;;53019:10:::1;53004:26:::0;;;;;;;:33;52988:50:::1;::::0;52998:4;;52988:9:::1;:50::i;:::-;-1:-1:-1::0;40488:1:0;41450:7;:22;52911:135::o;59735:968::-;59818:10;;59811:4;:17;59803:45;;;;-1:-1:-1;;;59803:45:0;;;;;;;:::i;:::-;59859:21;59883:14;;;:8;:14;;;;;;59936:31;59892:4;59936:25;:31::i;:::-;60004:20;;;;59908:59;;-1:-1:-1;60004:20:0;-1:-1:-1;;;60004:20:0;;;;;59982:42;;;;59978:55;;60026:7;;;;59978:55;60065:15;;60095:16;60091:111;;-1:-1:-1;60128:20:0;;;;:41;;;;;;-1:-1:-1;;;60128:41:0;-1:-1:-1;;;;;60128:41:0;;;;;;;;;60184:7;;60091:111;60256:20;;;;;-1:-1:-1;;;60256:20:0;;;;;60235:41;;60212:64;:20;60287:357;60311:12;:19;60307:23;;60287:357;;;60352:33;60388:22;;;:19;;;:22;;;;;60459:25;;60388:22;;60352:33;60442:43;;:12;;:16;:43::i;:::-;60425:60;-1:-1:-1;60531:101:0;60606:11;60582:21;60425:60;42187:4;60582:10;:21::i;:::-;:35;;;;;60531:28;;;;;60582:35;;60531:32;:101::i;:::-;60500:28;;;;:132;-1:-1:-1;60332:3:0;60287:357;;;-1:-1:-1;;;60654:20:0;;;;:41;;;;;;-1:-1:-1;;;60654:41:0;-1:-1:-1;;;;;60654:41:0;;;;;;;;;59735:968;;:::o;50455:902::-;5060:5;;-1:-1:-1;;;;;5060:5:0;5046:10;:19;5038:42;;;;-1:-1:-1;;;5038:42:0;;;;;;;:::i;:::-;50617:23:::1;50635:4;50617:17;:23::i;:::-;50653:21;50677:14:::0;;;:8:::1;:14;::::0;;;;50769:13:::1;::::0;::::1;::::0;50785:12:::1;-1:-1:-1::0;;;50769:13:0;;::::1;;;:28;50761:67;;;;-1:-1:-1::0;;;50761:67:0::1;;;;;;;:::i;:::-;50861:12;:19:::0;:46;::::1;50839:118;;;;-1:-1:-1::0;;;50839:118:0::1;;;;;;;:::i;:::-;51002:12;50990:9;:24;;;:55;;;;-1:-1:-1::0;51030:15:0::1;::::0;::::1;::::0;::::1;-1:-1:-1::0;;;51030:15:0;;::::1;::::0;::::1;51018:27:::0;;::::1;;50990:55;50968:130;;;;-1:-1:-1::0;;;50968:130:0::1;;;;;;;:::i;:::-;51111:13;::::0;::::1;:25:::0;;-1:-1:-1;;;;51111:25:0::1;-1:-1:-1::0;;;51111:25:0::1;::::0;::::1;;;::::0;;-1:-1:-1;51147:140:0::1;51167:27:::0;;::::1;51147:140;;;51256:16;;51273:1;51256:19;;;;;;;51216:22;::::0;;;:19:::1;::::0;::::1;51256;51216:22:::0;;;;;;;51256:19;::::1;::::0;;;::::1;;51216:59:::0;;;-1:-1:-1;51196:3:0::1;;51147:140;;;;51321:9;51304:45;;51315:4;51304:45;51332:16;;51304:45;;;;;;;:::i;:::-;;;;;;;;5091:1;50455:902:::0;;;;:::o;48977:1139::-;5060:5;;-1:-1:-1;;;;;5060:5:0;5046:10;:19;5038:42;;;;-1:-1:-1;;;5038:42:0;;;;;;;:::i;:::-;49167:23:::1;49185:4;49167:17;:23::i;:::-;49203:21;49227:14:::0;;;:8:::1;:14;::::0;;;;49333:15:::1;::::0;::::1;::::0;49351:12:::1;-1:-1:-1::0;;;49333:15:0;;::::1;;;:30;::::0;:62:::1;;-1:-1:-1::0;49367:13:0::1;::::0;::::1;::::0;49383:12:::1;-1:-1:-1::0;;;49367:13:0;;::::1;;;:28;49333:62;49311:146;;;;-1:-1:-1::0;;;49311:146:0::1;;;;;;;:::i;:::-;49528:12;:19:::0;:46;::::1;49506:117;;;;-1:-1:-1::0;;;49506:117:0::1;;;;;;;:::i;:::-;49670:12;49656:11;:26;;;:53;;;;;49698:11;49686:23;;:9;:23;;;49656:53;49634:124;;;;-1:-1:-1::0;;;49634:124:0::1;;;;;;;:::i;:::-;49771:15;::::0;::::1;:29:::0;;-1:-1:-1;;;;49771:29:0::1;-1:-1:-1::0;;;49771:29:0::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;49811:25:0::1;-1:-1:-1::0;;;49811:25:0;;::::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;;49847:34:0::1;-1:-1:-1::0;;;49847:34:0;;;::::1;;::::0;;-1:-1:-1;49894:140:0::1;49914:27:::0;;::::1;49894:140;;;50003:16;;50020:1;50003:19;;;;;;;49963:22;::::0;;;:19:::1;::::0;::::1;50003;49963:22:::0;;;;;;;50003:19;::::1;::::0;;;::::1;;49963:59:::0;;;-1:-1:-1;49943:3:0::1;;49894:140;;;;50080:9;50051:57;;50067:11;50051:57;;50061:4;50051:57;50091:16;;50051:57;;;;;;;:::i;:::-;;;;;;;;5091:1;48977:1139:::0;;;;;:::o;57329:156::-;57424:16;57465:12;57458:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;57458:19:0;;;;;;;;;;;;;;;;;;;;;;;57329:156;:::o;46475:454::-;5060:5;;-1:-1:-1;;;;;5060:5:0;5046:10;:19;5038:42;;;;-1:-1:-1;;;5038:42:0;;;;;;;:::i;:::-;46593:21:::1;46627:12;46640:16;46627:30;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;46627:30:0::1;::::0;-1:-1:-1;46673:27:0;46669:253:::1;;46718:12;46736:10;-1:-1:-1::0;;;;;46736:15:0::1;46759:6;46736:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46717:53;;;46793:7;46785:48;;;;-1:-1:-1::0;;;46785:48:0::1;;;;;;;:::i;:::-;46669:253;;;;46866:44;-1:-1:-1::0;;;;;46866:24:0;::::1;46891:10;46903:6:::0;46866:24:::1;:44::i;:::-;5091:1;46475:454:::0;;:::o;55822:1442::-;56009:12;:19;55943:24;;56009:19;56049:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;56049:28:0;-1:-1:-1;56088:21:0;56112:14;;;:8;:14;;;;;;;;56161:8;:14;;;;;-1:-1:-1;;;;;56161:21:0;;;;;;;;;56215:15;;56272:20;;;;56039:38;;-1:-1:-1;56112:14:0;;56161:21;;-1:-1:-1;;;56272:20:0;;;;;;56331:31;56112:14;56331:25;:31::i;:::-;56303:59;;56378:9;56373:884;56397:13;56393:1;:17;56373:884;;;56432:26;56461:40;;;:37;;;:40;;;;;:76;;;56556:41;;;;-1:-1:-1;56556:61:0;;;;-1:-1:-1;56601:16:0;;;56556:61;56552:366;;;56638:14;56725:22;;;:19;;;:22;;;;;:37;56655:108;;56656:41;;;;;;;;56725:37;56655:69;:108;:::i;:::-;56638:125;-1:-1:-1;56803:99:0;56872:11;56848:21;56638:125;42187:4;56848:10;:21::i;:::-;:35;;;;;56803:18;;56848:35;;56803:22;:99::i;:::-;56782:120;;56552:366;;57051:22;;;;:19;;;;:22;;;;;;:41;;42187:4;;56964:170;;57002:113;;:18;;:22;:113::i;:::-;56964:11;;;:15;:170::i;:::-;:199;;;;;;56934:7;56942:1;56934:10;;;;;;;;;;;;;:229;;;;;57191:54;57206:4;:19;;:22;57226:1;57206:22;;;;;;;;;;;:38;;;57191:7;57199:1;57191:10;;;;;;;:54;57178:7;57186:1;57178:10;;;;;;;;;;;;;;;;;:67;-1:-1:-1;56412:3:0;;56373:884;;;;55822:1442;;;;;;;;;;:::o;59527:141::-;59585:23;59603:4;59585:17;:23::i;:::-;59619:41;59637:10;59649:4;59655;59619:17;:41::i;4698:20::-;;;-1:-1:-1;;;;;4698:20:0;;:::o;36366:622::-;36736:10;;;36735:62;;-1:-1:-1;36752:39:0;;-1:-1:-1;;;36752:39:0;;-1:-1:-1;;;;;36752:15:0;;;;;:39;;36776:4;;36783:7;;36752:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;36735:62;36727:152;;;;-1:-1:-1;;;36727:152:0;;;;;;;:::i;:::-;36890:90;36910:5;36940:22;;;36964:7;36973:5;36917:62;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;36917:62:0;;;;;;;;;;;;;;-1:-1:-1;;;;;36917:62:0;-1:-1:-1;;;;;;36917:62:0;;;;;;;;;;36890:19;:90::i;16689:195::-;16792:12;16824:52;16846:6;16854:4;16860:1;16863:12;16824:21;:52::i;:::-;16817:59;;16689:195;;;;;;:::o;61557:2053::-;61685:18;61706:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;61706:19:0;;;;;;;;;:26;61767:12;:19;61803:15;61799:583;;62079:9;62074:276;62098:13;62094:1;:17;62074:276;;;62240:14;;;;:8;:14;;;;;;;;:54;;;:51;;:54;;;;;:94;;;;;62137:14;;;:8;:14;;;;;-1:-1:-1;;;;;62137:19:0;;;;;;;;;:59;;;:56;;:59;;;;;:100;;:197;62113:3;62074:276;;;;62364:7;;;;61799:583;62399:9;62394:1209;62418:13;62414:1;:17;62394:1209;;;62453:29;62485:14;;;:8;:14;;;;;;;;:50;;;:47;;:50;;;;;:86;;;;;62622:14;;;:8;:14;;;;;-1:-1:-1;;;;;62622:19:0;;;;;;;;;:55;;;:52;;:55;;;;;;62893:29;;;;62485:86;;62622:55;;42187:4;;62834:104;;62867:56;;62485:86;;62867:25;:56::i;:::-;62834:10;;:14;:104::i;:::-;:116;;;;;62989:26;;62834:116;;;;-1:-1:-1;62976:40:0;;62834:116;;62976:12;:40::i;:::-;62965:51;;63062:13;:28;;63082:8;63062:28;;;63078:1;63062:28;63033:57;;63191:29;;;:53;;;63265:13;:29;;;;;63293:1;63282:8;:12;63265:29;63261:331;;;63315:54;63337:12;63350:1;63337:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;63337:15:0;63355:3;63360:8;63315:11;:54::i;:::-;63476:12;63489:1;63476:15;;;;;;;;;;;;;;;;;;63393:183;;-1:-1:-1;;;;;63476:15:0;;;;63449:4;;63393:183;;;;;;;;63514:8;;63545:12;;63393:183;:::i;:::-;;;;;;;;63261:331;-1:-1:-1;;;62433:3:0;;62394:1209;;;;61557:2053;;;;;:::o;35892:205::-;35993:96;36013:5;36043:27;;;36072:4;36078:2;36082:5;36020:68;;;;;;;;;;:::i;35993:96::-;35892:205;;;;:::o;30374:179::-;30432:7;30464:5;;;30488:6;;;;30480:46;;;;-1:-1:-1;;;30480:46:0;;;;;;;:::i;:::-;30544:1;-1:-1:-1;30374:179:0;;;;;:::o;60824:631::-;60894:21;60918:14;;;:8;:14;;;;;;;;60967:8;:14;;;;;60982:10;60967:26;;;;;;;;61012:11;;:22;-1:-1:-1;61012:22:0;61004:64;;;;-1:-1:-1;;;61004:64:0;;;;;;;:::i;:::-;61124:23;61142:4;61124:17;:23::i;:::-;61158:41;61176:10;61188:4;61194;61158:17;:41::i;:::-;61226:11;;:24;;61242:7;61226:15;:24::i;:::-;61212:38;;61279:15;;:28;;61299:7;61279:19;:28::i;:::-;61261:46;;61330:15;;;;61320:60;;-1:-1:-1;;;;;61330:15:0;61360:10;61372:7;61320:39;:60::i;:::-;61425:12;61419:4;61407:10;-1:-1:-1;;;;;61398:49:0;;61439:7;61398:49;;;;;;:::i;:::-;;;;;;;;60824:631;;;;:::o;64062:254::-;64189:13;-1:-1:-1;;;;;64205:21:0;;;:35;;64239:1;64205:35;;;64229:7;64205:35;64189:51;;64251:12;-1:-1:-1;;;;;64251:17:0;;64276:5;64283;64290:8;64300:7;64251:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;64062:254;;;;:::o;30836:158::-;30894:7;30927:1;30922;:6;;30914:49;;;;-1:-1:-1;;;30914:49:0;;;;;;;:::i;:::-;-1:-1:-1;30981:5:0;;;30836:158::o;35707:177::-;35790:86;35810:5;35840:23;;;35865:2;35869:5;35817:58;;;;;;;;;:::i;63746:240::-;63845:13;63885:14;;;:8;:14;;;;;:23;;;-1:-1:-1;;;63885:23:0;;;;63932:12;63923:21;;63919:59;;;63955:23;:12;:21;:23::i;:::-;63946:32;;63919:59;63746:240;;;:::o;31253:220::-;31311:7;31335:6;31331:20;;-1:-1:-1;31350:1:0;31343:8;;31331:20;31374:5;;;31378:1;31374;:5;:1;31398:5;;;;;:10;31390:56;;;;-1:-1:-1;;;31390:56:0;;;;;;;:::i;38012:761::-;38436:23;38462:69;38490:4;38462:69;;;;;;;;;;;;;;;;;38470:5;-1:-1:-1;;;;;38462:27:0;;;:69;;;;;:::i;:::-;38546:17;;38436:95;;-1:-1:-1;38546:21:0;38542:224;;38688:10;38677:30;;;;;;;;;;;;:::i;:::-;38669:85;;;;-1:-1:-1;;;38669:85:0;;;;;;;:::i;17741:530::-;17868:12;17926:5;17901:21;:30;;17893:81;;;;-1:-1:-1;;;17893:81:0;;;;;;;:::i;:::-;17993:18;18004:6;17993:10;:18::i;:::-;17985:60;;;;-1:-1:-1;;;17985:60:0;;;;;;;:::i;:::-;18119:12;18133:23;18160:6;-1:-1:-1;;;;;18160:11:0;18180:5;18188:4;18160:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18118:75;;;;18211:52;18229:7;18238:10;18250:12;18211:17;:52::i;:::-;18204:59;17741:530;-1:-1:-1;;;;;;;17741:530:0:o;8320:179::-;8376:6;8411:5;8403;:13;8395:65;;;;-1:-1:-1;;;8395:65:0;;;;;;;:::i;:::-;-1:-1:-1;8485:5:0;8320:179::o;13771:422::-;14138:20;14177:8;;;13771:422::o;20281:742::-;20396:12;20425:7;20421:595;;;-1:-1:-1;20456:10:0;20449:17;;20421:595;20570:17;;:21;20566:439;;20833:10;20827:17;20894:15;20881:10;20877:2;20873:19;20866:44;20781:148;20976:12;20969:20;;-1:-1:-1;;;20969:20:0;;;;;;;;:::i;14:175:1:-;84:20;;-1:-1:-1;;;;;133:31:1;;123:42;;113:2;;179:1;176;169:12;194:404;;;327:3;320:4;312:6;308:17;304:27;294:2;;352:8;342;335:26;294:2;-1:-1:-1;382:20:1;;425:18;414:30;;411:2;;;464:8;454;447:26;411:2;508:4;500:6;496:17;484:29;;571:3;564:4;556;548:6;544:17;536:6;532:30;528:41;525:50;522:2;;;588:1;585;578:12;522:2;284:314;;;;;:::o;603:165::-;672:20;;732:10;721:22;;711:33;;701:2;;758:1;755;748:12;773:198;;885:2;873:9;864:7;860:23;856:32;853:2;;;906:6;898;891:22;853:2;934:31;955:9;934:31;:::i;976:688::-;;;;;;1172:3;1160:9;1151:7;1147:23;1143:33;1140:2;;;1194:6;1186;1179:22;1140:2;1222:31;1243:9;1222:31;:::i;:::-;1212:41;;1272:39;1307:2;1296:9;1292:18;1272:39;:::i;:::-;1262:49;;1330:39;1365:2;1354:9;1350:18;1330:39;:::i;:::-;1320:49;;1420:2;1409:9;1405:18;1392:32;1447:18;1439:6;1436:30;1433:2;;;1484:6;1476;1469:22;1433:2;1528:76;1596:7;1587:6;1576:9;1572:22;1528:76;:::i;:::-;1130:534;;;;-1:-1:-1;1130:534:1;;-1:-1:-1;1623:8:1;;1502:102;1130:534;-1:-1:-1;;;1130:534:1:o;1669:463::-;;;1816:2;1804:9;1795:7;1791:23;1787:32;1784:2;;;1837:6;1829;1822:22;1784:2;1882:9;1869:23;1915:18;1907:6;1904:30;1901:2;;;1952:6;1944;1937:22;1901:2;1996:76;2064:7;2055:6;2044:9;2040:22;1996:76;:::i;:::-;2091:8;;1970:102;;-1:-1:-1;1774:358:1;-1:-1:-1;;;;1774:358:1:o;2137:257::-;;2257:2;2245:9;2236:7;2232:23;2228:32;2225:2;;;2278:6;2270;2263:22;2225:2;2315:9;2309:16;2334:30;2358:5;2334:30;:::i;2399:190::-;;2511:2;2499:9;2490:7;2486:23;2482:32;2479:2;;;2532:6;2524;2517:22;2479:2;-1:-1:-1;2560:23:1;;2469:120;-1:-1:-1;2469:120:1:o;2594:194::-;;2717:2;2705:9;2696:7;2692:23;2688:32;2685:2;;;2738:6;2730;2723:22;2685:2;-1:-1:-1;2766:16:1;;2675:113;-1:-1:-1;2675:113:1:o;2793:266::-;;;2922:2;2910:9;2901:7;2897:23;2893:32;2890:2;;;2943:6;2935;2928:22;2890:2;2984:9;2971:23;2961:33;;3013:40;3049:2;3038:9;3034:18;3013:40;:::i;:::-;3003:50;;2880:179;;;;;:::o;3064:258::-;;;3193:2;3181:9;3172:7;3168:23;3164:32;3161:2;;;3214:6;3206;3199:22;3161:2;-1:-1:-1;;3242:23:1;;;3312:2;3297:18;;;3284:32;;-1:-1:-1;3151:171:1:o;3327:389::-;;;;3470:2;3458:9;3449:7;3445:23;3441:32;3438:2;;;3491:6;3483;3476:22;3438:2;3532:9;3519:23;3509:33;;3589:2;3578:9;3574:18;3561:32;3551:42;;3643:2;3632:9;3628:18;3615:32;3656:30;3680:5;3656:30;:::i;:::-;3705:5;3695:15;;;3428:288;;;;;:::o;3721:605::-;;;;;3901:2;3889:9;3880:7;3876:23;3872:32;3869:2;;;3922:6;3914;3907:22;3869:2;3963:9;3950:23;3940:33;;3992:39;4027:2;4016:9;4012:18;3992:39;:::i;:::-;3982:49;;4082:2;4071:9;4067:18;4054:32;4109:18;4101:6;4098:30;4095:2;;;4146:6;4138;4131:22;4095:2;4190:76;4258:7;4249:6;4238:9;4234:22;4190:76;:::i;:::-;3859:467;;;;-1:-1:-1;4285:8:1;-1:-1:-1;;;;3859:467:1:o;4331:680::-;;;;;;4527:3;4515:9;4506:7;4502:23;4498:33;4495:2;;;4549:6;4541;4534:22;4495:2;4590:9;4577:23;4567:33;;4619:39;4654:2;4643:9;4639:18;4619:39;:::i;5016:443::-;;5113:5;5107:12;5140:6;5135:3;5128:19;5166:4;5195:2;5190:3;5186:12;5179:19;;5232:2;5225:5;5221:14;5253:3;5265:169;5279:6;5276:1;5273:13;5265:169;;;5340:13;;5328:26;;5374:12;;;;5409:15;;;;5301:1;5294:9;5265:169;;;-1:-1:-1;5450:3:1;;5083:376;-1:-1:-1;;;;;5083:376:1:o;5464:274::-;;5631:6;5625:13;5647:53;5693:6;5688:3;5681:4;5673:6;5669:17;5647:53;:::i;:::-;5716:16;;;;;5601:137;-1:-1:-1;;5601:137:1:o;5743:205::-;5943:3;5934:14::o;5953:203::-;-1:-1:-1;;;;;6117:32:1;;;;6099:51;;6087:2;6072:18;;6054:102::o;6161:304::-;-1:-1:-1;;;;;6391:15:1;;;6373:34;;6443:15;;6438:2;6423:18;;6416:43;6323:2;6308:18;;6290:175::o;6470:375::-;-1:-1:-1;;;;;6728:15:1;;;6710:34;;6780:15;;;;6775:2;6760:18;;6753:43;6827:2;6812:18;;6805:34;;;;6660:2;6645:18;;6627:218::o;6850:274::-;-1:-1:-1;;;;;7042:32:1;;;;7024:51;;7106:2;7091:18;;7084:34;7012:2;6997:18;;6979:145::o;7129:661::-;7300:2;7352:21;;;7422:13;;7325:18;;;7444:22;;;7129:661;;7300:2;7523:15;;;;7497:2;7482:18;;;7129:661;7569:195;7583:6;7580:1;7577:13;7569:195;;;7648:13;;-1:-1:-1;;;;;7644:39:1;7632:52;;7739:15;;;;7704:12;;;;7680:1;7598:9;7569:195;;;-1:-1:-1;7781:3:1;;7280:510;-1:-1:-1;;;;;;7280:510:1:o;7795:496::-;7984:2;7966:21;;;8003:18;;7996:34;;;7795:496;-1:-1:-1;;;;;8042:31:1;;8039:2;;;8089:4;8083;8076:18;8039:2;8131;8123:6;8119:15;8184:6;8176;8171:2;8160:9;8156:18;8143:48;8214:22;;;;8238:2;8210:31;8250:16;;;8210:31;7956:335;-1:-1:-1;;7956:335:1:o;8296:267::-;;8475:2;8464:9;8457:21;8495:62;8553:2;8542:9;8538:18;8530:6;8495:62;:::i;8568:187::-;8733:14;;8726:22;8708:41;;8696:2;8681:18;;8663:92::o;9392:383::-;;9541:2;9530:9;9523:21;9573:6;9567:13;9616:6;9611:2;9600:9;9596:18;9589:34;9632:66;9691:6;9686:2;9675:9;9671:18;9666:2;9658:6;9654:15;9632:66;:::i;:::-;9759:2;9738:15;-1:-1:-1;;9734:29:1;9719:45;;;;9766:2;9715:54;;9513:262;-1:-1:-1;;9513:262:1:o;9780:348::-;9982:2;9964:21;;;10021:2;10001:18;;;9994:30;10060:26;10055:2;10040:18;;10033:54;10119:2;10104:18;;9954:174::o;10133:345::-;10335:2;10317:21;;;10374:2;10354:18;;;10347:30;-1:-1:-1;;;10408:2:1;10393:18;;10386:51;10469:2;10454:18;;10307:171::o;10483:346::-;10685:2;10667:21;;;10724:2;10704:18;;;10697:30;-1:-1:-1;;;10758:2:1;10743:18;;10736:52;10820:2;10805:18;;10657:172::o;10834:339::-;11036:2;11018:21;;;11075:2;11055:18;;;11048:30;-1:-1:-1;;;11109:2:1;11094:18;;11087:45;11164:2;11149:18;;11008:165::o;11178:351::-;11380:2;11362:21;;;11419:2;11399:18;;;11392:30;11458:29;11453:2;11438:18;;11431:57;11520:2;11505:18;;11352:177::o;11534:343::-;11736:2;11718:21;;;11775:2;11755:18;;;11748:30;-1:-1:-1;;;11809:2:1;11794:18;;11787:49;11868:2;11853:18;;11708:169::o;11882:334::-;12084:2;12066:21;;;12123:2;12103:18;;;12096:30;-1:-1:-1;;;12157:2:1;12142:18;;12135:40;12207:2;12192:18;;12056:160::o;12221:354::-;12423:2;12405:21;;;12462:2;12442:18;;;12435:30;12501:32;12496:2;12481:18;;12474:60;12566:2;12551:18;;12395:180::o;12580:402::-;12782:2;12764:21;;;12821:2;12801:18;;;12794:30;12860:34;12855:2;12840:18;;12833:62;-1:-1:-1;;;12926:2:1;12911:18;;12904:36;12972:3;12957:19;;12754:228::o;12987:345::-;13189:2;13171:21;;;13228:2;13208:18;;;13201:30;-1:-1:-1;;;13262:2:1;13247:18;;13240:51;13323:2;13308:18;;13161:171::o;13337:353::-;13539:2;13521:21;;;13578:2;13558:18;;;13551:30;13617:31;13612:2;13597:18;;13590:59;13681:2;13666:18;;13511:179::o;13695:349::-;13897:2;13879:21;;;13936:2;13916:18;;;13909:30;13975:27;13970:2;13955:18;;13948:55;14035:2;14020:18;;13869:175::o;14049:397::-;14251:2;14233:21;;;14290:2;14270:18;;;14263:30;14329:34;14324:2;14309:18;;14302:62;-1:-1:-1;;;14395:2:1;14380:18;;14373:31;14436:3;14421:19;;14223:223::o;14451:352::-;14653:2;14635:21;;;14692:2;14672:18;;;14665:30;14731;14726:2;14711:18;;14704:58;14794:2;14779:18;;14625:178::o;14808:335::-;15010:2;14992:21;;;15049:2;15029:18;;;15022:30;-1:-1:-1;;;15083:2:1;15068:18;;15061:41;15134:2;15119:18;;14982:161::o;15148:330::-;15350:2;15332:21;;;15389:1;15369:18;;;15362:29;-1:-1:-1;;;15422:2:1;15407:18;;15400:37;15469:2;15454:18;;15322:156::o;15483:344::-;15685:2;15667:21;;;15724:2;15704:18;;;15697:30;-1:-1:-1;;;15758:2:1;15743:18;;15736:50;15818:2;15803:18;;15657:170::o;15832:398::-;16034:2;16016:21;;;16073:2;16053:18;;;16046:30;16112:34;16107:2;16092:18;;16085:62;-1:-1:-1;;;16178:2:1;16163:18;;16156:32;16220:3;16205:19;;16006:224::o;16235:350::-;16437:2;16419:21;;;16476:2;16456:18;;;16449:30;16515:28;16510:2;16495:18;;16488:56;16576:2;16561:18;;16409:176::o;16590:402::-;16792:2;16774:21;;;16831:2;16811:18;;;16804:30;16870:34;16865:2;16850:18;;16843:62;-1:-1:-1;;;16936:2:1;16921:18;;16914:36;16982:3;16967:19;;16764:228::o;16997:353::-;17199:2;17181:21;;;17238:2;17218:18;;;17211:30;17277:31;17272:2;17257:18;;17250:59;17341:2;17326:18;;17171:179::o;17355:343::-;17557:2;17539:21;;;17596:2;17576:18;;;17569:30;-1:-1:-1;;;17630:2:1;17615:18;;17608:49;17689:2;17674:18;;17529:169::o;17703:335::-;17905:2;17887:21;;;17944:2;17924:18;;;17917:30;-1:-1:-1;;;17978:2:1;17963:18;;17956:41;18029:2;18014:18;;17877:161::o;18043:406::-;18245:2;18227:21;;;18284:2;18264:18;;;18257:30;18323:34;18318:2;18303:18;;18296:62;-1:-1:-1;;;18389:2:1;18374:18;;18367:40;18439:3;18424:19;;18217:232::o;18454:355::-;18656:2;18638:21;;;18695:2;18675:18;;;18668:30;18734:33;18729:2;18714:18;;18707:61;18800:2;18785:18;;18628:181::o;18814:418::-;19016:2;18998:21;;;19055:2;19035:18;;;19028:30;19094:34;19089:2;19074:18;;19067:62;-1:-1:-1;;;19160:2:1;19145:18;;19138:52;19222:3;19207:19;;18988:244::o;19237:177::-;19383:25;;;19371:2;19356:18;;19338:76::o;19419:913::-;19792:25;;;-1:-1:-1;;;;;19853:32:1;;19848:2;19833:18;;19826:60;19905:10;19951:15;;;19946:2;19931:18;;19924:43;20003:15;;;19998:2;19983:18;;19976:43;20056:15;;20050:3;20035:19;;20028:44;20109:3;19873;20088:19;;20081:32;;;19419:913;;20136:63;;20179:19;;20171:6;20136:63;:::i;:::-;20248:9;20240:6;20236:22;20230:3;20219:9;20215:19;20208:51;20276:50;20319:6;20311;20276:50;:::i;:::-;20268:58;19782:550;-1:-1:-1;;;;;;;;;;19782:550:1:o;20337:548::-;;20622:6;20611:9;20604:25;20665:2;20660;20649:9;20645:18;20638:30;20691:62;20749:2;20738:9;20734:18;20726:6;20691:62;:::i;:::-;20801:9;20793:6;20789:22;20784:2;20773:9;20769:18;20762:50;20829;20872:6;20864;20829:50;:::i;:::-;20821:58;20594:291;-1:-1:-1;;;;;;20594:291:1:o;20890:248::-;21064:25;;;21120:2;21105:18;;21098:34;21052:2;21037:18;;21019:119::o;21143:258::-;21215:1;21225:113;21239:6;21236:1;21233:13;21225:113;;;21315:11;;;21309:18;21296:11;;;21289:39;21261:2;21254:10;21225:113;;;21356:6;21353:1;21350:13;21347:2;;;-1:-1:-1;;21391:1:1;21373:16;;21366:27;21196:205::o;21406:120::-;21494:5;21487:13;21480:21;21473:5;21470:32;21460:2;;21516:1;21513;21506:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2187600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addPool(address,uint32,uint32,uint256[])": "infinite",
								"admin()": "1202",
								"adminWithdraw(uint256,uint256)": "infinite",
								"claimAdmin()": "45709",
								"deposit(uint256,uint256,bool)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"getPoolInfo(uint256)": "infinite",
								"getRewardTokens()": "infinite",
								"getUserInfo(uint256,address)": "infinite",
								"harvest(uint256)": "infinite",
								"harvestMultiplePools(uint256[])": "infinite",
								"pendingAdmin()": "1160",
								"pendingRewards(uint256,address)": "infinite",
								"poolExists(address)": "1332",
								"poolLength()": "1052",
								"renewPool(uint256,uint32,uint32,uint256[])": "infinite",
								"rewardLocker()": "infinite",
								"rewardTokens(uint256)": "2105",
								"transferAdmin(address)": "23293",
								"transferAdminQuickly(address)": "25414",
								"updatePool(uint256,uint32,uint256[])": "infinite",
								"updatePoolRewards(uint256)": "infinite",
								"withdraw(uint256,uint256)": "infinite",
								"withdrawAll(uint256)": "infinite"
							},
							"internal": {
								"_lastAccountedRewardBlock(uint256)": "infinite",
								"_lockReward(contract IERC20Ext,address,uint256)": "infinite",
								"_updateUserReward(address,uint256,bool)": "infinite",
								"_withdraw(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 45912,
									"end": 45918,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4933,
									"end": 4953,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4933,
									"end": 4953,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 4925,
									"end": 4965,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4976,
									"end": 4981,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4976,
									"end": 4990,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4976,
									"end": 4990,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4976,
									"end": 4990,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4976,
									"end": 4990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 4976,
									"end": 4990,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4976,
									"end": 4990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 4976,
									"end": 4990,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4976,
									"end": 4990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4976,
									"end": 4990,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4976,
									"end": 4990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4976,
									"end": 4990,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 4976,
									"end": 4990,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4976,
									"end": 4990,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 40609,
									"end": 40616,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 40609,
									"end": 40631,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 45931,
									"end": 45959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 45931,
									"end": 45959,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 45931,
									"end": 45959,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 45931,
									"end": 45959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 45931,
									"end": 45943,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 45931,
									"end": 45943,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 45931,
									"end": 45959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 45931,
									"end": 45959,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 45931,
									"end": 45959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 45931,
									"end": 45959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 45931,
									"end": 45959,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 45931,
									"end": 45959,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 45931,
									"end": 45959,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 45931,
									"end": 45959,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 45970,
									"end": 45998,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 45970,
									"end": 45998,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 45970,
									"end": 45998,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 45970,
									"end": 45998,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 45970,
									"end": 45998,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 45970,
									"end": 45998,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 45970,
									"end": 45998,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 46063,
									"end": 46072,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 46058,
									"end": 46349,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 46058,
									"end": 46349,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 46082,
									"end": 46095,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 46082,
									"end": 46102,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 46078,
									"end": 46079,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 46078,
									"end": 46102,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 46058,
									"end": 46349,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 46058,
									"end": 46349,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 46058,
									"end": 46349,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 46156,
									"end": 46157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 46128,
									"end": 46158,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 46128,
									"end": 46141,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 46142,
									"end": 46143,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 46128,
									"end": 46144,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 46128,
									"end": 46144,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 46128,
									"end": 46144,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 46128,
									"end": 46144,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 46128,
									"end": 46144,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 46128,
									"end": 46144,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 46128,
									"end": 46144,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 46128,
									"end": 46144,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 46128,
									"end": 46144,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 46128,
									"end": 46144,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 46128,
									"end": 46144,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 46128,
									"end": 46144,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 46128,
									"end": 46144,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 46128,
									"end": 46144,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 46128,
									"end": 46144,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 46128,
									"end": 46158,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 46128,
									"end": 46158,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 46124,
									"end": 46338,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 46124,
									"end": 46338,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 46179,
									"end": 46322,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 46249,
									"end": 46262,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 46189,
									"end": 46202,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 46203,
									"end": 46204,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 46189,
									"end": 46205,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 46189,
									"end": 46205,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 46189,
									"end": 46205,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 46189,
									"end": 46205,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 46189,
									"end": 46205,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 46189,
									"end": 46205,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 46189,
									"end": 46205,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 46189,
									"end": 46205,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 46189,
									"end": 46205,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 46189,
									"end": 46205,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 46189,
									"end": 46205,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 46189,
									"end": 46205,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 46189,
									"end": 46205,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 46189,
									"end": 46205,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 46189,
									"end": 46205,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 46179,
									"end": 46218,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 46179,
									"end": 46218,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 46179,
									"end": 46218,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 46179,
									"end": 46218,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 46179,
									"end": 46218,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551765"
								},
								{
									"begin": 46179,
									"end": 46218,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 46179,
									"end": 46218,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 46179,
									"end": 46322,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 46179,
									"end": 46322,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 46179,
									"end": 46322,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 46179,
									"end": 46322,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 46179,
									"end": 46322,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 46179,
									"end": 46322,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 46179,
									"end": 46322,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 46179,
									"end": 46322,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 46104,
									"end": 46107,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 46104,
									"end": 46107,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 46058,
									"end": 46349,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 46058,
									"end": 46349,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 46058,
									"end": 46349,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 46058,
									"end": 46349,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 46058,
									"end": 46349,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 45768,
									"end": 46356,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "83"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 36366,
									"end": 36988,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 36366,
									"end": 36988,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36736,
									"end": 36746,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36736,
									"end": 36746,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 36736,
									"end": 36746,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36735,
									"end": 36797,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 36735,
									"end": 36797,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6EB1769F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 36752,
									"end": 36767,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36767,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36767,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36767,
									"name": "PUSH",
									"source": 0,
									"value": "DD62ED3E"
								},
								{
									"begin": 36752,
									"end": 36767,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36776,
									"end": 36780,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 36776,
									"end": 36780,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36783,
									"end": 36790,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 36783,
									"end": 36790,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "STATICCALL",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 36752,
									"end": 36791,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36752,
									"end": 36796,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 36735,
									"end": 36797,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 36735,
									"end": 36797,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36727,
									"end": 36879,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 36727,
									"end": 36879,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 36727,
									"end": 36879,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36727,
									"end": 36879,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 36727,
									"end": 36879,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36727,
									"end": 36879,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36727,
									"end": 36879,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 36727,
									"end": 36879,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36727,
									"end": 36879,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 36727,
									"end": 36879,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36727,
									"end": 36879,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 36727,
									"end": 36879,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 36727,
									"end": 36879,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 36727,
									"end": 36879,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36890,
									"end": 36980,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 36910,
									"end": 36915,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 36940,
									"end": 36962,
									"name": "PUSH",
									"source": 0,
									"value": "95EA7B3"
								},
								{
									"begin": 36940,
									"end": 36962,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 36940,
									"end": 36962,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 36964,
									"end": 36971,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 36973,
									"end": 36978,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36917,
									"end": 36979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36890,
									"end": 36909,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 36890,
									"end": 36980,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 36890,
									"end": 36980,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 36890,
									"end": 36980,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 36890,
									"end": 36980,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36366,
									"end": 36988,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36366,
									"end": 36988,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36366,
									"end": 36988,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36366,
									"end": 36988,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 38012,
									"end": 38773,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 38012,
									"end": 38773,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38436,
									"end": 38459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 38490,
									"end": 38494,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "PUSH",
									"source": 0,
									"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38470,
									"end": 38475,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 38462,
									"end": 38489,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38462,
									"end": 38489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 38462,
									"end": 38489,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38462,
									"end": 38489,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 38462,
									"end": 38489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551766"
								},
								{
									"begin": 38462,
									"end": 38489,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 38462,
									"end": 38489,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 38462,
									"end": 38531,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38546,
									"end": 38563,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38546,
									"end": 38563,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38436,
									"end": 38531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38436,
									"end": 38531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 38546,
									"end": 38567,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38542,
									"end": 38766,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 38542,
									"end": 38766,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38688,
									"end": 38698,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38677,
									"end": 38707,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38677,
									"end": 38707,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38677,
									"end": 38707,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38677,
									"end": 38707,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38677,
									"end": 38707,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38677,
									"end": 38707,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38677,
									"end": 38707,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38677,
									"end": 38707,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38677,
									"end": 38707,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 38677,
									"end": 38707,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38677,
									"end": 38707,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38677,
									"end": 38707,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 38677,
									"end": 38707,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 38677,
									"end": 38707,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 38677,
									"end": 38707,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38669,
									"end": 38754,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 38669,
									"end": 38754,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38669,
									"end": 38754,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 38669,
									"end": 38754,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 38669,
									"end": 38754,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38669,
									"end": 38754,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38669,
									"end": 38754,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 38669,
									"end": 38754,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38669,
									"end": 38754,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 38669,
									"end": 38754,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38669,
									"end": 38754,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 38669,
									"end": 38754,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 16689,
									"end": 16884,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 16689,
									"end": 16884,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16792,
									"end": 16804,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 16824,
									"end": 16876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 16846,
									"end": 16852,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 16854,
									"end": 16858,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 16860,
									"end": 16861,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16863,
									"end": 16875,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 16824,
									"end": 16845,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 16824,
									"end": 16876,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 16824,
									"end": 16876,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 16824,
									"end": 16876,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16817,
									"end": 16876,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16817,
									"end": 16876,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16689,
									"end": 16884,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 16689,
									"end": 16884,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16689,
									"end": 16884,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 16689,
									"end": 16884,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16689,
									"end": 16884,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16689,
									"end": 16884,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16689,
									"end": 16884,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16689,
									"end": 16884,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 17741,
									"end": 18271,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 17741,
									"end": 18271,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17868,
									"end": 17880,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 17926,
									"end": 17931,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17901,
									"end": 17922,
									"name": "SELFBALANCE",
									"source": 0
								},
								{
									"begin": 17901,
									"end": 17931,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17901,
									"end": 17931,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17893,
									"end": 17974,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 17893,
									"end": 17974,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17893,
									"end": 17974,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17893,
									"end": 17974,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17893,
									"end": 17974,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17893,
									"end": 17974,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17893,
									"end": 17974,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17893,
									"end": 17974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17893,
									"end": 17974,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 17893,
									"end": 17974,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17893,
									"end": 17974,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 17893,
									"end": 17974,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 17893,
									"end": 17974,
									"name": "tag",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 17893,
									"end": 17974,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17993,
									"end": 18011,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 18004,
									"end": 18010,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17993,
									"end": 18003,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 17993,
									"end": 18011,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 17993,
									"end": 18011,
									"name": "tag",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 17993,
									"end": 18011,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17985,
									"end": 18045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 17985,
									"end": 18045,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17985,
									"end": 18045,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17985,
									"end": 18045,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17985,
									"end": 18045,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17985,
									"end": 18045,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17985,
									"end": 18045,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17985,
									"end": 18045,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17985,
									"end": 18045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 17985,
									"end": 18045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17985,
									"end": 18045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 17985,
									"end": 18045,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 17985,
									"end": 18045,
									"name": "tag",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 17985,
									"end": 18045,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18119,
									"end": 18131,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18133,
									"end": 18156,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18166,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18160,
									"end": 18171,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18180,
									"end": 18185,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 18188,
									"end": 18192,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "tag",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "PUSH",
									"source": 0,
									"value": "3F"
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "tag",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "tag",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 18160,
									"end": 18193,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 18118,
									"end": 18193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18118,
									"end": 18193,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 18118,
									"end": 18193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 18211,
									"end": 18263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 18118,
									"end": 18193,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18118,
									"end": 18193,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18250,
									"end": 18262,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 18211,
									"end": 18228,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 18211,
									"end": 18263,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 18211,
									"end": 18263,
									"name": "tag",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 18211,
									"end": 18263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18204,
									"end": 18263,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 17741,
									"end": 18271,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17741,
									"end": 18271,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 13771,
									"end": 14193,
									"name": "tag",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 13771,
									"end": 14193,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14138,
									"end": 14158,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14138,
									"end": 14158,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 14177,
									"end": 14185,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 14177,
									"end": 14185,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 13771,
									"end": 14193,
									"name": "tag",
									"source": 0,
									"value": "68"
								},
								{
									"begin": 13771,
									"end": 14193,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13771,
									"end": 14193,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13771,
									"end": 14193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13771,
									"end": 14193,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13771,
									"end": 14193,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 20281,
									"end": 21023,
									"name": "tag",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 20281,
									"end": 21023,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20396,
									"end": 20408,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 20425,
									"end": 20432,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20421,
									"end": 21016,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20421,
									"end": 21016,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 20421,
									"end": 21016,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 20456,
									"end": 20466,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20449,
									"end": 20466,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 20449,
									"end": 20466,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20421,
									"end": 21016,
									"name": "tag",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 20421,
									"end": 21016,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20570,
									"end": 20587,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20570,
									"end": 20587,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20570,
									"end": 20591,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20566,
									"end": 21005,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 20566,
									"end": 21005,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20833,
									"end": 20843,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20827,
									"end": 20844,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20894,
									"end": 20909,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20881,
									"end": 20891,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 20877,
									"end": 20879,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20873,
									"end": 20892,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20866,
									"end": 20910,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 20781,
									"end": 20929,
									"name": "tag",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 20781,
									"end": 20929,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20976,
									"end": 20988,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20969,
									"end": 20989,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20969,
									"end": 20989,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 20969,
									"end": 20989,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20969,
									"end": 20989,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20969,
									"end": 20989,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 20969,
									"end": 20989,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20969,
									"end": 20989,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 20969,
									"end": 20989,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20969,
									"end": 20989,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20969,
									"end": 20989,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "75"
								},
								{
									"begin": 20969,
									"end": 20989,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "78"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "tag",
									"source": 0,
									"value": "77"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "78"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "77"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "tag",
									"source": 0,
									"value": "78"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "79"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "tag",
									"source": 0,
									"value": "79"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "tag",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "tag",
									"source": 0,
									"value": "81"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "79"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "81"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 156,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 14,
									"end": 156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 95,
									"end": 108,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 95,
									"end": 108,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 117,
									"end": 150,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 95,
									"end": 108,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 117,
									"end": 150,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 117,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 161,
									"end": 1561,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 161,
									"end": 1561,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 161,
									"end": 1561,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 1561,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 161,
									"end": 1561,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 372,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 358,
									"end": 367,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 349,
									"end": 356,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 345,
									"end": 368,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 341,
									"end": 373,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 338,
									"end": 340,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 338,
									"end": 340,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 338,
									"end": 340,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 391,
									"end": 397,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 383,
									"end": 389,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 376,
									"end": 398,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 338,
									"end": 340,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 338,
									"end": 340,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 428,
									"end": 437,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 422,
									"end": 438,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 447,
									"end": 480,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 474,
									"end": 479,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 447,
									"end": 480,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 447,
									"end": 480,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 447,
									"end": 480,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 447,
									"end": 480,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 523,
									"end": 525,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 554,
									"end": 572,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 554,
									"end": 572,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 554,
									"end": 572,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 548,
									"end": 573,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 499,
									"end": 504,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 499,
									"end": 504,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 523,
									"end": 525,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 622,
									"end": 636,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 622,
									"end": 636,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 622,
									"end": 636,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 619,
									"end": 621,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 619,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 619,
									"end": 621,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 654,
									"end": 660,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 646,
									"end": 652,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 639,
									"end": 661,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 619,
									"end": 621,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 619,
									"end": 621,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 697,
									"end": 703,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 686,
									"end": 695,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 682,
									"end": 704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 672,
									"end": 704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 672,
									"end": 704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 742,
									"end": 749,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 735,
									"end": 739,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 731,
									"end": 733,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 727,
									"end": 740,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 723,
									"end": 750,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 713,
									"end": 715,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 713,
									"end": 715,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 769,
									"end": 775,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 761,
									"end": 767,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 754,
									"end": 776,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 713,
									"end": 715,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 713,
									"end": 715,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 803,
									"end": 805,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 797,
									"end": 806,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 825,
									"end": 827,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 821,
									"end": 823,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 818,
									"end": 828,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 815,
									"end": 817,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 815,
									"end": 817,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 815,
									"end": 817,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 831,
									"end": 840,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 815,
									"end": 817,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 815,
									"end": 817,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 869,
									"end": 871,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 865,
									"end": 867,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 861,
									"end": 872,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 901,
									"end": 903,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 895,
									"end": 904,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 952,
									"end": 954,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 947,
									"end": 949,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 939,
									"end": 945,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 935,
									"end": 950,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 931,
									"end": 955,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1005,
									"end": 1011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 993,
									"end": 1003,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 990,
									"end": 1012,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 985,
									"end": 987,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 973,
									"end": 983,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 970,
									"end": 988,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 967,
									"end": 1013,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 964,
									"end": 966,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1016,
									"end": 1025,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 964,
									"end": 966,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1045,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1036,
									"end": 1058,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1093,
									"end": 1111,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1093,
									"end": 1111,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1093,
									"end": 1111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1127,
									"end": 1142,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1127,
									"end": 1142,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1127,
									"end": 1142,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1127,
									"end": 1142,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1162,
									"end": 1173,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1173,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1173,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1192,
									"end": 1203,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1192,
									"end": 1203,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1192,
									"end": 1203,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1208,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1208,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1185,
									"end": 1218,
									"name": "DUP13",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1182,
									"end": 1184,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1182,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 1182,
									"end": 1184,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1236,
									"end": 1242,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1228,
									"end": 1234,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 1221,
									"end": 1243,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1182,
									"end": 1184,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 1182,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1263,
									"end": 1269,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1269,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1269,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1278,
									"end": 1460,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 1278,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1294,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1289,
									"end": 1290,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1286,
									"end": 1295,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1278,
									"end": 1460,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1278,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 1278,
									"end": 1460,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1349,
									"end": 1385,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 1381,
									"end": 1384,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1349,
									"end": 1385,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 1349,
									"end": 1385,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1349,
									"end": 1385,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 1349,
									"end": 1385,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1337,
									"end": 1386,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1337,
									"end": 1386,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1311,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1303,
									"end": 1312,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1312,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1312,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1312,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1312,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1406,
									"end": 1418,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1406,
									"end": 1418,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1406,
									"end": 1418,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1406,
									"end": 1418,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1438,
									"end": 1450,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1438,
									"end": 1450,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1278,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 1278,
									"end": 1460,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1278,
									"end": 1460,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 1278,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1285,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1485,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1485,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1485,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1485,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1485,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1485,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1485,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1485,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1485,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1555,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1551,
									"end": 1553,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1540,
									"end": 1549,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1554,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1555,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 1504,
									"end": 1555,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1504,
									"end": 1555,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1504,
									"end": 1555,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1494,
									"end": 1555,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1494,
									"end": 1555,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1561,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1561,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1561,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1561,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1561,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 328,
									"end": 1561,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1566,
									"end": 1863,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1566,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1566,
									"end": 1863,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1686,
									"end": 1688,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1674,
									"end": 1683,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1665,
									"end": 1672,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1684,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1657,
									"end": 1689,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 1656,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 1656,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 1654,
									"end": 1656,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1707,
									"end": 1713,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1692,
									"end": 1714,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 1656,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 1654,
									"end": 1656,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1744,
									"end": 1753,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1738,
									"end": 1754,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 1802,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1790,
									"end": 1803,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1783,
									"end": 1804,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 1781,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1773,
									"end": 1805,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1763,
									"end": 1765,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1763,
									"end": 1765,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1824,
									"end": 1830,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1816,
									"end": 1822,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1809,
									"end": 1831,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1868,
									"end": 2062,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1868,
									"end": 2062,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1868,
									"end": 2062,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1991,
									"end": 1993,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1979,
									"end": 1988,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1970,
									"end": 1977,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1966,
									"end": 1989,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1994,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1959,
									"end": 1961,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1959,
									"end": 1961,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 1959,
									"end": 1961,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2018,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2004,
									"end": 2010,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1997,
									"end": 2019,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1959,
									"end": 1961,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 1959,
									"end": 1961,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2040,
									"end": 2056,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2040,
									"end": 2056,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1949,
									"end": 2062,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1949,
									"end": 2062,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2067,
									"end": 2341,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2067,
									"end": 2341,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2341,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2234,
									"end": 2240,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2228,
									"end": 2241,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2250,
									"end": 2303,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 2296,
									"end": 2302,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2291,
									"end": 2294,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2284,
									"end": 2288,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2276,
									"end": 2282,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2272,
									"end": 2289,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2250,
									"end": 2303,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 2250,
									"end": 2303,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2250,
									"end": 2303,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 2250,
									"end": 2303,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2319,
									"end": 2335,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2319,
									"end": 2335,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2319,
									"end": 2335,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2319,
									"end": 2335,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2319,
									"end": 2335,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2204,
									"end": 2341,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2204,
									"end": 2341,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2346,
									"end": 2650,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2346,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2576,
									"end": 2591,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2591,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2591,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2558,
									"end": 2592,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2558,
									"end": 2592,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2628,
									"end": 2643,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2628,
									"end": 2643,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2623,
									"end": 2625,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2608,
									"end": 2626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2608,
									"end": 2626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2601,
									"end": 2644,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2510,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2493,
									"end": 2511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2493,
									"end": 2511,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2475,
									"end": 2650,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2655,
									"end": 2929,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 2655,
									"end": 2929,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2847,
									"end": 2879,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2847,
									"end": 2879,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2847,
									"end": 2879,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2847,
									"end": 2879,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2829,
									"end": 2880,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2829,
									"end": 2880,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2911,
									"end": 2913,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2896,
									"end": 2914,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 2914,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2889,
									"end": 2923,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2817,
									"end": 2819,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2802,
									"end": 2820,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2802,
									"end": 2820,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2784,
									"end": 2929,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2934,
									"end": 3317,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2934,
									"end": 3317,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2934,
									"end": 3317,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3083,
									"end": 3085,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3072,
									"end": 3081,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3065,
									"end": 3086,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3115,
									"end": 3121,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3109,
									"end": 3122,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3158,
									"end": 3164,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3153,
									"end": 3155,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3142,
									"end": 3151,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3138,
									"end": 3156,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3131,
									"end": 3165,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3174,
									"end": 3240,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 3233,
									"end": 3239,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3228,
									"end": 3230,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3217,
									"end": 3226,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3213,
									"end": 3231,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3208,
									"end": 3210,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3200,
									"end": 3206,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3196,
									"end": 3211,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3174,
									"end": 3240,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 3174,
									"end": 3240,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3174,
									"end": 3240,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 3174,
									"end": 3240,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3301,
									"end": 3303,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3280,
									"end": 3295,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3276,
									"end": 3305,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3261,
									"end": 3306,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3261,
									"end": 3306,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3261,
									"end": 3306,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3261,
									"end": 3306,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3308,
									"end": 3310,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3257,
									"end": 3311,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3257,
									"end": 3311,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3055,
									"end": 3317,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3055,
									"end": 3317,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 3322,
									"end": 3724,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3322,
									"end": 3724,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3524,
									"end": 3526,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3506,
									"end": 3527,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3506,
									"end": 3527,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3506,
									"end": 3527,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3563,
									"end": 3565,
									"name": "PUSH",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 3543,
									"end": 3561,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3543,
									"end": 3561,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3543,
									"end": 3561,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3536,
									"end": 3566,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3602,
									"end": 3636,
									"name": "PUSH",
									"source": 1,
									"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
								},
								{
									"begin": 3597,
									"end": 3599,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3582,
									"end": 3600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3582,
									"end": 3600,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3575,
									"end": 3637,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1C8818D85B1B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3668,
									"end": 3670,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3653,
									"end": 3671,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3653,
									"end": 3671,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3646,
									"end": 3682,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3714,
									"end": 3717,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3699,
									"end": 3718,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3699,
									"end": 3718,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3496,
									"end": 3724,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 3729,
									"end": 4059,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 3729,
									"end": 4059,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3931,
									"end": 3933,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3913,
									"end": 3934,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3913,
									"end": 3934,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3913,
									"end": 3934,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3970,
									"end": 3971,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 3950,
									"end": 3968,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3968,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3968,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3943,
									"end": 3972,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "61646D696E203"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "CC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4003,
									"end": 4005,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3988,
									"end": 4006,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3988,
									"end": 4006,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3981,
									"end": 4018,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4050,
									"end": 4052,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 4035,
									"end": 4053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4035,
									"end": 4053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3903,
									"end": 4059,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 4064,
									"end": 4417,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 4064,
									"end": 4417,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4268,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4248,
									"end": 4269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4248,
									"end": 4269,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4248,
									"end": 4269,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4305,
									"end": 4307,
									"name": "PUSH",
									"source": 1,
									"value": "1D"
								},
								{
									"begin": 4285,
									"end": 4303,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4285,
									"end": 4303,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4285,
									"end": 4303,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4278,
									"end": 4308,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4344,
									"end": 4375,
									"name": "PUSH",
									"source": 1,
									"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
								},
								{
									"begin": 4339,
									"end": 4341,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 4324,
									"end": 4342,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4324,
									"end": 4342,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4317,
									"end": 4376,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4408,
									"end": 4410,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 4393,
									"end": 4411,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4393,
									"end": 4411,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4238,
									"end": 4417,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 4422,
									"end": 4828,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 4422,
									"end": 4828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4624,
									"end": 4626,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4606,
									"end": 4627,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4606,
									"end": 4627,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4606,
									"end": 4627,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4663,
									"end": 4665,
									"name": "PUSH",
									"source": 1,
									"value": "2A"
								},
								{
									"begin": 4643,
									"end": 4661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4643,
									"end": 4661,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4643,
									"end": 4661,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4636,
									"end": 4666,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4702,
									"end": 4736,
									"name": "PUSH",
									"source": 1,
									"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
								},
								{
									"begin": 4697,
									"end": 4699,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 4682,
									"end": 4700,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4682,
									"end": 4700,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4675,
									"end": 4737,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1BDD081CDD58D8D95959"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4768,
									"end": 4770,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 4753,
									"end": 4771,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4753,
									"end": 4771,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4746,
									"end": 4786,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4818,
									"end": 4821,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 4803,
									"end": 4822,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4803,
									"end": 4822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4596,
									"end": 4828,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 4833,
									"end": 5251,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 4833,
									"end": 5251,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5037,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5017,
									"end": 5038,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5017,
									"end": 5038,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5017,
									"end": 5038,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5074,
									"end": 5076,
									"name": "PUSH",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 5054,
									"end": 5072,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5054,
									"end": 5072,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5054,
									"end": 5072,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5047,
									"end": 5077,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5113,
									"end": 5147,
									"name": "PUSH",
									"source": 1,
									"value": "5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F"
								},
								{
									"begin": 5108,
									"end": 5110,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5093,
									"end": 5111,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5093,
									"end": 5111,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5086,
									"end": 5148,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5184,
									"end": 5208,
									"name": "PUSH",
									"source": 1,
									"value": "20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000"
								},
								{
									"begin": 5179,
									"end": 5181,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 5164,
									"end": 5182,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5164,
									"end": 5182,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5157,
									"end": 5209,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5241,
									"end": 5244,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 5226,
									"end": 5245,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5226,
									"end": 5245,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5007,
									"end": 5251,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 5256,
									"end": 5514,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 5256,
									"end": 5514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5328,
									"end": 5329,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5338,
									"end": 5451,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 5338,
									"end": 5451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5352,
									"end": 5358,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5349,
									"end": 5350,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5346,
									"end": 5359,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5338,
									"end": 5451,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5338,
									"end": 5451,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 5338,
									"end": 5451,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5428,
									"end": 5439,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5428,
									"end": 5439,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5428,
									"end": 5439,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5422,
									"end": 5440,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5409,
									"end": 5420,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5409,
									"end": 5420,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5409,
									"end": 5420,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5402,
									"end": 5441,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5374,
									"end": 5376,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5367,
									"end": 5377,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5338,
									"end": 5451,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 5338,
									"end": 5451,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5338,
									"end": 5451,
									"name": "tag",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 5338,
									"end": 5451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5469,
									"end": 5475,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5466,
									"end": 5467,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5463,
									"end": 5476,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5460,
									"end": 5462,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5460,
									"end": 5462,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 5460,
									"end": 5462,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5504,
									"end": 5505,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5495,
									"end": 5501,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5490,
									"end": 5493,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5486,
									"end": 5502,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5479,
									"end": 5506,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5460,
									"end": 5462,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 5460,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5460,
									"end": 5462,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5309,
									"end": 5514,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5309,
									"end": 5514,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5309,
									"end": 5514,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5309,
									"end": 5514,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 5519,
									"end": 5652,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 5519,
									"end": 5652,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5596,
									"end": 5627,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5596,
									"end": 5627,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5586,
									"end": 5628,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5586,
									"end": 5628,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5576,
									"end": 5578,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 5576,
									"end": 5578,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5642,
									"end": 5643,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5639,
									"end": 5640,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5632,
									"end": 5644,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 5576,
									"end": 5578,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 5576,
									"end": 5578,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5566,
									"end": 5652,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5566,
									"end": 5652,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 5566,
									"end": 5652,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 5566,
									"end": 5652,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1798"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 41959,
									"end": 64319,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206501143e6c5177ba1bc2dfabf70bab6305305873d3987ac034439213b119322064736f6c63430007060033",
									".code": [
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "77F50F97"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "B43C6270"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "B43C6270"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "C4F59F9B"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "D12E4CEB"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "D18DF53C"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "DDC63262"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "F851A440"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "77F50F97"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "7ACC8678"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "7BB7BED1"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "958E2D31"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "ADB82B31"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "AFFB9FC8"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "3892601C"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "3892601C"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "43A0D066"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "441A3E70"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "52FD9F2F"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "5312EA8E"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "75829DEF"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "81E3EDA"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "1069F3B5"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "1E1C6A07"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "26782247"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "2F380B35"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "2FB40CE1"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 64319,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44424,
											"end": 44458,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58822,
											"end": 58836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58987,
											"end": 59001,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58987,
											"end": 59001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58987,
											"end": 59001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58987,
											"end": 58995,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 58987,
											"end": 59001,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58987,
											"end": 59001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58987,
											"end": 59001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58987,
											"end": 59001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58987,
											"end": 59001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58987,
											"end": 59001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58987,
											"end": 59001,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58987,
											"end": 59001,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58987,
											"end": 59011,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58987,
											"end": 59011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58987,
											"end": 59011,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58987,
											"end": 59011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58987,
											"end": 59011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58987,
											"end": 59011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58987,
											"end": 59011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58987,
											"end": 59011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58987,
											"end": 59011,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59031,
											"end": 59042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59031,
											"end": 59042,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59086,
											"end": 59098,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59086,
											"end": 59105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59031,
											"end": 59042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59031,
											"end": 59042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58851,
											"end": 58884,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58851,
											"end": 58884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58851,
											"end": 58884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58851,
											"end": 58884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58987,
											"end": 59011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 59072,
											"end": 59106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 59153,
											"end": 59165,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59153,
											"end": 59172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59053,
											"end": 59106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59053,
											"end": 59106,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59139,
											"end": 59173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59117,
											"end": 59173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59117,
											"end": 59173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59189,
											"end": 59198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59184,
											"end": 59402,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 59184,
											"end": 59402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59208,
											"end": 59220,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59208,
											"end": 59227,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59204,
											"end": 59227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59204,
											"end": 59227,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59184,
											"end": 59402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59184,
											"end": 59402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 59184,
											"end": 59402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59271,
											"end": 59293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59271,
											"end": 59293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59271,
											"end": 59293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59271,
											"end": 59293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59271,
											"end": 59290,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59271,
											"end": 59290,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59271,
											"end": 59290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59271,
											"end": 59293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59271,
											"end": 59293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59271,
											"end": 59293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59271,
											"end": 59293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59271,
											"end": 59293,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59271,
											"end": 59309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59268,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59265,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59291,
											"end": 59292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59291,
											"end": 59292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59268,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 59249,
											"end": 59268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59268,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59268,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 59249,
											"end": 59268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59249,
											"end": 59268,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59249,
											"end": 59268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59349,
											"end": 59353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59349,
											"end": 59368,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59349,
											"end": 59368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59349,
											"end": 59371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59369,
											"end": 59370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59349,
											"end": 59371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59349,
											"end": 59371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59349,
											"end": 59371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59349,
											"end": 59371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59349,
											"end": 59371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59349,
											"end": 59371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59349,
											"end": 59371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59349,
											"end": 59371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59349,
											"end": 59371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59349,
											"end": 59371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59349,
											"end": 59371,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59349,
											"end": 59390,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59349,
											"end": 59390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59349,
											"end": 59390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59324,
											"end": 59343,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59344,
											"end": 59345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59324,
											"end": 59346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59324,
											"end": 59346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59324,
											"end": 59346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59324,
											"end": 59346,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59324,
											"end": 59346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 59324,
											"end": 59346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59324,
											"end": 59346,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 59324,
											"end": 59346,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 59324,
											"end": 59346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59324,
											"end": 59346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59324,
											"end": 59346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59324,
											"end": 59346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59324,
											"end": 59346,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59324,
											"end": 59346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59324,
											"end": 59346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59324,
											"end": 59346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59324,
											"end": 59346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59324,
											"end": 59346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59324,
											"end": 59390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59229,
											"end": 59232,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59229,
											"end": 59232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59184,
											"end": 59402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 59184,
											"end": 59402,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59184,
											"end": 59402,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 59184,
											"end": 59402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59184,
											"end": 59402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58687,
											"end": 59409,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44106,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57671,
											"end": 57689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57970,
											"end": 57984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57970,
											"end": 57984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57970,
											"end": 57984,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57970,
											"end": 57978,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57970,
											"end": 57984,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57970,
											"end": 57984,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57970,
											"end": 57984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57970,
											"end": 57984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57970,
											"end": 57984,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58076,
											"end": 58091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58076,
											"end": 58091,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58106,
											"end": 58121,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58106,
											"end": 58121,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58106,
											"end": 58121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58106,
											"end": 58121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58268,
											"end": 58280,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58268,
											"end": 58287,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58076,
											"end": 58091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58076,
											"end": 58091,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58106,
											"end": 58121,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58106,
											"end": 58121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58106,
											"end": 58121,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58136,
											"end": 58151,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58136,
											"end": 58151,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58136,
											"end": 58151,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 58136,
											"end": 58151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58136,
											"end": 58151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58136,
											"end": 58151,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58166,
											"end": 58179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58166,
											"end": 58179,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 58166,
											"end": 58179,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58166,
											"end": 58179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58166,
											"end": 58179,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58194,
											"end": 58214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58194,
											"end": 58214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58194,
											"end": 58214,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 58194,
											"end": 58214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58194,
											"end": 58214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58194,
											"end": 58214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58194,
											"end": 58214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57836,
											"end": 57868,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57836,
											"end": 57868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57836,
											"end": 57868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57836,
											"end": 57868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 58254,
											"end": 58288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58334,
											"end": 58346,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58334,
											"end": 58353,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58236,
											"end": 58288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58236,
											"end": 58288,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58320,
											"end": 58354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58299,
											"end": 58354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58299,
											"end": 58354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58370,
											"end": 58379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58365,
											"end": 58579,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 58365,
											"end": 58579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58389,
											"end": 58401,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58389,
											"end": 58408,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58385,
											"end": 58408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58385,
											"end": 58408,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58365,
											"end": 58579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58365,
											"end": 58579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 58365,
											"end": 58579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58451,
											"end": 58473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58451,
											"end": 58473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58451,
											"end": 58473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58451,
											"end": 58473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58451,
											"end": 58470,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58451,
											"end": 58470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58451,
											"end": 58470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58451,
											"end": 58473,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58451,
											"end": 58473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58451,
											"end": 58473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58451,
											"end": 58473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58451,
											"end": 58473,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58451,
											"end": 58488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58430,
											"end": 58448,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58430,
											"end": 58448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58430,
											"end": 58445,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58430,
											"end": 58445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58471,
											"end": 58472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58471,
											"end": 58472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58430,
											"end": 58448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58430,
											"end": 58448,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58430,
											"end": 58448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 58430,
											"end": 58448,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58430,
											"end": 58448,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 58430,
											"end": 58448,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 58430,
											"end": 58448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58430,
											"end": 58448,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58430,
											"end": 58448,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 58430,
											"end": 58448,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58430,
											"end": 58448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58430,
											"end": 58448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58430,
											"end": 58488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58430,
											"end": 58488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58430,
											"end": 58488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58430,
											"end": 58488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58430,
											"end": 58488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58527,
											"end": 58531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58527,
											"end": 58546,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58527,
											"end": 58546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58527,
											"end": 58549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58547,
											"end": 58548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58527,
											"end": 58549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58527,
											"end": 58549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58527,
											"end": 58549,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58527,
											"end": 58549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58527,
											"end": 58549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58527,
											"end": 58549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58527,
											"end": 58549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58527,
											"end": 58549,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58527,
											"end": 58549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58527,
											"end": 58549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58527,
											"end": 58549,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58527,
											"end": 58567,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58527,
											"end": 58567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58527,
											"end": 58567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58522,
											"end": 58523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58524,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 58503,
											"end": 58524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58524,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58524,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 58503,
											"end": 58524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58503,
											"end": 58524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58524,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58503,
											"end": 58567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58410,
											"end": 58413,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58410,
											"end": 58413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58365,
											"end": 58579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 58365,
											"end": 58579,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58365,
											"end": 58579,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 58365,
											"end": 58579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58365,
											"end": 58579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 58586,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5056,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5065,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47503,
											"end": 47526,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47503,
											"end": 47526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47503,
											"end": 47526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47503,
											"end": 47526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47503,
											"end": 47526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47503,
											"end": 47526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47503,
											"end": 47513,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47503,
											"end": 47526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47503,
											"end": 47526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47503,
											"end": 47526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47503,
											"end": 47526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47503,
											"end": 47526,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47503,
											"end": 47526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47503,
											"end": 47526,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 47503,
											"end": 47526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47502,
											"end": 47526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47494,
											"end": 47551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 47494,
											"end": 47551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47494,
											"end": 47551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47494,
											"end": 47551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47494,
											"end": 47551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47494,
											"end": 47551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47494,
											"end": 47551,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47494,
											"end": 47551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47494,
											"end": 47551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 47494,
											"end": 47551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47494,
											"end": 47551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 47494,
											"end": 47551,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47494,
											"end": 47551,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 47494,
											"end": 47551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47570,
											"end": 47595,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47570,
											"end": 47595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47562,
											"end": 47624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 47562,
											"end": 47624,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47562,
											"end": 47624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47562,
											"end": 47624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47562,
											"end": 47624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47562,
											"end": 47624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47562,
											"end": 47624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47562,
											"end": 47624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47562,
											"end": 47624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 47562,
											"end": 47624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47562,
											"end": 47624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 47562,
											"end": 47624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47562,
											"end": 47624,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 47562,
											"end": 47624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47657,
											"end": 47669,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47657,
											"end": 47676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47657,
											"end": 47703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47657,
											"end": 47703,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47635,
											"end": 47750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 47635,
											"end": 47750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47635,
											"end": 47750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47635,
											"end": 47750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47635,
											"end": 47750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47635,
											"end": 47750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47635,
											"end": 47750,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47635,
											"end": 47750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47635,
											"end": 47750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 47635,
											"end": 47750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47635,
											"end": 47750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 47635,
											"end": 47750,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47635,
											"end": 47750,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 47635,
											"end": 47750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47799,
											"end": 47811,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 47785,
											"end": 47796,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47785,
											"end": 47811,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 47785,
											"end": 47811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47785,
											"end": 47811,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47785,
											"end": 47838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47785,
											"end": 47838,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47785,
											"end": 47838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 47785,
											"end": 47838,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47785,
											"end": 47838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47827,
											"end": 47838,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47838,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 47815,
											"end": 47838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47824,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47838,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 47815,
											"end": 47838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47815,
											"end": 47838,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47785,
											"end": 47838,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 47785,
											"end": 47838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47763,
											"end": 47885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 47763,
											"end": 47885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47763,
											"end": 47885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47763,
											"end": 47885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47763,
											"end": 47885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47763,
											"end": 47885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47763,
											"end": 47885,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47763,
											"end": 47885,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47763,
											"end": 47885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 47763,
											"end": 47885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47763,
											"end": 47885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 47763,
											"end": 47885,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47763,
											"end": 47885,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 47763,
											"end": 47885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47907,
											"end": 47917,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 47907,
											"end": 47917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47907,
											"end": 47917,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47898,
											"end": 47918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47898,
											"end": 47918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47898,
											"end": 47918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47898,
											"end": 47918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47898,
											"end": 47906,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 47898,
											"end": 47918,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47898,
											"end": 47918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47898,
											"end": 47918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47898,
											"end": 47918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47898,
											"end": 47918,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47898,
											"end": 47918,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47898,
											"end": 47929,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47898,
											"end": 47929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47898,
											"end": 47929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47898,
											"end": 47929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47898,
											"end": 47943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47898,
											"end": 47943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 47898,
											"end": 47943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47898,
											"end": 47943,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 47898,
											"end": 47943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47898,
											"end": 47943,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 47898,
											"end": 47943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47898,
											"end": 47943,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47963,
											"end": 47973,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47963,
											"end": 47973,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47974,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47974,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47974,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47999,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 47954,
											"end": 47999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47954,
											"end": 47999,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 47954,
											"end": 47999,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47999,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47999,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47999,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47999,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47999,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47954,
											"end": 47999,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 48019,
											"end": 48029,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48019,
											"end": 48029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48030,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48030,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48030,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48030,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 48010,
											"end": 48051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 48010,
											"end": 48051,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48051,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48051,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48051,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48051,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48051,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48010,
											"end": 48051,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 48071,
											"end": 48081,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 48071,
											"end": 48081,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48062,
											"end": 48082,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48062,
											"end": 48082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48062,
											"end": 48082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48062,
											"end": 48082,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48062,
											"end": 48082,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48062,
											"end": 48098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48062,
											"end": 48112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48062,
											"end": 48112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 48062,
											"end": 48112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 48062,
											"end": 48112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48062,
											"end": 48112,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 48062,
											"end": 48112,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 48062,
											"end": 48112,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48062,
											"end": 48112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48062,
											"end": 48112,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48062,
											"end": 48112,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 48062,
											"end": 48112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48062,
											"end": 48112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48062,
											"end": 48112,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 48125,
											"end": 48371,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 48125,
											"end": 48371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48145,
											"end": 48172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48145,
											"end": 48172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48145,
											"end": 48172,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 48125,
											"end": 48371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48125,
											"end": 48371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 48125,
											"end": 48371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48235,
											"end": 48359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48235,
											"end": 48359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48235,
											"end": 48359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48235,
											"end": 48359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48235,
											"end": 48359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48235,
											"end": 48359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48235,
											"end": 48359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48235,
											"end": 48359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48285,
											"end": 48301,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48285,
											"end": 48301,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48302,
											"end": 48303,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48285,
											"end": 48304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48285,
											"end": 48304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48285,
											"end": 48304,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 48285,
											"end": 48304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 48285,
											"end": 48304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48285,
											"end": 48304,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 48285,
											"end": 48304,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 48285,
											"end": 48304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48285,
											"end": 48304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48285,
											"end": 48304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48285,
											"end": 48304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48285,
											"end": 48304,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 48285,
											"end": 48304,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48285,
											"end": 48304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48285,
											"end": 48304,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48285,
											"end": 48304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48285,
											"end": 48304,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 48235,
											"end": 48359,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48235,
											"end": 48359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 48342,
											"end": 48343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48235,
											"end": 48359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48235,
											"end": 48359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48235,
											"end": 48359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48235,
											"end": 48359,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48235,
											"end": 48359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48235,
											"end": 48359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48203,
											"end": 48213,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 48203,
											"end": 48213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48214,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48202,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 48194,
											"end": 48214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48194,
											"end": 48214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48214,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48214,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48232,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48232,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48229,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 48194,
											"end": 48229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48232,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48359,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48359,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48359,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 48194,
											"end": 48359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48359,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48359,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 48174,
											"end": 48177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48125,
											"end": 48371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 48125,
											"end": 48371,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48125,
											"end": 48371,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 48125,
											"end": 48371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 48383,
											"end": 48393,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 48383,
											"end": 48395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48383,
											"end": 48395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48383,
											"end": 48395,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 48383,
											"end": 48395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48383,
											"end": 48395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48383,
											"end": 48395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48383,
											"end": 48395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48383,
											"end": 48395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48383,
											"end": 48395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 48408,
											"end": 48431,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48408,
											"end": 48431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48383,
											"end": 48393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48408,
											"end": 48431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48408,
											"end": 48431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48408,
											"end": 48431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48408,
											"end": 48418,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 48408,
											"end": 48431,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48408,
											"end": 48431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48408,
											"end": 48431,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48408,
											"end": 48431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48408,
											"end": 48431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48408,
											"end": 48431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48408,
											"end": 48431,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48408,
											"end": 48438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48408,
											"end": 48438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 48408,
											"end": 48438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48408,
											"end": 48438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48408,
											"end": 48438,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 48408,
											"end": 48438,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 48408,
											"end": 48438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48408,
											"end": 48438,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48408,
											"end": 48438,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "PUSH",
											"source": 0,
											"value": "EB19E76B03B99EFF4D0329A19E44569C131F242C9590234F19B76F2C56A817A1"
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48504,
											"end": 48520,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 48504,
											"end": 48520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48504,
											"end": 48520,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 48504,
											"end": 48520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48456,
											"end": 48521,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 48529,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1798"
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44149,
											"end": 44197,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40532,
											"end": 40533,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41138,
											"end": 41145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41138,
											"end": 41145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41138,
											"end": 41157,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41138,
											"end": 41157,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40532,
											"end": 40533,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41271,
											"end": 41289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41271,
											"end": 41289,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 51809,
											"end": 51813,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51791,
											"end": 51808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 51791,
											"end": 51814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51791,
											"end": 51814,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 51791,
											"end": 51814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51825,
											"end": 51876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 51843,
											"end": 51853,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 51855,
											"end": 51859,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51861,
											"end": 51875,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51825,
											"end": 51842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 51825,
											"end": 51876,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51825,
											"end": 51876,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 51825,
											"end": 51876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51889,
											"end": 51910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51913,
											"end": 51927,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51913,
											"end": 51927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51913,
											"end": 51927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51913,
											"end": 51921,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 51913,
											"end": 51927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51913,
											"end": 51927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51913,
											"end": 51927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51913,
											"end": 51927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51913,
											"end": 51927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51913,
											"end": 51927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51913,
											"end": 51927,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51913,
											"end": 51927,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51962,
											"end": 51970,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 51962,
											"end": 51976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51962,
											"end": 51976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51962,
											"end": 51976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51962,
											"end": 51976,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51962,
											"end": 51976,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51977,
											"end": 51987,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 51962,
											"end": 51988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51962,
											"end": 51988,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 51962,
											"end": 51988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51962,
											"end": 51988,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 51962,
											"end": 51988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51962,
											"end": 51988,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51962,
											"end": 51988,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52042,
											"end": 52057,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52042,
											"end": 52057,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52042,
											"end": 52057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52042,
											"end": 52057,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51962,
											"end": 51988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51962,
											"end": 51988,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52032,
											"end": 52161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 52032,
											"end": 52161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52042,
											"end": 52057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52042,
											"end": 52057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52123,
											"end": 52127,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 52143,
											"end": 52150,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52032,
											"end": 52075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 52032,
											"end": 52161,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52032,
											"end": 52161,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 52032,
											"end": 52161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52264,
											"end": 52275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52264,
											"end": 52275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52264,
											"end": 52288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 52264,
											"end": 52288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52280,
											"end": 52287,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52264,
											"end": 52279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 52264,
											"end": 52288,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52264,
											"end": 52288,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 52264,
											"end": 52288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52250,
											"end": 52288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52250,
											"end": 52288,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52317,
											"end": 52332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52317,
											"end": 52332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52317,
											"end": 52345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 52317,
											"end": 52345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52337,
											"end": 52344,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52317,
											"end": 52336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 52317,
											"end": 52345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52317,
											"end": 52345,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 52317,
											"end": 52345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52345,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52363,
											"end": 52411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52389,
											"end": 52401,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 52389,
											"end": 52401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52383,
											"end": 52387,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52383,
											"end": 52387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52371,
											"end": 52381,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 52371,
											"end": 52381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52411,
											"name": "PUSH",
											"source": 0,
											"value": "36AF321EC8D3C75236829C5317AFFD40DDB308863A1236D2D277A4025CCCEE1E"
										},
										{
											"begin": 52363,
											"end": 52411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 52363,
											"end": 52411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52403,
											"end": 52410,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 52403,
											"end": 52410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 52363,
											"end": 52411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52363,
											"end": 52411,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 52363,
											"end": 52411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52363,
											"end": 52411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52363,
											"end": 52411,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40488,
											"end": 40489,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41450,
											"end": 41457,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41450,
											"end": 41472,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51598,
											"end": 52419,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40532,
											"end": 40533,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41138,
											"end": 41145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41138,
											"end": 41145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41138,
											"end": 41157,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41138,
											"end": 41157,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40532,
											"end": 40533,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41271,
											"end": 41289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41271,
											"end": 41289,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52737,
											"end": 52761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 52747,
											"end": 52751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52753,
											"end": 52760,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52737,
											"end": 52746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 52737,
											"end": 52761,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52737,
											"end": 52761,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 52737,
											"end": 52761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40488,
											"end": 40489,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41450,
											"end": 41457,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41450,
											"end": 41472,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52614,
											"end": 52769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54325,
											"end": 54337,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54348,
											"end": 54377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54394,
											"end": 54401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54394,
											"end": 54408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 54380,
											"end": 54409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54348,
											"end": 54409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54438,
											"end": 54448,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 54420,
											"end": 54435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54420,
											"end": 54435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54483,
											"end": 55412,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 54483,
											"end": 55412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54503,
											"end": 54519,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54503,
											"end": 54519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54503,
											"end": 54519,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54483,
											"end": 55412,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54483,
											"end": 55412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 54483,
											"end": 55412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54547,
											"end": 54552,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54547,
											"end": 54552,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54553,
											"end": 54554,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54547,
											"end": 54555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54547,
											"end": 54555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54547,
											"end": 54555,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54547,
											"end": 54555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 54547,
											"end": 54555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54547,
											"end": 54555,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 54547,
											"end": 54555,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 54547,
											"end": 54555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54547,
											"end": 54555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54547,
											"end": 54555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54547,
											"end": 54555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54547,
											"end": 54555,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54547,
											"end": 54555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54547,
											"end": 54555,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 54541,
											"end": 54555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54541,
											"end": 54555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 54588,
											"end": 54591,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54570,
											"end": 54587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 54570,
											"end": 54592,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54570,
											"end": 54592,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 54570,
											"end": 54592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54661,
											"end": 54699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 54679,
											"end": 54686,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54688,
											"end": 54691,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54693,
											"end": 54698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54661,
											"end": 54678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 54661,
											"end": 54699,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54661,
											"end": 54699,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 54661,
											"end": 54699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54721,
											"end": 54730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54716,
											"end": 55401,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 54716,
											"end": 55401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54740,
											"end": 54747,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54740,
											"end": 54754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54736,
											"end": 54737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54736,
											"end": 54754,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54716,
											"end": 55401,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54716,
											"end": 55401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 54716,
											"end": 55401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54780,
											"end": 54794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54797,
											"end": 54810,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54805,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 54797,
											"end": 54810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54797,
											"end": 54810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54797,
											"end": 54810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54810,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54810,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54797,
											"end": 54819,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54819,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54819,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54819,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54819,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54859,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54859,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54856,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54797,
											"end": 54856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54859,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54897,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54920,
											"end": 54930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54920,
											"end": 54930,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54916,
											"end": 55386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 54916,
											"end": 55386,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54973,
											"end": 55000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 54993,
											"end": 54999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54973,
											"end": 54985,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 54986,
											"end": 54987,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54973,
											"end": 54988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54973,
											"end": 54988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54973,
											"end": 54988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54973,
											"end": 54988,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54973,
											"end": 54988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 54973,
											"end": 54988,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54973,
											"end": 54988,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 54973,
											"end": 54988,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 54973,
											"end": 54988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54973,
											"end": 54988,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54973,
											"end": 54988,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54973,
											"end": 54988,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54973,
											"end": 54988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54973,
											"end": 54988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54973,
											"end": 54988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54973,
											"end": 54992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 54973,
											"end": 54992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54973,
											"end": 55000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54973,
											"end": 55000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54973,
											"end": 55000,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 54973,
											"end": 55000,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54973,
											"end": 55000,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54973,
											"end": 55000,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 54973,
											"end": 55000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 54967,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54968,
											"end": 54969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 54970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 54970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 54970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 54970,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 54970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 54955,
											"end": 54970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 54970,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 54970,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 54955,
											"end": 54970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 54970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54955,
											"end": 54970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 54970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 54970,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 54970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 54970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 54970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 54970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 54970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 54970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 55000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 55000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 55000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 55000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55134,
											"end": 55135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55023,
											"end": 55036,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55031,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 55023,
											"end": 55036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55023,
											"end": 55036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55036,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55023,
											"end": 55045,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55045,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55045,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55045,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55089,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55089,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55086,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55023,
											"end": 55086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55089,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55089,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55023,
											"end": 55135,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55261,
											"end": 55271,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 55261,
											"end": 55271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55261,
											"end": 55268,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 55261,
											"end": 55268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55088,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55087,
											"end": 55088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55261,
											"end": 55271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55261,
											"end": 55271,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55261,
											"end": 55271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 55261,
											"end": 55271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55261,
											"end": 55271,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 55261,
											"end": 55271,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 55261,
											"end": 55271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55261,
											"end": 55271,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55261,
											"end": 55271,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55261,
											"end": 55271,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55261,
											"end": 55271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55261,
											"end": 55271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55261,
											"end": 55271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55231,
											"end": 55234,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55197,
											"end": 55204,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "PUSH",
											"source": 0,
											"value": "F75F3D433C6628E04E01A0BE1A2C6692A6011CE4B00389824CFA8B8A12F3C1C4"
										},
										{
											"begin": 55298,
											"end": 55304,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55331,
											"end": 55343,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55163,
											"end": 55366,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 54916,
											"end": 55386,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 54916,
											"end": 55386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54756,
											"end": 54759,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54756,
											"end": 54759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54716,
											"end": 55401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 54716,
											"end": 55401,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54716,
											"end": 55401,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 54716,
											"end": 55401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54521,
											"end": 54524,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54521,
											"end": 54524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54483,
											"end": 55412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 54483,
											"end": 55412,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54483,
											"end": 55412,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 54483,
											"end": 55412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54483,
											"end": 55412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55429,
											"end": 55438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55424,
											"end": 55620,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 55424,
											"end": 55620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55448,
											"end": 55460,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55448,
											"end": 55467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55444,
											"end": 55445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55444,
											"end": 55467,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55424,
											"end": 55620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55424,
											"end": 55620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 55424,
											"end": 55620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55511,
											"end": 55512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55493,
											"end": 55505,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55506,
											"end": 55507,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55493,
											"end": 55508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55493,
											"end": 55508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55493,
											"end": 55508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55493,
											"end": 55508,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55493,
											"end": 55508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 55493,
											"end": 55508,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55493,
											"end": 55508,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 55493,
											"end": 55508,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 55493,
											"end": 55508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55493,
											"end": 55508,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55493,
											"end": 55508,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55493,
											"end": 55508,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55493,
											"end": 55508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55493,
											"end": 55508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55493,
											"end": 55508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55493,
											"end": 55512,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 55489,
											"end": 55609,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55489,
											"end": 55609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 55489,
											"end": 55609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 55593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 55555,
											"end": 55562,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55563,
											"end": 55564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55555,
											"end": 55565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55555,
											"end": 55565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55555,
											"end": 55565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55555,
											"end": 55565,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55555,
											"end": 55565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 55555,
											"end": 55565,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55555,
											"end": 55565,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 55555,
											"end": 55565,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 55555,
											"end": 55565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55555,
											"end": 55565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55555,
											"end": 55565,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55555,
											"end": 55565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55555,
											"end": 55565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55555,
											"end": 55565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55555,
											"end": 55565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55568,
											"end": 55575,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55577,
											"end": 55589,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 55590,
											"end": 55591,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55577,
											"end": 55592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55577,
											"end": 55592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55577,
											"end": 55592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55577,
											"end": 55592,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55577,
											"end": 55592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 55577,
											"end": 55592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55577,
											"end": 55592,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 55577,
											"end": 55592,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 55577,
											"end": 55592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55577,
											"end": 55592,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55577,
											"end": 55592,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55577,
											"end": 55592,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55577,
											"end": 55592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55577,
											"end": 55592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55577,
											"end": 55592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 55544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 55533,
											"end": 55593,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55533,
											"end": 55593,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 55533,
											"end": 55593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55469,
											"end": 55472,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55469,
											"end": 55472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55424,
											"end": 55620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 55424,
											"end": 55620,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55424,
											"end": 55620,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 55424,
											"end": 55620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55424,
											"end": 55620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54213,
											"end": 55627,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40532,
											"end": 40533,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41138,
											"end": 41145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41138,
											"end": 41145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41138,
											"end": 41157,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41138,
											"end": 41157,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40532,
											"end": 40533,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41271,
											"end": 41289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41271,
											"end": 41289,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53388,
											"end": 53409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53412,
											"end": 53426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53412,
											"end": 53426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53412,
											"end": 53426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53412,
											"end": 53420,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 53412,
											"end": 53426,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53412,
											"end": 53426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53412,
											"end": 53426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53412,
											"end": 53426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53412,
											"end": 53426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53412,
											"end": 53426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53412,
											"end": 53426,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53412,
											"end": 53426,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53461,
											"end": 53469,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 53461,
											"end": 53475,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53461,
											"end": 53475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53461,
											"end": 53475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53461,
											"end": 53475,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53461,
											"end": 53475,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53486,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 53461,
											"end": 53487,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53461,
											"end": 53487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53461,
											"end": 53487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53461,
											"end": 53487,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53461,
											"end": 53487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53461,
											"end": 53487,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53461,
											"end": 53487,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53515,
											"end": 53526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53515,
											"end": 53526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53539,
											"end": 53554,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53539,
											"end": 53554,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53539,
											"end": 53554,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53412,
											"end": 53426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53412,
											"end": 53426,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53461,
											"end": 53487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53461,
											"end": 53487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53515,
											"end": 53526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53565,
											"end": 53793,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 53565,
											"end": 53793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53601,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53589,
											"end": 53608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53585,
											"end": 53608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53585,
											"end": 53608,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53565,
											"end": 53793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53565,
											"end": 53793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 53565,
											"end": 53793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53630,
											"end": 53663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53666,
											"end": 53688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53685,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53666,
											"end": 53685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53685,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53666,
											"end": 53688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53666,
											"end": 53688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53666,
											"end": 53688,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53703,
											"end": 53732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53703,
											"end": 53732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53703,
											"end": 53732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53703,
											"end": 53736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53703,
											"end": 53736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53703,
											"end": 53736,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53751,
											"end": 53781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53751,
											"end": 53781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53751,
											"end": 53781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53751,
											"end": 53781,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53610,
											"end": 53613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53565,
											"end": 53793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 53565,
											"end": 53793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53565,
											"end": 53793,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 53565,
											"end": 53793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53823,
											"end": 53838,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 53823,
											"end": 53850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53843,
											"end": 53849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 53823,
											"end": 53850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53823,
											"end": 53850,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 53823,
											"end": 53850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53805,
											"end": 53850,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53805,
											"end": 53850,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53867,
											"end": 53877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53867,
											"end": 53877,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53863,
											"end": 53965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 53863,
											"end": 53965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53904,
											"end": 53919,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53904,
											"end": 53919,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53904,
											"end": 53919,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53904,
											"end": 53919,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53894,
											"end": 53953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 53894,
											"end": 53953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53904,
											"end": 53919,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53934,
											"end": 53944,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 53946,
											"end": 53952,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53894,
											"end": 53933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 53894,
											"end": 53953,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53894,
											"end": 53953,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 53894,
											"end": 53953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54018,
											"end": 54030,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 54012,
											"end": 54016,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54000,
											"end": 54010,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53982,
											"end": 54039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53982,
											"end": 54039,
											"name": "PUSH",
											"source": 0,
											"value": "2369DB1BAFEE945AEE5630782F4A170682E3F8188D8DC247A4C73EB8C9E692D2"
										},
										{
											"begin": 54032,
											"end": 54038,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53982,
											"end": 54039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53982,
											"end": 54039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53982,
											"end": 54039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 53982,
											"end": 54039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53982,
											"end": 54039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53982,
											"end": 54039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 53982,
											"end": 54039,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53982,
											"end": 54039,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 53982,
											"end": 54039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53982,
											"end": 54039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53982,
											"end": 54039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53982,
											"end": 54039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53982,
											"end": 54039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53982,
											"end": 54039,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53982,
											"end": 54039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53982,
											"end": 54039,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40488,
											"end": 40489,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41450,
											"end": 41457,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41450,
											"end": 41472,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53305,
											"end": 54047,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5056,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5065,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5336,
											"end": 5358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5336,
											"end": 5358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 5328,
											"end": 5374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5328,
											"end": 5374,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5328,
											"end": 5374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5374,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5328,
											"end": 5374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 5328,
											"end": 5374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5328,
											"end": 5374,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 5328,
											"end": 5374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "PUSH",
											"source": 0,
											"value": "3B81CAF78FA51ECBC8ACB482FD7012A277B428D9B80F9D156E8A54107496CC40"
										},
										{
											"begin": 5411,
											"end": 5419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5420,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 5431,
											"end": 5443,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5431,
											"end": 5454,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5462,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6056,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6044,
											"end": 6056,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6044,
											"end": 6056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6060,
											"end": 6070,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6044,
											"end": 6070,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6036,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 6036,
											"end": 6086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6036,
											"end": 6086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6036,
											"end": 6086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6036,
											"end": 6086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6036,
											"end": 6086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6036,
											"end": 6086,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6036,
											"end": 6086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6036,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6036,
											"end": 6086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6036,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 6036,
											"end": 6086,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6036,
											"end": 6086,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 6036,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6115,
											"end": 6127,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6115,
											"end": 6127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6115,
											"end": 6127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6129,
											"end": 6134,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6102,
											"end": 6135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6135,
											"name": "PUSH",
											"source": 0,
											"value": "65DA1CFC2C2E81576AD96AFB24A581F8E109B7A403B35CBD3243A1C99EFDB9ED"
										},
										{
											"begin": 6102,
											"end": 6135,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 6102,
											"end": 6135,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6115,
											"end": 6127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6115,
											"end": 6127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6115,
											"end": 6127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6115,
											"end": 6127,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6129,
											"end": 6134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6129,
											"end": 6134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6129,
											"end": 6134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 6102,
											"end": 6135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6102,
											"end": 6135,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 6102,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6102,
											"end": 6135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6135,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6135,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 6154,
											"end": 6166,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6154,
											"end": 6166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6154,
											"end": 6166,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6154,
											"end": 6166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6146,
											"end": 6166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6166,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6146,
											"end": 6166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6154,
											"end": 6166,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6154,
											"end": 6166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6166,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6166,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6177,
											"end": 6202,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6177,
											"end": 6202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6177,
											"end": 6202,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6210,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5056,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5065,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5727,
											"end": 5749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5727,
											"end": 5749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 5719,
											"end": 5761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5719,
											"end": 5761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5719,
											"end": 5761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5719,
											"end": 5761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5719,
											"end": 5761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 5719,
											"end": 5761,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5719,
											"end": 5761,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 5719,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "PUSH",
											"source": 0,
											"value": "3B81CAF78FA51ECBC8ACB482FD7012A277B428D9B80F9D156E8A54107496CC40"
										},
										{
											"begin": 5798,
											"end": 5806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5846,
											"end": 5851,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "PUSH",
											"source": 0,
											"value": "65DA1CFC2C2E81576AD96AFB24A581F8E109B7A403B35CBD3243A1C99EFDB9ED"
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5836,
											"end": 5844,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5836,
											"end": 5844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5846,
											"end": 5851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 5863,
											"end": 5868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5863,
											"end": 5879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5863,
											"end": 5879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5863,
											"end": 5879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5863,
											"end": 5879,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5863,
											"end": 5879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5863,
											"end": 5879,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5863,
											"end": 5879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5863,
											"end": 5879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5863,
											"end": 5879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5863,
											"end": 5879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5863,
											"end": 5879,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5863,
											"end": 5879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5863,
											"end": 5879,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5643,
											"end": 5887,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44359,
											"end": 44388,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40532,
											"end": 40533,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41138,
											"end": 41145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41138,
											"end": 41145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41138,
											"end": 41157,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41138,
											"end": 41157,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 41130,
											"end": 41193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40532,
											"end": 40533,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41271,
											"end": 41289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41271,
											"end": 41289,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53004,
											"end": 53018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53004,
											"end": 53018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53004,
											"end": 53018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53004,
											"end": 53018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53004,
											"end": 53012,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 53004,
											"end": 53018,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53004,
											"end": 53018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53004,
											"end": 53018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53004,
											"end": 53018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53004,
											"end": 53018,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53004,
											"end": 53018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53004,
											"end": 53018,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53004,
											"end": 53018,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53019,
											"end": 53029,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 53004,
											"end": 53030,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53004,
											"end": 53030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53004,
											"end": 53030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53004,
											"end": 53030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53004,
											"end": 53030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53004,
											"end": 53030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53004,
											"end": 53030,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53004,
											"end": 53037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52988,
											"end": 53038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 52988,
											"end": 53038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52998,
											"end": 53002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52998,
											"end": 53002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52988,
											"end": 52997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 52988,
											"end": 53038,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52988,
											"end": 53038,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 52988,
											"end": 53038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40488,
											"end": 40489,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41450,
											"end": 41457,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41450,
											"end": 41472,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52911,
											"end": 53046,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59818,
											"end": 59828,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59818,
											"end": 59828,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59828,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59803,
											"end": 59848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 59803,
											"end": 59848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59803,
											"end": 59848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59803,
											"end": 59848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 59803,
											"end": 59848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59803,
											"end": 59848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59803,
											"end": 59848,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59803,
											"end": 59848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59803,
											"end": 59848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 59803,
											"end": 59848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59803,
											"end": 59848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 59803,
											"end": 59848,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59803,
											"end": 59848,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 59803,
											"end": 59848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59859,
											"end": 59880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59883,
											"end": 59897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59883,
											"end": 59897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59883,
											"end": 59897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59883,
											"end": 59891,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 59883,
											"end": 59897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59883,
											"end": 59897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59883,
											"end": 59897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59883,
											"end": 59897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59883,
											"end": 59897,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59883,
											"end": 59897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59936,
											"end": 59967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 59892,
											"end": 59896,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59936,
											"end": 59961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 59936,
											"end": 59967,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59936,
											"end": 59967,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 59936,
											"end": 59967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60004,
											"end": 60024,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60004,
											"end": 60024,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60004,
											"end": 60024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60004,
											"end": 60024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59908,
											"end": 59967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59908,
											"end": 59967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 60004,
											"end": 60024,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60004,
											"end": 60024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60004,
											"end": 60024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60004,
											"end": 60024,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 60004,
											"end": 60024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60004,
											"end": 60024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59982,
											"end": 60024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59982,
											"end": 60024,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59982,
											"end": 60024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59982,
											"end": 60024,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59978,
											"end": 60033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 59978,
											"end": 60033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60026,
											"end": 60033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60026,
											"end": 60033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60026,
											"end": 60033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 60026,
											"end": 60033,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59978,
											"end": 60033,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 59978,
											"end": 60033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60065,
											"end": 60080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60065,
											"end": 60080,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60095,
											"end": 60111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60091,
											"end": 60202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 60091,
											"end": 60202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 60128,
											"end": 60148,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60128,
											"end": 60148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60128,
											"end": 60148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60128,
											"end": 60148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60128,
											"end": 60169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60128,
											"end": 60169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60128,
											"end": 60169,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 60128,
											"end": 60169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60128,
											"end": 60169,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60128,
											"end": 60169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60128,
											"end": 60169,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60128,
											"end": 60169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60128,
											"end": 60169,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60128,
											"end": 60169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60128,
											"end": 60169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60128,
											"end": 60169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60128,
											"end": 60169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60128,
											"end": 60169,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60128,
											"end": 60169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60128,
											"end": 60169,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60184,
											"end": 60191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 60184,
											"end": 60191,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60091,
											"end": 60202,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 60091,
											"end": 60202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60256,
											"end": 60276,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60256,
											"end": 60276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60256,
											"end": 60276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60256,
											"end": 60276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60256,
											"end": 60276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60256,
											"end": 60276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60256,
											"end": 60276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60256,
											"end": 60276,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 60256,
											"end": 60276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60256,
											"end": 60276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60235,
											"end": 60276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60235,
											"end": 60276,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60212,
											"end": 60276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60212,
											"end": 60232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60287,
											"end": 60644,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 60287,
											"end": 60644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60311,
											"end": 60323,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60311,
											"end": 60330,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60307,
											"end": 60330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60307,
											"end": 60330,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60287,
											"end": 60644,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60287,
											"end": 60644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 60287,
											"end": 60644,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60352,
											"end": 60385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60388,
											"end": 60410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60388,
											"end": 60410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60388,
											"end": 60410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60388,
											"end": 60407,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60388,
											"end": 60407,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60388,
											"end": 60407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60388,
											"end": 60410,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60388,
											"end": 60410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60388,
											"end": 60410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60388,
											"end": 60410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60388,
											"end": 60410,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60459,
											"end": 60484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60459,
											"end": 60484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60388,
											"end": 60410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60388,
											"end": 60410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60352,
											"end": 60385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60442,
											"end": 60485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 60442,
											"end": 60485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60442,
											"end": 60454,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60442,
											"end": 60454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60442,
											"end": 60458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 60442,
											"end": 60485,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60442,
											"end": 60485,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 60442,
											"end": 60485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60425,
											"end": 60485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 60531,
											"end": 60632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 60606,
											"end": 60617,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60582,
											"end": 60603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 60425,
											"end": 60485,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42187,
											"end": 42191,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 60582,
											"end": 60592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 60582,
											"end": 60603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60582,
											"end": 60603,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 60582,
											"end": 60603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60582,
											"end": 60617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60582,
											"end": 60617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 60582,
											"end": 60617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60582,
											"end": 60617,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 60582,
											"end": 60617,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 60582,
											"end": 60617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60531,
											"end": 60559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60531,
											"end": 60559,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60531,
											"end": 60559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60531,
											"end": 60559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60531,
											"end": 60559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60582,
											"end": 60617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60582,
											"end": 60617,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 60531,
											"end": 60563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 60531,
											"end": 60632,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60531,
											"end": 60632,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 60531,
											"end": 60632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60500,
											"end": 60528,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60500,
											"end": 60528,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60500,
											"end": 60528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60500,
											"end": 60528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60500,
											"end": 60632,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 60332,
											"end": 60335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60287,
											"end": 60644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 60287,
											"end": 60644,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60287,
											"end": 60644,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 60287,
											"end": 60644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 60654,
											"end": 60674,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60654,
											"end": 60674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60654,
											"end": 60674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60654,
											"end": 60674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60654,
											"end": 60695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60654,
											"end": 60695,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60654,
											"end": 60695,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 60654,
											"end": 60695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60654,
											"end": 60695,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60654,
											"end": 60695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60654,
											"end": 60695,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60654,
											"end": 60695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60654,
											"end": 60695,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60654,
											"end": 60695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60654,
											"end": 60695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60654,
											"end": 60695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60654,
											"end": 60695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60654,
											"end": 60695,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60654,
											"end": 60695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60654,
											"end": 60695,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59735,
											"end": 60703,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5056,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5065,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50617,
											"end": 50640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 50635,
											"end": 50639,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50617,
											"end": 50634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 50617,
											"end": 50640,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50617,
											"end": 50640,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 50617,
											"end": 50640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50653,
											"end": 50674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50677,
											"end": 50691,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50677,
											"end": 50691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50677,
											"end": 50691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50677,
											"end": 50685,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 50677,
											"end": 50691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50677,
											"end": 50691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50677,
											"end": 50691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50677,
											"end": 50691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50677,
											"end": 50691,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50769,
											"end": 50782,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50769,
											"end": 50782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50769,
											"end": 50782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50769,
											"end": 50782,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50785,
											"end": 50797,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50769,
											"end": 50782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50769,
											"end": 50782,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50769,
											"end": 50782,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 50769,
											"end": 50782,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 50769,
											"end": 50782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50769,
											"end": 50797,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50761,
											"end": 50828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 50761,
											"end": 50828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50761,
											"end": 50828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50761,
											"end": 50828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50761,
											"end": 50828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50761,
											"end": 50828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50761,
											"end": 50828,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50761,
											"end": 50828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50761,
											"end": 50828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 50761,
											"end": 50828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50761,
											"end": 50828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 50761,
											"end": 50828,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50761,
											"end": 50828,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 50761,
											"end": 50828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50861,
											"end": 50873,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50861,
											"end": 50880,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50861,
											"end": 50907,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50861,
											"end": 50907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50839,
											"end": 50957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 50839,
											"end": 50957,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50839,
											"end": 50957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50839,
											"end": 50957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50839,
											"end": 50957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50839,
											"end": 50957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50839,
											"end": 50957,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50839,
											"end": 50957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50839,
											"end": 50957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 50839,
											"end": 50957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50839,
											"end": 50957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 50839,
											"end": 50957,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50839,
											"end": 50957,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 50839,
											"end": 50957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51002,
											"end": 51014,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 50990,
											"end": 50999,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50990,
											"end": 51014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 50990,
											"end": 51014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50990,
											"end": 51014,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50990,
											"end": 51045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50990,
											"end": 51045,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50990,
											"end": 51045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 50990,
											"end": 51045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51030,
											"end": 51045,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51030,
											"end": 51045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51030,
											"end": 51045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51030,
											"end": 51045,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51030,
											"end": 51045,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51030,
											"end": 51045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51030,
											"end": 51045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51030,
											"end": 51045,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 51030,
											"end": 51045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51030,
											"end": 51045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51045,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51045,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50990,
											"end": 51045,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 50990,
											"end": 51045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50968,
											"end": 51098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 50968,
											"end": 51098,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50968,
											"end": 51098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50968,
											"end": 51098,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50968,
											"end": 51098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50968,
											"end": 51098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50968,
											"end": 51098,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50968,
											"end": 51098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50968,
											"end": 51098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 50968,
											"end": 51098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50968,
											"end": 51098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 50968,
											"end": 51098,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50968,
											"end": 51098,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 50968,
											"end": 51098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51111,
											"end": 51124,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51111,
											"end": 51124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51111,
											"end": 51124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51111,
											"end": 51136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51111,
											"end": 51136,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 51111,
											"end": 51136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51111,
											"end": 51136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 51111,
											"end": 51136,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 51111,
											"end": 51136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51111,
											"end": 51136,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 51111,
											"end": 51136,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 51111,
											"end": 51136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51111,
											"end": 51136,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 51147,
											"end": 51287,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 51147,
											"end": 51287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51167,
											"end": 51194,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51167,
											"end": 51194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51167,
											"end": 51194,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51147,
											"end": 51287,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51147,
											"end": 51287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 51147,
											"end": 51287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51256,
											"end": 51272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51256,
											"end": 51272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51273,
											"end": 51274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51256,
											"end": 51275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51256,
											"end": 51275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51256,
											"end": 51275,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51256,
											"end": 51275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 51256,
											"end": 51275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51256,
											"end": 51275,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 51256,
											"end": 51275,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 51256,
											"end": 51275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51216,
											"end": 51238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51216,
											"end": 51238,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51216,
											"end": 51238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51216,
											"end": 51238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51216,
											"end": 51235,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51216,
											"end": 51235,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 51216,
											"end": 51235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51256,
											"end": 51275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51216,
											"end": 51238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51216,
											"end": 51238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51216,
											"end": 51238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51216,
											"end": 51238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51216,
											"end": 51238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51216,
											"end": 51238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51216,
											"end": 51238,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51256,
											"end": 51275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51256,
											"end": 51275,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 51256,
											"end": 51275,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51256,
											"end": 51275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51256,
											"end": 51275,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51256,
											"end": 51275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51256,
											"end": 51275,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 51216,
											"end": 51275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51216,
											"end": 51275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51216,
											"end": 51275,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51196,
											"end": 51199,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51196,
											"end": 51199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51147,
											"end": 51287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 51147,
											"end": 51287,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51147,
											"end": 51287,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 51147,
											"end": 51287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51147,
											"end": 51287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51321,
											"end": 51330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51315,
											"end": 51319,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "PUSH",
											"source": 0,
											"value": "BA2D8506275D684E80223910F1065A195EA279F37E27EB97AC24F4107EBA6CF9"
										},
										{
											"begin": 51332,
											"end": 51348,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51332,
											"end": 51348,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51304,
											"end": 51349,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5091,
											"end": 5092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50455,
											"end": 51357,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5056,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5065,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49167,
											"end": 49190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 49185,
											"end": 49189,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 49167,
											"end": 49184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 49167,
											"end": 49190,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49167,
											"end": 49190,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 49167,
											"end": 49190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49203,
											"end": 49224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49227,
											"end": 49241,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 49227,
											"end": 49241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49227,
											"end": 49241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49227,
											"end": 49235,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 49227,
											"end": 49241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49227,
											"end": 49241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49227,
											"end": 49241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49227,
											"end": 49241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49227,
											"end": 49241,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49333,
											"end": 49348,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49333,
											"end": 49348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49333,
											"end": 49348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49333,
											"end": 49348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49351,
											"end": 49363,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49333,
											"end": 49348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49333,
											"end": 49348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49333,
											"end": 49348,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 49333,
											"end": 49348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 49333,
											"end": 49348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49333,
											"end": 49363,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 49333,
											"end": 49363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49333,
											"end": 49395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 49333,
											"end": 49395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49367,
											"end": 49380,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49367,
											"end": 49380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49367,
											"end": 49380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49367,
											"end": 49380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49383,
											"end": 49395,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49367,
											"end": 49380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49367,
											"end": 49380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49367,
											"end": 49380,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 49367,
											"end": 49380,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 49367,
											"end": 49380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49367,
											"end": 49395,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 49333,
											"end": 49395,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 49333,
											"end": 49395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49311,
											"end": 49457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 49311,
											"end": 49457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49311,
											"end": 49457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49311,
											"end": 49457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49311,
											"end": 49457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49311,
											"end": 49457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49311,
											"end": 49457,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49311,
											"end": 49457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49311,
											"end": 49457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 49311,
											"end": 49457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49311,
											"end": 49457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 49311,
											"end": 49457,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49311,
											"end": 49457,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 49311,
											"end": 49457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49528,
											"end": 49540,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49528,
											"end": 49547,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49528,
											"end": 49574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49528,
											"end": 49574,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49506,
											"end": 49623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 49506,
											"end": 49623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49506,
											"end": 49623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49506,
											"end": 49623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49506,
											"end": 49623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49506,
											"end": 49623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49506,
											"end": 49623,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49506,
											"end": 49623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49506,
											"end": 49623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 49506,
											"end": 49623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49506,
											"end": 49623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 49506,
											"end": 49623,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49506,
											"end": 49623,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 49506,
											"end": 49623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49670,
											"end": 49682,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 49656,
											"end": 49667,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 49656,
											"end": 49682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 49656,
											"end": 49682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49656,
											"end": 49682,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 49656,
											"end": 49709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49656,
											"end": 49709,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49656,
											"end": 49709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 49656,
											"end": 49709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49656,
											"end": 49709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49698,
											"end": 49709,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49686,
											"end": 49709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 49686,
											"end": 49709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49686,
											"end": 49695,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49686,
											"end": 49709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 49686,
											"end": 49709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49686,
											"end": 49709,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 49656,
											"end": 49709,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 49656,
											"end": 49709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49634,
											"end": 49758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 49634,
											"end": 49758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49634,
											"end": 49758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49634,
											"end": 49758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49634,
											"end": 49758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49634,
											"end": 49758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49634,
											"end": 49758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49634,
											"end": 49758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49634,
											"end": 49758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 49634,
											"end": 49758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49634,
											"end": 49758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 49634,
											"end": 49758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49634,
											"end": 49758,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 49634,
											"end": 49758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49771,
											"end": 49786,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49771,
											"end": 49786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49771,
											"end": 49786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49771,
											"end": 49800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49771,
											"end": 49800,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 49771,
											"end": 49800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49771,
											"end": 49800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 49771,
											"end": 49800,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 49771,
											"end": 49800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49771,
											"end": 49800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49771,
											"end": 49800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49771,
											"end": 49800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49771,
											"end": 49800,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 49771,
											"end": 49800,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49771,
											"end": 49800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49771,
											"end": 49800,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49771,
											"end": 49800,
											"name": "OR",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 49811,
											"end": 49836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49811,
											"end": 49836,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49811,
											"end": 49836,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 49811,
											"end": 49836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49811,
											"end": 49836,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49811,
											"end": 49836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49811,
											"end": 49836,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49811,
											"end": 49836,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 49811,
											"end": 49836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49811,
											"end": 49836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49811,
											"end": 49836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49811,
											"end": 49836,
											"name": "OR",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49847,
											"end": 49881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49847,
											"end": 49881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49847,
											"end": 49881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49847,
											"end": 49881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49847,
											"end": 49881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 49847,
											"end": 49881,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 49847,
											"end": 49881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49847,
											"end": 49881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 49894,
											"end": 50034,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 49894,
											"end": 50034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49914,
											"end": 49941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49914,
											"end": 49941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49914,
											"end": 49941,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 49894,
											"end": 50034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49894,
											"end": 50034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 49894,
											"end": 50034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50003,
											"end": 50019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50003,
											"end": 50019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50020,
											"end": 50021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50003,
											"end": 50022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50003,
											"end": 50022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50003,
											"end": 50022,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 50003,
											"end": 50022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 50003,
											"end": 50022,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50003,
											"end": 50022,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 50003,
											"end": 50022,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 50003,
											"end": 50022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49963,
											"end": 49985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49963,
											"end": 49985,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49963,
											"end": 49985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49963,
											"end": 49985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49963,
											"end": 49982,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 49963,
											"end": 49982,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49963,
											"end": 49982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50003,
											"end": 50022,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49963,
											"end": 49985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49963,
											"end": 49985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49963,
											"end": 49985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49963,
											"end": 49985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49963,
											"end": 49985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49963,
											"end": 49985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49963,
											"end": 49985,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50003,
											"end": 50022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50003,
											"end": 50022,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 50003,
											"end": 50022,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50003,
											"end": 50022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50003,
											"end": 50022,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50003,
											"end": 50022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50003,
											"end": 50022,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 49963,
											"end": 50022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49963,
											"end": 50022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49963,
											"end": 50022,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49943,
											"end": 49946,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49943,
											"end": 49946,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49894,
											"end": 50034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 49894,
											"end": 50034,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49894,
											"end": 50034,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 49894,
											"end": 50034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49894,
											"end": 50034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50080,
											"end": 50089,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50067,
											"end": 50078,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50061,
											"end": 50065,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "PUSH",
											"source": 0,
											"value": "4F863DC93468ACF71FF8F5770599FBEAD4D0FF8EA6BD0C3251576F68FDAD0904"
										},
										{
											"begin": 50091,
											"end": 50107,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50107,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50051,
											"end": 50108,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 5091,
											"end": 5092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48977,
											"end": 50116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57424,
											"end": 57440,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57465,
											"end": 57477,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57458,
											"end": 57477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57329,
											"end": 57485,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5060,
											"end": 5065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5056,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5065,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46593,
											"end": 46614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46627,
											"end": 46639,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46640,
											"end": 46656,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46627,
											"end": 46657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46673,
											"end": 46700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46669,
											"end": 46922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 46669,
											"end": 46922,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46718,
											"end": 46730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46736,
											"end": 46746,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46736,
											"end": 46751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46759,
											"end": 46765,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46736,
											"end": 46770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46717,
											"end": 46770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46717,
											"end": 46770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46717,
											"end": 46770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46793,
											"end": 46800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46785,
											"end": 46833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 46785,
											"end": 46833,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46785,
											"end": 46833,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46785,
											"end": 46833,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46785,
											"end": 46833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46785,
											"end": 46833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46785,
											"end": 46833,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46785,
											"end": 46833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46785,
											"end": 46833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 46785,
											"end": 46833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46785,
											"end": 46833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 46785,
											"end": 46833,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46785,
											"end": 46833,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 46785,
											"end": 46833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46669,
											"end": 46922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46669,
											"end": 46922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 46669,
											"end": 46922,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46669,
											"end": 46922,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 46669,
											"end": 46922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46866,
											"end": 46910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46866,
											"end": 46890,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46866,
											"end": 46890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46891,
											"end": 46901,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 46903,
											"end": 46909,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46866,
											"end": 46890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 46866,
											"end": 46910,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46866,
											"end": 46910,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 46866,
											"end": 46910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5091,
											"end": 5092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46475,
											"end": 46929,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56009,
											"end": 56021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56009,
											"end": 56028,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55943,
											"end": 55967,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 55943,
											"end": 55967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56009,
											"end": 56028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 56049,
											"end": 56077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56088,
											"end": 56109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56112,
											"end": 56126,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 56112,
											"end": 56126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56112,
											"end": 56126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56112,
											"end": 56120,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 56112,
											"end": 56126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56112,
											"end": 56126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56112,
											"end": 56126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56112,
											"end": 56126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56112,
											"end": 56126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56112,
											"end": 56126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56112,
											"end": 56126,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56112,
											"end": 56126,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56161,
											"end": 56169,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 56161,
											"end": 56175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56161,
											"end": 56175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56161,
											"end": 56175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56161,
											"end": 56175,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56161,
											"end": 56175,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56161,
											"end": 56182,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 56161,
											"end": 56182,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56161,
											"end": 56182,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 56161,
											"end": 56182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56161,
											"end": 56182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56161,
											"end": 56182,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56161,
											"end": 56182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56161,
											"end": 56182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56161,
											"end": 56182,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56215,
											"end": 56230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56215,
											"end": 56230,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56272,
											"end": 56292,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56272,
											"end": 56292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56272,
											"end": 56292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56272,
											"end": 56292,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56039,
											"end": 56077,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56039,
											"end": 56077,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56112,
											"end": 56126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56112,
											"end": 56126,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 56161,
											"end": 56182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56161,
											"end": 56182,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56272,
											"end": 56292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56272,
											"end": 56292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56272,
											"end": 56292,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 56272,
											"end": 56292,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 56272,
											"end": 56292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56272,
											"end": 56292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56331,
											"end": 56362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 56112,
											"end": 56126,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 56331,
											"end": 56356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 56331,
											"end": 56362,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56331,
											"end": 56362,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 56331,
											"end": 56362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56303,
											"end": 56362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56303,
											"end": 56362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56378,
											"end": 56387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56373,
											"end": 57257,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 56373,
											"end": 57257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56397,
											"end": 56410,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 56393,
											"end": 56394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56393,
											"end": 56410,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56373,
											"end": 57257,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56373,
											"end": 57257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 56373,
											"end": 57257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56432,
											"end": 56458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56461,
											"end": 56501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56461,
											"end": 56501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56461,
											"end": 56501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56461,
											"end": 56498,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56461,
											"end": 56498,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 56461,
											"end": 56498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56461,
											"end": 56501,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56461,
											"end": 56501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56461,
											"end": 56501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56461,
											"end": 56501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56461,
											"end": 56501,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56461,
											"end": 56537,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56461,
											"end": 56537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56461,
											"end": 56537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56556,
											"end": 56597,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 56556,
											"end": 56597,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56556,
											"end": 56597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56556,
											"end": 56597,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 56556,
											"end": 56617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56556,
											"end": 56617,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56556,
											"end": 56617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 56556,
											"end": 56617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56601,
											"end": 56617,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56601,
											"end": 56617,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56601,
											"end": 56617,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56556,
											"end": 56617,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 56556,
											"end": 56617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56552,
											"end": 56918,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56552,
											"end": 56918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 56552,
											"end": 56918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56638,
											"end": 56652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56725,
											"end": 56747,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56725,
											"end": 56747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56725,
											"end": 56747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56725,
											"end": 56744,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56725,
											"end": 56744,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 56725,
											"end": 56744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56725,
											"end": 56747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56725,
											"end": 56747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56725,
											"end": 56747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56725,
											"end": 56747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56725,
											"end": 56747,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56725,
											"end": 56762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56655,
											"end": 56763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 56655,
											"end": 56763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56656,
											"end": 56697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 56656,
											"end": 56697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56656,
											"end": 56697,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 56656,
											"end": 56697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56656,
											"end": 56697,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 56656,
											"end": 56697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56656,
											"end": 56697,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56656,
											"end": 56697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56725,
											"end": 56762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56655,
											"end": 56724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 56655,
											"end": 56763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56655,
											"end": 56763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56655,
											"end": 56763,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 56655,
											"end": 56763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56638,
											"end": 56763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56803,
											"end": 56902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 56872,
											"end": 56883,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 56848,
											"end": 56869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 56638,
											"end": 56763,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42187,
											"end": 42191,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 56848,
											"end": 56858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 56848,
											"end": 56869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56848,
											"end": 56869,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 56848,
											"end": 56869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56848,
											"end": 56883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56848,
											"end": 56883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 56848,
											"end": 56883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56848,
											"end": 56883,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 56848,
											"end": 56883,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 56848,
											"end": 56883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56803,
											"end": 56821,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56803,
											"end": 56821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56848,
											"end": 56883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56848,
											"end": 56883,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 56803,
											"end": 56825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 56803,
											"end": 56902,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56803,
											"end": 56902,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 56803,
											"end": 56902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56782,
											"end": 56902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56782,
											"end": 56902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56552,
											"end": 56918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56552,
											"end": 56918,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 56552,
											"end": 56918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57051,
											"end": 57073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57051,
											"end": 57073,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57051,
											"end": 57073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57051,
											"end": 57073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57051,
											"end": 57070,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57051,
											"end": 57070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57051,
											"end": 57070,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 57051,
											"end": 57070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57051,
											"end": 57073,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57051,
											"end": 57073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57051,
											"end": 57073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57051,
											"end": 57073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57051,
											"end": 57073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57051,
											"end": 57073,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57051,
											"end": 57092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57051,
											"end": 57092,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42187,
											"end": 42191,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 42187,
											"end": 42191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56964,
											"end": 57134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 56964,
											"end": 57134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57002,
											"end": 57115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 57002,
											"end": 57115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57002,
											"end": 57020,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57002,
											"end": 57020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57002,
											"end": 57024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 57002,
											"end": 57115,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57002,
											"end": 57115,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 57002,
											"end": 57115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56964,
											"end": 56975,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 56964,
											"end": 56975,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56964,
											"end": 56975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56964,
											"end": 56979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 56964,
											"end": 57134,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56964,
											"end": 57134,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 56964,
											"end": 57134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56964,
											"end": 57163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56964,
											"end": 57163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 56964,
											"end": 57163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56964,
											"end": 57163,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 56964,
											"end": 57163,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 56964,
											"end": 57163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56964,
											"end": 57163,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 56934,
											"end": 56941,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 56942,
											"end": 56943,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56934,
											"end": 56944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56934,
											"end": 56944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56934,
											"end": 56944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56934,
											"end": 56944,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56934,
											"end": 56944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 56934,
											"end": 56944,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56934,
											"end": 56944,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 56934,
											"end": 56944,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 56934,
											"end": 56944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56934,
											"end": 56944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56934,
											"end": 56944,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56934,
											"end": 56944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56934,
											"end": 56944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56934,
											"end": 56944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56934,
											"end": 57163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56934,
											"end": 57163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56934,
											"end": 57163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56934,
											"end": 57163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56934,
											"end": 57163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 57206,
											"end": 57210,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57206,
											"end": 57225,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57206,
											"end": 57225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57206,
											"end": 57228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57226,
											"end": 57227,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57206,
											"end": 57228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57206,
											"end": 57228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57206,
											"end": 57228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57206,
											"end": 57228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57206,
											"end": 57228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57206,
											"end": 57228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57206,
											"end": 57228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57206,
											"end": 57228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57206,
											"end": 57228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57206,
											"end": 57228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57206,
											"end": 57228,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57206,
											"end": 57244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57206,
											"end": 57244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57206,
											"end": 57244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57198,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 57199,
											"end": 57200,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57201,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 57191,
											"end": 57201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57201,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 57191,
											"end": 57245,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 57191,
											"end": 57245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57178,
											"end": 57185,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 57186,
											"end": 57187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57178,
											"end": 57188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57178,
											"end": 57188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57178,
											"end": 57188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57178,
											"end": 57188,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57178,
											"end": 57188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 57178,
											"end": 57188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57178,
											"end": 57188,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 57178,
											"end": 57188,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 57178,
											"end": 57188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57178,
											"end": 57188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57178,
											"end": 57188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57178,
											"end": 57188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57178,
											"end": 57188,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57178,
											"end": 57188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57178,
											"end": 57188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57178,
											"end": 57188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57178,
											"end": 57188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57178,
											"end": 57188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57178,
											"end": 57245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56412,
											"end": 56415,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56412,
											"end": 56415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56373,
											"end": 57257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 56373,
											"end": 57257,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56373,
											"end": 57257,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 56373,
											"end": 57257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56373,
											"end": 57257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55822,
											"end": 57264,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 59527,
											"end": 59668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59585,
											"end": 59608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 59603,
											"end": 59607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59585,
											"end": 59602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 59585,
											"end": 59608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59585,
											"end": 59608,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 59585,
											"end": 59608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59619,
											"end": 59660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 59637,
											"end": 59647,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 59649,
											"end": 59653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59655,
											"end": 59659,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59619,
											"end": 59636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 59619,
											"end": 59660,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36366,
											"end": 36988,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 36366,
											"end": 36988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36736,
											"end": 36746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36736,
											"end": 36746,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36736,
											"end": 36746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36735,
											"end": 36797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 36735,
											"end": 36797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36752,
											"end": 36767,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36767,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 36752,
											"end": 36767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36776,
											"end": 36780,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 36776,
											"end": 36780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36783,
											"end": 36790,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36783,
											"end": 36790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 36752,
											"end": 36791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36752,
											"end": 36796,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36735,
											"end": 36797,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 36735,
											"end": 36797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36727,
											"end": 36879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 36727,
											"end": 36879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36727,
											"end": 36879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36727,
											"end": 36879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36727,
											"end": 36879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36727,
											"end": 36879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36727,
											"end": 36879,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36727,
											"end": 36879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36727,
											"end": 36879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 36727,
											"end": 36879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36727,
											"end": 36879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 36727,
											"end": 36879,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36727,
											"end": 36879,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 36727,
											"end": 36879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36890,
											"end": 36980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 36910,
											"end": 36915,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36940,
											"end": 36962,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 36940,
											"end": 36962,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 36940,
											"end": 36962,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 36964,
											"end": 36971,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36973,
											"end": 36978,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36917,
											"end": 36979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36890,
											"end": 36909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 36890,
											"end": 36980,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16689,
											"end": 16884,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 16689,
											"end": 16884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16792,
											"end": 16804,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16824,
											"end": 16876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 16846,
											"end": 16852,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16854,
											"end": 16858,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16860,
											"end": 16861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16863,
											"end": 16875,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16824,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 16824,
											"end": 16876,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16824,
											"end": 16876,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 16824,
											"end": 16876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16817,
											"end": 16876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16817,
											"end": 16876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16689,
											"end": 16884,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 16689,
											"end": 16884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16689,
											"end": 16884,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16689,
											"end": 16884,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16689,
											"end": 16884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16689,
											"end": 16884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16689,
											"end": 16884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16689,
											"end": 16884,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 61557,
											"end": 63610,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 61557,
											"end": 63610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61685,
											"end": 61703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61706,
											"end": 61720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61706,
											"end": 61720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61706,
											"end": 61720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61706,
											"end": 61714,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 61706,
											"end": 61720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61706,
											"end": 61720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61706,
											"end": 61720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61706,
											"end": 61720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61706,
											"end": 61720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61706,
											"end": 61720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61706,
											"end": 61720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61706,
											"end": 61720,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61706,
											"end": 61725,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 61706,
											"end": 61725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61706,
											"end": 61725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61706,
											"end": 61725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61706,
											"end": 61725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61706,
											"end": 61725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61706,
											"end": 61725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61706,
											"end": 61725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61706,
											"end": 61725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61706,
											"end": 61732,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61767,
											"end": 61779,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61767,
											"end": 61786,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61803,
											"end": 61818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61799,
											"end": 62382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 61799,
											"end": 62382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62079,
											"end": 62088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62074,
											"end": 62350,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 62074,
											"end": 62350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62098,
											"end": 62111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62094,
											"end": 62095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62094,
											"end": 62111,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 62074,
											"end": 62350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62074,
											"end": 62350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 62074,
											"end": 62350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62240,
											"end": 62254,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62248,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 62240,
											"end": 62254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62240,
											"end": 62254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62240,
											"end": 62254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62254,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62254,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62294,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62294,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62291,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62240,
											"end": 62291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62294,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62294,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62294,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62334,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62240,
											"end": 62334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62240,
											"end": 62334,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62151,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62151,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62145,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 62137,
											"end": 62151,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62151,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62151,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62151,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 62137,
											"end": 62156,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62156,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62156,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62156,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62156,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62156,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62196,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62196,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62196,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62196,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62196,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62237,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62137,
											"end": 62334,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 62113,
											"end": 62116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62074,
											"end": 62350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 62074,
											"end": 62350,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62074,
											"end": 62350,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 62074,
											"end": 62350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62074,
											"end": 62350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62364,
											"end": 62371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62364,
											"end": 62371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62364,
											"end": 62371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 62364,
											"end": 62371,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61799,
											"end": 62382,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 61799,
											"end": 62382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62399,
											"end": 62408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62394,
											"end": 63603,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 62394,
											"end": 63603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62418,
											"end": 62431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62414,
											"end": 62415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62414,
											"end": 62431,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 62394,
											"end": 63603,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62394,
											"end": 63603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 62394,
											"end": 63603,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62453,
											"end": 62482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62485,
											"end": 62499,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62493,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 62485,
											"end": 62499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62485,
											"end": 62499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62485,
											"end": 62499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62499,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62499,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62535,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62535,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62535,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62532,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62485,
											"end": 62532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62535,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62535,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62535,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62535,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62571,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62485,
											"end": 62571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62571,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62636,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62636,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62630,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 62622,
											"end": 62636,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62636,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62636,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 62622,
											"end": 62641,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62641,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62641,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62641,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62641,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62677,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62677,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62677,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62677,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62677,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62677,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62677,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62893,
											"end": 62922,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62571,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62622,
											"end": 62677,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42187,
											"end": 42191,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 42187,
											"end": 42191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62834,
											"end": 62938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 62834,
											"end": 62938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62867,
											"end": 62923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 62867,
											"end": 62923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62571,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 62485,
											"end": 62571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62867,
											"end": 62892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 62867,
											"end": 62923,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 62867,
											"end": 62923,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 62867,
											"end": 62923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62834,
											"end": 62844,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 62834,
											"end": 62844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62834,
											"end": 62848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 62834,
											"end": 62938,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 62834,
											"end": 62938,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 62834,
											"end": 62938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62834,
											"end": 62950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62834,
											"end": 62950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 62834,
											"end": 62950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62834,
											"end": 62950,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 62834,
											"end": 62950,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 62834,
											"end": 62950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62989,
											"end": 63015,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62989,
											"end": 63015,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 62834,
											"end": 62950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62834,
											"end": 62950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62834,
											"end": 62950,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 62834,
											"end": 62950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 62976,
											"end": 63016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 62976,
											"end": 63016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62834,
											"end": 62950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62834,
											"end": 62950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62976,
											"end": 62988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 62976,
											"end": 63016,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 62976,
											"end": 63016,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 62976,
											"end": 63016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62965,
											"end": 63016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62965,
											"end": 63016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63062,
											"end": 63075,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 63062,
											"end": 63090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 63062,
											"end": 63090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63082,
											"end": 63090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63062,
											"end": 63090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 63062,
											"end": 63090,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63062,
											"end": 63090,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 63062,
											"end": 63090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63078,
											"end": 63079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63062,
											"end": 63090,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 63062,
											"end": 63090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63033,
											"end": 63090,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 63033,
											"end": 63090,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 63191,
											"end": 63220,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63191,
											"end": 63220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 63191,
											"end": 63220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63191,
											"end": 63244,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 63191,
											"end": 63244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63191,
											"end": 63244,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 63265,
											"end": 63278,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 63265,
											"end": 63294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63265,
											"end": 63294,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63265,
											"end": 63294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 63265,
											"end": 63294,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63265,
											"end": 63294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63293,
											"end": 63294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63282,
											"end": 63290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63282,
											"end": 63294,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 63265,
											"end": 63294,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 63265,
											"end": 63294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63261,
											"end": 63592,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63261,
											"end": 63592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 63261,
											"end": 63592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63315,
											"end": 63369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 63337,
											"end": 63349,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63350,
											"end": 63351,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 63337,
											"end": 63352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 63355,
											"end": 63358,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 63360,
											"end": 63368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 63315,
											"end": 63326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 63315,
											"end": 63369,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 63315,
											"end": 63369,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 63315,
											"end": 63369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63476,
											"end": 63488,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63489,
											"end": 63490,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 63476,
											"end": 63491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 63449,
											"end": 63453,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 63449,
											"end": 63453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "PUSH",
											"source": 0,
											"value": "F75F3D433C6628E04E01A0BE1A2C6692A6011CE4B00389824CFA8B8A12F3C1C4"
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63514,
											"end": 63522,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 63514,
											"end": 63522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63545,
											"end": 63557,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 63545,
											"end": 63557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63393,
											"end": 63576,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 63261,
											"end": 63592,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 63261,
											"end": 63592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 62433,
											"end": 62436,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62433,
											"end": 62436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62394,
											"end": 63603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 62394,
											"end": 63603,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62394,
											"end": 63603,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 62394,
											"end": 63603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62394,
											"end": 63603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 63610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 63610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 63610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 63610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 63610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 63610,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35892,
											"end": 36097,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 35892,
											"end": 36097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35993,
											"end": 36089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 36013,
											"end": 36018,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36043,
											"end": 36070,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 36043,
											"end": 36070,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 36043,
											"end": 36070,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 36072,
											"end": 36076,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36080,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36082,
											"end": 36087,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36020,
											"end": 36088,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36088,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 36020,
											"end": 36088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 36020,
											"end": 36088,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36088,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 36020,
											"end": 36088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35993,
											"end": 36089,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 35993,
											"end": 36089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35892,
											"end": 36097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35892,
											"end": 36097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35892,
											"end": 36097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35892,
											"end": 36097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35892,
											"end": 36097,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30374,
											"end": 30553,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 30374,
											"end": 30553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30432,
											"end": 30439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30464,
											"end": 30469,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30464,
											"end": 30469,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30464,
											"end": 30469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30488,
											"end": 30494,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30488,
											"end": 30494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30488,
											"end": 30494,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30488,
											"end": 30494,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30480,
											"end": 30526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 30480,
											"end": 30526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30480,
											"end": 30526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30480,
											"end": 30526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30480,
											"end": 30526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30480,
											"end": 30526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30480,
											"end": 30526,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30480,
											"end": 30526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30480,
											"end": 30526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 30480,
											"end": 30526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30480,
											"end": 30526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 30480,
											"end": 30526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30480,
											"end": 30526,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 30480,
											"end": 30526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30544,
											"end": 30545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30374,
											"end": 30553,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 30374,
											"end": 30553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30374,
											"end": 30553,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30374,
											"end": 30553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30374,
											"end": 30553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30374,
											"end": 30553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30374,
											"end": 30553,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 60824,
											"end": 61455,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 60824,
											"end": 61455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60894,
											"end": 60915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60918,
											"end": 60932,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60918,
											"end": 60932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60918,
											"end": 60932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60918,
											"end": 60926,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60918,
											"end": 60932,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60918,
											"end": 60932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60918,
											"end": 60932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60918,
											"end": 60932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60918,
											"end": 60932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60918,
											"end": 60932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60918,
											"end": 60932,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60918,
											"end": 60932,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60967,
											"end": 60975,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60967,
											"end": 60981,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60967,
											"end": 60981,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60967,
											"end": 60981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60967,
											"end": 60981,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60967,
											"end": 60981,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60982,
											"end": 60992,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60967,
											"end": 60993,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60967,
											"end": 60993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60967,
											"end": 60993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60967,
											"end": 60993,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60967,
											"end": 60993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60967,
											"end": 60993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60967,
											"end": 60993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60967,
											"end": 60993,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61012,
											"end": 61023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61012,
											"end": 61023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61012,
											"end": 61034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 61012,
											"end": 61034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61004,
											"end": 61068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 61004,
											"end": 61068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61004,
											"end": 61068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61004,
											"end": 61068,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61004,
											"end": 61068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61004,
											"end": 61068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61004,
											"end": 61068,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61004,
											"end": 61068,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61004,
											"end": 61068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 61004,
											"end": 61068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61004,
											"end": 61068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 61004,
											"end": 61068,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 61004,
											"end": 61068,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 61004,
											"end": 61068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61124,
											"end": 61147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 61142,
											"end": 61146,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61124,
											"end": 61141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 61124,
											"end": 61147,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 61124,
											"end": 61147,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 61124,
											"end": 61147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61158,
											"end": 61199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 61176,
											"end": 61186,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 61188,
											"end": 61192,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61194,
											"end": 61198,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61158,
											"end": 61175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 61158,
											"end": 61199,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 61158,
											"end": 61199,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 61158,
											"end": 61199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61226,
											"end": 61237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61226,
											"end": 61237,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61226,
											"end": 61250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 61226,
											"end": 61250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61242,
											"end": 61249,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61226,
											"end": 61241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 61226,
											"end": 61250,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 61226,
											"end": 61250,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 61226,
											"end": 61250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61212,
											"end": 61250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61212,
											"end": 61250,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61279,
											"end": 61294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61279,
											"end": 61294,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61279,
											"end": 61307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 61279,
											"end": 61307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61299,
											"end": 61306,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61279,
											"end": 61298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 61279,
											"end": 61307,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 61279,
											"end": 61307,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 61279,
											"end": 61307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61261,
											"end": 61307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61261,
											"end": 61307,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61330,
											"end": 61345,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61330,
											"end": 61345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61330,
											"end": 61345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61330,
											"end": 61345,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61320,
											"end": 61380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 61320,
											"end": 61380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61330,
											"end": 61345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61360,
											"end": 61370,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 61372,
											"end": 61379,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61320,
											"end": 61359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 61320,
											"end": 61380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 61320,
											"end": 61380,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 61320,
											"end": 61380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61425,
											"end": 61437,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 61419,
											"end": 61423,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61407,
											"end": 61417,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61398,
											"end": 61447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61398,
											"end": 61447,
											"name": "PUSH",
											"source": 0,
											"value": "2F25270A4D87BEA75DB541CDFE559334A275B4A233520ED6C0A2429667CCA94"
										},
										{
											"begin": 61439,
											"end": 61446,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 61398,
											"end": 61447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61398,
											"end": 61447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61398,
											"end": 61447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 61398,
											"end": 61447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61398,
											"end": 61447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61398,
											"end": 61447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61398,
											"end": 61447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 61398,
											"end": 61447,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 61398,
											"end": 61447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61398,
											"end": 61447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61398,
											"end": 61447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61398,
											"end": 61447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61398,
											"end": 61447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61398,
											"end": 61447,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61398,
											"end": 61447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61398,
											"end": 61447,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 60824,
											"end": 61455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60824,
											"end": 61455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60824,
											"end": 61455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60824,
											"end": 61455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60824,
											"end": 61455,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 64062,
											"end": 64316,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 64062,
											"end": 64316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64189,
											"end": 64202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 64205,
											"end": 64226,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 64205,
											"end": 64226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 64205,
											"end": 64226,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 64205,
											"end": 64240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 64205,
											"end": 64240,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64239,
											"end": 64240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64205,
											"end": 64240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 64205,
											"end": 64240,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 64205,
											"end": 64240,
											"name": "tag",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 64205,
											"end": 64240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64229,
											"end": 64236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 64205,
											"end": 64240,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 64205,
											"end": 64240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64189,
											"end": 64240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 64189,
											"end": 64240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64263,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1798"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 64251,
											"end": 64268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64268,
											"name": "PUSH",
											"source": 0,
											"value": "7750C9F0"
										},
										{
											"begin": 64276,
											"end": 64281,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 64283,
											"end": 64288,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 64290,
											"end": 64298,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 64300,
											"end": 64307,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "tag",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64251,
											"end": 64308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64062,
											"end": 64316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64062,
											"end": 64316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64062,
											"end": 64316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64062,
											"end": 64316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64062,
											"end": 64316,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30836,
											"end": 30994,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 30836,
											"end": 30994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30894,
											"end": 30901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30927,
											"end": 30928,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 30923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 30928,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 30928,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30914,
											"end": 30963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 30914,
											"end": 30963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30914,
											"end": 30963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30914,
											"end": 30963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30914,
											"end": 30963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30914,
											"end": 30963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30914,
											"end": 30963,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30914,
											"end": 30963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30914,
											"end": 30963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 30914,
											"end": 30963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30914,
											"end": 30963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 30914,
											"end": 30963,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30914,
											"end": 30963,
											"name": "tag",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 30914,
											"end": 30963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30981,
											"end": 30986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30981,
											"end": 30986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30981,
											"end": 30986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30836,
											"end": 30994,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35707,
											"end": 35884,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 35707,
											"end": 35884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 35876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 35810,
											"end": 35815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35840,
											"end": 35863,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 35840,
											"end": 35863,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 35840,
											"end": 35863,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 35865,
											"end": 35867,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35869,
											"end": 35874,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35817,
											"end": 35875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35817,
											"end": 35875,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35817,
											"end": 35875,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 35817,
											"end": 35875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35817,
											"end": 35875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 35817,
											"end": 35875,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35817,
											"end": 35875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35817,
											"end": 35875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35817,
											"end": 35875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 35817,
											"end": 35875,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 63746,
											"end": 63986,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 63746,
											"end": 63986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63845,
											"end": 63858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63885,
											"end": 63899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63885,
											"end": 63899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63885,
											"end": 63899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63885,
											"end": 63893,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 63885,
											"end": 63899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 63885,
											"end": 63899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63885,
											"end": 63899,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63885,
											"end": 63899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63885,
											"end": 63899,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 63885,
											"end": 63908,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63885,
											"end": 63908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63885,
											"end": 63908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 63885,
											"end": 63908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63885,
											"end": 63908,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 63885,
											"end": 63908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 63885,
											"end": 63908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 63932,
											"end": 63944,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 63923,
											"end": 63944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63923,
											"end": 63944,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 63919,
											"end": 63978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63919,
											"end": 63978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 63919,
											"end": 63978,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63955,
											"end": 63978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 63955,
											"end": 63967,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 63955,
											"end": 63976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 63955,
											"end": 63978,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 63955,
											"end": 63978,
											"name": "tag",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 63955,
											"end": 63978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63946,
											"end": 63978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63946,
											"end": 63978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63919,
											"end": 63978,
											"name": "tag",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 63919,
											"end": 63978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63746,
											"end": 63986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 63746,
											"end": 63986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63746,
											"end": 63986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63746,
											"end": 63986,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31253,
											"end": 31473,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 31253,
											"end": 31473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31311,
											"end": 31318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31335,
											"end": 31341,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31331,
											"end": 31351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 31331,
											"end": 31351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31350,
											"end": 31351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31343,
											"end": 31351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 31343,
											"end": 31351,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31331,
											"end": 31351,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 31331,
											"end": 31351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31374,
											"end": 31379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31374,
											"end": 31379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31374,
											"end": 31379,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31378,
											"end": 31379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31374,
											"end": 31375,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31374,
											"end": 31379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31374,
											"end": 31375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31398,
											"end": 31403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 31398,
											"end": 31403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31398,
											"end": 31403,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 31398,
											"end": 31403,
											"name": "tag",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 31398,
											"end": 31403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31398,
											"end": 31403,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31398,
											"end": 31408,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 31446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 31390,
											"end": 31446,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 31446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31390,
											"end": 31446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31390,
											"end": 31446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 31446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 31446,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31390,
											"end": 31446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 31446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 31390,
											"end": 31446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 31446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 31390,
											"end": 31446,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38012,
											"end": 38773,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 38012,
											"end": 38773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38436,
											"end": 38459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 38490,
											"end": 38494,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38470,
											"end": 38475,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38462,
											"end": 38489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 38462,
											"end": 38489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "tag",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 38462,
											"end": 38531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38546,
											"end": 38563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38546,
											"end": 38563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38436,
											"end": 38531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38436,
											"end": 38531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38546,
											"end": 38567,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38542,
											"end": 38766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 38542,
											"end": 38766,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38688,
											"end": 38698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38677,
											"end": 38707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38677,
											"end": 38707,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38677,
											"end": 38707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38677,
											"end": 38707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38677,
											"end": 38707,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38677,
											"end": 38707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38677,
											"end": 38707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38677,
											"end": 38707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38677,
											"end": 38707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 38677,
											"end": 38707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38677,
											"end": 38707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38677,
											"end": 38707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 38677,
											"end": 38707,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38677,
											"end": 38707,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 38677,
											"end": 38707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38669,
											"end": 38754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 38669,
											"end": 38754,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38669,
											"end": 38754,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38669,
											"end": 38754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38669,
											"end": 38754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38669,
											"end": 38754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38669,
											"end": 38754,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38669,
											"end": 38754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38669,
											"end": 38754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 38669,
											"end": 38754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38669,
											"end": 38754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 38669,
											"end": 38754,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17741,
											"end": 18271,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 17741,
											"end": 18271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17880,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17926,
											"end": 17931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17901,
											"end": 17922,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 17901,
											"end": 17931,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17901,
											"end": 17931,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 17893,
											"end": 17974,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17893,
											"end": 17974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17893,
											"end": 17974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17974,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17893,
											"end": 17974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 17893,
											"end": 17974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17893,
											"end": 17974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 17893,
											"end": 17974,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17893,
											"end": 17974,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 17893,
											"end": 17974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17993,
											"end": 18011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 18004,
											"end": 18010,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17993,
											"end": 18003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 17993,
											"end": 18011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17993,
											"end": 18011,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 17993,
											"end": 18011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17985,
											"end": 18045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 17985,
											"end": 18045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17985,
											"end": 18045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17985,
											"end": 18045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17985,
											"end": 18045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17985,
											"end": 18045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17985,
											"end": 18045,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17985,
											"end": 18045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17985,
											"end": 18045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 17985,
											"end": 18045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17985,
											"end": 18045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 17985,
											"end": 18045,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17985,
											"end": 18045,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 17985,
											"end": 18045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18119,
											"end": 18131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18133,
											"end": 18156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18166,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18160,
											"end": 18171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18180,
											"end": 18185,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18188,
											"end": 18192,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "tag",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18160,
											"end": 18193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18118,
											"end": 18193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18118,
											"end": 18193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18118,
											"end": 18193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18118,
											"end": 18193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18211,
											"end": 18263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 18229,
											"end": 18236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18250,
											"end": 18262,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18211,
											"end": 18228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 18211,
											"end": 18263,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18211,
											"end": 18263,
											"name": "tag",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 18211,
											"end": 18263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18204,
											"end": 18263,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 17741,
											"end": 18271,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17741,
											"end": 18271,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8320,
											"end": 8499,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 8320,
											"end": 8499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8416,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 8403,
											"end": 8408,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8403,
											"end": 8416,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8395,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 8395,
											"end": 8460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8395,
											"end": 8460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8395,
											"end": 8460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8395,
											"end": 8460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8395,
											"end": 8460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8395,
											"end": 8460,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8395,
											"end": 8460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8395,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8395,
											"end": 8460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8395,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 8395,
											"end": 8460,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8395,
											"end": 8460,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 8395,
											"end": 8460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8485,
											"end": 8490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8320,
											"end": 8499,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13771,
											"end": 14193,
											"name": "tag",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 13771,
											"end": 14193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14138,
											"end": 14158,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14177,
											"end": 14185,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14177,
											"end": 14185,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14177,
											"end": 14185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13771,
											"end": 14193,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20281,
											"end": 21023,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 20281,
											"end": 21023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20396,
											"end": 20408,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20425,
											"end": 20432,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20421,
											"end": 21016,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20421,
											"end": 21016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 20421,
											"end": 21016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20456,
											"end": 20466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20449,
											"end": 20466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 20449,
											"end": 20466,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20421,
											"end": 21016,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 20421,
											"end": 21016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20570,
											"end": 20587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20570,
											"end": 20587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20570,
											"end": 20591,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 21005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 20566,
											"end": 21005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20833,
											"end": 20843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20827,
											"end": 20844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20894,
											"end": 20909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20881,
											"end": 20891,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20877,
											"end": 20879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20873,
											"end": 20892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20866,
											"end": 20910,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 20929,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 20781,
											"end": 20929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20976,
											"end": 20988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20969,
											"end": 20989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20969,
											"end": 20989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20969,
											"end": 20989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20969,
											"end": 20989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20969,
											"end": 20989,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20969,
											"end": 20989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20969,
											"end": 20989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 20969,
											"end": 20989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20969,
											"end": 20989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20969,
											"end": 20989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 20969,
											"end": 20989,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 194,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 194,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 327,
											"end": 330,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 320,
											"end": 324,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 312,
											"end": 318,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 308,
											"end": 325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 304,
											"end": 331,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 294,
											"end": 296,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 352,
											"end": 360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 335,
											"end": 361,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 296,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 294,
											"end": 296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 382,
											"end": 402,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 382,
											"end": 402,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 425,
											"end": 443,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 414,
											"end": 444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 414,
											"end": 444,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 411,
											"end": 413,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 411,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 411,
											"end": 413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 464,
											"end": 472,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 454,
											"end": 462,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 447,
											"end": 473,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 411,
											"end": 413,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 411,
											"end": 413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 508,
											"end": 512,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 500,
											"end": 506,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 496,
											"end": 513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 484,
											"end": 513,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 484,
											"end": 513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 571,
											"end": 574,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 564,
											"end": 568,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 556,
											"end": 560,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 548,
											"end": 554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 544,
											"end": 561,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 536,
											"end": 542,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 532,
											"end": 562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 528,
											"end": 569,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 525,
											"end": 575,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 522,
											"end": 524,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 522,
											"end": 524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 588,
											"end": 589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 578,
											"end": 590,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 522,
											"end": 524,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 522,
											"end": 524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 284,
											"end": 598,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 284,
											"end": 598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 284,
											"end": 598,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 284,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 284,
											"end": 598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 284,
											"end": 598,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 603,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 603,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 672,
											"end": 692,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 732,
											"end": 742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 721,
											"end": 743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 721,
											"end": 743,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 744,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 744,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 701,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 701,
											"end": 703,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 758,
											"end": 759,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 760,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 773,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 773,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 773,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 864,
											"end": 871,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 860,
											"end": 883,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 856,
											"end": 888,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 853,
											"end": 855,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 853,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 853,
											"end": 855,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 906,
											"end": 912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 898,
											"end": 904,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 891,
											"end": 913,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 853,
											"end": 855,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 853,
											"end": 855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 934,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 934,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 976,
											"end": 1664,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 976,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 1664,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 1664,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1160,
											"end": 1169,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1158,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1170,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1176,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1192,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1201,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 1243,
											"end": 1252,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 1222,
											"end": 1253,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1222,
											"end": 1253,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 1222,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1253,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 1307,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1305,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 1272,
											"end": 1311,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1272,
											"end": 1311,
											"name": "tag",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 1272,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1311,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 1365,
											"end": 1367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1363,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 1330,
											"end": 1369,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1330,
											"end": 1369,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 1330,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1369,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1422,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1424,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1465,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1466,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1491,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 1596,
											"end": 1603,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 1593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 1528,
											"end": 1604,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1528,
											"end": 1604,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 1528,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1664,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1664,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1664,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1664,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1130,
											"end": 1664,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1664,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1623,
											"end": 1631,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1631,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1604,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1664,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1130,
											"end": 1664,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1669,
											"end": 2132,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1669,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 2132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1818,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1804,
											"end": 1813,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1795,
											"end": 1802,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1814,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1819,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1786,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 1784,
											"end": 1786,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1786,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 1784,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1892,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1933,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1904,
											"end": 1934,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1903,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 1901,
											"end": 1903,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1950,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 1959,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1903,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 1901,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 2064,
											"end": 2071,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2061,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2044,
											"end": 2053,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 1996,
											"end": 2072,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1996,
											"end": 2072,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 1996,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2099,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2072,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1774,
											"end": 2132,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1774,
											"end": 2132,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2137,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 2137,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2137,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2243,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2255,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2260,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2284,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2285,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 2334,
											"end": 2364,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2399,
											"end": 2589,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2399,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2511,
											"end": 2513,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2497,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2509,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2514,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2479,
											"end": 2481,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2479,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 2479,
											"end": 2481,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2539,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2479,
											"end": 2481,
											"name": "tag",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 2479,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2560,
											"end": 2583,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2583,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2469,
											"end": 2589,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2594,
											"end": 2788,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 2594,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2705,
											"end": 2714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2696,
											"end": 2703,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2715,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2685,
											"end": 2687,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2685,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 2685,
											"end": 2687,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2736,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2745,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2685,
											"end": 2687,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 2685,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2766,
											"end": 2782,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2782,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2675,
											"end": 2788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2675,
											"end": 2788,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2793,
											"end": 3059,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2793,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 3059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2793,
											"end": 3059,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2910,
											"end": 2919,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2920,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 2925,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2890,
											"end": 2892,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2890,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 2890,
											"end": 2892,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2949,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 2941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2928,
											"end": 2950,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2890,
											"end": 2892,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 2890,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 2993,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 2994,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 3049,
											"end": 3051,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3038,
											"end": 3047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 3013,
											"end": 3053,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3013,
											"end": 3053,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 3013,
											"end": 3053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 3059,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 3059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 3059,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 3059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 3059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 3059,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3064,
											"end": 3322,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3064,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3064,
											"end": 3322,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3195,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3190,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3172,
											"end": 3179,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3191,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3196,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3163,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 3161,
											"end": 3163,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3220,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3212,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3221,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3163,
											"name": "tag",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 3161,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3242,
											"end": 3265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3265,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3265,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3284,
											"end": 3316,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3284,
											"end": 3316,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3151,
											"end": 3322,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3327,
											"end": 3716,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3327,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3327,
											"end": 3716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3472,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3458,
											"end": 3467,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3449,
											"end": 3456,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3445,
											"end": 3468,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3441,
											"end": 3473,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3440,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 3438,
											"end": 3440,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3489,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3476,
											"end": 3498,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3440,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 3438,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3541,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3542,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3591,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3578,
											"end": 3587,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3593,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3593,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3643,
											"end": 3645,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3632,
											"end": 3641,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3647,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 3656,
											"end": 3686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3656,
											"end": 3686,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 3656,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3710,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3716,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3716,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3716,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3716,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3721,
											"end": 4326,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3721,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 4326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3721,
											"end": 4326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 4326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3721,
											"end": 4326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3903,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3889,
											"end": 3898,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 3887,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3876,
											"end": 3899,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3904,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3871,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 3869,
											"end": 3871,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3928,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3914,
											"end": 3920,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3929,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3871,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 3869,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3963,
											"end": 3972,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3950,
											"end": 3973,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3940,
											"end": 3973,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3940,
											"end": 3973,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 4027,
											"end": 4029,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4016,
											"end": 4025,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 3992,
											"end": 4031,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3992,
											"end": 4031,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 3992,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 4031,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 4031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4071,
											"end": 4080,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4086,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4101,
											"end": 4107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4128,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4097,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 4095,
											"end": 4097,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4146,
											"end": 4152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4138,
											"end": 4144,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4153,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4097,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 4095,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 4258,
											"end": 4265,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4255,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4247,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4234,
											"end": 4256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 4190,
											"end": 4266,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4190,
											"end": 4266,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 4190,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 4326,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 4326,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 4326,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 4326,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4285,
											"end": 4293,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3859,
											"end": 4326,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4331,
											"end": 5011,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4331,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4331,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4331,
											"end": 5011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4331,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4331,
											"end": 5011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4331,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4530,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4515,
											"end": 4524,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4513,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4525,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 4531,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4495,
											"end": 4497,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4495,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 4495,
											"end": 4497,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4549,
											"end": 4555,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4556,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4495,
											"end": 4497,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 4495,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4599,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4577,
											"end": 4600,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4567,
											"end": 4600,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4567,
											"end": 4600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 4654,
											"end": 4656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4643,
											"end": 4652,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 4619,
											"end": 4658,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5016,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 5016,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5016,
											"end": 5459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5113,
											"end": 5118,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5107,
											"end": 5119,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5138,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5128,
											"end": 5147,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5170,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5195,
											"end": 5197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5193,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5198,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5232,
											"end": 5234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5225,
											"end": 5230,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5221,
											"end": 5235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5256,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5434,
											"name": "tag",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 5265,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5273,
											"end": 5286,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 5265,
											"end": 5434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5353,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5354,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5386,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5386,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5302,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5294,
											"end": 5303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 5265,
											"end": 5434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5434,
											"name": "tag",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 5265,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5450,
											"end": 5453,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5453,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5459,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5083,
											"end": 5459,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5464,
											"end": 5738,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 5464,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5464,
											"end": 5738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5631,
											"end": 5637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5625,
											"end": 5638,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 5693,
											"end": 5699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5691,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5681,
											"end": 5685,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5673,
											"end": 5679,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 5647,
											"end": 5700,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5647,
											"end": 5700,
											"name": "tag",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 5647,
											"end": 5700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5732,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5732,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5732,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5738,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5601,
											"end": 5738,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5743,
											"end": 5948,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 5743,
											"end": 5948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5934,
											"end": 5948,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5953,
											"end": 6156,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5953,
											"end": 6156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6117,
											"end": 6149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6117,
											"end": 6149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6117,
											"end": 6149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6117,
											"end": 6149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6099,
											"end": 6150,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6099,
											"end": 6150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6087,
											"end": 6089,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6072,
											"end": 6090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6072,
											"end": 6090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6156,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6161,
											"end": 6465,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 6161,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6391,
											"end": 6406,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6391,
											"end": 6406,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6391,
											"end": 6406,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6458,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6438,
											"end": 6440,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6423,
											"end": 6441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6416,
											"end": 6459,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6323,
											"end": 6325,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6308,
											"end": 6326,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6465,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6470,
											"end": 6845,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 6470,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6728,
											"end": 6743,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6743,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6743,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6744,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6795,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6795,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6795,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6795,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6775,
											"end": 6777,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6760,
											"end": 6778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6760,
											"end": 6778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6796,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6829,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6812,
											"end": 6830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 6830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6805,
											"end": 6839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6805,
											"end": 6839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6805,
											"end": 6839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6805,
											"end": 6839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6645,
											"end": 6663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6845,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6850,
											"end": 7124,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 6850,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7042,
											"end": 7074,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 7074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 7074,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 7074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 7075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 7075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7106,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6997,
											"end": 7015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6997,
											"end": 7015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 7124,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7129,
											"end": 7790,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7129,
											"end": 7790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7302,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7352,
											"end": 7373,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7373,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7435,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7325,
											"end": 7343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7325,
											"end": 7343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7325,
											"end": 7343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7466,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7466,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7466,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7129,
											"end": 7790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7129,
											"end": 7790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7523,
											"end": 7538,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7523,
											"end": 7538,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7523,
											"end": 7538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7523,
											"end": 7538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7497,
											"end": 7499,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7129,
											"end": 7790,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7569,
											"end": 7764,
											"name": "tag",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 7569,
											"end": 7764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7583,
											"end": 7589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7577,
											"end": 7590,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7569,
											"end": 7764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7569,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 7569,
											"end": 7764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7648,
											"end": 7661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7648,
											"end": 7661,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7644,
											"end": 7683,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7632,
											"end": 7684,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7632,
											"end": 7684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7739,
											"end": 7754,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7739,
											"end": 7754,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7739,
											"end": 7754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7739,
											"end": 7754,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7681,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7598,
											"end": 7607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7569,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 7569,
											"end": 7764,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7569,
											"end": 7764,
											"name": "tag",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 7569,
											"end": 7764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7781,
											"end": 7784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7784,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 7280,
											"end": 7790,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7280,
											"end": 7790,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7795,
											"end": 8291,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 7795,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 7986,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7966,
											"end": 7987,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7966,
											"end": 7987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7966,
											"end": 7987,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8003,
											"end": 8021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8003,
											"end": 8021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 8291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8042,
											"end": 8073,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8073,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8041,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 8039,
											"end": 8041,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8089,
											"end": 8093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8083,
											"end": 8087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8094,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8041,
											"name": "tag",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 8039,
											"end": 8041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8131,
											"end": 8133,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8123,
											"end": 8129,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8134,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8184,
											"end": 8190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8182,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8171,
											"end": 8173,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8160,
											"end": 8169,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8156,
											"end": 8174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8143,
											"end": 8191,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8240,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8250,
											"end": 8266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8250,
											"end": 8266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8250,
											"end": 8266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8241,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7956,
											"end": 8291,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7956,
											"end": 8291,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8296,
											"end": 8563,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8296,
											"end": 8563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8296,
											"end": 8563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8475,
											"end": 8477,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8464,
											"end": 8473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8457,
											"end": 8478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8495,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 8553,
											"end": 8555,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8542,
											"end": 8551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8538,
											"end": 8556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8530,
											"end": 8536,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8495,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 8495,
											"end": 8557,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8568,
											"end": 8755,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 8568,
											"end": 8755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8747,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8748,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8708,
											"end": 8749,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8708,
											"end": 8749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8696,
											"end": 8698,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8681,
											"end": 8699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8681,
											"end": 8699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8663,
											"end": 8755,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9392,
											"end": 9775,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 9392,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9392,
											"end": 9775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9541,
											"end": 9543,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9530,
											"end": 9539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9523,
											"end": 9544,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9573,
											"end": 9579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9567,
											"end": 9580,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9616,
											"end": 9622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9611,
											"end": 9613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9600,
											"end": 9609,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9632,
											"end": 9698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 9691,
											"end": 9697,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9686,
											"end": 9688,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9675,
											"end": 9684,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9666,
											"end": 9668,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9658,
											"end": 9664,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9654,
											"end": 9669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9632,
											"end": 9698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 9632,
											"end": 9698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9632,
											"end": 9698,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 9632,
											"end": 9698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9761,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9738,
											"end": 9753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9734,
											"end": 9763,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9719,
											"end": 9764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9719,
											"end": 9764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9719,
											"end": 9764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9719,
											"end": 9764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9766,
											"end": 9768,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9715,
											"end": 9769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 9769,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9513,
											"end": 9775,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9780,
											"end": 10128,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 9780,
											"end": 10128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9982,
											"end": 9984,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9964,
											"end": 9985,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 9985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 9985,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10021,
											"end": 10023,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 10001,
											"end": 10019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10001,
											"end": 10019,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10001,
											"end": 10019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9994,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10060,
											"end": 10086,
											"name": "PUSH",
											"source": 1,
											"value": "6164643A20696E76616C6964207374616B6520746F6B656E0000000000000000"
										},
										{
											"begin": 10055,
											"end": 10057,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10033,
											"end": 10087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10121,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9954,
											"end": 10128,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10133,
											"end": 10478,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 10133,
											"end": 10478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10335,
											"end": 10337,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10317,
											"end": 10338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10317,
											"end": 10338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10317,
											"end": 10338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10374,
											"end": 10376,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10347,
											"end": 10377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72656E65773A20696E76616C696420626C6F636B73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10408,
											"end": 10410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10393,
											"end": 10411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10393,
											"end": 10411,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10386,
											"end": 10437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10469,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10454,
											"end": 10472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10454,
											"end": 10472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10307,
											"end": 10478,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10483,
											"end": 10829,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 10483,
											"end": 10829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10685,
											"end": 10687,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10667,
											"end": 10688,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10667,
											"end": 10688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10667,
											"end": 10688,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10724,
											"end": 10726,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 10704,
											"end": 10722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10704,
											"end": 10722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10704,
											"end": 10722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EAE0C8C2E8CA7440D2DCECC2D8D2C840D8CADCCEE8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10758,
											"end": 10760,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10743,
											"end": 10761,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10743,
											"end": 10761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10820,
											"end": 10822,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10805,
											"end": 10823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10805,
											"end": 10823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10829,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10834,
											"end": 11173,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 10834,
											"end": 11173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11036,
											"end": 11038,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11039,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11039,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11039,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11075,
											"end": 11077,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 11055,
											"end": 11073,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11055,
											"end": 11073,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11055,
											"end": 11073,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985B1A59081C1BDBDB081A59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11109,
											"end": 11111,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11094,
											"end": 11112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11094,
											"end": 11112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11164,
											"end": 11166,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11008,
											"end": 11173,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11178,
											"end": 11529,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 11178,
											"end": 11529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11380,
											"end": 11382,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11362,
											"end": 11383,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11362,
											"end": 11383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11362,
											"end": 11383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11419,
											"end": 11421,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 11399,
											"end": 11417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11399,
											"end": 11417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11399,
											"end": 11417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11392,
											"end": 11422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11458,
											"end": 11487,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 11453,
											"end": 11455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11438,
											"end": 11456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11438,
											"end": 11456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11431,
											"end": 11488,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11520,
											"end": 11522,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11505,
											"end": 11523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11505,
											"end": 11523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11352,
											"end": 11529,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11534,
											"end": 11877,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 11534,
											"end": 11877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11736,
											"end": 11738,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11718,
											"end": 11739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11718,
											"end": 11739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11718,
											"end": 11739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11775,
											"end": 11777,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 11755,
											"end": 11773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11755,
											"end": 11773,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11755,
											"end": 11773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11748,
											"end": 11778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C2C8C87440D2DCECC2D8D2C840D8CADCCEE8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11809,
											"end": 11811,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11794,
											"end": 11812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11794,
											"end": 11812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11787,
											"end": 11836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11868,
											"end": 11870,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11853,
											"end": 11871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11853,
											"end": 11871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11708,
											"end": 11877,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11882,
											"end": 12216,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 11882,
											"end": 12216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12084,
											"end": 12086,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12066,
											"end": 12087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12066,
											"end": 12087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12066,
											"end": 12087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12123,
											"end": 12125,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12096,
											"end": 12126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B7363C9030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12157,
											"end": 12159,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12142,
											"end": 12160,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12142,
											"end": 12160,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12135,
											"end": 12175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12209,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12192,
											"end": 12210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12192,
											"end": 12210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12056,
											"end": 12216,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12221,
											"end": 12575,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 12221,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12423,
											"end": 12425,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12405,
											"end": 12426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12405,
											"end": 12426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12405,
											"end": 12426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12462,
											"end": 12464,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12435,
											"end": 12465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12501,
											"end": 12533,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 12496,
											"end": 12498,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12481,
											"end": 12499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12481,
											"end": 12499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12474,
											"end": 12534,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12566,
											"end": 12568,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12551,
											"end": 12569,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12551,
											"end": 12569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12395,
											"end": 12575,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12580,
											"end": 12982,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 12580,
											"end": 12982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12782,
											"end": 12784,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12764,
											"end": 12785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12764,
											"end": 12785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12764,
											"end": 12785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12821,
											"end": 12823,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 12801,
											"end": 12819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12801,
											"end": 12819,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12801,
											"end": 12819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12794,
											"end": 12824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12860,
											"end": 12894,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 12855,
											"end": 12857,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12840,
											"end": 12858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12840,
											"end": 12858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12833,
											"end": 12895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12926,
											"end": 12928,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12911,
											"end": 12929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12911,
											"end": 12929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12904,
											"end": 12940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12972,
											"end": 12975,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12957,
											"end": 12976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12957,
											"end": 12976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12754,
											"end": 12982,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12987,
											"end": 13332,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 12987,
											"end": 13332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13189,
											"end": 13191,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13171,
											"end": 13192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13171,
											"end": 13192,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13171,
											"end": 13192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13228,
											"end": 13230,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 13208,
											"end": 13226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13201,
											"end": 13231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4CADCCAEE7440D2DCECC2D8D2C840D8CADCCEE8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13262,
											"end": 13264,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13247,
											"end": 13265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13247,
											"end": 13265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13240,
											"end": 13291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13323,
											"end": 13325,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13308,
											"end": 13326,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13308,
											"end": 13326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13161,
											"end": 13332,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13337,
											"end": 13690,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 13337,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13539,
											"end": 13541,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13521,
											"end": 13542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13521,
											"end": 13542,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13521,
											"end": 13542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13578,
											"end": 13580,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 13558,
											"end": 13576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13558,
											"end": 13576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13558,
											"end": 13576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13551,
											"end": 13581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13617,
											"end": 13648,
											"name": "PUSH",
											"source": 1,
											"value": "77697468647261773A20696E73756666696369656E7420616D6F756E74000000"
										},
										{
											"begin": 13612,
											"end": 13614,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13597,
											"end": 13615,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13597,
											"end": 13615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13590,
											"end": 13649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13681,
											"end": 13683,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13666,
											"end": 13684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13511,
											"end": 13690,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13695,
											"end": 14044,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 13695,
											"end": 14044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13897,
											"end": 13899,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13879,
											"end": 13900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13879,
											"end": 13900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13879,
											"end": 13900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13936,
											"end": 13938,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 13916,
											"end": 13934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13916,
											"end": 13934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13916,
											"end": 13934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13909,
											"end": 13939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13975,
											"end": 14002,
											"name": "PUSH",
											"source": 1,
											"value": "7570646174653A20696E76616C696420656E6420626C6F636B00000000000000"
										},
										{
											"begin": 13970,
											"end": 13972,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13955,
											"end": 13973,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13955,
											"end": 13973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13948,
											"end": 14003,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14035,
											"end": 14037,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14020,
											"end": 14038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14020,
											"end": 14038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13869,
											"end": 14044,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14049,
											"end": 14446,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 14049,
											"end": 14446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14251,
											"end": 14253,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14233,
											"end": 14254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14233,
											"end": 14254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14233,
											"end": 14254,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14290,
											"end": 14292,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14263,
											"end": 14293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14329,
											"end": 14363,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 14324,
											"end": 14326,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14309,
											"end": 14327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14309,
											"end": 14327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14302,
											"end": 14364,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14395,
											"end": 14397,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14380,
											"end": 14398,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14380,
											"end": 14398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14373,
											"end": 14404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14436,
											"end": 14439,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14421,
											"end": 14440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14223,
											"end": 14446,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14451,
											"end": 14803,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 14451,
											"end": 14803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14653,
											"end": 14655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14635,
											"end": 14656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14692,
											"end": 14694,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 14672,
											"end": 14690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14672,
											"end": 14690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14672,
											"end": 14690,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14665,
											"end": 14695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14731,
											"end": 14761,
											"name": "PUSH",
											"source": 1,
											"value": "7472616E736665722072657761726420746F6B656E206661696C656400000000"
										},
										{
											"begin": 14726,
											"end": 14728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14711,
											"end": 14729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14711,
											"end": 14729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14704,
											"end": 14762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14794,
											"end": 14796,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14779,
											"end": 14797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14779,
											"end": 14797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14625,
											"end": 14803,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14808,
											"end": 15143,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 14808,
											"end": 15143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15010,
											"end": 15012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14992,
											"end": 15013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14992,
											"end": 15013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14992,
											"end": 15013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15049,
											"end": 15051,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 15029,
											"end": 15047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15029,
											"end": 15047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15029,
											"end": 15047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15022,
											"end": 15052,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F742070656E64696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15083,
											"end": 15085,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15068,
											"end": 15086,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15068,
											"end": 15086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15061,
											"end": 15102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15134,
											"end": 15136,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15119,
											"end": 15137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15119,
											"end": 15137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14982,
											"end": 15143,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15148,
											"end": 15478,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 15148,
											"end": 15478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15350,
											"end": 15352,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15332,
											"end": 15353,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15332,
											"end": 15353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15332,
											"end": 15353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15389,
											"end": 15390,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 15369,
											"end": 15387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15369,
											"end": 15387,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15369,
											"end": 15387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15362,
											"end": 15391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61646D696E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15422,
											"end": 15424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15407,
											"end": 15425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15407,
											"end": 15425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15400,
											"end": 15437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15469,
											"end": 15471,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15454,
											"end": 15472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15454,
											"end": 15472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15322,
											"end": 15478,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15483,
											"end": 15827,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 15483,
											"end": 15827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15685,
											"end": 15687,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15667,
											"end": 15688,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15667,
											"end": 15688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15667,
											"end": 15688,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15726,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 15704,
											"end": 15722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15704,
											"end": 15722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15704,
											"end": 15722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15697,
											"end": 15727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1859190E88191D5C1B1A58D85D1959081C1BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15758,
											"end": 15760,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15761,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15736,
											"end": 15786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15818,
											"end": 15820,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15803,
											"end": 15821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15657,
											"end": 15827,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15832,
											"end": 16230,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 15832,
											"end": 16230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16034,
											"end": 16036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16016,
											"end": 16037,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16037,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16016,
											"end": 16037,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16073,
											"end": 16075,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 16053,
											"end": 16071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16053,
											"end": 16071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16053,
											"end": 16071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16046,
											"end": 16076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16112,
											"end": 16146,
											"name": "PUSH",
											"source": 1,
											"value": "72656E65773A20696E76616C696420706F6F6C20737461746520746F2072656E"
										},
										{
											"begin": 16107,
											"end": 16109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16092,
											"end": 16110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16092,
											"end": 16110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16085,
											"end": 16147,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6577"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16178,
											"end": 16180,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16163,
											"end": 16181,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16163,
											"end": 16181,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16156,
											"end": 16188,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16220,
											"end": 16223,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16205,
											"end": 16224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16205,
											"end": 16224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16006,
											"end": 16230,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16235,
											"end": 16585,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 16235,
											"end": 16585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16437,
											"end": 16439,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16419,
											"end": 16440,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16419,
											"end": 16440,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16419,
											"end": 16440,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16476,
											"end": 16478,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 16456,
											"end": 16474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16456,
											"end": 16474,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16456,
											"end": 16474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16449,
											"end": 16479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16515,
											"end": 16543,
											"name": "PUSH",
											"source": 1,
											"value": "7570646174653A20706F6F6C20616C726561647920656E646564000000000000"
										},
										{
											"begin": 16510,
											"end": 16512,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16495,
											"end": 16513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16495,
											"end": 16513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16488,
											"end": 16544,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16576,
											"end": 16578,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16561,
											"end": 16579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16561,
											"end": 16579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16409,
											"end": 16585,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16590,
											"end": 16992,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 16590,
											"end": 16992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16792,
											"end": 16794,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16774,
											"end": 16795,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16774,
											"end": 16795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16774,
											"end": 16795,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16831,
											"end": 16833,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 16811,
											"end": 16829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16811,
											"end": 16829,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16811,
											"end": 16829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16804,
											"end": 16834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16870,
											"end": 16904,
											"name": "PUSH",
											"source": 1,
											"value": "53616665436173743A2076616C756520646F65736E27742066697420696E2033"
										},
										{
											"begin": 16865,
											"end": 16867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16850,
											"end": 16868,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16850,
											"end": 16868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16843,
											"end": 16905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "322062697473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16936,
											"end": 16938,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16921,
											"end": 16939,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16921,
											"end": 16939,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16914,
											"end": 16950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16982,
											"end": 16985,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16967,
											"end": 16986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16967,
											"end": 16986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16764,
											"end": 16992,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16997,
											"end": 17350,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 16997,
											"end": 17350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17199,
											"end": 17201,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17181,
											"end": 17202,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17181,
											"end": 17202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17181,
											"end": 17202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17238,
											"end": 17240,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 17218,
											"end": 17236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17218,
											"end": 17236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17218,
											"end": 17236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17211,
											"end": 17241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17277,
											"end": 17308,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 17272,
											"end": 17274,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17257,
											"end": 17275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17257,
											"end": 17275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17341,
											"end": 17343,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17326,
											"end": 17344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17326,
											"end": 17344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17171,
											"end": 17350,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17355,
											"end": 17698,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 17355,
											"end": 17698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17557,
											"end": 17559,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17539,
											"end": 17560,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17539,
											"end": 17560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17539,
											"end": 17560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17596,
											"end": 17598,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 17576,
											"end": 17594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17576,
											"end": 17594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17576,
											"end": 17594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17569,
											"end": 17599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6164643A20696E76616C696420626C6F636B73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17630,
											"end": 17632,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17615,
											"end": 17633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17615,
											"end": 17633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17608,
											"end": 17657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17689,
											"end": 17691,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17674,
											"end": 17692,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17674,
											"end": 17692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17529,
											"end": 17698,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17703,
											"end": 18038,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 17703,
											"end": 18038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17905,
											"end": 17907,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17887,
											"end": 17908,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17887,
											"end": 17908,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17887,
											"end": 17908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17944,
											"end": 17946,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 17924,
											"end": 17942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17924,
											"end": 17942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17924,
											"end": 17942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17917,
											"end": 17947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E65772061646D696E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17978,
											"end": 17980,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17963,
											"end": 17981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17963,
											"end": 17981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17956,
											"end": 17997,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18029,
											"end": 18031,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 18014,
											"end": 18032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18014,
											"end": 18032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17877,
											"end": 18038,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18043,
											"end": 18449,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 18043,
											"end": 18449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18245,
											"end": 18247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18227,
											"end": 18248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18227,
											"end": 18248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18227,
											"end": 18248,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18284,
											"end": 18286,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 18264,
											"end": 18282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18264,
											"end": 18282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18264,
											"end": 18282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18257,
											"end": 18287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18323,
											"end": 18357,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 18318,
											"end": 18320,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18303,
											"end": 18321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18303,
											"end": 18321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18296,
											"end": 18358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18389,
											"end": 18391,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 18374,
											"end": 18392,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18374,
											"end": 18392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18367,
											"end": 18407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18439,
											"end": 18442,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 18424,
											"end": 18443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18424,
											"end": 18443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18217,
											"end": 18449,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18454,
											"end": 18809,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 18454,
											"end": 18809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18656,
											"end": 18658,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18638,
											"end": 18659,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18638,
											"end": 18659,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18638,
											"end": 18659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18695,
											"end": 18697,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 18675,
											"end": 18693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18675,
											"end": 18693,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18675,
											"end": 18693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18668,
											"end": 18698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18734,
											"end": 18767,
											"name": "PUSH",
											"source": 1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 18729,
											"end": 18731,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18714,
											"end": 18732,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18714,
											"end": 18732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18707,
											"end": 18768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18800,
											"end": 18802,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 18785,
											"end": 18803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18785,
											"end": 18803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18628,
											"end": 18809,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18814,
											"end": 19232,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 18814,
											"end": 19232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19016,
											"end": 19018,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18998,
											"end": 19019,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18998,
											"end": 19019,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18998,
											"end": 19019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19055,
											"end": 19057,
											"name": "PUSH",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 19035,
											"end": 19053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19035,
											"end": 19053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19035,
											"end": 19053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19028,
											"end": 19058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19094,
											"end": 19128,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F"
										},
										{
											"begin": 19089,
											"end": 19091,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19074,
											"end": 19092,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19074,
											"end": 19092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19067,
											"end": 19129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20746F206E6F6E2D7A65726F20616C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19160,
											"end": 19162,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 19145,
											"end": 19163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19145,
											"end": 19163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19138,
											"end": 19190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19222,
											"end": 19225,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 19207,
											"end": 19226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19207,
											"end": 19226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18988,
											"end": 19232,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19237,
											"end": 19414,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 19237,
											"end": 19414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19383,
											"end": 19408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19383,
											"end": 19408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19383,
											"end": 19408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19371,
											"end": 19373,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19356,
											"end": 19374,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19356,
											"end": 19374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19338,
											"end": 19414,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19419,
											"end": 20332,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 19419,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19792,
											"end": 19817,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 19792,
											"end": 19817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19792,
											"end": 19817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19853,
											"end": 19885,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 19853,
											"end": 19885,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19848,
											"end": 19850,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19833,
											"end": 19851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19833,
											"end": 19851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19826,
											"end": 19886,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19905,
											"end": 19915,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19951,
											"end": 19966,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19951,
											"end": 19966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19951,
											"end": 19966,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19946,
											"end": 19948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19931,
											"end": 19949,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19931,
											"end": 19949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19924,
											"end": 19967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20003,
											"end": 20018,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20003,
											"end": 20018,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20003,
											"end": 20018,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19998,
											"end": 20000,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 19983,
											"end": 20001,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19983,
											"end": 20001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19976,
											"end": 20019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20056,
											"end": 20071,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20056,
											"end": 20071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20050,
											"end": 20053,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 20035,
											"end": 20054,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20035,
											"end": 20054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20028,
											"end": 20072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20109,
											"end": 20112,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 19873,
											"end": 19876,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 20088,
											"end": 20107,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20088,
											"end": 20107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20081,
											"end": 20113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20081,
											"end": 20113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20081,
											"end": 20113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19419,
											"end": 20332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19419,
											"end": 20332,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20136,
											"end": 20199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 20136,
											"end": 20199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20179,
											"end": 20198,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20179,
											"end": 20198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20171,
											"end": 20177,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20136,
											"end": 20199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 20136,
											"end": 20199,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20136,
											"end": 20199,
											"name": "tag",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 20136,
											"end": 20199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20248,
											"end": 20257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20240,
											"end": 20246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20236,
											"end": 20258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20230,
											"end": 20233,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 20219,
											"end": 20228,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20215,
											"end": 20234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20208,
											"end": 20259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20276,
											"end": 20326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 20319,
											"end": 20325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20311,
											"end": 20317,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20276,
											"end": 20326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 20276,
											"end": 20326,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20276,
											"end": 20326,
											"name": "tag",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 20276,
											"end": 20326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20268,
											"end": 20326,
											"name": "SWAP11",
											"source": 1
										},
										{
											"begin": 19782,
											"end": 20332,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19782,
											"end": 20332,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20337,
											"end": 20885,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 20337,
											"end": 20885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20337,
											"end": 20885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20622,
											"end": 20628,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20611,
											"end": 20620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20604,
											"end": 20629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20665,
											"end": 20667,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 20660,
											"end": 20662,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20649,
											"end": 20658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20645,
											"end": 20663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20638,
											"end": 20668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20691,
											"end": 20753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 20749,
											"end": 20751,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 20738,
											"end": 20747,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20734,
											"end": 20752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20726,
											"end": 20732,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20691,
											"end": 20753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 20691,
											"end": 20753,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20691,
											"end": 20753,
											"name": "tag",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 20691,
											"end": 20753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20801,
											"end": 20810,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20793,
											"end": 20799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20789,
											"end": 20811,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20784,
											"end": 20786,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20773,
											"end": 20782,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20769,
											"end": 20787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20762,
											"end": 20812,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20829,
											"end": 20879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 20872,
											"end": 20878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20864,
											"end": 20870,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20829,
											"end": 20879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 20829,
											"end": 20879,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20829,
											"end": 20879,
											"name": "tag",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 20829,
											"end": 20879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20821,
											"end": 20879,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 20594,
											"end": 20885,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20594,
											"end": 20885,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20890,
											"end": 21138,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 20890,
											"end": 21138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21064,
											"end": 21089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21064,
											"end": 21089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21064,
											"end": 21089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21120,
											"end": 21122,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21105,
											"end": 21123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21105,
											"end": 21123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21098,
											"end": 21132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21052,
											"end": 21054,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21037,
											"end": 21055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21037,
											"end": 21055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21019,
											"end": 21138,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21143,
											"end": 21401,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 21143,
											"end": 21401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21215,
											"end": 21216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21225,
											"end": 21338,
											"name": "tag",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 21225,
											"end": 21338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21239,
											"end": 21245,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21236,
											"end": 21237,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21233,
											"end": 21246,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 21225,
											"end": 21338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21225,
											"end": 21338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 21225,
											"end": 21338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21315,
											"end": 21326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21315,
											"end": 21326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21315,
											"end": 21326,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21309,
											"end": 21327,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21296,
											"end": 21307,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21296,
											"end": 21307,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21296,
											"end": 21307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21289,
											"end": 21328,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21261,
											"end": 21263,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21254,
											"end": 21264,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21225,
											"end": 21338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 21225,
											"end": 21338,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21225,
											"end": 21338,
											"name": "tag",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 21225,
											"end": 21338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21356,
											"end": 21362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21353,
											"end": 21354,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21350,
											"end": 21363,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 21347,
											"end": 21349,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21347,
											"end": 21349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 21347,
											"end": 21349,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21391,
											"end": 21392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21373,
											"end": 21389,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21373,
											"end": 21389,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21196,
											"end": 21401,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21406,
											"end": 21526,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 21406,
											"end": 21526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21494,
											"end": 21499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21487,
											"end": 21500,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21480,
											"end": 21501,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21473,
											"end": 21478,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21470,
											"end": 21502,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21460,
											"end": 21462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 21460,
											"end": 21462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21516,
											"end": 21517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21513,
											"end": 21514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21506,
											"end": 21518,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addPool(address,uint32,uint32,uint256[])": "2fb40ce1",
							"admin()": "f851a440",
							"adminWithdraw(uint256,uint256)": "d12e4ceb",
							"claimAdmin()": "77f50f97",
							"deposit(uint256,uint256,bool)": "43a0d066",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"getPoolInfo(uint256)": "2f380b35",
							"getRewardTokens()": "c4f59f9b",
							"getUserInfo(uint256,address)": "1069f3b5",
							"harvest(uint256)": "ddc63262",
							"harvestMultiplePools(uint256[])": "52fd9f2f",
							"pendingAdmin()": "26782247",
							"pendingRewards(uint256,address)": "d18df53c",
							"poolExists(address)": "1e1c6a07",
							"poolLength()": "081e3eda",
							"renewPool(uint256,uint32,uint32,uint256[])": "b43c6270",
							"rewardLocker()": "3892601c",
							"rewardTokens(uint256)": "7bb7bed1",
							"transferAdmin(address)": "75829def",
							"transferAdminQuickly(address)": "7acc8678",
							"updatePool(uint256,uint32,uint256[])": "affb9fc8",
							"updatePoolRewards(uint256)": "adb82b31",
							"withdraw(uint256,uint256)": "441a3e70",
							"withdrawAll(uint256)": "958e2d31"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_rewardTokens\",\"type\":\"address[]\"},{\"internalType\":\"contract IKyberRewardLocker\",\"name\":\"_rewardLocker\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"endBlock\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"rewardPerBlocks\",\"type\":\"uint256[]\"}],\"name\":\"AddNewPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"}],\"name\":\"AdminClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"endBlock\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"rewardPerBlocks\",\"type\":\"uint256[]\"}],\"name\":\"RenewPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pendingAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdminPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"endBlock\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"rewardPerBlocks\",\"type\":\"uint256[]\"}],\"name\":\"UpdatePool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakeToken\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_startBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_endBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"_rewardPerBlocks\",\"type\":\"uint256[]\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardTokenIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"adminWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_shouldHarvest\",\"type\":\"bool\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"getPoolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalStake\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"lastRewardBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"rewardPerBlocks\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"accRewardPerShares\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"unclaimedRewards\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"lastRewardPerShares\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_pids\",\"type\":\"uint256[]\"}],\"name\":\"harvestMultiplePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingRewards\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"rewards\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_startBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_endBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"_rewardPerBlocks\",\"type\":\"uint256[]\"}],\"name\":\"renewPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardLocker\",\"outputs\":[{\"internalType\":\"contract IKyberRewardLocker\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdminQuickly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_endBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"_rewardPerBlocks\",\"type\":\"uint256[]\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePoolRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addPool(address,uint32,uint32,uint256[])\":{\"details\":\"Add a new lp to the pool. Can only be called by the admin.\",\"params\":{\"_endBlock\":\": block where the reward ends\",\"_rewardPerBlocks\":\": amount of reward token per block for the pool for each reward token\",\"_stakeToken\":\": token to be staked to the pool\",\"_startBlock\":\": block where the reward starts\"}},\"adminWithdraw(uint256,uint256)\":{\"details\":\"Allow admin to withdraw only reward tokens\"},\"claimAdmin()\":{\"details\":\"Allows the pendingAdmin address to finalize the change admin process.\"},\"deposit(uint256,uint256,bool)\":{\"details\":\"Deposit tokens to accumulate rewards\",\"params\":{\"_amount\":\": amount of stakeToken to be deposited\",\"_pid\":\": id of the pool\",\"_shouldHarvest\":\": whether to harvest the reward or not\"}},\"emergencyWithdraw(uint256)\":{\"details\":\"Emergency withdrawal function to allow withdraw all deposited tokens (of the sender)   and reset all rewards\",\"params\":{\"_pid\":\": id of the pool\"}},\"getPoolInfo(uint256)\":{\"details\":\"Return full details of a pool\"},\"getRewardTokens()\":{\"details\":\"Return list reward tokens\"},\"getUserInfo(uint256,address)\":{\"details\":\"Return user's info including deposited amount and reward data\"},\"harvest(uint256)\":{\"details\":\"Harvest rewards from a pool for the sender\",\"params\":{\"_pid\":\": id of the pool\"}},\"harvestMultiplePools(uint256[])\":{\"details\":\"Harvest rewards from multiple pools for the sender   combine rewards from all pools and only transfer once to save gas\"},\"pendingRewards(uint256,address)\":{\"details\":\"Get pending rewards of a user from a pool, mostly for front-end\",\"params\":{\"_pid\":\": id of the pool\",\"_user\":\": user to check for pending rewards\"}},\"renewPool(uint256,uint32,uint32,uint256[])\":{\"details\":\"Renew a pool to start another liquidity mining program\",\"params\":{\"_endBlock\":\": block where the reward ends\",\"_pid\":\": id of the pool to renew, must be pool that has not started or already ended\",\"_rewardPerBlocks\":\": amount of reward token per block for the pool   0 if we want to stop the pool from accumulating rewards\",\"_startBlock\":\": block where the reward starts\"}},\"transferAdmin(address)\":{\"details\":\"Allows the current admin to set the pendingAdmin address.\",\"params\":{\"newAdmin\":\"The address to transfer ownership to.\"}},\"transferAdminQuickly(address)\":{\"details\":\"Allows the current admin to set the admin in one tx. Useful initial deployment.\",\"params\":{\"newAdmin\":\"The address to transfer ownership to.\"}},\"updatePool(uint256,uint32,uint256[])\":{\"details\":\"Update a pool, allow to change end block, reward per block\",\"params\":{\"_endBlock\":\": block where the reward ends\",\"_pid\":\": pool id to be renew\",\"_rewardPerBlocks\":\": amount of reward token per block for the pool,   0 if we want to stop the pool from accumulating rewards\"}},\"updatePoolRewards(uint256)\":{\"details\":\"Update rewards for one pool\"},\"withdraw(uint256,uint256)\":{\"details\":\"Withdraw token (of the sender) from pool, also harvest rewards\",\"params\":{\"_amount\":\": amount of stakeToken to withdraw\",\"_pid\":\": id of the pool\"}},\"withdrawAll(uint256)\":{\"details\":\"Withdraw all tokens (of the sender) from pool, also harvest reward\",\"params\":{\"_pid\":\": id of the pool\"}}},\"stateVariables\":{\"poolLength\":{\"details\":\"return the total of pools that have been added\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"emergencyWithdraw(uint256)\":{\"notice\":\"EMERGENCY USAGE ONLY, USER'S REWARDS WILL BE RESET\"}},\"notice\":\"FairLaunch contract for Kyber DMM Liquidity Mining program Allow stakers to stake LP tokens and receive reward tokens Allow extend or renew a pool to continue/restart the LM program When harvesting, rewards will be transferred to a RewardLocker Support multiple reward tokens, reward tokens must be distinct and immutable\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"KyberFairLaunch_flat.sol\":\"KyberFairLaunch\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"KyberFairLaunch_flat.sol\":{\"keccak256\":\"0x0dd1e984c612a35ae31722fc8a99906ae0e3fe64257905c63a0ff30310ceb18e\",\"license\":\"MIT AND agpl-3.0\",\"urls\":[\"bzz-raw://cae9aa61164c0ca5865278f4e768f30dea2cc384260e22cdda46c39858881bbc\",\"dweb:/ipfs/QmXCw1Tz94S562QmzjqYdz85AJkrJuJBr8xcL98Z4fKrq8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 154,
								"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
								"label": "admin",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 156,
								"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
								"label": "pendingAdmin",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1711,
								"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
								"label": "_status",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1796,
								"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
								"label": "poolExists",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1801,
								"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
								"label": "rewardTokens",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1804,
								"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
								"label": "poolLength",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1808,
								"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
								"label": "poolInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(PoolInfo)1792_storage)"
							},
							{
								"astId": 1814,
								"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
								"label": "userInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1772_storage))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(UserInfo)1772_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct KyberFairLaunch.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)1772_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1772_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)1772_storage)"
							},
							"t_mapping(t_uint256,t_struct(PoolInfo)1792_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct KyberFairLaunch.PoolInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(PoolInfo)1792_storage"
							},
							"t_mapping(t_uint256,t_struct(PoolRewardData)1777_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData)",
								"numberOfBytes": "32",
								"value": "t_struct(PoolRewardData)1777_storage"
							},
							"t_mapping(t_uint256,t_struct(UserRewardData)1765_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct KyberFairLaunch.UserRewardData)",
								"numberOfBytes": "32",
								"value": "t_struct(UserRewardData)1765_storage"
							},
							"t_struct(PoolInfo)1792_storage": {
								"encoding": "inplace",
								"label": "struct KyberFairLaunch.PoolInfo",
								"members": [
									{
										"astId": 1779,
										"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
										"label": "totalStake",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1781,
										"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
										"label": "stakeToken",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1783,
										"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
										"label": "startBlock",
										"offset": 20,
										"slot": "1",
										"type": "t_uint32"
									},
									{
										"astId": 1785,
										"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
										"label": "endBlock",
										"offset": 24,
										"slot": "1",
										"type": "t_uint32"
									},
									{
										"astId": 1787,
										"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
										"label": "lastRewardBlock",
										"offset": 28,
										"slot": "1",
										"type": "t_uint32"
									},
									{
										"astId": 1791,
										"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
										"label": "poolRewardData",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_uint256,t_struct(PoolRewardData)1777_storage)"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(PoolRewardData)1777_storage": {
								"encoding": "inplace",
								"label": "struct KyberFairLaunch.PoolRewardData",
								"members": [
									{
										"astId": 1774,
										"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
										"label": "rewardPerBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1776,
										"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
										"label": "accRewardPerShare",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UserInfo)1772_storage": {
								"encoding": "inplace",
								"label": "struct KyberFairLaunch.UserInfo",
								"members": [
									{
										"astId": 1767,
										"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1771,
										"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
										"label": "userRewardData",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_uint256,t_struct(UserRewardData)1765_storage)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UserRewardData)1765_storage": {
								"encoding": "inplace",
								"label": "struct KyberFairLaunch.UserRewardData",
								"members": [
									{
										"astId": 1762,
										"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
										"label": "unclaimedReward",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1764,
										"contract": "KyberFairLaunch_flat.sol:KyberFairLaunch",
										"label": "lastRewardPerShare",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"emergencyWithdraw(uint256)": {
								"notice": "EMERGENCY USAGE ONLY, USER'S REWARDS WILL BE RESET"
							}
						},
						"notice": "FairLaunch contract for Kyber DMM Liquidity Mining program Allow stakers to stake LP tokens and receive reward tokens Allow extend or renew a pool to continue/restart the LM program When harvesting, rewards will be transferred to a RewardLocker Support multiple reward tokens, reward tokens must be distinct and immutable",
						"version": 1
					}
				},
				"PermissionAdmin": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								}
							],
							"name": "AdminClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pendingAdmin",
									"type": "address"
								}
							],
							"name": "TransferAdminPending",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "transferAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "transferAdminQuickly",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"claimAdmin()": {
								"details": "Allows the pendingAdmin address to finalize the change admin process."
							},
							"transferAdmin(address)": {
								"details": "Allows the current admin to set the pendingAdmin address.",
								"params": {
									"newAdmin": "The address to transfer ownership to."
								}
							},
							"transferAdminQuickly(address)": {
								"details": "Allows the current admin to set the admin in one tx. Useful initial deployment.",
								"params": {
									"newAdmin": "The address to transfer ownership to."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"admin()": "f851a440",
							"claimAdmin()": "77f50f97",
							"pendingAdmin()": "26782247",
							"transferAdmin(address)": "75829def",
							"transferAdminQuickly(address)": "7acc8678"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"}],\"name\":\"AdminClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pendingAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdminPending\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdminQuickly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimAdmin()\":{\"details\":\"Allows the pendingAdmin address to finalize the change admin process.\"},\"transferAdmin(address)\":{\"details\":\"Allows the current admin to set the pendingAdmin address.\",\"params\":{\"newAdmin\":\"The address to transfer ownership to.\"}},\"transferAdminQuickly(address)\":{\"details\":\"Allows the current admin to set the admin in one tx. Useful initial deployment.\",\"params\":{\"newAdmin\":\"The address to transfer ownership to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"KyberFairLaunch_flat.sol\":\"PermissionAdmin\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"KyberFairLaunch_flat.sol\":{\"keccak256\":\"0x0dd1e984c612a35ae31722fc8a99906ae0e3fe64257905c63a0ff30310ceb18e\",\"license\":\"MIT AND agpl-3.0\",\"urls\":[\"bzz-raw://cae9aa61164c0ca5865278f4e768f30dea2cc384260e22cdda46c39858881bbc\",\"dweb:/ipfs/QmXCw1Tz94S562QmzjqYdz85AJkrJuJBr8xcL98Z4fKrq8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 154,
								"contract": "KyberFairLaunch_flat.sol:PermissionAdmin",
								"label": "admin",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 156,
								"contract": "KyberFairLaunch_flat.sol:PermissionAdmin",
								"label": "pendingAdmin",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"KyberFairLaunch_flat.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"KyberFairLaunch_flat.sol\":{\"keccak256\":\"0x0dd1e984c612a35ae31722fc8a99906ae0e3fe64257905c63a0ff30310ceb18e\",\"license\":\"MIT AND agpl-3.0\",\"urls\":[\"bzz-raw://cae9aa61164c0ca5865278f4e768f30dea2cc384260e22cdda46c39858881bbc\",\"dweb:/ipfs/QmXCw1Tz94S562QmzjqYdz85AJkrJuJBr8xcL98Z4fKrq8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1711,
								"contract": "KyberFairLaunch_flat.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeCast": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"KyberFairLaunch_flat.sol\":7038:12993  library SafeCast {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"KyberFairLaunch_flat.sol\":7038:12993  library SafeCast {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203e0a010f63a10095d9fa1d9c4161f8e49a4c8ff83dd650423e8bccd0e42abf4464736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203e0a010f63a10095d9fa1d9c4161f8e49a4c8ff83dd650423e8bccd0e42abf4464736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY EXP ADD 0xF PUSH4 0xA10095D9 STATICCALL SAR SWAP13 COINBASE PUSH2 0xF8E4 SWAP11 0x4C DUP16 0xF8 RETURNDATASIZE 0xD6 POP TIMESTAMP RETURNDATACOPY DUP12 0xCC 0xD0 0xE4 0x2A 0xBF DIFFICULTY PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "7038:5955:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203e0a010f63a10095d9fa1d9c4161f8e49a4c8ff83dd650423e8bccd0e42abf4464736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY EXP ADD 0xF PUSH4 0xA10095D9 STATICCALL SAR SWAP13 COINBASE PUSH2 0xF8E4 SWAP11 0x4C DUP16 0xF8 RETURNDATASIZE 0xD6 POP TIMESTAMP RETURNDATACOPY DUP12 0xCC 0xD0 0xE4 0x2A 0xBF DIFFICULTY PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "7038:5955:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toInt128(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint8(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7038,
									"end": 12993,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7038,
									"end": 12993,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e0a010f63a10095d9fa1d9c4161f8e49a4c8ff83dd650423e8bccd0e42abf4464736f6c63430007060033",
									".code": [
										{
											"begin": 7038,
											"end": 12993,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 12993,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 12993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7038,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7038,
											"end": 12993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7038,
											"end": 12993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 12993,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"KyberFairLaunch_flat.sol\":\"SafeCast\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"KyberFairLaunch_flat.sol\":{\"keccak256\":\"0x0dd1e984c612a35ae31722fc8a99906ae0e3fe64257905c63a0ff30310ceb18e\",\"license\":\"MIT AND agpl-3.0\",\"urls\":[\"bzz-raw://cae9aa61164c0ca5865278f4e768f30dea2cc384260e22cdda46c39858881bbc\",\"dweb:/ipfs/QmXCw1Tz94S562QmzjqYdz85AJkrJuJBr8xcL98Z4fKrq8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"KyberFairLaunch_flat.sol\":35615:38776  library SafeERC20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"KyberFairLaunch_flat.sol\":35615:38776  library SafeERC20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122084b2ffe221aa2f9c2165088a768d9d0f8acfa6841004052a2cdcf3c3c13138c264736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122084b2ffe221aa2f9c2165088a768d9d0f8acfa6841004052a2cdcf3c3c13138c264736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xB2 SELFDESTRUCT 0xE2 0x21 0xAA 0x2F SWAP13 0x21 PUSH6 0x88A768D9D0F DUP11 0xCF 0xA6 DUP5 LT DIV SDIV 0x2A 0x2C 0xDC RETURN 0xC3 0xC1 BALANCE CODESIZE 0xC2 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "35615:3161:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122084b2ffe221aa2f9c2165088a768d9d0f8acfa6841004052a2cdcf3c3c13138c264736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xB2 SELFDESTRUCT 0xE2 0x21 0xAA 0x2F SWAP13 0x21 PUSH6 0x88A768D9D0F DUP11 0xCF 0xA6 DUP5 LT DIV SDIV 0x2A 0x2C 0xDC RETURN 0xC3 0xC1 BALANCE CODESIZE 0xC2 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "35615:3161:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35615,
									"end": 38776,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35615,
									"end": 38776,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122084b2ffe221aa2f9c2165088a768d9d0f8acfa6841004052a2cdcf3c3c13138c264736f6c63430007060033",
									".code": [
										{
											"begin": 35615,
											"end": 38776,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 38776,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 38776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 38776,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35615,
											"end": 38776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35615,
											"end": 38776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 38776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35615,
											"end": 38776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 38776,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"KyberFairLaunch_flat.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"KyberFairLaunch_flat.sol\":{\"keccak256\":\"0x0dd1e984c612a35ae31722fc8a99906ae0e3fe64257905c63a0ff30310ceb18e\",\"license\":\"MIT AND agpl-3.0\",\"urls\":[\"bzz-raw://cae9aa61164c0ca5865278f4e768f30dea2cc384260e22cdda46c39858881bbc\",\"dweb:/ipfs/QmXCw1Tz94S562QmzjqYdz85AJkrJuJBr8xcL98Z4fKrq8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"KyberFairLaunch_flat.sol\":28247:35037  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"KyberFairLaunch_flat.sol\":28247:35037  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122014e1129d61327fefc8315f3ab8c352fec077894371123cd87fef4a8ce6735ac064736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122014e1129d61327fefc8315f3ab8c352fec077894371123cd87fef4a8ce6735ac064736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0xE1 SLT SWAP14 PUSH2 0x327F 0xEF 0xC8 BALANCE 0x5F GASPRICE 0xB8 0xC3 MSTORE INVALID 0xC0 PUSH24 0x894371123CD87FEF4A8CE6735AC064736F6C634300070600 CALLER ",
							"sourceMap": "28247:6790:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122014e1129d61327fefc8315f3ab8c352fec077894371123cd87fef4a8ce6735ac064736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0xE1 SLT SWAP14 PUSH2 0x327F 0xEF 0xC8 BALANCE 0x5F GASPRICE 0xB8 0xC3 MSTORE INVALID 0xC0 PUSH24 0x894371123CD87FEF4A8CE6735AC064736F6C634300070600 CALLER ",
							"sourceMap": "28247:6790:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28247,
									"end": 35037,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28247,
									"end": 35037,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122014e1129d61327fefc8315f3ab8c352fec077894371123cd87fef4a8ce6735ac064736f6c63430007060033",
									".code": [
										{
											"begin": 28247,
											"end": 35037,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 28247,
											"end": 35037,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 28247,
											"end": 35037,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28247,
											"end": 35037,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28247,
											"end": 35037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28247,
											"end": 35037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28247,
											"end": 35037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28247,
											"end": 35037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28247,
											"end": 35037,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"KyberFairLaunch_flat.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"KyberFairLaunch_flat.sol\":{\"keccak256\":\"0x0dd1e984c612a35ae31722fc8a99906ae0e3fe64257905c63a0ff30310ceb18e\",\"license\":\"MIT AND agpl-3.0\",\"urls\":[\"bzz-raw://cae9aa61164c0ca5865278f4e768f30dea2cc384260e22cdda46c39858881bbc\",\"dweb:/ipfs/QmXCw1Tz94S562QmzjqYdz85AJkrJuJBr8xcL98Z4fKrq8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "KyberFairLaunch_flat.sol:1163:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor () internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 40639,
					"file": "KyberFairLaunch_flat.sol",
					"start": 40574
				},
				"type": "Warning"
			}
		],
		"sources": {
			"KyberFairLaunch_flat.sol": {
				"ast": {
					"absolutePath": "KyberFairLaunch_flat.sol",
					"exportedSymbols": {
						"Address": [
							894
						],
						"IERC20": [
							971
						],
						"IERC20Ext": [
							982
						],
						"IKyberFairLaunch": [
							151
						],
						"IKyberRewardLocker": [
							1138
						],
						"KyberFairLaunch": [
							3482
						],
						"PermissionAdmin": [
							287
						],
						"ReentrancyGuard": [
							1740
						],
						"SafeCast": [
							599
						],
						"SafeERC20": [
							1701
						],
						"SafeMath": [
							1492
						]
					},
					"id": 3483,
					"license": "MIT AND agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "120:22:0"
						},
						{
							"id": 2,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "144:19:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 151,
							"linearizedBaseContracts": [
								151
							],
							"name": "IKyberFairLaunch",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "201:334:0",
										"text": " @dev Add a new lp to the pool. Can only be called by the admin.\n @param _stakeToken: token to be staked to the pool\n @param _startBlock: block where the reward starts\n @param _endBlock: block where the reward ends\n @param _rewardPerBlocks: amount of reward token per block for the pool"
									},
									"functionSelector": "2fb40ce1",
									"id": 15,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "_stakeToken",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "568:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "_startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "598:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 6,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "598:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "_endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "627:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 8,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "627:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "_rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "654:35:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 10,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "654:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 11,
													"nodeType": "ArrayTypeName",
													"src": "654:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "557:139:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:0:0"
									},
									"scope": 151,
									"src": "541:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "714:434:0",
										"text": " @dev Renew a pool to start another liquidity mining program\n @param _pid: id of the pool to renew, must be pool that has not started or already ended\n @param _startBlock: block where the reward starts\n @param _endBlock: block where the reward ends\n @param _rewardPerBlocks: amount of reward token per block for the pool\n   0 if we want to stop the pool from accumulating rewards"
									},
									"functionSelector": "b43c6270",
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renewPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1183:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "_startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1206:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 19,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1206:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "_endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1235:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 21,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1235:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "_rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1262:35:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 23,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1262:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 24,
													"nodeType": "ArrayTypeName",
													"src": "1262:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1172:132:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1313:0:0"
									},
									"scope": 151,
									"src": "1154:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1322:324:0",
										"text": " @dev Update a pool, allow to change end block, reward per block\n @param _pid: pool id to be renew\n @param _endBlock: block where the reward ends\n @param _rewardPerBlocks: amount of reward token per block for the pool\n   0 if we want to stop the pool from accumulating rewards"
									},
									"functionSelector": "affb9fc8",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1682:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "_endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1705:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 32,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1705:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "_rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1732:35:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 34,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1732:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 35,
													"nodeType": "ArrayTypeName",
													"src": "1732:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1671:103:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1783:0:0"
									},
									"scope": 151,
									"src": "1652:132:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "1792:230:0",
										"text": " @dev deposit to tokens to accumulate rewards\n @param _pid: id of the pool\n @param _amount: amount of stakeToken to be deposited\n @param _shouldHarvest: whether to harvest the reward or not"
									},
									"functionSelector": "43a0d066",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "2055:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "2078:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "_shouldHarvest",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "2104:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 45,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2104:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2044:86:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2139:0:0"
									},
									"scope": 151,
									"src": "2028:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "2148:180:0",
										"text": " @dev withdraw token (of the sender) from pool, also harvest reward\n @param _pid: id of the pool\n @param _amount: amount of stakeToken to withdraw"
									},
									"functionSelector": "441a3e70",
									"id": 57,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2352:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2366:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2351:31:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2391:0:0"
									},
									"scope": 151,
									"src": "2334:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "2400:128:0",
										"text": " @dev withdraw all tokens (of the sender) from pool, also harvest reward\n @param _pid: id of the pool"
									},
									"functionSelector": "958e2d31",
									"id": 63,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2555:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2554:14:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2577:0:0"
									},
									"scope": 151,
									"src": "2534:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2586:185:0",
										"text": " @dev emergency withdrawal function to allow withdraw all deposited token (of the sender)\n   without harvesting the reward\n @param _pid: id of the pool"
									},
									"functionSelector": "5312ea8e",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2804:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2804:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2803:14:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2826:0:0"
									},
									"scope": 151,
									"src": "2777:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "2835:101:0",
										"text": " @dev harvest reward from pool for the sender\n @param _pid: id of the pool"
									},
									"functionSelector": "ddc63262",
									"id": 75,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2959:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2959:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2958:14:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2981:0:0"
									},
									"scope": 151,
									"src": "2942:40:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "2990:76:0",
										"text": " @dev harvest rewards from multiple pools for the sender"
									},
									"functionSelector": "52fd9f2f",
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "harvestMultiplePools",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "_pids",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3102:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 77,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3102:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 78,
													"nodeType": "ArrayTypeName",
													"src": "3102:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3101:26:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3136:0:0"
									},
									"scope": 151,
									"src": "3072:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "3145:52:0",
										"text": " @dev update reward for one pool"
									},
									"functionSelector": "adb82b31",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePoolRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3230:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3229:14:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3252:0:0"
									},
									"scope": 151,
									"src": "3203:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "3261:72:0",
										"text": " @dev return the total of pools that have been added"
									},
									"functionSelector": "081e3eda",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3358:2:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3384:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:9:0"
									},
									"scope": 151,
									"src": "3339:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3401:55:0",
										"text": " @dev return full details of a pool"
									},
									"functionSelector": "2f380b35",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolInfo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3483:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:14:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "totalStake",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3561:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3561:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "stakeToken",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3594:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3594:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3627:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 103,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3627:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3659:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 105,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3659:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "lastRewardBlock",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3689:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 107,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3689:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3726:32:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 109,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3726:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 110,
													"nodeType": "ArrayTypeName",
													"src": "3726:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "accRewardPerShares",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3773:35:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 112,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3773:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 113,
													"nodeType": "ArrayTypeName",
													"src": "3773:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3546:273:0"
									},
									"scope": 151,
									"src": "3462:358:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "3828:41:0",
										"text": " @dev get user's info"
									},
									"functionSelector": "1069f3b5",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserInfo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "3896:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "_account",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "3910:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3910:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3895:32:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "3992:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "unclaimedRewards",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "4021:33:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 125,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4021:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 126,
													"nodeType": "ArrayTypeName",
													"src": "4021:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "lastRewardPerShares",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "4069:36:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 128,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4069:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 129,
													"nodeType": "ArrayTypeName",
													"src": "4069:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3977:139:0"
									},
									"scope": 151,
									"src": "3875:242:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "4125:51:0",
										"text": " @dev return list reward tokens"
									},
									"functionSelector": "c4f59f9b",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4206:2:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "4232:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 135,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4232:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 136,
													"nodeType": "ArrayTypeName",
													"src": "4232:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:18:0"
									},
									"scope": 151,
									"src": "4182:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "4258:180:0",
										"text": " @dev get pending reward of a user from a pool, mostly for front-end\n @param _pid: id of the pool\n @param _user: user to check for pending rewards"
									},
									"functionSelector": "d18df53c",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4468:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4482:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4467:29:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "rewards",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4547:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 146,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 147,
													"nodeType": "ArrayTypeName",
													"src": "4547:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4546:26:0"
									},
									"scope": 151,
									"src": "4444:129:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3483,
							"src": "167:4409:0"
						},
						{
							"id": 152,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "4631:22:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 287,
							"linearizedBaseContracts": [
								287
							],
							"name": "PermissionAdmin",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 154,
									"mutability": "mutable",
									"name": "admin",
									"nodeType": "VariableDeclaration",
									"scope": 287,
									"src": "4698:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 153,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4698:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "26782247",
									"id": 156,
									"mutability": "mutable",
									"name": "pendingAdmin",
									"nodeType": "VariableDeclaration",
									"scope": 287,
									"src": "4725:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 155,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4725:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 162,
									"name": "AdminClaimed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "4780:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4780:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "4798:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4779:41:0"
									},
									"src": "4761:60:0"
								},
								{
									"anonymous": false,
									"id": 166,
									"name": "TransferAdminPending",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "pendingAdmin",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4856:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4856:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4855:22:0"
									},
									"src": "4829:49:0"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "4914:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 172,
																"name": "_admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "4933:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4951:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4943:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 173,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4943:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4943:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4933:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61646d696e2030",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4955:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a124f9f9a98ac379e9de3a1a59322560b257fec3dfe6894084a822062ab78fc3",
																"typeString": "literal_string \"admin 0\""
															},
															"value": "admin 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a124f9f9a98ac379e9de3a1a59322560b257fec3dfe6894084a822062ab78fc3",
																"typeString": "literal_string \"admin 0\""
															}
														],
														"id": 171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4925:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4925:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "4925:40:0"
											},
											{
												"expression": {
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 181,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "4976:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 182,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "4984:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4976:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "4976:14:0"
											}
										]
									},
									"id": 186,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "_admin",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4898:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4897:16:0"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4914:0:0"
									},
									"scope": 287,
									"src": "4886:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "5027:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 189,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5046:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5046:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 191,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "5060:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5046:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c792061646d696e",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5067:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
																"typeString": "literal_string \"only admin\""
															},
															"value": "only admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
																"typeString": "literal_string \"only admin\""
															}
														],
														"id": 188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5038:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5038:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5038:42:0"
											},
											{
												"id": 196,
												"nodeType": "PlaceholderStatement",
												"src": "5091:1:0"
											}
										]
									},
									"id": 198,
									"name": "onlyAdmin",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5024:2:0"
									},
									"src": "5006:94:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "5317:145:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 207,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "5336:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5356:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5348:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 208,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5348:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5348:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5336:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e65772061646d696e2030",
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5360:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cf435a99ab9afadec653f39bd35ef416a47a382474bb2e5c476a72b3c4ffa55e",
																"typeString": "literal_string \"new admin 0\""
															},
															"value": "new admin 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cf435a99ab9afadec653f39bd35ef416a47a382474bb2e5c476a72b3c4ffa55e",
																"typeString": "literal_string \"new admin 0\""
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5328:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5328:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "5328:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 217,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "5411:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 216,
														"name": "TransferAdminPending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "5390:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5390:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "EmitStatement",
												"src": "5385:35:0"
											},
											{
												"expression": {
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 220,
														"name": "pendingAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5431:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 221,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "5446:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5431:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "5431:23:0"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "5108:145:0",
										"text": " @dev Allows the current admin to set the pendingAdmin address.\n @param newAdmin The address to transfer ownership to."
									},
									"functionSelector": "75829def",
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 204,
											"modifierName": {
												"id": 203,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 198,
												"src": "5307:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5307:9:0"
										}
									],
									"name": "transferAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "5282:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5282:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5281:18:0"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5317:0:0"
									},
									"scope": 287,
									"src": "5259:203:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "5708:179:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 234,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "5727:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5747:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5739:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 235,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5739:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5739:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5727:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61646d696e2030",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5751:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a124f9f9a98ac379e9de3a1a59322560b257fec3dfe6894084a822062ab78fc3",
																"typeString": "literal_string \"admin 0\""
															},
															"value": "admin 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a124f9f9a98ac379e9de3a1a59322560b257fec3dfe6894084a822062ab78fc3",
																"typeString": "literal_string \"admin 0\""
															}
														],
														"id": 233,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5719:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5719:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "5719:42:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 244,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "5798:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 243,
														"name": "TransferAdminPending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "5777:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5777:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "EmitStatement",
												"src": "5772:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 248,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "5836:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 249,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "5846:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 247,
														"name": "AdminClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "5823:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5823:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "EmitStatement",
												"src": "5818:34:0"
											},
											{
												"expression": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 252,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "5863:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 253,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "5871:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5863:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "5863:16:0"
											}
										]
									},
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "5470:167:0",
										"text": " @dev Allows the current admin to set the admin in one tx. Useful initial deployment.\n @param newAdmin The address to transfer ownership to."
									},
									"functionSelector": "7acc8678",
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 231,
											"modifierName": {
												"id": 230,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 198,
												"src": "5698:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5698:9:0"
										}
									],
									"name": "transferAdminQuickly",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "5673:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5673:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:18:0"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5708:0:0"
									},
									"scope": 287,
									"src": "5643:244:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "6025:185:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 262,
																"name": "pendingAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "6044:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 263,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6060:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6060:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6044:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742070656e64696e67",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6072:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98b6cf0d74821485c9d6d314b9997aa0d68cdf087089df382a53d9525093d5fb",
																"typeString": "literal_string \"not pending\""
															},
															"value": "not pending"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98b6cf0d74821485c9d6d314b9997aa0d68cdf087089df382a53d9525093d5fb",
																"typeString": "literal_string \"not pending\""
															}
														],
														"id": 261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6036:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6036:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "6036:50:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 270,
															"name": "pendingAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "6115:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 271,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "6129:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 269,
														"name": "AdminClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "6102:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6102:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 273,
												"nodeType": "EmitStatement",
												"src": "6097:38:0"
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 274,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "6146:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 275,
														"name": "pendingAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "6154:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6146:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "6146:20:0"
											},
											{
												"expression": {
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 278,
														"name": "pendingAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "6177:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6200:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6192:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 279,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6192:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6192:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "6177:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "6177:25:0"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "5895:95:0",
										"text": " @dev Allows the pendingAdmin address to finalize the change admin process."
									},
									"functionSelector": "77f50f97",
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6015:2:0"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6025:0:0"
									},
									"scope": 287,
									"src": "5996:214:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3483,
							"src": "4657:1556:0"
						},
						{
							"id": 288,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6276:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 289,
								"nodeType": "StructuredDocumentation",
								"src": "6313:723:0",
								"text": " @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."
							},
							"fullyImplemented": true,
							"id": 599,
							"linearizedBaseContracts": [
								599
							],
							"name": "SafeCast",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "7425:118:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 298,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 292,
																"src": "7444:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7452:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7455:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "7452:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "7444:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473",
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7460:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															},
															"value": "SafeCast: value doesn't fit in 128 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															}
														],
														"id": 297,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7436:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7436:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "7436:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 308,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "7529:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7521:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 306,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "7521:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7521:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 296,
												"id": 310,
												"nodeType": "Return",
												"src": "7514:21:0"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "7064:289:0",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "7378:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7377:15:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "7416:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 294,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7415:9:0"
									},
									"scope": 599,
									"src": "7359:184:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "7906:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 321,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "7925:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7933:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7936:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "7933:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "7925:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7940:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															},
															"value": "SafeCast: value doesn't fit in 64 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															}
														],
														"id": 320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7917:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7917:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "7917:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 331,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "8007:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8000:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 329,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "8000:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8000:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 319,
												"id": 333,
												"nodeType": "Return",
												"src": "7993:20:0"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "7551:285:0",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "7860:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7859:15:0"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "7898:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 317,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7898:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7897:8:0"
									},
									"scope": 599,
									"src": "7842:179:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "8384:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 344,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "8403:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8411:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8414:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8411:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "8403:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473",
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8418:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															},
															"value": "SafeCast: value doesn't fit in 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															}
														],
														"id": 343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8395:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8395:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "8395:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 354,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "8485:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8478:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 352,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "8478:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8478:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 342,
												"id": 356,
												"nodeType": "Return",
												"src": "8471:20:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "8029:285:0",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "8338:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8337:15:0"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "8376:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 340,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8376:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8375:8:0"
									},
									"scope": 599,
									"src": "8320:179:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "8862:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 367,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "8881:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8889:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8892:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8889:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "8881:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8896:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															},
															"value": "SafeCast: value doesn't fit in 16 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															}
														],
														"id": 366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8873:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8873:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "8873:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "8963:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8956:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 375,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "8956:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8956:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 365,
												"id": 379,
												"nodeType": "Return",
												"src": "8949:20:0"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "8507:285:0",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "8816:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8815:15:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "8854:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 363,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8854:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8853:8:0"
									},
									"scope": 599,
									"src": "8798:179:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "9335:112:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 390,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "9354:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																},
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9362:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9365:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9362:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "9354:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473",
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9368:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															},
															"value": "SafeCast: value doesn't fit in 8 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															}
														],
														"id": 389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9346:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9346:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "9346:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "9433:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9427:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 398,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "9427:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9427:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 388,
												"id": 402,
												"nodeType": "Return",
												"src": "9420:19:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "8985:282:0",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits."
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "9290:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9289:15:0"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "9328:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 386,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9328:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9327:7:0"
									},
									"scope": 599,
									"src": "9273:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "9692:106:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 413,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "9711:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9720:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9711:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c7565206d75737420626520706f736974697665",
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9723:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807",
																"typeString": "literal_string \"SafeCast: value must be positive\""
															},
															"value": "SafeCast: value must be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807",
																"typeString": "literal_string \"SafeCast: value must be positive\""
															}
														],
														"id": 412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9703:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9703:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "9703:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9784:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9776:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 419,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9776:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9776:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 411,
												"id": 423,
												"nodeType": "Return",
												"src": "9769:21:0"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "9455:166:0",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "9646:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 406,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "9646:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9645:14:0"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "9683:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9682:9:0"
									},
									"scope": 599,
									"src": "9627:171:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "10237:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 434,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "10256:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_minus_170141183460469231731687303715884105728_by_1",
																		"typeString": "int_const -170...(32 digits omitted)...5728"
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "10265:2:0",
																		"subExpression": {
																			"hexValue": "32",
																			"id": 435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10266:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_2_by_1",
																			"typeString": "int_const -2"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "313237",
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10269:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_127_by_1",
																			"typeString": "int_const 127"
																		},
																		"value": "127"
																	},
																	"src": "10265:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_170141183460469231731687303715884105728_by_1",
																		"typeString": "int_const -170...(32 digits omitted)...5728"
																	}
																},
																"src": "10256:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 440,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "10276:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_170141183460469231731687303715884105728_by_1",
																		"typeString": "int_const 1701...(31 digits omitted)...5728"
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10284:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "313237",
																		"id": 442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10287:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_127_by_1",
																			"typeString": "int_const 127"
																		},
																		"value": "127"
																	},
																	"src": "10284:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_170141183460469231731687303715884105728_by_1",
																		"typeString": "int_const 1701...(31 digits omitted)...5728"
																	}
																},
																"src": "10276:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10256:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10292:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															},
															"value": "SafeCast: value doesn't fit in 128 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10248:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10248:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "10248:87:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 451,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "10360:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10353:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int128_$",
															"typeString": "type(int128)"
														},
														"typeName": {
															"id": 449,
															"name": "int128",
															"nodeType": "ElementaryTypeName",
															"src": "10353:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10353:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"functionReturnParameters": 432,
												"id": 453,
												"nodeType": "Return",
												"src": "10346:20:0"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "9806:362:0",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"
									},
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "10192:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 427,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:14:0"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "10229:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 430,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "10229:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10228:8:0"
									},
									"scope": 599,
									"src": "10174:200:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "10806:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 464,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "10825:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_minus_9223372036854775808_by_1",
																		"typeString": "int_const -9223372036854775808"
																	},
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "10834:2:0",
																		"subExpression": {
																			"hexValue": "32",
																			"id": 465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10835:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_2_by_1",
																			"typeString": "int_const -2"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3633",
																		"id": 467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10838:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_63_by_1",
																			"typeString": "int_const 63"
																		},
																		"value": "63"
																	},
																	"src": "10834:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_9223372036854775808_by_1",
																		"typeString": "int_const -9223372036854775808"
																	}
																},
																"src": "10825:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 470,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "10844:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_9223372036854775808_by_1",
																		"typeString": "int_const 9223372036854775808"
																	},
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10852:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3633",
																		"id": 472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10855:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_63_by_1",
																			"typeString": "int_const 63"
																		},
																		"value": "63"
																	},
																	"src": "10852:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_9223372036854775808_by_1",
																		"typeString": "int_const 9223372036854775808"
																	}
																},
																"src": "10844:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10825:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473",
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10859:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															},
															"value": "SafeCast: value doesn't fit in 64 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															}
														],
														"id": 463,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10817:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10817:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "10817:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 481,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "10925:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10919:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int64_$",
															"typeString": "type(int64)"
														},
														"typeName": {
															"id": 479,
															"name": "int64",
															"nodeType": "ElementaryTypeName",
															"src": "10919:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10919:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"functionReturnParameters": 462,
												"id": 483,
												"nodeType": "Return",
												"src": "10912:19:0"
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "10382:357:0",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "10762:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 457,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "10762:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10761:14:0"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "10799:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 460,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "10799:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10798:7:0"
									},
									"scope": 599,
									"src": "10745:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "11371:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 494,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "11390:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_minus_2147483648_by_1",
																		"typeString": "int_const -2147483648"
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "11399:2:0",
																		"subExpression": {
																			"hexValue": "32",
																			"id": 495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11400:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_2_by_1",
																			"typeString": "int_const -2"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3331",
																		"id": 497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11403:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_31_by_1",
																			"typeString": "int_const 31"
																		},
																		"value": "31"
																	},
																	"src": "11399:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_2147483648_by_1",
																		"typeString": "int_const -2147483648"
																	}
																},
																"src": "11390:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 500,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "11409:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_2147483648_by_1",
																		"typeString": "int_const 2147483648"
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11417:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3331",
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11420:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_31_by_1",
																			"typeString": "int_const 31"
																		},
																		"value": "31"
																	},
																	"src": "11417:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2147483648_by_1",
																		"typeString": "int_const 2147483648"
																	}
																},
																"src": "11409:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11390:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11424:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															},
															"value": "SafeCast: value doesn't fit in 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															}
														],
														"id": 493,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11382:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11382:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "11382:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 511,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "11490:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11484:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int32_$",
															"typeString": "type(int32)"
														},
														"typeName": {
															"id": 509,
															"name": "int32",
															"nodeType": "ElementaryTypeName",
															"src": "11484:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11484:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"functionReturnParameters": 492,
												"id": 513,
												"nodeType": "Return",
												"src": "11477:19:0"
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "10947:357:0",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"
									},
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "11327:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 487,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11327:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11326:14:0"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "11364:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 490,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "11364:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11363:7:0"
									},
									"scope": 599,
									"src": "11310:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "11936:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 524,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "11955:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_minus_32768_by_1",
																		"typeString": "int_const -32768"
																	},
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "11964:2:0",
																		"subExpression": {
																			"hexValue": "32",
																			"id": 525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11965:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_2_by_1",
																			"typeString": "int_const -2"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3135",
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11968:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_15_by_1",
																			"typeString": "int_const 15"
																		},
																		"value": "15"
																	},
																	"src": "11964:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_32768_by_1",
																		"typeString": "int_const -32768"
																	}
																},
																"src": "11955:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 530,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "11974:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_32768_by_1",
																		"typeString": "int_const 32768"
																	},
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11982:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3135",
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11985:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_15_by_1",
																			"typeString": "int_const 15"
																		},
																		"value": "15"
																	},
																	"src": "11982:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32768_by_1",
																		"typeString": "int_const 32768"
																	}
																},
																"src": "11974:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11955:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11989:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															},
															"value": "SafeCast: value doesn't fit in 16 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11947:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11947:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "11947:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 541,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "12055:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12049:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int16_$",
															"typeString": "type(int16)"
														},
														"typeName": {
															"id": 539,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "12049:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12049:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"functionReturnParameters": 522,
												"id": 543,
												"nodeType": "Return",
												"src": "12042:19:0"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "11512:357:0",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"
									},
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "11892:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 517,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11892:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11891:14:0"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "11929:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 520,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "11929:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11928:7:0"
									},
									"scope": 599,
									"src": "11875:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "12495:129:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 554,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "12514:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_minus_128_by_1",
																		"typeString": "int_const -128"
																	},
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "12523:2:0",
																		"subExpression": {
																			"hexValue": "32",
																			"id": 555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12524:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_2_by_1",
																			"typeString": "int_const -2"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "37",
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12527:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_7_by_1",
																			"typeString": "int_const 7"
																		},
																		"value": "7"
																	},
																	"src": "12523:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_128_by_1",
																		"typeString": "int_const -128"
																	}
																},
																"src": "12514:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 560,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "12532:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12540:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "37",
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12543:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_7_by_1",
																			"typeString": "int_const 7"
																		},
																		"value": "7"
																	},
																	"src": "12540:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	}
																},
																"src": "12532:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "12514:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473",
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12546:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															},
															"value": "SafeCast: value doesn't fit in 8 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															}
														],
														"id": 553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12506:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12506:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "12506:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 571,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "12610:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12605:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int8_$",
															"typeString": "type(int8)"
														},
														"typeName": {
															"id": 569,
															"name": "int8",
															"nodeType": "ElementaryTypeName",
															"src": "12605:4:0",
															"typeDescriptions": {}
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12605:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"functionReturnParameters": 552,
												"id": 573,
												"nodeType": "Return",
												"src": "12598:18:0"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "12077:353:0",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits.\n _Available since v3.1._"
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "12452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 547,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "12452:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12451:14:0"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "12489:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 550,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "12489:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12488:6:0"
									},
									"scope": 599,
									"src": "12436:188:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "12873:117:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 584,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 578,
																"src": "12892:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12900:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "323535",
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12903:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_255_by_1",
																		"typeString": "int_const 255"
																	},
																	"value": "255"
																},
																"src": "12900:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																}
															},
															"src": "12892:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536",
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12908:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227",
																"typeString": "literal_string \"SafeCast: value doesn't fit in an int256\""
															},
															"value": "SafeCast: value doesn't fit in an int256"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227",
																"typeString": "literal_string \"SafeCast: value doesn't fit in an int256\""
															}
														],
														"id": 583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12884:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12884:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "12884:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 594,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "12976:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12969:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 592,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "12969:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12969:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 582,
												"id": 596,
												"nodeType": "Return",
												"src": "12962:20:0"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "12632:171:0",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "12827:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12826:15:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "12865:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 580,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "12865:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12864:8:0"
									},
									"scope": 599,
									"src": "12809:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3483,
							"src": "7038:5955:0"
						},
						{
							"id": 600,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "13055:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 601,
								"nodeType": "StructuredDocumentation",
								"src": "13090:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 894,
							"linearizedBaseContracts": [
								894
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "13837:356:0",
										"statements": [
											{
												"assignments": [
													610
												],
												"declarations": [
													{
														"constant": false,
														"id": 610,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 617,
														"src": "14039:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 609,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14039:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 611,
												"nodeType": "VariableDeclarationStatement",
												"src": "14039:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14128:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14130:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "14150:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "14138:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "14138:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "14130:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 604,
														"isOffset": false,
														"isSlot": false,
														"src": "14150:7:0",
														"valueSize": 1
													},
													{
														"declaration": 610,
														"isOffset": false,
														"isSlot": false,
														"src": "14130:4:0",
														"valueSize": 1
													}
												],
												"id": 612,
												"nodeType": "InlineAssembly",
												"src": "14119:41:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 613,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "14177:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14184:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14177:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 608,
												"id": 616,
												"nodeType": "Return",
												"src": "14170:15:0"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "13184:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "13791:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13790:17:0"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "13831:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13831:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13830:6:0"
									},
									"scope": 894,
									"src": "13771:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "15199:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 629,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "15226:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$894",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$894",
																				"typeString": "library Address"
																			}
																		],
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "15218:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 627,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "15218:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15218:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "15218:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 632,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "15243:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15218:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15251:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 626,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15210:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15210:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "15210:73:0"
											},
											{
												"assignments": [
													638,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 638,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 651,
														"src": "15375:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 637,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15375:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 645,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15425:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 639,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 621,
																"src": "15393:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "15393:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 641,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "15416:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "15393:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15393:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15374:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 647,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "15447:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15456:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 646,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15439:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15439:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "15439:78:0"
											}
										]
									},
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "14201:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "15147:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15147:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "15174:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15146:43:0"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15199:0:0"
									},
									"scope": 894,
									"src": "15128:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "16375:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "16404:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 664,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "16412:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16418:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 662,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															669,
															689
														],
														"referencedDeclaration": 689,
														"src": "16391:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16391:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 661,
												"id": 667,
												"nodeType": "Return",
												"src": "16384:67:0"
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "15533:747:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "16308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "16324:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 656,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16324:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16307:35:0"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "16361:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16361:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16360:14:0"
									},
									"scope": 894,
									"src": "16286:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "16806:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 682,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "16846:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 683,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "16854:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16860:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 685,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "16863:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 681,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															709,
															759
														],
														"referencedDeclaration": 759,
														"src": "16824:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16824:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 680,
												"id": 687,
												"nodeType": "Return",
												"src": "16817:59:0"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "16467:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "16711:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "16727:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 673,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16727:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "16746:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 675,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16746:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16710:63:0"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "16792:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16792:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16791:14:0"
									},
									"scope": 894,
									"src": "16689:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "17372:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 702,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "17412:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 703,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "17420:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 704,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "17426:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17433:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 701,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															709,
															759
														],
														"referencedDeclaration": 759,
														"src": "17390:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17390:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 700,
												"id": 707,
												"nodeType": "Return",
												"src": "17383:94:0"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "16892:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "17290:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17290:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "17306:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 693,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "17325:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17289:50:0"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "17358:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 698,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17358:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17357:14:0"
									},
									"scope": 894,
									"src": "17259:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "17882:389:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 726,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "17909:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$894",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$894",
																				"typeString": "library Address"
																			}
																		],
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17901:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 724,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "17901:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17901:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "17901:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 729,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "17926:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17901:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17933:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 723,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17893:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17893:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "17893:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 736,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "18004:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 735,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "17993:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17993:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18013:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 734,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17985:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17985:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "17985:60:0"
											},
											{
												"assignments": [
													742,
													744
												],
												"declarations": [
													{
														"constant": false,
														"id": 742,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 758,
														"src": "18119:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 741,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "18119:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 744,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 758,
														"src": "18133:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 743,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "18133:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 751,
												"initialValue": {
													"arguments": [
														{
															"id": 749,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "18188:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 745,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "18160:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "18160:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 747,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "18180:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "18160:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18160:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18118:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 753,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "18229:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 754,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "18238:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 755,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "18250:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 752,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "18211:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18211:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 722,
												"id": 757,
												"nodeType": "Return",
												"src": "18204:59:0"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "17493:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "17772:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17772:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "17788:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17788:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "17807:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17807:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "17822:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 717,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17822:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17771:78:0"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "17868:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 720,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17868:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17867:14:0"
									},
									"scope": 894,
									"src": "17741:530:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "18556:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 770,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "18593:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "18601:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18607:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 769,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															776,
															811
														],
														"referencedDeclaration": 811,
														"src": "18574:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18574:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 768,
												"id": 774,
												"nodeType": "Return",
												"src": "18567:80:0"
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "18279:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "18484:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "18500:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 763,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18500:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18483:35:0"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "18542:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18542:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18541:14:0"
									},
									"scope": 894,
									"src": "18456:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "18975:294:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 790,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "19005:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 789,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "18994:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18994:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19014:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 788,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18986:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18986:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "18986:67:0"
											},
											{
												"assignments": [
													796,
													798
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 810,
														"src": "19127:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 795,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "19127:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 798,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 810,
														"src": "19141:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 797,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "19141:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 803,
												"initialValue": {
													"arguments": [
														{
															"id": 801,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "19186:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 799,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "19168:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "19168:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19168:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19126:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 805,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "19227:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 806,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "19236:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 807,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "19248:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 804,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "19209:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19209:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 787,
												"id": 809,
												"nodeType": "Return",
												"src": "19202:59:0"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "18663:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "18875:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "18891:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 780,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18891:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "18910:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 782,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18910:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18874:63:0"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "18961:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 785,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18961:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18960:14:0"
									},
									"scope": 894,
									"src": "18847:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "19553:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 822,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "19592:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 823,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "19600:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19606:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 821,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															828,
															863
														],
														"referencedDeclaration": 863,
														"src": "19571:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19571:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 820,
												"id": 826,
												"nodeType": "Return",
												"src": "19564:84:0"
											}
										]
									},
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "19277:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "19486:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "19502:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 815,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19502:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19485:35:0"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "19539:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19539:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19538:14:0"
									},
									"scope": 894,
									"src": "19456:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "19975:298:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 842,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "20005:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 841,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "19994:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19994:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20014:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 840,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19986:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19986:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "19986:69:0"
											},
											{
												"assignments": [
													848,
													850
												],
												"declarations": [
													{
														"constant": false,
														"id": 848,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "20129:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 847,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "20129:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 850,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "20143:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 849,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "20143:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 855,
												"initialValue": {
													"arguments": [
														{
															"id": 853,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "20190:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 851,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "20170:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "20170:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20170:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20128:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 857,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "20231:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 858,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "20240:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 859,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "20252:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 856,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "20213:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20213:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 839,
												"id": 861,
												"nodeType": "Return",
												"src": "20206:59:0"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "19664:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "19880:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19880:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "19896:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 832,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19896:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "19915:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 834,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "19915:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19879:63:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "19961:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 837,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19961:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19960:14:0"
									},
									"scope": 894,
									"src": "19850:423:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "20410:613:0",
										"statements": [
											{
												"condition": {
													"id": 874,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 865,
													"src": "20425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 890,
													"nodeType": "Block",
													"src": "20484:532:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 878,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 867,
																		"src": "20570:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "20570:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20590:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "20570:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 888,
																"nodeType": "Block",
																"src": "20950:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 885,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "20976:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 884,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "20969:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20969:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 887,
																		"nodeType": "ExpressionStatement",
																		"src": "20969:20:0"
																	}
																]
															},
															"id": 889,
															"nodeType": "IfStatement",
															"src": "20566:439:0",
															"trueBody": {
																"id": 883,
																"nodeType": "Block",
																"src": "20593:351:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "20781:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "20804:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "20833:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "20827:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20827:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "20808:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "20877:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "20881:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "20873:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20873:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "20894:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "20866:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20866:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "20866:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 867,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "20833:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 867,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "20881:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 882,
																		"nodeType": "InlineAssembly",
																		"src": "20772:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 891,
												"nodeType": "IfStatement",
												"src": "20421:595:0",
												"trueBody": {
													"id": 877,
													"nodeType": "Block",
													"src": "20434:44:0",
													"statements": [
														{
															"expression": {
																"id": 875,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 867,
																"src": "20456:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 873,
															"id": 876,
															"nodeType": "Return",
															"src": "20449:17:0"
														}
													]
												}
											}
										]
									},
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "20308:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 864,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20308:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "20322:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 866,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20322:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "20347:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 868,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "20347:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20307:67:0"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "20396:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 871,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20396:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20395:14:0"
									},
									"scope": 894,
									"src": "20281:742:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3483,
							"src": "13161:7865:0"
						},
						{
							"id": 895,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "21093:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 896,
								"nodeType": "StructuredDocumentation",
								"src": "21128:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 971,
							"linearizedBaseContracts": [
								971
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "21226:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21320:2:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "21346:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21345:9:0"
									},
									"scope": 971,
									"src": "21300:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "21363:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "21462:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21462:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21461:17:0"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "21502:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21501:9:0"
									},
									"scope": 971,
									"src": "21443:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "21519:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 920,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "21758:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21758:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "21777:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21757:35:0"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "21811:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 917,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21811:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21810:6:0"
									},
									"scope": 971,
									"src": "21740:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "21825:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 930,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "22120:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22120:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "22135:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22135:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22119:32:0"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "22175:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22174:9:0"
									},
									"scope": 971,
									"src": "22101:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "22192:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 940,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "22870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22870:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "22887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22869:33:0"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "22921:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 937,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22921:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22920:6:0"
									},
									"scope": 971,
									"src": "22853:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "22935:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "23267:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "23283:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23283:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "23302:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23302:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23266:51:0"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "23336:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 949,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23336:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23335:6:0"
									},
									"scope": 971,
									"src": "23245:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "23350:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 961,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "23534:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "23556:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23556:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "23576:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23533:57:0"
									},
									"src": "23519:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "23599:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 970,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "23771:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "23794:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23794:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "23819:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23770:63:0"
									},
									"src": "23756:78:0"
								}
							],
							"scope": 3483,
							"src": "21202:2635:0"
						},
						{
							"id": 972,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "23886:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 974,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 971,
										"src": "24078:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$971",
											"typeString": "contract IERC20"
										}
									},
									"id": 975,
									"nodeType": "InheritanceSpecifier",
									"src": "24078:6:0"
								}
							],
							"contractDependencies": [
								971
							],
							"contractKind": "interface",
							"documentation": {
								"id": 973,
								"nodeType": "StructuredDocumentation",
								"src": "23914:139:0",
								"text": " @dev Interface extending ERC20 standard to include decimals() as\n      it is optional in the OpenZeppelin IERC20 interface."
							},
							"fullyImplemented": false,
							"id": 982,
							"linearizedBaseContracts": [
								982,
								971
							],
							"name": "IERC20Ext",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "24092:145:0",
										"text": " @dev This function is required as Kyber requires to interact\n      with token.decimals() with many of its operations."
									},
									"functionSelector": "313ce567",
									"id": 981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24260:2:0"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "digits",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "24286:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 978,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "24286:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24285:14:0"
									},
									"scope": 982,
									"src": "24243:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3483,
							"src": "24055:248:0"
						},
						{
							"id": 983,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "24381:22:0"
						},
						{
							"id": 984,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "24405:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1138,
							"linearizedBaseContracts": [
								1138
							],
							"name": "IKyberRewardLocker",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IKyberRewardLocker.VestingSchedule",
									"id": 993,
									"members": [
										{
											"constant": false,
											"id": 986,
											"mutability": "mutable",
											"name": "startBlock",
											"nodeType": "VariableDeclaration",
											"scope": 993,
											"src": "24537:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 985,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "24537:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 988,
											"mutability": "mutable",
											"name": "endBlock",
											"nodeType": "VariableDeclaration",
											"scope": 993,
											"src": "24565:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 987,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "24565:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 990,
											"mutability": "mutable",
											"name": "quantity",
											"nodeType": "VariableDeclaration",
											"scope": 993,
											"src": "24591:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 989,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "24591:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 992,
											"mutability": "mutable",
											"name": "vestedQuantity",
											"nodeType": "VariableDeclaration",
											"scope": 993,
											"src": "24618:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 991,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "24618:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VestingSchedule",
									"nodeType": "StructDefinition",
									"scope": 1138,
									"src": "24503:145:0",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1007,
									"name": "VestingEntryCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "24692:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$982",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 994,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 982,
													"src": "24692:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$982",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "24726:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"indexed": false,
												"mutability": "mutable",
												"name": "startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "24764:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"indexed": false,
												"mutability": "mutable",
												"name": "endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "24793:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"indexed": false,
												"mutability": "mutable",
												"name": "quantity",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "24820:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "24847:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24681:186:0"
									},
									"src": "24656:212:0"
								},
								{
									"anonymous": false,
									"id": 1017,
									"name": "VestingEntryQueued",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"indexed": true,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "24911:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24911:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "24943:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$982",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1010,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 982,
													"src": "24943:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$982",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "24977:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24977:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"indexed": false,
												"mutability": "mutable",
												"name": "quantity",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "25015:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24900:138:0"
									},
									"src": "24876:163:0"
								},
								{
									"anonymous": false,
									"id": 1027,
									"name": "Vested",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "25070:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$982",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1018,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 982,
													"src": "25070:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$982",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "25104:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"indexed": false,
												"mutability": "mutable",
												"name": "vestedQuantity",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "25142:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25142:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "25175:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25059:136:0"
									},
									"src": "25047:149:0"
								},
								{
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "25204:68:0",
										"text": " @dev queue a vesting schedule starting from now"
									},
									"functionSelector": "7750c9f0",
									"id": 1037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lock",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "25302:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$982",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1029,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 982,
													"src": "25302:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$982",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "25328:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "25354:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25291:84:0"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25392:0:0"
									},
									"scope": 1138,
									"src": "25278:115:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "25401:50:0",
										"text": " @dev queue a vesting schedule"
									},
									"functionSelector": "a5d21e31",
									"id": 1049,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lockWithStartBlock",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "25495:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$982",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1039,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 982,
													"src": "25495:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$982",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "25521:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25521:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "quantity",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "25547:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "25574:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25484:115:0"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25616:0:0"
									},
									"scope": 1138,
									"src": "25457:160:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "25625:74:0",
										"text": " @dev vest all completed schedules for multiple tokens"
									},
									"functionSelector": "9059aa6a",
									"id": 1059,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vestCompletedSchedulesForMultipleTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "25764:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20Ext_$982_$dyn_calldata_ptr",
													"typeString": "contract IERC20Ext[]"
												},
												"typeName": {
													"baseType": {
														"id": 1051,
														"name": "IERC20Ext",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 982,
														"src": "25764:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Ext_$982",
															"typeString": "contract IERC20Ext"
														}
													},
													"id": 1052,
													"nodeType": "ArrayTypeName",
													"src": "25764:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20Ext_$982_$dyn_storage_ptr",
														"typeString": "contract IERC20Ext[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25753:45:0"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "vestedAmounts",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "25817:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1055,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "25817:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1056,
													"nodeType": "ArrayTypeName",
													"src": "25817:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25816:32:0"
									},
									"scope": 1138,
									"src": "25705:144:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "25857:170:0",
										"text": " @dev claim multiple tokens for specific vesting schedule,\n      if schedule has not ended yet, claiming amounts are linear with vesting blocks"
									},
									"functionSelector": "4d4f3d93",
									"id": 1073,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vestScheduleForMultipleTokensAtIndices",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "26091:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20Ext_$982_$dyn_calldata_ptr",
													"typeString": "contract IERC20Ext[]"
												},
												"typeName": {
													"baseType": {
														"id": 1061,
														"name": "IERC20Ext",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 982,
														"src": "26091:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Ext_$982",
															"typeString": "contract IERC20Ext"
														}
													},
													"id": 1062,
													"nodeType": "ArrayTypeName",
													"src": "26091:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20Ext_$982_$dyn_storage_ptr",
														"typeString": "contract IERC20Ext[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "indices",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "26129:28:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "uint256[][]"
												},
												"typeName": {
													"baseType": {
														"baseType": {
															"id": 1064,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26129:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1065,
														"nodeType": "ArrayTypeName",
														"src": "26129:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[]"
														}
													},
													"id": 1066,
													"nodeType": "ArrayTypeName",
													"src": "26129:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
														"typeString": "uint256[][]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26080:84:0"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "vestedAmounts",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "26183:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1069,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "26183:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1070,
													"nodeType": "ArrayTypeName",
													"src": "26183:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26182:32:0"
									},
									"scope": 1138,
									"src": "26033:182:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "26223:65:0",
										"text": " @dev for all completed schedule, claim token"
									},
									"functionSelector": "fdfaaa05",
									"id": 1081,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vestCompletedSchedules",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "26326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$982",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1075,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 982,
													"src": "26326:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$982",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26325:17:0"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "26361:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26360:9:0"
									},
									"scope": 1138,
									"src": "26294:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "26378:158:0",
										"text": " @dev claim token for specific vesting schedule,\n @dev if schedule has not ended yet, claiming amount is linear with vesting blocks"
									},
									"functionSelector": "0f5636c3",
									"id": 1092,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vestScheduleAtIndices",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "26573:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$982",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1083,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 982,
													"src": "26573:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$982",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "indexes",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "26590:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1085,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "26590:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1086,
													"nodeType": "ArrayTypeName",
													"src": "26590:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26572:45:0"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "26654:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26653:9:0"
									},
									"scope": 1138,
									"src": "26542:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "26671:95:0",
										"text": " @dev claim token for specific vesting schedule from startIndex to endIndex"
									},
									"functionSelector": "c33fddf8",
									"id": 1104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vestSchedulesInRange",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "26812:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$982",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1094,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 982,
													"src": "26812:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$982",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "startIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "26838:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "endIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "26867:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26801:89:0"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "26909:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26908:9:0"
									},
									"scope": 1138,
									"src": "26772:146:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "26926:59:0",
										"text": " @dev length of vesting schedules array"
									},
									"functionSelector": "679f7f77",
									"id": 1114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "numVestingSchedules",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "27020:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "27037:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$982",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1108,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 982,
													"src": "27037:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$982",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27019:34:0"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "27104:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27103:9:0"
									},
									"scope": 1138,
									"src": "26991:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "27121:63:0",
										"text": " @dev get detailed of each vesting schedule"
									},
									"functionSelector": "0a3b7e31",
									"id": 1126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVestingScheduleAtIndex",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "27235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "27261:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$982",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1118,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 982,
													"src": "27261:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$982",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "27287:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27224:83:0"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "27331:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VestingSchedule_$993_memory_ptr",
													"typeString": "struct IKyberRewardLocker.VestingSchedule"
												},
												"typeName": {
													"id": 1123,
													"name": "VestingSchedule",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 993,
													"src": "27331:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VestingSchedule_$993_storage_ptr",
														"typeString": "struct IKyberRewardLocker.VestingSchedule"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27330:24:0"
									},
									"scope": 1138,
									"src": "27190:165:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "27363:52:0",
										"text": " @dev get vesting shedules array"
									},
									"functionSelector": "2f50bd72",
									"id": 1137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVestingSchedules",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "27450:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27450:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "27467:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$982",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1130,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 982,
													"src": "27467:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$982",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27449:34:0"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "schedules",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "27534:34:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_VestingSchedule_$993_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IKyberRewardLocker.VestingSchedule[]"
												},
												"typeName": {
													"baseType": {
														"id": 1133,
														"name": "VestingSchedule",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 993,
														"src": "27534:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VestingSchedule_$993_storage_ptr",
															"typeString": "struct IKyberRewardLocker.VestingSchedule"
														}
													},
													"id": 1134,
													"nodeType": "ArrayTypeName",
													"src": "27534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VestingSchedule_$993_storage_$dyn_storage_ptr",
														"typeString": "struct IKyberRewardLocker.VestingSchedule[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27533:36:0"
									},
									"scope": 1138,
									"src": "27421:149:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3483,
							"src": "24467:3106:0"
						},
						{
							"id": 1139,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "27635:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1140,
								"nodeType": "StructuredDocumentation",
								"src": "27670:575:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 1492,
							"linearizedBaseContracts": [
								1492
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "28488:102:0",
										"statements": [
											{
												"assignments": [
													1153
												],
												"declarations": [
													{
														"constant": false,
														"id": 1153,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1170,
														"src": "28499:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1152,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28499:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1157,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1154,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "28511:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1155,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "28515:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28511:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28499:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1158,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "28531:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1159,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "28535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28531:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1165,
												"nodeType": "IfStatement",
												"src": "28527:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28546:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28553:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1163,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "28545:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1151,
													"id": 1164,
													"nodeType": "Return",
													"src": "28538:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28574:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 1167,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "28580:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1168,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "28573:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1151,
												"id": 1169,
												"nodeType": "Return",
												"src": "28566:16:0"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "28271:135:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "28428:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "28439:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28427:22:0"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "28473:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28473:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "28479:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28472:15:0"
									},
									"scope": 1492,
									"src": "28412:178:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "28819:78:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1183,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "28834:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1184,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "28838:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28834:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1190,
												"nodeType": "IfStatement",
												"src": "28830:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28849:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28856:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1188,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "28848:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1182,
													"id": 1189,
													"nodeType": "Return",
													"src": "28841:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28877:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1192,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "28883:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1193,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "28887:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28883:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1195,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "28876:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1182,
												"id": 1196,
												"nodeType": "Return",
												"src": "28869:20:0"
											}
										]
									},
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "28598:139:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "28759:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "28770:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28758:22:0"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "28804:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1178,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28804:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "28810:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28810:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28803:15:0"
									},
									"scope": 1492,
									"src": "28743:154:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "29128:367:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1210,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "29364:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29369:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29364:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1217,
												"nodeType": "IfStatement",
												"src": "29360:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29380:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "30",
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29386:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1215,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "29379:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1209,
													"id": 1216,
													"nodeType": "Return",
													"src": "29372:16:0"
												}
											},
											{
												"assignments": [
													1219
												],
												"declarations": [
													{
														"constant": false,
														"id": 1219,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1238,
														"src": "29399:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1218,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29399:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1223,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1220,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "29411:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1221,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "29415:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29411:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29399:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1224,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "29431:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "29435:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29431:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1227,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "29440:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29431:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1233,
												"nodeType": "IfStatement",
												"src": "29427:33:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29451:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29458:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1231,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "29450:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1209,
													"id": 1232,
													"nodeType": "Return",
													"src": "29443:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29479:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 1235,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "29485:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1236,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "29478:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1209,
												"id": 1237,
												"nodeType": "Return",
												"src": "29471:16:0"
											}
										]
									},
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "28905:141:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "29068:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29068:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "29079:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29067:22:0"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "29113:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29113:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "29119:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29119:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29112:15:0"
									},
									"scope": 1492,
									"src": "29052:443:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "29727:79:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1251,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "29742:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29747:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29742:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1258,
												"nodeType": "IfStatement",
												"src": "29738:29:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29758:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1256,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "29757:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1250,
													"id": 1257,
													"nodeType": "Return",
													"src": "29750:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29786:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1260,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1242,
																"src": "29792:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1261,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1244,
																"src": "29796:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29792:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1263,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "29785:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1250,
												"id": 1264,
												"nodeType": "Return",
												"src": "29778:20:0"
											}
										]
									},
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "29503:142:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "29667:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "29678:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29666:22:0"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "29712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "29718:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29711:15:0"
									},
									"scope": 1492,
									"src": "29651:155:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "30048:79:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1278,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "30063:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30068:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30063:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1285,
												"nodeType": "IfStatement",
												"src": "30059:29:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30079:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1283,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "30078:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1277,
													"id": 1284,
													"nodeType": "Return",
													"src": "30071:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30107:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1287,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1269,
																"src": "30113:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1288,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1271,
																"src": "30117:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30113:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1290,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "30106:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1277,
												"id": 1291,
												"nodeType": "Return",
												"src": "30099:20:0"
											}
										]
									},
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "29814:152:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "29988:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29988:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "29999:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29999:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29987:22:0"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "30033:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30033:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "30039:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30032:15:0"
									},
									"scope": 1492,
									"src": "29972:155:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "30441:112:0",
										"statements": [
											{
												"assignments": [
													1304
												],
												"declarations": [
													{
														"constant": false,
														"id": 1304,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1318,
														"src": "30452:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1303,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30452:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1308,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1305,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "30464:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1306,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "30468:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30464:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30452:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1310,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1304,
																"src": "30488:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1311,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "30493:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30488:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30496:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30480:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "30480:46:0"
											},
											{
												"expression": {
													"id": 1316,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1304,
													"src": "30544:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1302,
												"id": 1317,
												"nodeType": "Return",
												"src": "30537:8:0"
											}
										]
									},
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "30135:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "30387:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "30398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30386:22:0"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "30432:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30431:9:0"
									},
									"scope": 1492,
									"src": "30374:179:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1340,
										"nodeType": "Block",
										"src": "30903:91:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1330,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1324,
																"src": "30922:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1331,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1322,
																"src": "30927:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30922:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30930:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30914:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30914:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "30914:49:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1336,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "30981:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1337,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "30985:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30981:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1328,
												"id": 1339,
												"nodeType": "Return",
												"src": "30974:12:0"
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "30561:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "30849:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "30860:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30848:22:0"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "30894:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30893:9:0"
									},
									"scope": 1492,
									"src": "30836:158:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "31320:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1351,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "31335:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1352,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31340:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31335:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1356,
												"nodeType": "IfStatement",
												"src": "31331:20:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31350:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1350,
													"id": 1355,
													"nodeType": "Return",
													"src": "31343:8:0"
												}
											},
											{
												"assignments": [
													1358
												],
												"declarations": [
													{
														"constant": false,
														"id": 1358,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1374,
														"src": "31362:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1357,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31362:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1362,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1359,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "31374:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1360,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "31378:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31374:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31362:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1364,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "31398:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1365,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1344,
																	"src": "31402:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31398:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1367,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1346,
																"src": "31407:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31398:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31410:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31390:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31390:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1371,
												"nodeType": "ExpressionStatement",
												"src": "31390:56:0"
											},
											{
												"expression": {
													"id": 1372,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1358,
													"src": "31464:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1350,
												"id": 1373,
												"nodeType": "Return",
												"src": "31457:8:0"
											}
										]
									},
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "31002:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "31266:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31266:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "31277:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31265:22:0"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "31311:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31310:9:0"
									},
									"scope": 1492,
									"src": "31253:220:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "32018:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1386,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1380,
																"src": "32037:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32041:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32037:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32044:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1385,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32029:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32029:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1391,
												"nodeType": "ExpressionStatement",
												"src": "32029:44:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1392,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1378,
														"src": "32091:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1393,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "32095:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32091:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1384,
												"id": 1395,
												"nodeType": "Return",
												"src": "32084:12:0"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "31481:464:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "31964:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "31975:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31963:22:0"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "32009:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32008:9:0"
									},
									"scope": 1492,
									"src": "31951:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "32638:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1408,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1402,
																"src": "32657:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32661:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32657:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32664:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32649:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32649:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "32649:42:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1414,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1400,
														"src": "32709:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1415,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "32713:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32709:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1406,
												"id": 1417,
												"nodeType": "Return",
												"src": "32702:12:0"
											}
										]
									},
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "32112:453:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "32584:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "32595:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32583:22:0"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "32629:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32628:9:0"
									},
									"scope": 1492,
									"src": "32571:151:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1442,
										"nodeType": "Block",
										"src": "33296:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1432,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "33315:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1433,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "33320:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33315:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1435,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "33323:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1431,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33307:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33307:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "33307:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1438,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "33354:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1439,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "33358:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33354:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1430,
												"id": 1441,
												"nodeType": "Return",
												"src": "33347:12:0"
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "32730:465:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "33214:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33214:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "33225:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "33236:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1425,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "33236:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33213:50:0"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "33287:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33286:9:0"
									},
									"scope": 1492,
									"src": "33201:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1466,
										"nodeType": "Block",
										"src": "34136:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1456,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1448,
																"src": "34155:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34159:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34155:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1459,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "34162:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1455,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34147:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34147:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "34147:28:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1462,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "34193:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1463,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1448,
														"src": "34197:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34193:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1454,
												"id": 1465,
												"nodeType": "Return",
												"src": "34186:12:0"
											}
										]
									},
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "33375:660:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "34054:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "34065:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "34076:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "34076:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34053:50:0"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "34127:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34126:9:0"
									},
									"scope": 1492,
									"src": "34041:165:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1490,
										"nodeType": "Block",
										"src": "34964:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1480,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "34983:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34987:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34983:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1483,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "34990:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1479,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34975:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1485,
												"nodeType": "ExpressionStatement",
												"src": "34975:28:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1486,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "35021:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1487,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1472,
														"src": "35025:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35021:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1478,
												"id": 1489,
												"nodeType": "Return",
												"src": "35014:12:0"
											}
										]
									},
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "34214:649:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "34882:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "34893:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "34904:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1473,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "34904:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34881:50:0"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "34955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34954:9:0"
									},
									"scope": 1492,
									"src": "34869:165:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3483,
							"src": "28247:6790:0"
						},
						{
							"id": 1493,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35107:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1494,
								"nodeType": "StructuredDocumentation",
								"src": "35148:465:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1701,
							"linearizedBaseContracts": [
								1701
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1497,
									"libraryName": {
										"id": 1495,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1492,
										"src": "35646:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1492",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "35640:27:0",
									"typeName": {
										"id": 1496,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "35659:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1500,
									"libraryName": {
										"id": 1498,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 894,
										"src": "35679:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$894",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "35673:26:0",
									"typeName": {
										"id": 1499,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "35691:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1521,
										"nodeType": "Block",
										"src": "35779:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1510,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "35810:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$971",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1513,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1502,
																			"src": "35840:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$971",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 920,
																		"src": "35840:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "35840:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1516,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1504,
																	"src": "35865:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1517,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "35869:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1511,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "35817:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "35817:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35817:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$971",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1509,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "35790:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$971_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35790:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1520,
												"nodeType": "ExpressionStatement",
												"src": "35790:86:0"
											}
										]
									},
									"id": 1522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "35729:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$971",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1501,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 971,
													"src": "35729:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$971",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "35743:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "35755:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35728:41:0"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35779:0:0"
									},
									"scope": 1701,
									"src": "35707:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "35982:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1534,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "36013:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$971",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1537,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1524,
																			"src": "36043:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$971",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 952,
																		"src": "36043:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "36043:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1540,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1526,
																	"src": "36072:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1541,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1528,
																	"src": "36078:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1542,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1530,
																	"src": "36082:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1535,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "36020:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "36020:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36020:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$971",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1533,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "35993:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$971_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35993:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "35993:96:0"
											}
										]
									},
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "35918:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$971",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1523,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 971,
													"src": "35918:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$971",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "35932:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "35946:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35946:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "35958:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35917:55:0"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35982:0:0"
									},
									"scope": 1701,
									"src": "35892:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1589,
										"nodeType": "Block",
										"src": "36442:546:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1558,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1554,
																			"src": "36736:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36745:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "36736:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1561,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "36735:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1566,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "36776:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1701",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1701",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1565,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "36768:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1564,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "36768:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1567,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "36768:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1568,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1552,
																					"src": "36783:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1562,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1550,
																					"src": "36752:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$971",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 930,
																				"src": "36752:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36752:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36795:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "36752:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1572,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "36751:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "36735:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36812:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "36727:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36727:152:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "36727:152:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1578,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "36910:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$971",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1581,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1550,
																			"src": "36940:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$971",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 940,
																		"src": "36940:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "36940:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1584,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1552,
																	"src": "36964:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1585,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1554,
																	"src": "36973:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1579,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "36917:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "36917:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36917:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$971",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1577,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "36890:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$971_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36890:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "36890:90:0"
											}
										]
									},
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "36105:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "36387:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$971",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1549,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 971,
													"src": "36387:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$971",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "36401:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36401:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "36418:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36418:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36386:46:0"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36442:0:0"
									},
									"scope": 1701,
									"src": "36366:622:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "37082:200:0",
										"statements": [
											{
												"assignments": [
													1600
												],
												"declarations": [
													{
														"constant": false,
														"id": 1600,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 1625,
														"src": "37093:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1599,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37093:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1612,
												"initialValue": {
													"arguments": [
														{
															"id": 1610,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "37160:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1605,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "37140:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1701",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1701",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "37132:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1603,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "37132:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37132:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1607,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "37147:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1601,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "37116:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$971",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 930,
																"src": "37116:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37116:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1319,
														"src": "37116:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37116:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37093:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1614,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "37197:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$971",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1617,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1592,
																			"src": "37227:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$971",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 940,
																		"src": "37227:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "37227:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1620,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "37251:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1621,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1600,
																	"src": "37260:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1615,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "37204:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "37204:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37204:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$971",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1613,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "37177:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$971_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37177:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1624,
												"nodeType": "ExpressionStatement",
												"src": "37177:97:0"
											}
										]
									},
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "37027:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$971",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1591,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 971,
													"src": "37027:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$971",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "37041:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "37058:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37026:46:0"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37082:0:0"
									},
									"scope": 1701,
									"src": "36996:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "37376:245:0",
										"statements": [
											{
												"assignments": [
													1636
												],
												"declarations": [
													{
														"constant": false,
														"id": 1636,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 1662,
														"src": "37387:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1635,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37387:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1649,
												"initialValue": {
													"arguments": [
														{
															"id": 1646,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "37454:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37461:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1641,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "37434:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1701",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1701",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "37426:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1639,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "37426:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37426:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1643,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "37441:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1637,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1628,
																	"src": "37410:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$971",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 930,
																"src": "37410:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37410:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1443,
														"src": "37410:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37410:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37387:118:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1651,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "37536:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$971",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1654,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1628,
																			"src": "37566:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$971",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 940,
																		"src": "37566:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "37566:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1657,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "37590:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1658,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1636,
																	"src": "37599:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1652,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "37543:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "37543:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37543:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$971",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1650,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "37516:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$971_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37516:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1661,
												"nodeType": "ExpressionStatement",
												"src": "37516:97:0"
											}
										]
									},
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "37321:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$971",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1627,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 971,
													"src": "37321:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$971",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "37335:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37335:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "37352:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37320:46:0"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37376:0:0"
									},
									"scope": 1701,
									"src": "37290:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "38082:691:0",
										"statements": [
											{
												"assignments": [
													1672
												],
												"declarations": [
													{
														"constant": false,
														"id": 1672,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1699,
														"src": "38436:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1671,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "38436:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1681,
												"initialValue": {
													"arguments": [
														{
															"id": 1678,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "38490:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38496:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1675,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1666,
																	"src": "38470:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$971",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$971",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38462:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1673,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38462:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38462:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 689,
														"src": "38462:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38462:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38436:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1682,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "38546:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "38546:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38566:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "38546:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1698,
												"nodeType": "IfStatement",
												"src": "38542:224:0",
												"trueBody": {
													"id": 1697,
													"nodeType": "Block",
													"src": "38569:197:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1689,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1672,
																				"src": "38688:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1691,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "38701:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1690,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "38701:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1692,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "38700:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1687,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "38677:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "38677:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "38677:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38709:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1686,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "38669:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38669:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1696,
															"nodeType": "ExpressionStatement",
															"src": "38669:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1664,
										"nodeType": "StructuredDocumentation",
										"src": "37629:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "38041:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$971",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1665,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 971,
													"src": "38041:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$971",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "38055:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1667,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38055:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38040:33:0"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38082:0:0"
									},
									"scope": 1701,
									"src": "38012:761:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3483,
							"src": "35615:3161:0"
						},
						{
							"id": 1702,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38846:31:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1703,
								"nodeType": "StructuredDocumentation",
								"src": "38881:765:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1740,
							"linearizedBaseContracts": [
								1740
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1706,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "40448:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1704,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "40448:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1705,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "40488:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1709,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "40496:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1707,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "40496:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1708,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "40532:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1711,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "40542:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1710,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "40542:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1718,
										"nodeType": "Block",
										"src": "40598:41:0",
										"statements": [
											{
												"expression": {
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1714,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "40609:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1715,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "40619:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40609:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1717,
												"nodeType": "ExpressionStatement",
												"src": "40609:22:0"
											}
										]
									},
									"id": 1719,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40586:2:0"
									},
									"returnParameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40598:0:0"
									},
									"scope": 1740,
									"src": "40574:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "41047:433:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1723,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1711,
																"src": "41138:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1724,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1709,
																"src": "41149:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "41138:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41159:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 1722,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "41130:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41130:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1728,
												"nodeType": "ExpressionStatement",
												"src": "41130:63:0"
											},
											{
												"expression": {
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1729,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "41271:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1730,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1709,
														"src": "41281:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41271:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1732,
												"nodeType": "ExpressionStatement",
												"src": "41271:18:0"
											},
											{
												"id": 1733,
												"nodeType": "PlaceholderStatement",
												"src": "41302:1:0"
											},
											{
												"expression": {
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1734,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "41450:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1735,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "41460:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41450:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "41450:22:0"
											}
										]
									},
									"documentation": {
										"id": 1720,
										"nodeType": "StructuredDocumentation",
										"src": "40647:370:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
									},
									"id": 1739,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41044:2:0"
									},
									"src": "41023:457:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3483,
							"src": "39648:1835:0"
						},
						{
							"id": 1741,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "41547:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1743,
										"name": "IKyberFairLaunch",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 151,
										"src": "41987:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IKyberFairLaunch_$151",
											"typeString": "contract IKyberFairLaunch"
										}
									},
									"id": 1744,
									"nodeType": "InheritanceSpecifier",
									"src": "41987:16:0"
								},
								{
									"baseName": {
										"id": 1745,
										"name": "PermissionAdmin",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 287,
										"src": "42005:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PermissionAdmin_$287",
											"typeString": "contract PermissionAdmin"
										}
									},
									"id": 1746,
									"nodeType": "InheritanceSpecifier",
									"src": "42005:15:0"
								},
								{
									"baseName": {
										"id": 1747,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1740,
										"src": "42022:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$1740",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 1748,
									"nodeType": "InheritanceSpecifier",
									"src": "42022:15:0"
								}
							],
							"contractDependencies": [
								151,
								287,
								1740
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1742,
								"nodeType": "StructuredDocumentation",
								"src": "41612:347:0",
								"text": "FairLaunch contract for Kyber DMM Liquidity Mining program\n Allow stakers to stake LP tokens and receive reward tokens\n Allow extend or renew a pool to continue/restart the LM program\n When harvesting, rewards will be transferred to a RewardLocker\n Support multiple reward tokens, reward tokens must be distinct and immutable"
							},
							"fullyImplemented": true,
							"id": 3482,
							"linearizedBaseContracts": [
								3482,
								1740,
								287,
								151
							],
							"name": "KyberFairLaunch",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1751,
									"libraryName": {
										"id": 1749,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1492,
										"src": "42051:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1492",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "42045:27:0",
									"typeName": {
										"id": 1750,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "42064:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1754,
									"libraryName": {
										"id": 1752,
										"name": "SafeCast",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 599,
										"src": "42084:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeCast_$599",
											"typeString": "library SafeCast"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "42078:27:0",
									"typeName": {
										"id": 1753,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "42097:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1757,
									"libraryName": {
										"id": 1755,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1701,
										"src": "42117:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$1701",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "42111:30:0",
									"typeName": {
										"id": 1756,
										"name": "IERC20Ext",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 982,
										"src": "42131:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Ext_$982",
											"typeString": "contract IERC20Ext"
										}
									}
								},
								{
									"constant": true,
									"id": 1760,
									"mutability": "constant",
									"name": "PRECISION",
									"nodeType": "VariableDeclaration",
									"scope": 3482,
									"src": "42149:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1758,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "42149:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653132",
										"id": 1759,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "42187:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000_by_1",
											"typeString": "int_const 1000000000000"
										},
										"value": "1e12"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "KyberFairLaunch.UserRewardData",
									"id": 1765,
									"members": [
										{
											"constant": false,
											"id": 1762,
											"mutability": "mutable",
											"name": "unclaimedReward",
											"nodeType": "VariableDeclaration",
											"scope": 1765,
											"src": "42233:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1761,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "42233:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1764,
											"mutability": "mutable",
											"name": "lastRewardPerShare",
											"nodeType": "VariableDeclaration",
											"scope": 1765,
											"src": "42267:26:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1763,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "42267:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserRewardData",
									"nodeType": "StructDefinition",
									"scope": 3482,
									"src": "42200:101:0",
									"visibility": "public"
								},
								{
									"canonicalName": "KyberFairLaunch.UserInfo",
									"id": 1772,
									"members": [
										{
											"constant": false,
											"id": 1767,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 1772,
											"src": "42361:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1766,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "42361:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1771,
											"mutability": "mutable",
											"name": "userRewardData",
											"nodeType": "VariableDeclaration",
											"scope": 1772,
											"src": "42436:49:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1765_storage_$",
												"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData)"
											},
											"typeName": {
												"id": 1770,
												"keyType": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "42436:34:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1765_storage_$",
													"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData)"
												},
												"valueType": {
													"id": 1769,
													"name": "UserRewardData",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1765,
													"src": "42455:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserRewardData_$1765_storage_ptr",
														"typeString": "struct KyberFairLaunch.UserRewardData"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 3482,
									"src": "42334:814:0",
									"visibility": "public"
								},
								{
									"canonicalName": "KyberFairLaunch.PoolRewardData",
									"id": 1777,
									"members": [
										{
											"constant": false,
											"id": 1774,
											"mutability": "mutable",
											"name": "rewardPerBlock",
											"nodeType": "VariableDeclaration",
											"scope": 1777,
											"src": "43189:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1773,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "43189:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1776,
											"mutability": "mutable",
											"name": "accRewardPerShare",
											"nodeType": "VariableDeclaration",
											"scope": 1777,
											"src": "43222:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1775,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "43222:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolRewardData",
									"nodeType": "StructDefinition",
									"scope": 3482,
									"src": "43156:99:0",
									"visibility": "public"
								},
								{
									"canonicalName": "KyberFairLaunch.PoolInfo",
									"id": 1792,
									"members": [
										{
											"constant": false,
											"id": 1779,
											"mutability": "mutable",
											"name": "totalStake",
											"nodeType": "VariableDeclaration",
											"scope": 1792,
											"src": "43806:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1778,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "43806:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1781,
											"mutability": "mutable",
											"name": "stakeToken",
											"nodeType": "VariableDeclaration",
											"scope": 1792,
											"src": "43835:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1780,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "43835:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1783,
											"mutability": "mutable",
											"name": "startBlock",
											"nodeType": "VariableDeclaration",
											"scope": 1792,
											"src": "43864:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1782,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "43864:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1785,
											"mutability": "mutable",
											"name": "endBlock",
											"nodeType": "VariableDeclaration",
											"scope": 1792,
											"src": "43892:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1784,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "43892:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1787,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nodeType": "VariableDeclaration",
											"scope": 1792,
											"src": "43918:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1786,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "43918:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1791,
											"mutability": "mutable",
											"name": "poolRewardData",
											"nodeType": "VariableDeclaration",
											"scope": 1792,
											"src": "43951:49:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1777_storage_$",
												"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData)"
											},
											"typeName": {
												"id": 1790,
												"keyType": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43959:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "43951:34:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1777_storage_$",
													"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData)"
												},
												"valueType": {
													"id": 1789,
													"name": "PoolRewardData",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1777,
													"src": "43970:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolRewardData_$1777_storage_ptr",
														"typeString": "struct KyberFairLaunch.PoolRewardData"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nodeType": "StructDefinition",
									"scope": 3482,
									"src": "43779:229:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1e1c6a07",
									"id": 1796,
									"mutability": "mutable",
									"name": "poolExists",
									"nodeType": "VariableDeclaration",
									"scope": 3482,
									"src": "44064:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1795,
										"keyType": {
											"id": 1793,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "44072:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "44064:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1794,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "44083:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3892601c",
									"id": 1798,
									"mutability": "immutable",
									"name": "rewardLocker",
									"nodeType": "VariableDeclaration",
									"scope": 3482,
									"src": "44149:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IKyberRewardLocker_$1138",
										"typeString": "contract IKyberRewardLocker"
									},
									"typeName": {
										"id": 1797,
										"name": "IKyberRewardLocker",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1138,
										"src": "44149:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IKyberRewardLocker_$1138",
											"typeString": "contract IKyberRewardLocker"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7bb7bed1",
									"id": 1801,
									"mutability": "mutable",
									"name": "rewardTokens",
									"nodeType": "VariableDeclaration",
									"scope": 3482,
									"src": "44359:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1799,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "44359:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1800,
										"nodeType": "ArrayTypeName",
										"src": "44359:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										94
									],
									"constant": false,
									"functionSelector": "081e3eda",
									"id": 1804,
									"mutability": "mutable",
									"name": "poolLength",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1803,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "44439:8:0"
									},
									"scope": 3482,
									"src": "44424:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1802,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "44424:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1808,
									"mutability": "mutable",
									"name": "poolInfo",
									"nodeType": "VariableDeclaration",
									"scope": 3482,
									"src": "44465:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1792_storage_$",
										"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo)"
									},
									"typeName": {
										"id": 1807,
										"keyType": {
											"id": 1805,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "44473:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "44465:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1792_storage_$",
											"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo)"
										},
										"valueType": {
											"id": 1806,
											"name": "PoolInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1792,
											"src": "44484:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
												"typeString": "struct KyberFairLaunch.PoolInfo"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1814,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"scope": 3482,
									"src": "44572:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo))"
									},
									"typeName": {
										"id": 1813,
										"keyType": {
											"id": 1809,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "44580:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "44572:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo))"
										},
										"valueType": {
											"id": 1812,
											"keyType": {
												"id": 1810,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "44599:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "44591:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$",
												"typeString": "mapping(address => struct KyberFairLaunch.UserInfo)"
											},
											"valueType": {
												"id": 1811,
												"name": "UserInfo",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1772,
												"src": "44610:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
													"typeString": "struct KyberFairLaunch.UserInfo"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 1825,
									"name": "AddNewPool",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"indexed": true,
												"mutability": "mutable",
												"name": "stakeToken",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "44674:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"indexed": true,
												"mutability": "mutable",
												"name": "startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "44711:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1817,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "44711:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"indexed": true,
												"mutability": "mutable",
												"name": "endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "44747:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1819,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "44747:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "44781:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1821,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "44781:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1822,
													"nodeType": "ArrayTypeName",
													"src": "44781:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44663:150:0"
									},
									"src": "44647:167:0"
								},
								{
									"anonymous": false,
									"id": 1836,
									"name": "RenewPool",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "44846:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"indexed": true,
												"mutability": "mutable",
												"name": "startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "44876:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1828,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "44876:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"indexed": true,
												"mutability": "mutable",
												"name": "endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "44912:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1830,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "44912:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1834,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "44946:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1832,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "44946:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1833,
													"nodeType": "ArrayTypeName",
													"src": "44946:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44835:143:0"
									},
									"src": "44820:159:0"
								},
								{
									"anonymous": false,
									"id": 1845,
									"name": "UpdatePool",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "45012:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"indexed": true,
												"mutability": "mutable",
												"name": "endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "45042:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1839,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "45042:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "45076:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1841,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "45076:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1842,
													"nodeType": "ArrayTypeName",
													"src": "45076:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45001:107:0"
									},
									"src": "44985:124:0"
								},
								{
									"anonymous": false,
									"id": 1855,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "45139:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "45170:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"indexed": true,
												"mutability": "mutable",
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "45200:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "45238:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45128:131:0"
									},
									"src": "45115:145:0"
								},
								{
									"anonymous": false,
									"id": 1865,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "45291:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "45322:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"indexed": true,
												"mutability": "mutable",
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "45352:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "45390:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45280:131:0"
									},
									"src": "45266:146:0"
								},
								{
									"anonymous": false,
									"id": 1877,
									"name": "Harvest",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "45442:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "45473:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"indexed": true,
												"mutability": "mutable",
												"name": "rewardToken",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "45503:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockedAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "45541:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "45572:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45431:167:0"
									},
									"src": "45418:181:0"
								},
								{
									"anonymous": false,
									"id": 1887,
									"name": "EmergencyWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "45639:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1881,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "45670:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"indexed": true,
												"mutability": "mutable",
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "45700:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45700:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "45738:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45628:131:0"
									},
									"src": "45605:155:0"
								},
								{
									"body": {
										"id": 1948,
										"nodeType": "Block",
										"src": "45920:436:0",
										"statements": [
											{
												"expression": {
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1900,
														"name": "rewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "45931:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1901,
														"name": "_rewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1892,
														"src": "45946:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "45931:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 1903,
												"nodeType": "ExpressionStatement",
												"src": "45931:28:0"
											},
											{
												"expression": {
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1904,
														"name": "rewardLocker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1798,
														"src": "45970:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKyberRewardLocker_$1138",
															"typeString": "contract IKyberRewardLocker"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1905,
														"name": "_rewardLocker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "45985:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKyberRewardLocker_$1138",
															"typeString": "contract IKyberRewardLocker"
														}
													},
													"src": "45970:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKyberRewardLocker_$1138",
														"typeString": "contract IKyberRewardLocker"
													}
												},
												"id": 1907,
												"nodeType": "ExpressionStatement",
												"src": "45970:28:0"
											},
											{
												"body": {
													"id": 1946,
													"nodeType": "Block",
													"src": "46109:240:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1919,
																		"name": "_rewardTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1892,
																		"src": "46128:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 1921,
																	"indexExpression": {
																		"id": 1920,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "46142:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "46128:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "46156:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "46148:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1922,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "46148:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "46148:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "46128:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1945,
															"nodeType": "IfStatement",
															"src": "46124:214:0",
															"trueBody": {
																"id": 1944,
																"nodeType": "Block",
																"src": "46160:178:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1935,
																							"name": "_rewardLocker",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1894,
																							"src": "46249:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IKyberRewardLocker_$1138",
																								"typeString": "contract IKyberRewardLocker"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_IKyberRewardLocker_$1138",
																								"typeString": "contract IKyberRewardLocker"
																							}
																						],
																						"id": 1934,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "46241:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1933,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "46241:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1936,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "46241:22:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1939,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "46291:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": {
																									"id": 1938,
																									"name": "uint256",
																									"nodeType": "ElementaryTypeName",
																									"src": "46291:7:0",
																									"typeDescriptions": {}
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								}
																							],
																							"id": 1937,
																							"name": "type",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967269,
																							"src": "46286:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 1940,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "46286:13:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_meta_type_t_uint256",
																							"typeString": "type(uint256)"
																						}
																					},
																					"id": 1941,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "max",
																					"nodeType": "MemberAccess",
																					"src": "46286:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 1928,
																								"name": "_rewardTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1892,
																								"src": "46189:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																									"typeString": "address[] memory"
																								}
																							},
																							"id": 1930,
																							"indexExpression": {
																								"id": 1929,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1909,
																								"src": "46203:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "46189:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1927,
																						"name": "IERC20Ext",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 982,
																						"src": "46179:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20Ext_$982_$",
																							"typeString": "type(contract IERC20Ext)"
																						}
																					},
																					"id": 1931,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "46179:27:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Ext_$982",
																						"typeString": "contract IERC20Ext"
																					}
																				},
																				"id": 1932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeApprove",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1590,
																				"src": "46179:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$971_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$971_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 1942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "46179:143:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1943,
																		"nodeType": "ExpressionStatement",
																		"src": "46179:143:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1912,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "46078:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1913,
															"name": "_rewardTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "46082:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "46082:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46078:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1947,
												"initializationExpression": {
													"assignments": [
														1909
													],
													"declarations": [
														{
															"constant": false,
															"id": 1909,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1947,
															"src": "46063:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1908,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "46063:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1911,
													"initialValue": {
														"hexValue": "30",
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "46075:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "46063:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "46104:3:0",
														"subExpression": {
															"id": 1916,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "46104:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1918,
													"nodeType": "ExpressionStatement",
													"src": "46104:3:0"
												},
												"nodeType": "ForStatement",
												"src": "46058:291:0"
											}
										]
									},
									"id": 1949,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1897,
													"name": "_admin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1889,
													"src": "45912:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1898,
											"modifierName": {
												"id": 1896,
												"name": "PermissionAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 287,
												"src": "45896:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_PermissionAdmin_$287_$",
													"typeString": "type(contract PermissionAdmin)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "45896:23:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "_admin",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "45790:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "_rewardTokens",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "45815:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1890,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "45815:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1891,
													"nodeType": "ArrayTypeName",
													"src": "45815:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "_rewardLocker",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "45856:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IKyberRewardLocker_$1138",
													"typeString": "contract IKyberRewardLocker"
												},
												"typeName": {
													"id": 1893,
													"name": "IKyberRewardLocker",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1138,
													"src": "45856:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKyberRewardLocker_$1138",
														"typeString": "contract IKyberRewardLocker"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45779:116:0"
									},
									"returnParameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45920:0:0"
									},
									"scope": 3482,
									"src": "45768:588:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1952,
										"nodeType": "Block",
										"src": "46391:2:0",
										"statements": []
									},
									"id": 1953,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46371:2:0"
									},
									"returnParameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46391:0:0"
									},
									"scope": 3482,
									"src": "46364:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2002,
										"nodeType": "Block",
										"src": "46582:347:0",
										"statements": [
											{
												"assignments": [
													1964
												],
												"declarations": [
													{
														"constant": false,
														"id": 1964,
														"mutability": "mutable",
														"name": "rewardToken",
														"nodeType": "VariableDeclaration",
														"scope": 2002,
														"src": "46593:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Ext_$982",
															"typeString": "contract IERC20Ext"
														},
														"typeName": {
															"id": 1963,
															"name": "IERC20Ext",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 982,
															"src": "46593:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Ext_$982",
																"typeString": "contract IERC20Ext"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1970,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1966,
																"name": "rewardTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "46627:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															},
															"id": 1968,
															"indexExpression": {
																"id": 1967,
																"name": "rewardTokenIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1956,
																"src": "46640:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "46627:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1965,
														"name": "IERC20Ext",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "46617:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20Ext_$982_$",
															"typeString": "type(contract IERC20Ext)"
														}
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46617:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$982",
														"typeString": "contract IERC20Ext"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46593:65:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_contract$_IERC20Ext_$982",
														"typeString": "contract IERC20Ext"
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1971,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1964,
														"src": "46673:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Ext_$982",
															"typeString": "contract IERC20Ext"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46698:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1972,
															"name": "IERC20Ext",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "46688:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20Ext_$982_$",
																"typeString": "type(contract IERC20Ext)"
															}
														},
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46688:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Ext_$982",
															"typeString": "contract IERC20Ext"
														}
													},
													"src": "46673:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2000,
													"nodeType": "Block",
													"src": "46851:71:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1995,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "46891:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "46891:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 1997,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1958,
																		"src": "46903:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1992,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1964,
																		"src": "46866:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Ext_$982",
																			"typeString": "contract IERC20Ext"
																		}
																	},
																	"id": 1994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1522,
																	"src": "46866:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$971_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$971_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46866:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1999,
															"nodeType": "ExpressionStatement",
															"src": "46866:44:0"
														}
													]
												},
												"id": 2001,
												"nodeType": "IfStatement",
												"src": "46669:253:0",
												"trueBody": {
													"id": 1991,
													"nodeType": "Block",
													"src": "46702:143:0",
													"statements": [
														{
															"assignments": [
																1977,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1977,
																	"mutability": "mutable",
																	"name": "success",
																	"nodeType": "VariableDeclaration",
																	"scope": 1991,
																	"src": "46718:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1976,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "46718:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1985,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "46767:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1978,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "46736:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "46736:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "46736:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1981,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "46759:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "46736:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46736:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "46717:53:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1987,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1977,
																		"src": "46793:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "7472616e736665722072657761726420746f6b656e206661696c6564",
																		"id": 1988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "46802:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_93667b8e945a805956ebe9ea399ecb8c4162704042e6f100fb7621efea8e2b35",
																			"typeString": "literal_string \"transfer reward token failed\""
																		},
																		"value": "transfer reward token failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_93667b8e945a805956ebe9ea399ecb8c4162704042e6f100fb7621efea8e2b35",
																			"typeString": "literal_string \"transfer reward token failed\""
																		}
																	],
																	"id": 1986,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "46785:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46785:48:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1990,
															"nodeType": "ExpressionStatement",
															"src": "46785:48:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1954,
										"nodeType": "StructuredDocumentation",
										"src": "46401:68:0",
										"text": " @dev Allow admin to withdraw only reward tokens"
									},
									"functionSelector": "d12e4ceb",
									"id": 2003,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1961,
											"modifierName": {
												"id": 1960,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 198,
												"src": "46567:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "46567:9:0"
										}
									],
									"name": "adminWithdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "rewardTokenIndex",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "46498:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46498:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "46524:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46497:42:0"
									},
									"returnParameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46582:0:0"
									},
									"scope": 3482,
									"src": "46475:454:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										15
									],
									"body": {
										"id": 2129,
										"nodeType": "Block",
										"src": "47483:1046:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "47502:24:0",
															"subExpression": {
																"baseExpression": {
																	"id": 2020,
																	"name": "poolExists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1796,
																	"src": "47503:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2022,
																"indexExpression": {
																	"id": 2021,
																	"name": "_stakeToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2006,
																	"src": "47514:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "47503:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6164643a206475706c69636174656420706f6f6c",
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "47528:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_afec7c11c0dafba4c83baee4a10fbaa3a43a46dce9b3e2c79ab91a6131e0e8e2",
																"typeString": "literal_string \"add: duplicated pool\""
															},
															"value": "add: duplicated pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_afec7c11c0dafba4c83baee4a10fbaa3a43a46dce9b3e2c79ab91a6131e0e8e2",
																"typeString": "literal_string \"add: duplicated pool\""
															}
														],
														"id": 2019,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "47494:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47494:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2026,
												"nodeType": "ExpressionStatement",
												"src": "47494:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2028,
																"name": "_stakeToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2006,
																"src": "47570:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "47593:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "47585:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2029,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "47585:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47585:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "47570:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6164643a20696e76616c6964207374616b6520746f6b656e",
															"id": 2034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "47597:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0cf1347f111c1e2e524e09dc610066c7514c5455b7c1a7117c8c57b811f17690",
																"typeString": "literal_string \"add: invalid stake token\""
															},
															"value": "add: invalid stake token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0cf1347f111c1e2e524e09dc610066c7514c5455b7c1a7117c8c57b811f17690",
																"typeString": "literal_string \"add: invalid stake token\""
															}
														],
														"id": 2027,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "47562:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47562:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2036,
												"nodeType": "ExpressionStatement",
												"src": "47562:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2038,
																	"name": "rewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "47657:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "47657:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2040,
																	"name": "_rewardPerBlocks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2013,
																	"src": "47680:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 2041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "47680:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "47657:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6164643a20696e76616c6964206c656e677468",
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "47718:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_462aec2277423072c98fc656350ffd9dcbb353e1fa9c1cfa13a2fa86f5fec88c",
																"typeString": "literal_string \"add: invalid length\""
															},
															"value": "add: invalid length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_462aec2277423072c98fc656350ffd9dcbb353e1fa9c1cfa13a2fa86f5fec88c",
																"typeString": "literal_string \"add: invalid length\""
															}
														],
														"id": 2037,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "47635:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47635:115:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2045,
												"nodeType": "ExpressionStatement",
												"src": "47635:115:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2047,
																	"name": "_startBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "47785:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 2048,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "47799:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "47799:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "47785:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 2053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2051,
																	"name": "_endBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2010,
																	"src": "47815:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2052,
																	"name": "_startBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "47827:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "47815:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "47785:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6164643a20696e76616c696420626c6f636b73",
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "47853:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc3a2899eec1259623d92efeb6fc5017bc79c7225fde1627f50422d59e8987b9",
																"typeString": "literal_string \"add: invalid blocks\""
															},
															"value": "add: invalid blocks"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc3a2899eec1259623d92efeb6fc5017bc79c7225fde1627f50422d59e8987b9",
																"typeString": "literal_string \"add: invalid blocks\""
															}
														],
														"id": 2046,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "47763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47763:122:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2057,
												"nodeType": "ExpressionStatement",
												"src": "47763:122:0"
											},
											{
												"expression": {
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2058,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1808,
																"src": "47898:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1792_storage_$",
																	"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
																}
															},
															"id": 2060,
															"indexExpression": {
																"id": 2059,
																"name": "poolLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1804,
																"src": "47907:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "47898:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage",
																"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
															}
														},
														"id": 2061,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1781,
														"src": "47898:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2062,
														"name": "_stakeToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2006,
														"src": "47932:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47898:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2064,
												"nodeType": "ExpressionStatement",
												"src": "47898:45:0"
											},
											{
												"expression": {
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2065,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1808,
																"src": "47954:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1792_storage_$",
																	"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
																}
															},
															"id": 2067,
															"indexExpression": {
																"id": 2066,
																"name": "poolLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1804,
																"src": "47963:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "47954:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage",
																"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
															}
														},
														"id": 2068,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1783,
														"src": "47954:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2069,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2008,
														"src": "47988:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "47954:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2071,
												"nodeType": "ExpressionStatement",
												"src": "47954:45:0"
											},
											{
												"expression": {
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2072,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1808,
																"src": "48010:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1792_storage_$",
																	"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
																}
															},
															"id": 2074,
															"indexExpression": {
																"id": 2073,
																"name": "poolLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1804,
																"src": "48019:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "48010:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage",
																"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
															}
														},
														"id": 2075,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "endBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1785,
														"src": "48010:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2076,
														"name": "_endBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2010,
														"src": "48042:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "48010:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2078,
												"nodeType": "ExpressionStatement",
												"src": "48010:41:0"
											},
											{
												"expression": {
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2079,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1808,
																"src": "48062:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1792_storage_$",
																	"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
																}
															},
															"id": 2081,
															"indexExpression": {
																"id": 2080,
																"name": "poolLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1804,
																"src": "48071:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "48062:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage",
																"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
															}
														},
														"id": 2082,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1787,
														"src": "48062:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2083,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2008,
														"src": "48101:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "48062:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2085,
												"nodeType": "ExpressionStatement",
												"src": "48062:50:0"
											},
											{
												"body": {
													"id": 2111,
													"nodeType": "Block",
													"src": "48179:192:0",
													"statements": [
														{
															"expression": {
																"id": 2109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2097,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1808,
																				"src": "48194:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1792_storage_$",
																					"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
																				}
																			},
																			"id": 2099,
																			"indexExpression": {
																				"id": 2098,
																				"name": "poolLength",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1804,
																				"src": "48203:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "48194:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1792_storage",
																				"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
																			}
																		},
																		"id": 2100,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "poolRewardData",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1791,
																		"src": "48194:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1777_storage_$",
																			"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																		}
																	},
																	"id": 2102,
																	"indexExpression": {
																		"id": 2101,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2087,
																		"src": "48230:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "48194:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolRewardData_$1777_storage",
																		"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 2104,
																				"name": "_rewardPerBlocks",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2013,
																				"src": "48285:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 2106,
																			"indexExpression": {
																				"id": 2105,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2087,
																				"src": "48302:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "48285:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "30",
																			"id": 2107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48342:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2103,
																		"name": "PoolRewardData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1777,
																		"src": "48235:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_PoolRewardData_$1777_storage_ptr_$",
																			"typeString": "type(struct KyberFairLaunch.PoolRewardData storage pointer)"
																		}
																	},
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [
																		"rewardPerBlock",
																		"accRewardPerShare"
																	],
																	"nodeType": "FunctionCall",
																	"src": "48235:124:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolRewardData_$1777_memory_ptr",
																		"typeString": "struct KyberFairLaunch.PoolRewardData memory"
																	}
																},
																"src": "48194:165:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolRewardData_$1777_storage",
																	"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																}
															},
															"id": 2110,
															"nodeType": "ExpressionStatement",
															"src": "48194:165:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2090,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2087,
														"src": "48145:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2091,
															"name": "_rewardPerBlocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "48149:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 2092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "48149:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "48145:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2112,
												"initializationExpression": {
													"assignments": [
														2087
													],
													"declarations": [
														{
															"constant": false,
															"id": 2087,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2112,
															"src": "48130:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2086,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "48130:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2089,
													"initialValue": {
														"hexValue": "30",
														"id": 2088,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "48142:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "48130:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "48174:3:0",
														"subExpression": {
															"id": 2094,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "48174:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2096,
													"nodeType": "ExpressionStatement",
													"src": "48174:3:0"
												},
												"nodeType": "ForStatement",
												"src": "48125:246:0"
											},
											{
												"expression": {
													"id": 2114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "48383:12:0",
													"subExpression": {
														"id": 2113,
														"name": "poolLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "48383:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2115,
												"nodeType": "ExpressionStatement",
												"src": "48383:12:0"
											},
											{
												"expression": {
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2116,
															"name": "poolExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "48408:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2118,
														"indexExpression": {
															"id": 2117,
															"name": "_stakeToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2006,
															"src": "48419:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "48408:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "48434:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "48408:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2121,
												"nodeType": "ExpressionStatement",
												"src": "48408:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2123,
															"name": "_stakeToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2006,
															"src": "48467:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2124,
															"name": "_startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "48480:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 2125,
															"name": "_endBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2010,
															"src": "48493:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 2126,
															"name": "_rewardPerBlocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "48504:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 2122,
														"name": "AddNewPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1825,
														"src": "48456:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint32_$_t_uint32_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint32,uint32,uint256[] memory)"
														}
													},
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48456:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2128,
												"nodeType": "EmitStatement",
												"src": "48451:70:0"
											}
										]
									},
									"documentation": {
										"id": 2004,
										"nodeType": "StructuredDocumentation",
										"src": "46937:356:0",
										"text": " @dev Add a new lp to the pool. Can only be called by the admin.\n @param _stakeToken: token to be staked to the pool\n @param _startBlock: block where the reward starts\n @param _endBlock: block where the reward ends\n @param _rewardPerBlocks: amount of reward token per block for the pool for each reward token"
									},
									"functionSelector": "2fb40ce1",
									"id": 2130,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2017,
											"modifierName": {
												"id": 2016,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 198,
												"src": "47473:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "47473:9:0"
										}
									],
									"name": "addPool",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2015,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "47464:8:0"
									},
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "_stakeToken",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "47326:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "_startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "47356:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2007,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "47356:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "_endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "47385:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2009,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "47385:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "_rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "47412:35:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2011,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "47412:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2012,
													"nodeType": "ArrayTypeName",
													"src": "47412:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47315:139:0"
									},
									"returnParameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47483:0:0"
									},
									"scope": 3482,
									"src": "47299:1230:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										28
									],
									"body": {
										"id": 2241,
										"nodeType": "Block",
										"src": "49156:960:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2147,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "49185:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2146,
														"name": "updatePoolRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3181,
														"src": "49167:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49167:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2149,
												"nodeType": "ExpressionStatement",
												"src": "49167:23:0"
											},
											{
												"assignments": [
													2151
												],
												"declarations": [
													{
														"constant": false,
														"id": 2151,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2241,
														"src": "49203:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo"
														},
														"typeName": {
															"id": 2150,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1792,
															"src": "49203:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2155,
												"initialValue": {
													"baseExpression": {
														"id": 2152,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1808,
														"src": "49227:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1792_storage_$",
															"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
														}
													},
													"id": 2154,
													"indexExpression": {
														"id": 2153,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2133,
														"src": "49236:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "49227:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1792_storage",
														"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49203:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2157,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2151,
																		"src": "49333:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																			"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																		}
																	},
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "startBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1783,
																	"src": "49333:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 2159,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "49351:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "49351:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "49333:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2162,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2151,
																		"src": "49367:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																			"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																		}
																	},
																	"id": 2163,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "endBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1785,
																	"src": "49367:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 2164,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "49383:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "49383:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "49367:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "49333:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "72656e65773a20696e76616c696420706f6f6c20737461746520746f2072656e6577",
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49410:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b31dc5707a57b87f831426ba8c552bc59246657a2e57bf1bc07a78701db6706b",
																"typeString": "literal_string \"renew: invalid pool state to renew\""
															},
															"value": "renew: invalid pool state to renew"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b31dc5707a57b87f831426ba8c552bc59246657a2e57bf1bc07a78701db6706b",
																"typeString": "literal_string \"renew: invalid pool state to renew\""
															}
														],
														"id": 2156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "49311:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49311:146:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2170,
												"nodeType": "ExpressionStatement",
												"src": "49311:146:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2172,
																	"name": "rewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "49528:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "49528:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2174,
																	"name": "_rewardPerBlocks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2140,
																	"src": "49551:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 2175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "49551:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "49528:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "72656e65773a20696e76616c6964206c656e677468",
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49589:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77180fafa0374a12058c9de85e5d1dcedc0242f76b18f525037a0f5138de63c2",
																"typeString": "literal_string \"renew: invalid length\""
															},
															"value": "renew: invalid length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77180fafa0374a12058c9de85e5d1dcedc0242f76b18f525037a0f5138de63c2",
																"typeString": "literal_string \"renew: invalid length\""
															}
														],
														"id": 2171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "49506:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49506:117:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2179,
												"nodeType": "ExpressionStatement",
												"src": "49506:117:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2181,
																	"name": "_startBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2135,
																	"src": "49656:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 2182,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "49670:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "49670:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "49656:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 2187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2185,
																	"name": "_endBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2137,
																	"src": "49686:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2186,
																	"name": "_startBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2135,
																	"src": "49698:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "49686:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "49656:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "72656e65773a20696e76616c696420626c6f636b73",
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14a26bf1715a2883885317c99f65178522cdf3543484696b4d8003a4076f0c02",
																"typeString": "literal_string \"renew: invalid blocks\""
															},
															"value": "renew: invalid blocks"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14a26bf1715a2883885317c99f65178522cdf3543484696b4d8003a4076f0c02",
																"typeString": "literal_string \"renew: invalid blocks\""
															}
														],
														"id": 2180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "49634:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49634:124:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2191,
												"nodeType": "ExpressionStatement",
												"src": "49634:124:0"
											},
											{
												"expression": {
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2192,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2151,
															"src": "49771:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 2194,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1783,
														"src": "49771:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2195,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2135,
														"src": "49789:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "49771:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2197,
												"nodeType": "ExpressionStatement",
												"src": "49771:29:0"
											},
											{
												"expression": {
													"id": 2202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2198,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2151,
															"src": "49811:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 2200,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "endBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1785,
														"src": "49811:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2201,
														"name": "_endBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "49827:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "49811:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2203,
												"nodeType": "ExpressionStatement",
												"src": "49811:25:0"
											},
											{
												"expression": {
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2204,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2151,
															"src": "49847:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 2206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1787,
														"src": "49847:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2207,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2135,
														"src": "49870:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "49847:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2209,
												"nodeType": "ExpressionStatement",
												"src": "49847:34:0"
											},
											{
												"body": {
													"id": 2232,
													"nodeType": "Block",
													"src": "49948:86:0",
													"statements": [
														{
															"expression": {
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 2221,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2151,
																				"src": "49963:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																					"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																				}
																			},
																			"id": 2224,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "poolRewardData",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1791,
																			"src": "49963:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1777_storage_$",
																				"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																			}
																		},
																		"id": 2225,
																		"indexExpression": {
																			"id": 2223,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2211,
																			"src": "49983:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "49963:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolRewardData_$1777_storage",
																			"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																		}
																	},
																	"id": 2226,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardPerBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1774,
																	"src": "49963:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2227,
																		"name": "_rewardPerBlocks",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2140,
																		"src": "50003:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 2229,
																	"indexExpression": {
																		"id": 2228,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2211,
																		"src": "50020:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "50003:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "49963:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2231,
															"nodeType": "ExpressionStatement",
															"src": "49963:59:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2214,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "49914:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2215,
															"name": "_rewardPerBlocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2140,
															"src": "49918:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 2216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "49918:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "49914:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2233,
												"initializationExpression": {
													"assignments": [
														2211
													],
													"declarations": [
														{
															"constant": false,
															"id": 2211,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2233,
															"src": "49899:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2210,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "49899:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2213,
													"initialValue": {
														"hexValue": "30",
														"id": 2212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "49911:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "49899:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "49943:3:0",
														"subExpression": {
															"id": 2218,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "49943:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2220,
													"nodeType": "ExpressionStatement",
													"src": "49943:3:0"
												},
												"nodeType": "ForStatement",
												"src": "49894:140:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2235,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "50061:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2236,
															"name": "_startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2135,
															"src": "50067:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 2237,
															"name": "_endBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2137,
															"src": "50080:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 2238,
															"name": "_rewardPerBlocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2140,
															"src": "50091:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 2234,
														"name": "RenewPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1836,
														"src": "50051:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$_t_uint32_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint32,uint32,uint256[] memory)"
														}
													},
													"id": 2239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50051:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2240,
												"nodeType": "EmitStatement",
												"src": "50046:62:0"
											}
										]
									},
									"documentation": {
										"id": 2131,
										"nodeType": "StructuredDocumentation",
										"src": "48537:434:0",
										"text": " @dev Renew a pool to start another liquidity mining program\n @param _pid: id of the pool to renew, must be pool that has not started or already ended\n @param _startBlock: block where the reward starts\n @param _endBlock: block where the reward ends\n @param _rewardPerBlocks: amount of reward token per block for the pool\n   0 if we want to stop the pool from accumulating rewards"
									},
									"functionSelector": "b43c6270",
									"id": 2242,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2144,
											"modifierName": {
												"id": 2143,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 198,
												"src": "49146:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "49146:9:0"
										}
									],
									"name": "renewPool",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2142,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "49137:8:0"
									},
									"parameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "49006:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49006:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "_startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "49029:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2134,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "49029:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "_endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "49058:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2136,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "49058:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "_rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "49085:35:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2138,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "49085:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2139,
													"nodeType": "ArrayTypeName",
													"src": "49085:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48995:132:0"
									},
									"returnParameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49156:0:0"
									},
									"scope": 3482,
									"src": "48977:1139:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										39
									],
									"body": {
										"id": 2333,
										"nodeType": "Block",
										"src": "50606:751:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2257,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2245,
															"src": "50635:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2256,
														"name": "updatePoolRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3181,
														"src": "50617:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50617:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2259,
												"nodeType": "ExpressionStatement",
												"src": "50617:23:0"
											},
											{
												"assignments": [
													2261
												],
												"declarations": [
													{
														"constant": false,
														"id": 2261,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2333,
														"src": "50653:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo"
														},
														"typeName": {
															"id": 2260,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1792,
															"src": "50653:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2265,
												"initialValue": {
													"baseExpression": {
														"id": 2262,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1808,
														"src": "50677:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1792_storage_$",
															"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
														}
													},
													"id": 2264,
													"indexExpression": {
														"id": 2263,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2245,
														"src": "50686:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "50677:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1792_storage",
														"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50653:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2267,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2261,
																	"src": "50769:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																	}
																},
																"id": 2268,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "endBlock",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1785,
																"src": "50769:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 2269,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "50785:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "50785:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "50769:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7570646174653a20706f6f6c20616c726561647920656e646564",
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50799:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b833683b89b404991bdaae7cd6d4239375c0bb88e3b5fa21acbecc40c4f69f3d",
																"typeString": "literal_string \"update: pool already ended\""
															},
															"value": "update: pool already ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b833683b89b404991bdaae7cd6d4239375c0bb88e3b5fa21acbecc40c4f69f3d",
																"typeString": "literal_string \"update: pool already ended\""
															}
														],
														"id": 2266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "50761:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50761:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2274,
												"nodeType": "ExpressionStatement",
												"src": "50761:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2276,
																	"name": "rewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "50861:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "50861:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2278,
																	"name": "_rewardPerBlocks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2250,
																	"src": "50884:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "50884:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "50861:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7570646174653a20696e76616c6964206c656e677468",
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50922:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_206226b2ca3d5a0c768271d8fc891ab16534a45d602f4dc09f7557c6e414751a",
																"typeString": "literal_string \"update: invalid length\""
															},
															"value": "update: invalid length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_206226b2ca3d5a0c768271d8fc891ab16534a45d602f4dc09f7557c6e414751a",
																"typeString": "literal_string \"update: invalid length\""
															}
														],
														"id": 2275,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "50839:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50839:118:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2283,
												"nodeType": "ExpressionStatement",
												"src": "50839:118:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2285,
																	"name": "_endBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2247,
																	"src": "50990:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 2286,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "51002:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "51002:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "50990:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2289,
																	"name": "_endBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2247,
																	"src": "51018:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 2290,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2261,
																		"src": "51030:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																			"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																		}
																	},
																	"id": 2291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "startBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1783,
																	"src": "51030:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "51018:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "50990:55:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7570646174653a20696e76616c696420656e6420626c6f636b",
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51060:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_900c8e0e4572d8a0c190c3451f1d947ef66467077e2ac335d0c50ed07c0fd304",
																"typeString": "literal_string \"update: invalid end block\""
															},
															"value": "update: invalid end block"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_900c8e0e4572d8a0c190c3451f1d947ef66467077e2ac335d0c50ed07c0fd304",
																"typeString": "literal_string \"update: invalid end block\""
															}
														],
														"id": 2284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "50968:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50968:130:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2296,
												"nodeType": "ExpressionStatement",
												"src": "50968:130:0"
											},
											{
												"expression": {
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2297,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2261,
															"src": "51111:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 2299,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "endBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1785,
														"src": "51111:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2300,
														"name": "_endBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2247,
														"src": "51127:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "51111:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2302,
												"nodeType": "ExpressionStatement",
												"src": "51111:25:0"
											},
											{
												"body": {
													"id": 2325,
													"nodeType": "Block",
													"src": "51201:86:0",
													"statements": [
														{
															"expression": {
																"id": 2323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 2314,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2261,
																				"src": "51216:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																					"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																				}
																			},
																			"id": 2317,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "poolRewardData",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1791,
																			"src": "51216:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1777_storage_$",
																				"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																			}
																		},
																		"id": 2318,
																		"indexExpression": {
																			"id": 2316,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2304,
																			"src": "51236:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "51216:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolRewardData_$1777_storage",
																			"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																		}
																	},
																	"id": 2319,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardPerBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1774,
																	"src": "51216:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2320,
																		"name": "_rewardPerBlocks",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2250,
																		"src": "51256:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 2322,
																	"indexExpression": {
																		"id": 2321,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2304,
																		"src": "51273:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "51256:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "51216:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2324,
															"nodeType": "ExpressionStatement",
															"src": "51216:59:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2307,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2304,
														"src": "51167:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2308,
															"name": "_rewardPerBlocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "51171:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 2309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "51171:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "51167:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2326,
												"initializationExpression": {
													"assignments": [
														2304
													],
													"declarations": [
														{
															"constant": false,
															"id": 2304,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2326,
															"src": "51152:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2303,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "51152:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2306,
													"initialValue": {
														"hexValue": "30",
														"id": 2305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "51164:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "51152:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "51196:3:0",
														"subExpression": {
															"id": 2311,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2304,
															"src": "51196:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2313,
													"nodeType": "ExpressionStatement",
													"src": "51196:3:0"
												},
												"nodeType": "ForStatement",
												"src": "51147:140:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2328,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2245,
															"src": "51315:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2329,
															"name": "_endBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "51321:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 2330,
															"name": "_rewardPerBlocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "51332:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 2327,
														"name": "UpdatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1845,
														"src": "51304:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint32,uint256[] memory)"
														}
													},
													"id": 2331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51304:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2332,
												"nodeType": "EmitStatement",
												"src": "51299:50:0"
											}
										]
									},
									"documentation": {
										"id": 2243,
										"nodeType": "StructuredDocumentation",
										"src": "50124:325:0",
										"text": " @dev Update a pool, allow to change end block, reward per block\n @param _pid: pool id to be renew\n @param _endBlock: block where the reward ends\n @param _rewardPerBlocks: amount of reward token per block for the pool,\n   0 if we want to stop the pool from accumulating rewards"
									},
									"functionSelector": "affb9fc8",
									"id": 2334,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2254,
											"modifierName": {
												"id": 2253,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 198,
												"src": "50596:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "50596:9:0"
										}
									],
									"name": "updatePool",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2252,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "50587:8:0"
									},
									"parameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "50485:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50485:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "_endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "50508:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2246,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "50508:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "_rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "50535:35:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2248,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "50535:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2249,
													"nodeType": "ArrayTypeName",
													"src": "50535:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50474:103:0"
									},
									"returnParameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50606:0:0"
									},
									"scope": 3482,
									"src": "50455:902:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										49
									],
									"body": {
										"id": 2416,
										"nodeType": "Block",
										"src": "51732:687:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2348,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2337,
															"src": "51809:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2347,
														"name": "updatePoolRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3181,
														"src": "51791:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51791:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2350,
												"nodeType": "ExpressionStatement",
												"src": "51791:23:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2352,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "51843:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "51843:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2354,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2337,
															"src": "51855:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2355,
															"name": "_shouldHarvest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "51861:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2351,
														"name": "_updateUserReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3421,
														"src": "51825:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 2356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51825:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2357,
												"nodeType": "ExpressionStatement",
												"src": "51825:51:0"
											},
											{
												"assignments": [
													2359
												],
												"declarations": [
													{
														"constant": false,
														"id": 2359,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2416,
														"src": "51889:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo"
														},
														"typeName": {
															"id": 2358,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1792,
															"src": "51889:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2363,
												"initialValue": {
													"baseExpression": {
														"id": 2360,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1808,
														"src": "51913:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1792_storage_$",
															"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
														}
													},
													"id": 2362,
													"indexExpression": {
														"id": 2361,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2337,
														"src": "51922:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "51913:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1792_storage",
														"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51889:38:0"
											},
											{
												"assignments": [
													2365
												],
												"declarations": [
													{
														"constant": false,
														"id": 2365,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 2416,
														"src": "51938:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
															"typeString": "struct KyberFairLaunch.UserInfo"
														},
														"typeName": {
															"id": 2364,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1772,
															"src": "51938:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
																"typeString": "struct KyberFairLaunch.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2372,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2366,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "51962:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
															}
														},
														"id": 2368,
														"indexExpression": {
															"id": 2367,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2337,
															"src": "51971:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "51962:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$",
															"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
														}
													},
													"id": 2371,
													"indexExpression": {
														"expression": {
															"id": 2369,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "51977:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "51977:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "51962:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1772_storage",
														"typeString": "struct KyberFairLaunch.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51938:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2378,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "52090:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "52090:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 2382,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "52123:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_KyberFairLaunch_$3482",
																		"typeString": "contract KyberFairLaunch"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_KyberFairLaunch_$3482",
																		"typeString": "contract KyberFairLaunch"
																	}
																],
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "52115:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2380,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "52115:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "52115:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2384,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "52143:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2374,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2359,
																		"src": "52042:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																			"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																		}
																	},
																	"id": 2375,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1781,
																	"src": "52042:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2373,
																"name": "IERC20Ext",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "52032:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Ext_$982_$",
																	"typeString": "type(contract IERC20Ext)"
																}
															},
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "52032:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Ext_$982",
																"typeString": "contract IERC20Ext"
															}
														},
														"id": 2377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1547,
														"src": "52032:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$971_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$971_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52032:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2386,
												"nodeType": "ExpressionStatement",
												"src": "52032:129:0"
											},
											{
												"expression": {
													"id": 2395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2387,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2365,
															"src": "52250:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
																"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
															}
														},
														"id": 2389,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1767,
														"src": "52250:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2393,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2339,
																"src": "52280:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2390,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2365,
																	"src": "52264:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
																		"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
																	}
																},
																"id": 2391,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1767,
																"src": "52264:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1319,
															"src": "52264:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "52264:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52250:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2396,
												"nodeType": "ExpressionStatement",
												"src": "52250:38:0"
											},
											{
												"expression": {
													"id": 2405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2397,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "52299:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 2399,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalStake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1779,
														"src": "52299:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2403,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2339,
																"src": "52337:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2400,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2359,
																	"src": "52317:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																	}
																},
																"id": 2401,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalStake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1779,
																"src": "52317:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1319,
															"src": "52317:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "52317:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52299:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2406,
												"nodeType": "ExpressionStatement",
												"src": "52299:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2408,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "52371:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "52371:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2410,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2337,
															"src": "52383:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2411,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "52389:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "52389:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2413,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "52403:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2407,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1855,
														"src": "52363:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 2414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52363:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2415,
												"nodeType": "EmitStatement",
												"src": "52358:53:0"
											}
										]
									},
									"documentation": {
										"id": 2335,
										"nodeType": "StructuredDocumentation",
										"src": "51365:227:0",
										"text": " @dev Deposit tokens to accumulate rewards\n @param _pid: id of the pool\n @param _amount: amount of stakeToken to be deposited\n @param _shouldHarvest: whether to harvest the reward or not"
									},
									"functionSelector": "43a0d066",
									"id": 2417,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2345,
											"modifierName": {
												"id": 2344,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1739,
												"src": "51719:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "51719:12:0"
										}
									],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2343,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "51710:8:0"
									},
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "51625:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "51648:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "_shouldHarvest",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "51674:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "51674:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51614:86:0"
									},
									"returnParameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51732:0:0"
									},
									"scope": 3482,
									"src": "51598:821:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										57
									],
									"body": {
										"id": 2433,
										"nodeType": "Block",
										"src": "52726:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2429,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2420,
															"src": "52747:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2430,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2422,
															"src": "52753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2428,
														"name": "_withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3263,
														"src": "52737:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52737:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2432,
												"nodeType": "ExpressionStatement",
												"src": "52737:24:0"
											}
										]
									},
									"documentation": {
										"id": 2418,
										"nodeType": "StructuredDocumentation",
										"src": "52427:181:0",
										"text": " @dev Withdraw token (of the sender) from pool, also harvest rewards\n @param _pid: id of the pool\n @param _amount: amount of stakeToken to withdraw"
									},
									"functionSelector": "441a3e70",
									"id": 2434,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2426,
											"modifierName": {
												"id": 2425,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1739,
												"src": "52708:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "52708:12:0"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2424,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "52690:8:0"
									},
									"parameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "52632:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "52646:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52646:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52631:31:0"
									},
									"returnParameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52726:0:0"
									},
									"scope": 3482,
									"src": "52614:155:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										63
									],
									"body": {
										"id": 2454,
										"nodeType": "Block",
										"src": "52977:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2444,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2437,
															"src": "52998:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2445,
																		"name": "userInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1814,
																		"src": "53004:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$_$",
																			"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
																		}
																	},
																	"id": 2447,
																	"indexExpression": {
																		"id": 2446,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2437,
																		"src": "53013:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "53004:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$",
																		"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
																	}
																},
																"id": 2450,
																"indexExpression": {
																	"expression": {
																		"id": 2448,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "53019:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "53019:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "53004:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1772_storage",
																	"typeString": "struct KyberFairLaunch.UserInfo storage ref"
																}
															},
															"id": 2451,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1767,
															"src": "53004:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2443,
														"name": "_withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3263,
														"src": "52988:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52988:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2453,
												"nodeType": "ExpressionStatement",
												"src": "52988:50:0"
											}
										]
									},
									"documentation": {
										"id": 2435,
										"nodeType": "StructuredDocumentation",
										"src": "52777:128:0",
										"text": " @dev Withdraw all tokens (of the sender) from pool, also harvest reward\n @param _pid: id of the pool"
									},
									"functionSelector": "958e2d31",
									"id": 2455,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2441,
											"modifierName": {
												"id": 2440,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1739,
												"src": "52964:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "52964:12:0"
										}
									],
									"name": "withdrawAll",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2439,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "52955:8:0"
									},
									"parameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "52932:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52931:14:0"
									},
									"returnParameters": {
										"id": 2442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52977:0:0"
									},
									"scope": 3482,
									"src": "52911:135:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										69
									],
									"body": {
										"id": 2556,
										"nodeType": "Block",
										"src": "53377:670:0",
										"statements": [
											{
												"assignments": [
													2465
												],
												"declarations": [
													{
														"constant": false,
														"id": 2465,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2556,
														"src": "53388:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo"
														},
														"typeName": {
															"id": 2464,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1792,
															"src": "53388:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2469,
												"initialValue": {
													"baseExpression": {
														"id": 2466,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1808,
														"src": "53412:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1792_storage_$",
															"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
														}
													},
													"id": 2468,
													"indexExpression": {
														"id": 2467,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2458,
														"src": "53421:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "53412:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1792_storage",
														"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53388:38:0"
											},
											{
												"assignments": [
													2471
												],
												"declarations": [
													{
														"constant": false,
														"id": 2471,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 2556,
														"src": "53437:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
															"typeString": "struct KyberFairLaunch.UserInfo"
														},
														"typeName": {
															"id": 2470,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1772,
															"src": "53437:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
																"typeString": "struct KyberFairLaunch.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2478,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2472,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "53461:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
															}
														},
														"id": 2474,
														"indexExpression": {
															"id": 2473,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2458,
															"src": "53470:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "53461:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$",
															"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
														}
													},
													"id": 2477,
													"indexExpression": {
														"expression": {
															"id": 2475,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "53476:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "53476:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "53461:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1772_storage",
														"typeString": "struct KyberFairLaunch.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53437:50:0"
											},
											{
												"assignments": [
													2480
												],
												"declarations": [
													{
														"constant": false,
														"id": 2480,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 2556,
														"src": "53498:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2479,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "53498:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2483,
												"initialValue": {
													"expression": {
														"id": 2481,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2471,
														"src": "53515:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
															"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
														}
													},
													"id": 2482,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1767,
													"src": "53515:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53498:28:0"
											},
											{
												"expression": {
													"id": 2488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2484,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2471,
															"src": "53539:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
																"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
															}
														},
														"id": 2486,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1767,
														"src": "53539:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2487,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "53553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "53539:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2489,
												"nodeType": "ExpressionStatement",
												"src": "53539:15:0"
											},
											{
												"body": {
													"id": 2520,
													"nodeType": "Block",
													"src": "53615:178:0",
													"statements": [
														{
															"assignments": [
																2502
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2502,
																	"mutability": "mutable",
																	"name": "rewardData",
																	"nodeType": "VariableDeclaration",
																	"scope": 2520,
																	"src": "53630:33:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserRewardData_$1765_storage_ptr",
																		"typeString": "struct KyberFairLaunch.UserRewardData"
																	},
																	"typeName": {
																		"id": 2501,
																		"name": "UserRewardData",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 1765,
																		"src": "53630:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRewardData_$1765_storage_ptr",
																			"typeString": "struct KyberFairLaunch.UserRewardData"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2507,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 2503,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2471,
																		"src": "53666:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
																			"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
																		}
																	},
																	"id": 2504,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "userRewardData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1771,
																	"src": "53666:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1765_storage_$",
																		"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData storage ref)"
																	}
																},
																"id": 2506,
																"indexExpression": {
																	"id": 2505,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2491,
																	"src": "53686:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "53666:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserRewardData_$1765_storage",
																	"typeString": "struct KyberFairLaunch.UserRewardData storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "53630:58:0"
														},
														{
															"expression": {
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2508,
																		"name": "rewardData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2502,
																		"src": "53703:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRewardData_$1765_storage_ptr",
																			"typeString": "struct KyberFairLaunch.UserRewardData storage pointer"
																		}
																	},
																	"id": 2510,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardPerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1764,
																	"src": "53703:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53735:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "53703:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2513,
															"nodeType": "ExpressionStatement",
															"src": "53703:33:0"
														},
														{
															"expression": {
																"id": 2518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2514,
																		"name": "rewardData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2502,
																		"src": "53751:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRewardData_$1765_storage_ptr",
																			"typeString": "struct KyberFairLaunch.UserRewardData storage pointer"
																		}
																	},
																	"id": 2516,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "unclaimedReward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1762,
																	"src": "53751:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53780:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "53751:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2519,
															"nodeType": "ExpressionStatement",
															"src": "53751:30:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2494,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2491,
														"src": "53585:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2495,
															"name": "rewardTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "53589:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "53589:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "53585:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2521,
												"initializationExpression": {
													"assignments": [
														2491
													],
													"declarations": [
														{
															"constant": false,
															"id": 2491,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2521,
															"src": "53570:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2490,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "53570:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2493,
													"initialValue": {
														"hexValue": "30",
														"id": 2492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "53582:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "53570:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "53610:3:0",
														"subExpression": {
															"id": 2498,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2491,
															"src": "53610:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2500,
													"nodeType": "ExpressionStatement",
													"src": "53610:3:0"
												},
												"nodeType": "ForStatement",
												"src": "53565:228:0"
											},
											{
												"expression": {
													"id": 2530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2522,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2465,
															"src": "53805:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 2524,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalStake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1779,
														"src": "53805:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2528,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2480,
																"src": "53843:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2525,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2465,
																	"src": "53823:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																	}
																},
																"id": 2526,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalStake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1779,
																"src": "53823:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1341,
															"src": "53823:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "53823:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "53805:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2531,
												"nodeType": "ExpressionStatement",
												"src": "53805:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2532,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2480,
														"src": "53867:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "53876:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "53867:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2546,
												"nodeType": "IfStatement",
												"src": "53863:102:0",
												"trueBody": {
													"id": 2545,
													"nodeType": "Block",
													"src": "53879:86:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2540,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "53934:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "53934:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 2542,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2480,
																		"src": "53946:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 2536,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2465,
																					"src": "53904:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																						"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																					}
																				},
																				"id": 2537,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stakeToken",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1781,
																				"src": "53904:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2535,
																			"name": "IERC20Ext",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 982,
																			"src": "53894:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20Ext_$982_$",
																				"typeString": "type(contract IERC20Ext)"
																			}
																		},
																		"id": 2538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "53894:26:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Ext_$982",
																			"typeString": "contract IERC20Ext"
																		}
																	},
																	"id": 2539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1522,
																	"src": "53894:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$971_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$971_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "53894:59:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2544,
															"nodeType": "ExpressionStatement",
															"src": "53894:59:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2548,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "54000:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "54000:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2550,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2458,
															"src": "54012:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2551,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "54018:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "54018:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2553,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2480,
															"src": "54032:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2547,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1887,
														"src": "53982:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 2554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53982:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2555,
												"nodeType": "EmitStatement",
												"src": "53977:62:0"
											}
										]
									},
									"documentation": {
										"id": 2456,
										"nodeType": "StructuredDocumentation",
										"src": "53054:245:0",
										"text": " @notice EMERGENCY USAGE ONLY, USER'S REWARDS WILL BE RESET\n @dev Emergency withdrawal function to allow withdraw all deposited tokens (of the sender)\n   and reset all rewards\n @param _pid: id of the pool"
									},
									"functionSelector": "5312ea8e",
									"id": 2557,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2462,
											"modifierName": {
												"id": 2461,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1739,
												"src": "53364:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "53364:12:0"
										}
									],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2460,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "53355:8:0"
									},
									"parameters": {
										"id": 2459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "53332:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53331:14:0"
									},
									"returnParameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53377:0:0"
									},
									"scope": 3482,
									"src": "53305:742:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										82
									],
									"body": {
										"id": 2717,
										"nodeType": "Block",
										"src": "54287:1340:0",
										"statements": [
											{
												"assignments": [
													2569
												],
												"declarations": [
													{
														"constant": false,
														"id": 2569,
														"mutability": "mutable",
														"name": "rTokens",
														"nodeType": "VariableDeclaration",
														"scope": 2717,
														"src": "54298:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2567,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "54298:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2568,
															"nodeType": "ArrayTypeName",
															"src": "54298:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2571,
												"initialValue": {
													"id": 2570,
													"name": "rewardTokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1801,
													"src": "54325:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "54298:39:0"
											},
											{
												"assignments": [
													2576
												],
												"declarations": [
													{
														"constant": false,
														"id": 2576,
														"mutability": "mutable",
														"name": "totalRewards",
														"nodeType": "VariableDeclaration",
														"scope": 2717,
														"src": "54348:29:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2574,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "54348:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2575,
															"nodeType": "ArrayTypeName",
															"src": "54348:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2583,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2580,
																"name": "rTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2569,
																"src": "54394:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 2581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "54394:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "54380:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2577,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "54384:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2578,
															"nodeType": "ArrayTypeName",
															"src": "54384:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 2582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54380:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "54348:61:0"
											},
											{
												"assignments": [
													2585
												],
												"declarations": [
													{
														"constant": false,
														"id": 2585,
														"mutability": "mutable",
														"name": "account",
														"nodeType": "VariableDeclaration",
														"scope": 2717,
														"src": "54420:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2584,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "54420:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2588,
												"initialValue": {
													"expression": {
														"id": 2586,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "54438:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "54438:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "54420:28:0"
											},
											{
												"assignments": [
													2590
												],
												"declarations": [
													{
														"constant": false,
														"id": 2590,
														"mutability": "mutable",
														"name": "pid",
														"nodeType": "VariableDeclaration",
														"scope": 2717,
														"src": "54459:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2589,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "54459:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2591,
												"nodeType": "VariableDeclarationStatement",
												"src": "54459:11:0"
											},
											{
												"body": {
													"id": 2683,
													"nodeType": "Block",
													"src": "54526:886:0",
													"statements": [
														{
															"expression": {
																"id": 2607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2603,
																	"name": "pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "54541:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2604,
																		"name": "_pids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2561,
																		"src": "54547:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 2606,
																	"indexExpression": {
																		"id": 2605,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2593,
																		"src": "54553:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "54547:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "54541:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2608,
															"nodeType": "ExpressionStatement",
															"src": "54541:14:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2610,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2590,
																		"src": "54588:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2609,
																	"name": "updatePoolRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3181,
																	"src": "54570:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54570:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2612,
															"nodeType": "ExpressionStatement",
															"src": "54570:22:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2614,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2585,
																		"src": "54679:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2615,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2590,
																		"src": "54688:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 2616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "54693:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2613,
																	"name": "_updateUserReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3421,
																	"src": "54661:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,bool)"
																	}
																},
																"id": 2617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54661:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2618,
															"nodeType": "ExpressionStatement",
															"src": "54661:38:0"
														},
														{
															"body": {
																"id": 2681,
																"nodeType": "Block",
																"src": "54761:640:0",
																"statements": [
																	{
																		"assignments": [
																			2631
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2631,
																				"mutability": "mutable",
																				"name": "reward",
																				"nodeType": "VariableDeclaration",
																				"scope": 2681,
																				"src": "54780:14:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2630,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "54780:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2641,
																		"initialValue": {
																			"expression": {
																				"baseExpression": {
																					"expression": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 2632,
																								"name": "userInfo",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1814,
																								"src": "54797:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$_$",
																									"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
																								}
																							},
																							"id": 2634,
																							"indexExpression": {
																								"id": 2633,
																								"name": "pid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2590,
																								"src": "54806:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "54797:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$",
																								"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
																							}
																						},
																						"id": 2636,
																						"indexExpression": {
																							"id": 2635,
																							"name": "account",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2585,
																							"src": "54811:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "54797:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1772_storage",
																							"typeString": "struct KyberFairLaunch.UserInfo storage ref"
																						}
																					},
																					"id": 2637,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "userRewardData",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1771,
																					"src": "54797:59:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1765_storage_$",
																						"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData storage ref)"
																					}
																				},
																				"id": 2639,
																				"indexExpression": {
																					"id": 2638,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2620,
																					"src": "54857:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "54797:62:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserRewardData_$1765_storage",
																					"typeString": "struct KyberFairLaunch.UserRewardData storage ref"
																				}
																			},
																			"id": 2640,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "unclaimedReward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1762,
																			"src": "54797:100:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "54780:117:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2642,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2631,
																				"src": "54920:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54929:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "54920:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2680,
																		"nodeType": "IfStatement",
																		"src": "54916:470:0",
																		"trueBody": {
																			"id": 2679,
																			"nodeType": "Block",
																			"src": "54932:454:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 2654,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 2645,
																								"name": "totalRewards",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2576,
																								"src": "54955:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 2647,
																							"indexExpression": {
																								"id": 2646,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2620,
																								"src": "54968:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "54955:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"id": 2652,
																									"name": "reward",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2631,
																									"src": "54993:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"baseExpression": {
																										"id": 2648,
																										"name": "totalRewards",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2576,
																										"src": "54973:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																											"typeString": "uint256[] memory"
																										}
																									},
																									"id": 2650,
																									"indexExpression": {
																										"id": 2649,
																										"name": "j",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2620,
																										"src": "54986:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "54973:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2651,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "add",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1319,
																								"src": "54973:19:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2653,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "54973:27:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "54955:45:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2655,
																					"nodeType": "ExpressionStatement",
																					"src": "54955:45:0"
																				},
																				{
																					"expression": {
																						"id": 2666,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"baseExpression": {
																									"expression": {
																										"baseExpression": {
																											"baseExpression": {
																												"id": 2656,
																												"name": "userInfo",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1814,
																												"src": "55023:8:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$_$",
																													"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
																												}
																											},
																											"id": 2659,
																											"indexExpression": {
																												"id": 2657,
																												"name": "pid",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2590,
																												"src": "55032:3:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "55023:13:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$",
																												"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
																											}
																										},
																										"id": 2660,
																										"indexExpression": {
																											"id": 2658,
																											"name": "account",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2585,
																											"src": "55037:7:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "55023:22:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_UserInfo_$1772_storage",
																											"typeString": "struct KyberFairLaunch.UserInfo storage ref"
																										}
																									},
																									"id": 2661,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "userRewardData",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1771,
																									"src": "55023:63:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1765_storage_$",
																										"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData storage ref)"
																									}
																								},
																								"id": 2663,
																								"indexExpression": {
																									"id": 2662,
																									"name": "j",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2620,
																									"src": "55087:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "55023:66:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserRewardData_$1765_storage",
																									"typeString": "struct KyberFairLaunch.UserRewardData storage ref"
																								}
																							},
																							"id": 2664,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "unclaimedReward",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1762,
																							"src": "55023:108:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "30",
																							"id": 2665,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "55134:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "55023:112:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2667,
																					"nodeType": "ExpressionStatement",
																					"src": "55023:112:0"
																				},
																				{
																					"eventCall": {
																						"arguments": [
																							{
																								"id": 2669,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2585,
																								"src": "55197:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2670,
																								"name": "pid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2590,
																								"src": "55231:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"baseExpression": {
																									"id": 2671,
																									"name": "rTokens",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2569,
																									"src": "55261:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																										"typeString": "address[] memory"
																									}
																								},
																								"id": 2673,
																								"indexExpression": {
																									"id": 2672,
																									"name": "j",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2620,
																									"src": "55269:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "55261:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2674,
																								"name": "reward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2631,
																								"src": "55298:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"expression": {
																									"id": 2675,
																									"name": "block",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967292,
																									"src": "55331:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_block",
																										"typeString": "block"
																									}
																								},
																								"id": 2676,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "number",
																								"nodeType": "MemberAccess",
																								"src": "55331:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2668,
																							"name": "Harvest",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1877,
																							"src": "55163:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,address,uint256,uint256)"
																							}
																						},
																						"id": 2677,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "55163:203:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2678,
																					"nodeType": "EmitStatement",
																					"src": "55158:208:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2623,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2620,
																	"src": "54736:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 2624,
																		"name": "rTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2569,
																		"src": "54740:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 2625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "54740:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "54736:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2682,
															"initializationExpression": {
																"assignments": [
																	2620
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2620,
																		"mutability": "mutable",
																		"name": "j",
																		"nodeType": "VariableDeclaration",
																		"scope": 2682,
																		"src": "54721:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2619,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "54721:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2622,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54733:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "54721:13:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 2628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "54756:3:0",
																	"subExpression": {
																		"id": 2627,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2620,
																		"src": "54756:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2629,
																"nodeType": "ExpressionStatement",
																"src": "54756:3:0"
															},
															"nodeType": "ForStatement",
															"src": "54716:685:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2596,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2593,
														"src": "54503:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2597,
															"name": "_pids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2561,
															"src": "54507:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 2598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "54507:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "54503:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2684,
												"initializationExpression": {
													"assignments": [
														2593
													],
													"declarations": [
														{
															"constant": false,
															"id": 2593,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2684,
															"src": "54488:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2592,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "54488:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2595,
													"initialValue": {
														"hexValue": "30",
														"id": 2594,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "54500:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "54488:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "54521:3:0",
														"subExpression": {
															"id": 2600,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2593,
															"src": "54521:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2602,
													"nodeType": "ExpressionStatement",
													"src": "54521:3:0"
												},
												"nodeType": "ForStatement",
												"src": "54483:929:0"
											},
											{
												"body": {
													"id": 2715,
													"nodeType": "Block",
													"src": "55474:146:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2696,
																		"name": "totalRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2576,
																		"src": "55493:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2698,
																	"indexExpression": {
																		"id": 2697,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2686,
																		"src": "55506:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "55493:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55511:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "55493:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2714,
															"nodeType": "IfStatement",
															"src": "55489:120:0",
															"trueBody": {
																"id": 2713,
																"nodeType": "Block",
																"src": "55514:95:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 2703,
																								"name": "rTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2569,
																								"src": "55555:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																									"typeString": "address[] memory"
																								}
																							},
																							"id": 2705,
																							"indexExpression": {
																								"id": 2704,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2686,
																								"src": "55563:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "55555:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2702,
																						"name": "IERC20Ext",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 982,
																						"src": "55545:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20Ext_$982_$",
																							"typeString": "type(contract IERC20Ext)"
																						}
																					},
																					"id": 2706,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "55545:21:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Ext_$982",
																						"typeString": "contract IERC20Ext"
																					}
																				},
																				{
																					"id": 2707,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2585,
																					"src": "55568:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"baseExpression": {
																						"id": 2708,
																						"name": "totalRewards",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2576,
																						"src": "55577:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 2710,
																					"indexExpression": {
																						"id": 2709,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2686,
																						"src": "55590:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "55577:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC20Ext_$982",
																						"typeString": "contract IERC20Ext"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2701,
																				"name": "_lockReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3481,
																				"src": "55533:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Ext_$982_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (contract IERC20Ext,address,uint256)"
																				}
																			},
																			"id": 2711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "55533:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2712,
																		"nodeType": "ExpressionStatement",
																		"src": "55533:60:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2689,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2686,
														"src": "55444:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2690,
															"name": "totalRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2576,
															"src": "55448:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "55448:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "55444:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2716,
												"initializationExpression": {
													"assignments": [
														2686
													],
													"declarations": [
														{
															"constant": false,
															"id": 2686,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2716,
															"src": "55429:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2685,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "55429:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2688,
													"initialValue": {
														"hexValue": "30",
														"id": 2687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55441:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "55429:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "55469:3:0",
														"subExpression": {
															"id": 2693,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2686,
															"src": "55469:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2695,
													"nodeType": "ExpressionStatement",
													"src": "55469:3:0"
												},
												"nodeType": "ForStatement",
												"src": "55424:196:0"
											}
										]
									},
									"documentation": {
										"id": 2558,
										"nodeType": "StructuredDocumentation",
										"src": "54055:152:0",
										"text": " @dev Harvest rewards from multiple pools for the sender\n   combine rewards from all pools and only transfer once to save gas"
									},
									"functionSelector": "52fd9f2f",
									"id": 2718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvestMultiplePools",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2563,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "54278:8:0"
									},
									"parameters": {
										"id": 2562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "_pids",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "54243:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2559,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "54243:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2560,
													"nodeType": "ArrayTypeName",
													"src": "54243:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54242:26:0"
									},
									"returnParameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54287:0:0"
									},
									"scope": 3482,
									"src": "54213:1414:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										150
									],
									"body": {
										"id": 2862,
										"nodeType": "Block",
										"src": "55974:1290:0",
										"statements": [
											{
												"assignments": [
													2731
												],
												"declarations": [
													{
														"constant": false,
														"id": 2731,
														"mutability": "mutable",
														"name": "rTokensLength",
														"nodeType": "VariableDeclaration",
														"scope": 2862,
														"src": "55985:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2730,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "55985:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2734,
												"initialValue": {
													"expression": {
														"id": 2732,
														"name": "rewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "56009:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 2733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "56009:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55985:43:0"
											},
											{
												"expression": {
													"id": 2741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2735,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2728,
														"src": "56039:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2739,
																"name": "rTokensLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2731,
																"src": "56063:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "56049:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2736,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "56053:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2737,
																"nodeType": "ArrayTypeName",
																"src": "56053:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 2740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "56049:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "56039:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 2742,
												"nodeType": "ExpressionStatement",
												"src": "56039:38:0"
											},
											{
												"assignments": [
													2744
												],
												"declarations": [
													{
														"constant": false,
														"id": 2744,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2862,
														"src": "56088:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo"
														},
														"typeName": {
															"id": 2743,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1792,
															"src": "56088:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2748,
												"initialValue": {
													"baseExpression": {
														"id": 2745,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1808,
														"src": "56112:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1792_storage_$",
															"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
														}
													},
													"id": 2747,
													"indexExpression": {
														"id": 2746,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2721,
														"src": "56121:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "56112:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1792_storage",
														"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "56088:38:0"
											},
											{
												"assignments": [
													2750
												],
												"declarations": [
													{
														"constant": false,
														"id": 2750,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 2862,
														"src": "56137:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
															"typeString": "struct KyberFairLaunch.UserInfo"
														},
														"typeName": {
															"id": 2749,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1772,
															"src": "56137:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
																"typeString": "struct KyberFairLaunch.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2756,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2751,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "56161:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
															}
														},
														"id": 2753,
														"indexExpression": {
															"id": 2752,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2721,
															"src": "56170:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "56161:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$",
															"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
														}
													},
													"id": 2755,
													"indexExpression": {
														"id": 2754,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2723,
														"src": "56176:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "56161:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1772_storage",
														"typeString": "struct KyberFairLaunch.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "56137:45:0"
											},
											{
												"assignments": [
													2758
												],
												"declarations": [
													{
														"constant": false,
														"id": 2758,
														"mutability": "mutable",
														"name": "_totalStake",
														"nodeType": "VariableDeclaration",
														"scope": 2862,
														"src": "56193:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2757,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "56193:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2761,
												"initialValue": {
													"expression": {
														"id": 2759,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2744,
														"src": "56215:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
														}
													},
													"id": 2760,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "totalStake",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1779,
													"src": "56215:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "56193:37:0"
											},
											{
												"assignments": [
													2763
												],
												"declarations": [
													{
														"constant": false,
														"id": 2763,
														"mutability": "mutable",
														"name": "_poolLastRewardBlock",
														"nodeType": "VariableDeclaration",
														"scope": 2862,
														"src": "56241:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2762,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "56241:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2766,
												"initialValue": {
													"expression": {
														"id": 2764,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2744,
														"src": "56272:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
														}
													},
													"id": 2765,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "lastRewardBlock",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1787,
													"src": "56272:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "56241:51:0"
											},
											{
												"assignments": [
													2768
												],
												"declarations": [
													{
														"constant": false,
														"id": 2768,
														"mutability": "mutable",
														"name": "lastAccountedBlock",
														"nodeType": "VariableDeclaration",
														"scope": 2862,
														"src": "56303:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 2767,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "56303:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2772,
												"initialValue": {
													"arguments": [
														{
															"id": 2770,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2721,
															"src": "56357:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2769,
														"name": "_lastAccountedRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3449,
														"src": "56331:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint32_$",
															"typeString": "function (uint256) view returns (uint32)"
														}
													},
													"id": 2771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56331:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "56303:59:0"
											},
											{
												"body": {
													"id": 2860,
													"nodeType": "Block",
													"src": "56417:840:0",
													"statements": [
														{
															"assignments": [
																2784
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2784,
																	"mutability": "mutable",
																	"name": "_accRewardPerShare",
																	"nodeType": "VariableDeclaration",
																	"scope": 2860,
																	"src": "56432:26:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2783,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "56432:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2790,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"id": 2785,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2744,
																			"src": "56461:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																				"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																			}
																		},
																		"id": 2786,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "poolRewardData",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1791,
																		"src": "56461:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1777_storage_$",
																			"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																		}
																	},
																	"id": 2788,
																	"indexExpression": {
																		"id": 2787,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2774,
																		"src": "56499:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "56461:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolRewardData_$1777_storage",
																		"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																	}
																},
																"id": 2789,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "accRewardPerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1776,
																"src": "56461:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "56432:105:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2791,
																		"name": "lastAccountedBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2768,
																		"src": "56556:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2792,
																		"name": "_poolLastRewardBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2763,
																		"src": "56577:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "56556:41:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2794,
																		"name": "_totalStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2758,
																		"src": "56601:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "56616:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "56601:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "56556:61:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2825,
															"nodeType": "IfStatement",
															"src": "56552:366:0",
															"trueBody": {
																"id": 2824,
																"nodeType": "Block",
																"src": "56619:299:0",
																"statements": [
																	{
																		"assignments": [
																			2799
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2799,
																				"mutability": "mutable",
																				"name": "reward",
																				"nodeType": "VariableDeclaration",
																				"scope": 2824,
																				"src": "56638:14:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2798,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "56638:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2811,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"expression": {
																								"id": 2805,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2744,
																								"src": "56725:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																									"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																								}
																							},
																							"id": 2806,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "poolRewardData",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1791,
																							"src": "56725:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1777_storage_$",
																								"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																							}
																						},
																						"id": 2808,
																						"indexExpression": {
																							"id": 2807,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2774,
																							"src": "56745:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "56725:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolRewardData_$1777_storage",
																							"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																						}
																					},
																					"id": 2809,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "rewardPerBlock",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1774,
																					"src": "56725:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2802,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2800,
																								"name": "lastAccountedBlock",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2768,
																								"src": "56656:18:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 2801,
																								"name": "_poolLastRewardBlock",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2763,
																								"src": "56677:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "56656:41:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2803,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "56655:43:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2804,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1375,
																				"src": "56655:69:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "56655:108:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "56638:125:0"
																	},
																	{
																		"expression": {
																			"id": 2822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2812,
																				"name": "_accRewardPerShare",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2784,
																				"src": "56782:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2820,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [
																								{
																									"id": 2817,
																									"name": "PRECISION",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1760,
																									"src": "56859:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 2815,
																									"name": "reward",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2799,
																									"src": "56848:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2816,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1375,
																								"src": "56848:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2818,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "56848:21:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"id": 2819,
																							"name": "_totalStake",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2758,
																							"src": "56872:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "56848:35:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2813,
																						"name": "_accRewardPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2784,
																						"src": "56803:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2814,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1319,
																					"src": "56803:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "56803:99:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "56782:120:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2823,
																		"nodeType": "ExpressionStatement",
																		"src": "56782:120:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2826,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2728,
																		"src": "56934:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2828,
																	"indexExpression": {
																		"id": 2827,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2774,
																		"src": "56942:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "56934:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"expression": {
																							"baseExpression": {
																								"expression": {
																									"id": 2834,
																									"name": "user",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2750,
																									"src": "57051:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
																										"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
																									}
																								},
																								"id": 2835,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "userRewardData",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1771,
																								"src": "57051:19:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1765_storage_$",
																									"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData storage ref)"
																								}
																							},
																							"id": 2837,
																							"indexExpression": {
																								"id": 2836,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2774,
																								"src": "57071:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "57051:22:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserRewardData_$1765_storage",
																								"typeString": "struct KyberFairLaunch.UserRewardData storage ref"
																							}
																						},
																						"id": 2838,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "lastRewardPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1764,
																						"src": "57051:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2832,
																						"name": "_accRewardPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2784,
																						"src": "57002:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2833,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1341,
																					"src": "57002:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2839,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "57002:113:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"id": 2829,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2750,
																					"src": "56964:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
																						"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
																					}
																				},
																				"id": 2830,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1767,
																				"src": "56964:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1375,
																			"src": "56964:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "56964:170:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2841,
																		"name": "PRECISION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "57154:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "56964:199:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "56934:229:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2844,
															"nodeType": "ExpressionStatement",
															"src": "56934:229:0"
														},
														{
															"expression": {
																"id": 2858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2845,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2728,
																		"src": "57178:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2847,
																	"indexExpression": {
																		"id": 2846,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2774,
																		"src": "57186:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "57178:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"baseExpression": {
																					"expression": {
																						"id": 2852,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2750,
																						"src": "57206:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
																							"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
																						}
																					},
																					"id": 2853,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "userRewardData",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1771,
																					"src": "57206:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1765_storage_$",
																						"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData storage ref)"
																					}
																				},
																				"id": 2855,
																				"indexExpression": {
																					"id": 2854,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2774,
																					"src": "57226:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "57206:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserRewardData_$1765_storage",
																					"typeString": "struct KyberFairLaunch.UserRewardData storage ref"
																				}
																			},
																			"id": 2856,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "unclaimedReward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1762,
																			"src": "57206:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 2848,
																				"name": "rewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2728,
																				"src": "57191:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 2850,
																			"indexExpression": {
																				"id": 2849,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2774,
																				"src": "57199:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "57191:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1319,
																		"src": "57191:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "57191:54:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "57178:67:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2859,
															"nodeType": "ExpressionStatement",
															"src": "57178:67:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2777,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2774,
														"src": "56393:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2778,
														"name": "rTokensLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2731,
														"src": "56397:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "56393:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2861,
												"initializationExpression": {
													"assignments": [
														2774
													],
													"declarations": [
														{
															"constant": false,
															"id": 2774,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2861,
															"src": "56378:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2773,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "56378:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2776,
													"initialValue": {
														"hexValue": "30",
														"id": 2775,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56390:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "56378:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "56412:3:0",
														"subExpression": {
															"id": 2780,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2774,
															"src": "56412:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2782,
													"nodeType": "ExpressionStatement",
													"src": "56412:3:0"
												},
												"nodeType": "ForStatement",
												"src": "56373:884:0"
											}
										]
									},
									"documentation": {
										"id": 2719,
										"nodeType": "StructuredDocumentation",
										"src": "55635:181:0",
										"text": " @dev Get pending rewards of a user from a pool, mostly for front-end\n @param _pid: id of the pool\n @param _user: user to check for pending rewards"
									},
									"functionSelector": "d18df53c",
									"id": 2863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingRewards",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2725,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "55916:8:0"
									},
									"parameters": {
										"id": 2724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2721,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2863,
												"src": "55846:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 2863,
												"src": "55860:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55845:29:0"
									},
									"returnParameters": {
										"id": 2729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2728,
												"mutability": "mutable",
												"name": "rewards",
												"nodeType": "VariableDeclaration",
												"scope": 2863,
												"src": "55943:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2726,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "55943:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2727,
													"nodeType": "ArrayTypeName",
													"src": "55943:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55942:26:0"
									},
									"scope": 3482,
									"src": "55822:1442:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										139
									],
									"body": {
										"id": 2873,
										"nodeType": "Block",
										"src": "57447:38:0",
										"statements": [
											{
												"expression": {
													"id": 2871,
													"name": "rewardTokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1801,
													"src": "57465:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 2870,
												"id": 2872,
												"nodeType": "Return",
												"src": "57458:19:0"
											}
										]
									},
									"documentation": {
										"id": 2864,
										"nodeType": "StructuredDocumentation",
										"src": "57272:51:0",
										"text": " @dev Return list reward tokens"
									},
									"functionSelector": "c4f59f9b",
									"id": 2874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardTokens",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2866,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "57397:8:0"
									},
									"parameters": {
										"id": 2865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57353:2:0"
									},
									"returnParameters": {
										"id": 2870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2869,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2874,
												"src": "57424:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2867,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "57424:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2868,
													"nodeType": "ArrayTypeName",
													"src": "57424:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57423:18:0"
									},
									"scope": 3482,
									"src": "57329:156:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										116
									],
									"body": {
										"id": 2973,
										"nodeType": "Block",
										"src": "57935:651:0",
										"statements": [
											{
												"assignments": [
													2898
												],
												"declarations": [
													{
														"constant": false,
														"id": 2898,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2973,
														"src": "57946:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo"
														},
														"typeName": {
															"id": 2897,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1792,
															"src": "57946:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2902,
												"initialValue": {
													"baseExpression": {
														"id": 2899,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1808,
														"src": "57970:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1792_storage_$",
															"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
														}
													},
													"id": 2901,
													"indexExpression": {
														"id": 2900,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2877,
														"src": "57979:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "57970:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1792_storage",
														"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57946:38:0"
											},
											{
												"expression": {
													"id": 2920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2903,
																"name": "totalStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2881,
																"src": "57996:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2904,
																"name": "stakeToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2883,
																"src": "58008:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2905,
																"name": "startBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2885,
																"src": "58020:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"id": 2906,
																"name": "endBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2887,
																"src": "58032:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"id": 2907,
																"name": "lastRewardBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2889,
																"src": "58042:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"id": 2908,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "57995:63:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_uint32_$_t_uint32_$_t_uint32_$",
															"typeString": "tuple(uint256,address,uint32,uint32,uint32)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"expression": {
																	"id": 2909,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2898,
																	"src": "58076:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																	}
																},
																"id": 2910,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalStake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1779,
																"src": "58076:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 2911,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2898,
																	"src": "58106:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																	}
																},
																"id": 2912,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakeToken",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1781,
																"src": "58106:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 2913,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2898,
																	"src": "58136:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																	}
																},
																"id": 2914,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startBlock",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1783,
																"src": "58136:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"expression": {
																	"id": 2915,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2898,
																	"src": "58166:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																	}
																},
																"id": 2916,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "endBlock",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1785,
																"src": "58166:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"expression": {
																	"id": 2917,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2898,
																	"src": "58194:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																	}
																},
																"id": 2918,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "lastRewardBlock",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1787,
																"src": "58194:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"id": 2919,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "58061:164:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_uint32_$_t_uint32_$_t_uint32_$",
															"typeString": "tuple(uint256,address,uint32,uint32,uint32)"
														}
													},
													"src": "57995:230:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2921,
												"nodeType": "ExpressionStatement",
												"src": "57995:230:0"
											},
											{
												"expression": {
													"id": 2929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2922,
														"name": "rewardPerBlocks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2892,
														"src": "58236:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2926,
																	"name": "rewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "58268:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "58268:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "58254:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2923,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "58258:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2924,
																"nodeType": "ArrayTypeName",
																"src": "58258:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 2928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "58254:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "58236:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 2930,
												"nodeType": "ExpressionStatement",
												"src": "58236:52:0"
											},
											{
												"expression": {
													"id": 2938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2931,
														"name": "accRewardPerShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2895,
														"src": "58299:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2935,
																	"name": "rewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "58334:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "58334:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "58320:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2932,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "58324:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2933,
																"nodeType": "ArrayTypeName",
																"src": "58324:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 2937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "58320:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "58299:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 2939,
												"nodeType": "ExpressionStatement",
												"src": "58299:55:0"
											},
											{
												"body": {
													"id": 2971,
													"nodeType": "Block",
													"src": "58415:164:0",
													"statements": [
														{
															"expression": {
																"id": 2959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2951,
																		"name": "rewardPerBlocks",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2892,
																		"src": "58430:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2953,
																	"indexExpression": {
																		"id": 2952,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2941,
																		"src": "58446:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "58430:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 2954,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2898,
																				"src": "58451:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																					"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																				}
																			},
																			"id": 2955,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "poolRewardData",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1791,
																			"src": "58451:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1777_storage_$",
																				"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																			}
																		},
																		"id": 2957,
																		"indexExpression": {
																			"id": 2956,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2941,
																			"src": "58471:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "58451:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolRewardData_$1777_storage",
																			"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																		}
																	},
																	"id": 2958,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardPerBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1774,
																	"src": "58451:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "58430:58:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2960,
															"nodeType": "ExpressionStatement",
															"src": "58430:58:0"
														},
														{
															"expression": {
																"id": 2969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2961,
																		"name": "accRewardPerShares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2895,
																		"src": "58503:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2963,
																	"indexExpression": {
																		"id": 2962,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2941,
																		"src": "58522:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "58503:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 2964,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2898,
																				"src": "58527:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																					"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																				}
																			},
																			"id": 2965,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "poolRewardData",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1791,
																			"src": "58527:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1777_storage_$",
																				"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																			}
																		},
																		"id": 2967,
																		"indexExpression": {
																			"id": 2966,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2941,
																			"src": "58547:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "58527:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolRewardData_$1777_storage",
																			"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																		}
																	},
																	"id": 2968,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "accRewardPerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1776,
																	"src": "58527:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "58503:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2970,
															"nodeType": "ExpressionStatement",
															"src": "58503:64:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2944,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2941,
														"src": "58385:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2945,
															"name": "rewardTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "58389:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "58389:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "58385:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2972,
												"initializationExpression": {
													"assignments": [
														2941
													],
													"declarations": [
														{
															"constant": false,
															"id": 2941,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2972,
															"src": "58370:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2940,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "58370:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2943,
													"initialValue": {
														"hexValue": "30",
														"id": 2942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58382:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "58370:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "58410:3:0",
														"subExpression": {
															"id": 2948,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2941,
															"src": "58410:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2950,
													"nodeType": "ExpressionStatement",
													"src": "58410:3:0"
												},
												"nodeType": "ForStatement",
												"src": "58365:214:0"
											}
										]
									},
									"documentation": {
										"id": 2875,
										"nodeType": "StructuredDocumentation",
										"src": "57493:55:0",
										"text": " @dev Return full details of a pool"
									},
									"functionSelector": "2f380b35",
									"id": 2974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolInfo",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2879,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "57630:8:0"
									},
									"parameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "57575:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57574:14:0"
									},
									"returnParameters": {
										"id": 2896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2881,
												"mutability": "mutable",
												"name": "totalStake",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "57671:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2883,
												"mutability": "mutable",
												"name": "stakeToken",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "57704:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57704:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "57737:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2884,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "57737:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "57769:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2886,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "57769:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2889,
												"mutability": "mutable",
												"name": "lastRewardBlock",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "57799:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2888,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "57799:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2892,
												"mutability": "mutable",
												"name": "rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "57836:32:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2890,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "57836:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2891,
													"nodeType": "ArrayTypeName",
													"src": "57836:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2895,
												"mutability": "mutable",
												"name": "accRewardPerShares",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "57883:35:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2893,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "57883:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2894,
													"nodeType": "ArrayTypeName",
													"src": "57883:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57656:273:0"
									},
									"scope": 3482,
									"src": "57554:1032:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										132
									],
									"body": {
										"id": 3055,
										"nodeType": "Block",
										"src": "58952:457:0",
										"statements": [
											{
												"assignments": [
													2992
												],
												"declarations": [
													{
														"constant": false,
														"id": 2992,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 3055,
														"src": "58963:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
															"typeString": "struct KyberFairLaunch.UserInfo"
														},
														"typeName": {
															"id": 2991,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1772,
															"src": "58963:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
																"typeString": "struct KyberFairLaunch.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2998,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2993,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "58987:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
															}
														},
														"id": 2995,
														"indexExpression": {
															"id": 2994,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2977,
															"src": "58996:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "58987:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$",
															"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
														}
													},
													"id": 2997,
													"indexExpression": {
														"id": 2996,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2979,
														"src": "59002:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "58987:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1772_storage",
														"typeString": "struct KyberFairLaunch.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58963:48:0"
											},
											{
												"expression": {
													"id": 3002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2999,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2983,
														"src": "59022:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3000,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2992,
															"src": "59031:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
																"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
															}
														},
														"id": 3001,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1767,
														"src": "59031:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "59022:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3003,
												"nodeType": "ExpressionStatement",
												"src": "59022:20:0"
											},
											{
												"expression": {
													"id": 3011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3004,
														"name": "unclaimedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2986,
														"src": "59053:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 3008,
																	"name": "rewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "59086:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 3009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "59086:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "59072:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 3005,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "59076:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3006,
																"nodeType": "ArrayTypeName",
																"src": "59076:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 3010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "59072:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "59053:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 3012,
												"nodeType": "ExpressionStatement",
												"src": "59053:53:0"
											},
											{
												"expression": {
													"id": 3020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3013,
														"name": "lastRewardPerShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2989,
														"src": "59117:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 3017,
																	"name": "rewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "59153:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 3018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "59153:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "59139:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 3014,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "59143:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3015,
																"nodeType": "ArrayTypeName",
																"src": "59143:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 3019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "59139:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "59117:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 3021,
												"nodeType": "ExpressionStatement",
												"src": "59117:56:0"
											},
											{
												"body": {
													"id": 3053,
													"nodeType": "Block",
													"src": "59234:168:0",
													"statements": [
														{
															"expression": {
																"id": 3041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3033,
																		"name": "unclaimedRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2986,
																		"src": "59249:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 3035,
																	"indexExpression": {
																		"id": 3034,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3023,
																		"src": "59266:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "59249:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 3036,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2992,
																				"src": "59271:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
																					"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
																				}
																			},
																			"id": 3037,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "userRewardData",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1771,
																			"src": "59271:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1765_storage_$",
																				"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData storage ref)"
																			}
																		},
																		"id": 3039,
																		"indexExpression": {
																			"id": 3038,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3023,
																			"src": "59291:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "59271:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRewardData_$1765_storage",
																			"typeString": "struct KyberFairLaunch.UserRewardData storage ref"
																		}
																	},
																	"id": 3040,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "unclaimedReward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1762,
																	"src": "59271:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "59249:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3042,
															"nodeType": "ExpressionStatement",
															"src": "59249:60:0"
														},
														{
															"expression": {
																"id": 3051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3043,
																		"name": "lastRewardPerShares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2989,
																		"src": "59324:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 3045,
																	"indexExpression": {
																		"id": 3044,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3023,
																		"src": "59344:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "59324:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 3046,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2992,
																				"src": "59349:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
																					"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
																				}
																			},
																			"id": 3047,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "userRewardData",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1771,
																			"src": "59349:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1765_storage_$",
																				"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData storage ref)"
																			}
																		},
																		"id": 3049,
																		"indexExpression": {
																			"id": 3048,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3023,
																			"src": "59369:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "59349:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRewardData_$1765_storage",
																			"typeString": "struct KyberFairLaunch.UserRewardData storage ref"
																		}
																	},
																	"id": 3050,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "lastRewardPerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1764,
																	"src": "59349:41:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "59324:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3052,
															"nodeType": "ExpressionStatement",
															"src": "59324:66:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3026,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3023,
														"src": "59204:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3027,
															"name": "rewardTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "59208:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 3028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "59208:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "59204:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3054,
												"initializationExpression": {
													"assignments": [
														3023
													],
													"declarations": [
														{
															"constant": false,
															"id": 3023,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 3054,
															"src": "59189:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3022,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "59189:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3025,
													"initialValue": {
														"hexValue": "30",
														"id": 3024,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "59201:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "59189:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 3031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "59229:3:0",
														"subExpression": {
															"id": 3030,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3023,
															"src": "59229:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3032,
													"nodeType": "ExpressionStatement",
													"src": "59229:3:0"
												},
												"nodeType": "ForStatement",
												"src": "59184:218:0"
											}
										]
									},
									"documentation": {
										"id": 2975,
										"nodeType": "StructuredDocumentation",
										"src": "58594:87:0",
										"text": " @dev Return user's info including deposited amount and reward data"
									},
									"functionSelector": "1069f3b5",
									"id": 3056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserInfo",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2981,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "58781:8:0"
									},
									"parameters": {
										"id": 2980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2977,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "58708:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2979,
												"mutability": "mutable",
												"name": "_account",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "58722:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58707:32:0"
									},
									"returnParameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2983,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "58822:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2986,
												"mutability": "mutable",
												"name": "unclaimedRewards",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "58851:33:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2984,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "58851:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2985,
													"nodeType": "ArrayTypeName",
													"src": "58851:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2989,
												"mutability": "mutable",
												"name": "lastRewardPerShares",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "58899:36:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2987,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "58899:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2988,
													"nodeType": "ArrayTypeName",
													"src": "58899:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58807:139:0"
									},
									"scope": 3482,
									"src": "58687:722:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										75
									],
									"body": {
										"id": 3074,
										"nodeType": "Block",
										"src": "59574:94:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3064,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3059,
															"src": "59603:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3063,
														"name": "updatePoolRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3181,
														"src": "59585:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59585:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3066,
												"nodeType": "ExpressionStatement",
												"src": "59585:23:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3068,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "59637:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "59637:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 3070,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3059,
															"src": "59649:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 3071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "59655:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3067,
														"name": "_updateUserReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3421,
														"src": "59619:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 3072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59619:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3073,
												"nodeType": "ExpressionStatement",
												"src": "59619:41:0"
											}
										]
									},
									"documentation": {
										"id": 3057,
										"nodeType": "StructuredDocumentation",
										"src": "59417:104:0",
										"text": " @dev Harvest rewards from a pool for the sender\n @param _pid: id of the pool"
									},
									"functionSelector": "ddc63262",
									"id": 3075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3061,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "59565:8:0"
									},
									"parameters": {
										"id": 3060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3059,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 3075,
												"src": "59544:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59544:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59543:14:0"
									},
									"returnParameters": {
										"id": 3062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59574:0:0"
									},
									"scope": 3482,
									"src": "59527:141:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										88
									],
									"body": {
										"id": 3180,
										"nodeType": "Block",
										"src": "59792:911:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3083,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3078,
																"src": "59811:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 3084,
																"name": "poolLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1804,
																"src": "59818:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "59811:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420706f6f6c206964",
															"id": 3086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "59830:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18",
																"typeString": "literal_string \"invalid pool id\""
															},
															"value": "invalid pool id"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18",
																"typeString": "literal_string \"invalid pool id\""
															}
														],
														"id": 3082,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "59803:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59803:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3088,
												"nodeType": "ExpressionStatement",
												"src": "59803:45:0"
											},
											{
												"assignments": [
													3090
												],
												"declarations": [
													{
														"constant": false,
														"id": 3090,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 3180,
														"src": "59859:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo"
														},
														"typeName": {
															"id": 3089,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1792,
															"src": "59859:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3094,
												"initialValue": {
													"baseExpression": {
														"id": 3091,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1808,
														"src": "59883:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1792_storage_$",
															"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
														}
													},
													"id": 3093,
													"indexExpression": {
														"id": 3092,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3078,
														"src": "59892:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "59883:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1792_storage",
														"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59859:38:0"
											},
											{
												"assignments": [
													3096
												],
												"declarations": [
													{
														"constant": false,
														"id": 3096,
														"mutability": "mutable",
														"name": "lastAccountedBlock",
														"nodeType": "VariableDeclaration",
														"scope": 3180,
														"src": "59908:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 3095,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "59908:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3100,
												"initialValue": {
													"arguments": [
														{
															"id": 3098,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3078,
															"src": "59962:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3097,
														"name": "_lastAccountedRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3449,
														"src": "59936:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint32_$",
															"typeString": "function (uint256) view returns (uint32)"
														}
													},
													"id": 3099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59936:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59908:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 3104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3101,
														"name": "lastAccountedBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3096,
														"src": "59982:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 3102,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3090,
															"src": "60004:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 3103,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1787,
														"src": "60004:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "59982:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3106,
												"nodeType": "IfStatement",
												"src": "59978:55:0",
												"trueBody": {
													"functionReturnParameters": 3081,
													"id": 3105,
													"nodeType": "Return",
													"src": "60026:7:0"
												}
											},
											{
												"assignments": [
													3108
												],
												"declarations": [
													{
														"constant": false,
														"id": 3108,
														"mutability": "mutable",
														"name": "_totalStake",
														"nodeType": "VariableDeclaration",
														"scope": 3180,
														"src": "60043:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3107,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "60043:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3111,
												"initialValue": {
													"expression": {
														"id": 3109,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3090,
														"src": "60065:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
														}
													},
													"id": 3110,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "totalStake",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1779,
													"src": "60065:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60043:37:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3112,
														"name": "_totalStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3108,
														"src": "60095:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "60110:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "60095:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3123,
												"nodeType": "IfStatement",
												"src": "60091:111:0",
												"trueBody": {
													"id": 3122,
													"nodeType": "Block",
													"src": "60113:89:0",
													"statements": [
														{
															"expression": {
																"id": 3119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3115,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3090,
																		"src": "60128:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																			"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																		}
																	},
																	"id": 3117,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1787,
																	"src": "60128:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3118,
																	"name": "lastAccountedBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3096,
																	"src": "60151:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "60128:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 3120,
															"nodeType": "ExpressionStatement",
															"src": "60128:41:0"
														},
														{
															"functionReturnParameters": 3081,
															"id": 3121,
															"nodeType": "Return",
															"src": "60184:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													3125
												],
												"declarations": [
													{
														"constant": false,
														"id": 3125,
														"mutability": "mutable",
														"name": "numberBlocks",
														"nodeType": "VariableDeclaration",
														"scope": 3180,
														"src": "60212:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3124,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "60212:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3130,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 3129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3126,
														"name": "lastAccountedBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3096,
														"src": "60235:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 3127,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3090,
															"src": "60256:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 3128,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1787,
														"src": "60256:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "60235:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60212:64:0"
											},
											{
												"body": {
													"id": 3172,
													"nodeType": "Block",
													"src": "60337:307:0",
													"statements": [
														{
															"assignments": [
																3143
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3143,
																	"mutability": "mutable",
																	"name": "rewardData",
																	"nodeType": "VariableDeclaration",
																	"scope": 3172,
																	"src": "60352:33:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolRewardData_$1777_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolRewardData"
																	},
																	"typeName": {
																		"id": 3142,
																		"name": "PoolRewardData",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 1777,
																		"src": "60352:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolRewardData_$1777_storage_ptr",
																			"typeString": "struct KyberFairLaunch.PoolRewardData"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3148,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 3144,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3090,
																		"src": "60388:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																			"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																		}
																	},
																	"id": 3145,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "poolRewardData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1791,
																	"src": "60388:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1777_storage_$",
																		"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																	}
																},
																"id": 3147,
																"indexExpression": {
																	"id": 3146,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3132,
																	"src": "60408:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "60388:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolRewardData_$1777_storage",
																	"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "60352:58:0"
														},
														{
															"assignments": [
																3150
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3150,
																	"mutability": "mutable",
																	"name": "reward",
																	"nodeType": "VariableDeclaration",
																	"scope": 3172,
																	"src": "60425:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3149,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "60425:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3156,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3153,
																			"name": "rewardData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3143,
																			"src": "60459:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolRewardData_$1777_storage_ptr",
																				"typeString": "struct KyberFairLaunch.PoolRewardData storage pointer"
																			}
																		},
																		"id": 3154,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardPerBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1774,
																		"src": "60459:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3151,
																		"name": "numberBlocks",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3125,
																		"src": "60442:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1375,
																	"src": "60442:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "60442:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "60425:60:0"
														},
														{
															"expression": {
																"id": 3170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3157,
																		"name": "rewardData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3143,
																		"src": "60500:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolRewardData_$1777_storage_ptr",
																			"typeString": "struct KyberFairLaunch.PoolRewardData storage pointer"
																		}
																	},
																	"id": 3159,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "accRewardPerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1776,
																	"src": "60500:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3165,
																						"name": "PRECISION",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1760,
																						"src": "60593:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 3163,
																						"name": "reward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3150,
																						"src": "60582:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3164,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1375,
																					"src": "60582:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 3166,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "60582:21:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 3167,
																				"name": "_totalStake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3108,
																				"src": "60606:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "60582:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 3160,
																				"name": "rewardData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3143,
																				"src": "60531:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolRewardData_$1777_storage_ptr",
																					"typeString": "struct KyberFairLaunch.PoolRewardData storage pointer"
																				}
																			},
																			"id": 3161,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accRewardPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1776,
																			"src": "60531:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1319,
																		"src": "60531:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "60531:101:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "60500:132:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3171,
															"nodeType": "ExpressionStatement",
															"src": "60500:132:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3135,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3132,
														"src": "60307:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3136,
															"name": "rewardTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "60311:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 3137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "60311:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "60307:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3173,
												"initializationExpression": {
													"assignments": [
														3132
													],
													"declarations": [
														{
															"constant": false,
															"id": 3132,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 3173,
															"src": "60292:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3131,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "60292:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3134,
													"initialValue": {
														"hexValue": "30",
														"id": 3133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "60304:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "60292:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 3140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "60332:3:0",
														"subExpression": {
															"id": 3139,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3132,
															"src": "60332:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3141,
													"nodeType": "ExpressionStatement",
													"src": "60332:3:0"
												},
												"nodeType": "ForStatement",
												"src": "60287:357:0"
											},
											{
												"expression": {
													"id": 3178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3174,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3090,
															"src": "60654:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 3176,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1787,
														"src": "60654:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3177,
														"name": "lastAccountedBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3096,
														"src": "60677:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "60654:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 3179,
												"nodeType": "ExpressionStatement",
												"src": "60654:41:0"
											}
										]
									},
									"documentation": {
										"id": 3076,
										"nodeType": "StructuredDocumentation",
										"src": "59676:53:0",
										"text": " @dev Update rewards for one pool"
									},
									"functionSelector": "adb82b31",
									"id": 3181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePoolRewards",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3080,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "59783:8:0"
									},
									"parameters": {
										"id": 3079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3078,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 3181,
												"src": "59762:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59761:14:0"
									},
									"returnParameters": {
										"id": 3081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59792:0:0"
									},
									"scope": 3482,
									"src": "59735:968:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3262,
										"nodeType": "Block",
										"src": "60883:572:0",
										"statements": [
											{
												"assignments": [
													3190
												],
												"declarations": [
													{
														"constant": false,
														"id": 3190,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 3262,
														"src": "60894:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo"
														},
														"typeName": {
															"id": 3189,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1792,
															"src": "60894:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3194,
												"initialValue": {
													"baseExpression": {
														"id": 3191,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1808,
														"src": "60918:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1792_storage_$",
															"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
														}
													},
													"id": 3193,
													"indexExpression": {
														"id": 3192,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3184,
														"src": "60927:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "60918:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1792_storage",
														"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60894:38:0"
											},
											{
												"assignments": [
													3196
												],
												"declarations": [
													{
														"constant": false,
														"id": 3196,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 3262,
														"src": "60943:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
															"typeString": "struct KyberFairLaunch.UserInfo"
														},
														"typeName": {
															"id": 3195,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1772,
															"src": "60943:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
																"typeString": "struct KyberFairLaunch.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3203,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 3197,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "60967:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
															}
														},
														"id": 3199,
														"indexExpression": {
															"id": 3198,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3184,
															"src": "60976:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "60967:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$",
															"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
														}
													},
													"id": 3202,
													"indexExpression": {
														"expression": {
															"id": 3200,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "60982:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "60982:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "60967:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1772_storage",
														"typeString": "struct KyberFairLaunch.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60943:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3205,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3196,
																	"src": "61012:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
																		"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
																	}
																},
																"id": 3206,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1767,
																"src": "61012:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3207,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3186,
																"src": "61027:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "61012:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a20696e73756666696369656e7420616d6f756e74",
															"id": 3209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "61036:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bc8c43108bc0174d691040f1b26bcfd2f362490f17ce12c09ee43c30f8abc24",
																"typeString": "literal_string \"withdraw: insufficient amount\""
															},
															"value": "withdraw: insufficient amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bc8c43108bc0174d691040f1b26bcfd2f362490f17ce12c09ee43c30f8abc24",
																"typeString": "literal_string \"withdraw: insufficient amount\""
															}
														],
														"id": 3204,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "61004:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61004:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3211,
												"nodeType": "ExpressionStatement",
												"src": "61004:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3213,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3184,
															"src": "61142:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3212,
														"name": "updatePoolRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3181,
														"src": "61124:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61124:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3215,
												"nodeType": "ExpressionStatement",
												"src": "61124:23:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3217,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "61176:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "61176:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 3219,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3184,
															"src": "61188:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 3220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "61194:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3216,
														"name": "_updateUserReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3421,
														"src": "61158:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 3221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61158:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3222,
												"nodeType": "ExpressionStatement",
												"src": "61158:41:0"
											},
											{
												"expression": {
													"id": 3231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3223,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3196,
															"src": "61212:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
																"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
															}
														},
														"id": 3225,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1767,
														"src": "61212:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3229,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3186,
																"src": "61242:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 3226,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3196,
																	"src": "61226:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1772_storage_ptr",
																		"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
																	}
																},
																"id": 3227,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1767,
																"src": "61226:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1341,
															"src": "61226:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "61226:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "61212:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3232,
												"nodeType": "ExpressionStatement",
												"src": "61212:38:0"
											},
											{
												"expression": {
													"id": 3241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3233,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3190,
															"src": "61261:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 3235,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalStake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1779,
														"src": "61261:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3239,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3186,
																"src": "61299:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 3236,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3190,
																	"src": "61279:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																	}
																},
																"id": 3237,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalStake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1779,
																"src": "61279:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1341,
															"src": "61279:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "61279:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "61261:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3242,
												"nodeType": "ExpressionStatement",
												"src": "61261:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3248,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "61360:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "61360:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 3250,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3186,
															"src": "61372:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3244,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3190,
																		"src": "61330:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1792_storage_ptr",
																			"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																		}
																	},
																	"id": 3245,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1781,
																	"src": "61330:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3243,
																"name": "IERC20Ext",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "61320:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Ext_$982_$",
																	"typeString": "type(contract IERC20Ext)"
																}
															},
															"id": 3246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "61320:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Ext_$982",
																"typeString": "contract IERC20Ext"
															}
														},
														"id": 3247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1522,
														"src": "61320:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$971_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$971_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 3251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61320:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3252,
												"nodeType": "ExpressionStatement",
												"src": "61320:60:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3254,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "61407:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "61407:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 3256,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3184,
															"src": "61419:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3257,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "61425:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "61425:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3259,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3186,
															"src": "61439:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3253,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1865,
														"src": "61398:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 3260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61398:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3261,
												"nodeType": "EmitStatement",
												"src": "61393:54:0"
											}
										]
									},
									"documentation": {
										"id": 3182,
										"nodeType": "StructuredDocumentation",
										"src": "60711:107:0",
										"text": " @dev Withdraw _amount of stakeToken from pool _pid, also harvest reward for the sender"
									},
									"id": 3263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3184,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 3263,
												"src": "60843:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3186,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 3263,
												"src": "60857:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60857:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60842:31:0"
									},
									"returnParameters": {
										"id": 3188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60883:0:0"
									},
									"scope": 3482,
									"src": "60824:631:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3420,
										"nodeType": "Block",
										"src": "61674:1936:0",
										"statements": [
											{
												"assignments": [
													3274
												],
												"declarations": [
													{
														"constant": false,
														"id": 3274,
														"mutability": "mutable",
														"name": "userAmount",
														"nodeType": "VariableDeclaration",
														"scope": 3420,
														"src": "61685:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3273,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "61685:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3281,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 3275,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1814,
																"src": "61706:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$_$",
																	"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
																}
															},
															"id": 3277,
															"indexExpression": {
																"id": 3276,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3268,
																"src": "61715:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "61706:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$",
																"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
															}
														},
														"id": 3279,
														"indexExpression": {
															"id": 3278,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3266,
															"src": "61721:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "61706:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1772_storage",
															"typeString": "struct KyberFairLaunch.UserInfo storage ref"
														}
													},
													"id": 3280,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1767,
													"src": "61706:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "61685:47:0"
											},
											{
												"assignments": [
													3283
												],
												"declarations": [
													{
														"constant": false,
														"id": 3283,
														"mutability": "mutable",
														"name": "rTokensLength",
														"nodeType": "VariableDeclaration",
														"scope": 3420,
														"src": "61743:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3282,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "61743:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3286,
												"initialValue": {
													"expression": {
														"id": 3284,
														"name": "rewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "61767:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 3285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "61767:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "61743:43:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3287,
														"name": "userAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3274,
														"src": "61803:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "61817:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "61803:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3322,
												"nodeType": "IfStatement",
												"src": "61799:583:0",
												"trueBody": {
													"id": 3321,
													"nodeType": "Block",
													"src": "61820:562:0",
													"statements": [
														{
															"body": {
																"id": 3318,
																"nodeType": "Block",
																"src": "62118:232:0",
																"statements": [
																	{
																		"expression": {
																			"id": 3316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"baseExpression": {
																								"baseExpression": {
																									"id": 3300,
																									"name": "userInfo",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1814,
																									"src": "62137:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$_$",
																										"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
																									}
																								},
																								"id": 3303,
																								"indexExpression": {
																									"id": 3301,
																									"name": "_pid",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3268,
																									"src": "62146:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "62137:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$",
																									"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
																								}
																							},
																							"id": 3304,
																							"indexExpression": {
																								"id": 3302,
																								"name": "_to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3266,
																								"src": "62152:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "62137:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$1772_storage",
																								"typeString": "struct KyberFairLaunch.UserInfo storage ref"
																							}
																						},
																						"id": 3305,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "userRewardData",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1771,
																						"src": "62137:56:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1765_storage_$",
																							"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData storage ref)"
																						}
																					},
																					"id": 3307,
																					"indexExpression": {
																						"id": 3306,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3291,
																						"src": "62194:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "62137:59:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserRewardData_$1765_storage",
																						"typeString": "struct KyberFairLaunch.UserRewardData storage ref"
																					}
																				},
																				"id": 3308,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "lastRewardPerShare",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1764,
																				"src": "62137:100:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 3309,
																								"name": "poolInfo",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1808,
																								"src": "62240:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1792_storage_$",
																									"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
																								}
																							},
																							"id": 3311,
																							"indexExpression": {
																								"id": 3310,
																								"name": "_pid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3268,
																								"src": "62249:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "62240:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1792_storage",
																								"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
																							}
																						},
																						"id": 3312,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "poolRewardData",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1791,
																						"src": "62240:51:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1777_storage_$",
																							"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																						}
																					},
																					"id": 3314,
																					"indexExpression": {
																						"id": 3313,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3291,
																						"src": "62292:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "62240:54:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolRewardData_$1777_storage",
																						"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																					}
																				},
																				"id": 3315,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "accRewardPerShare",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1776,
																				"src": "62240:94:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "62137:197:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3317,
																		"nodeType": "ExpressionStatement",
																		"src": "62137:197:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3294,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3291,
																	"src": "62094:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 3295,
																	"name": "rTokensLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3283,
																	"src": "62098:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "62094:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3319,
															"initializationExpression": {
																"assignments": [
																	3291
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 3291,
																		"mutability": "mutable",
																		"name": "i",
																		"nodeType": "VariableDeclaration",
																		"scope": 3319,
																		"src": "62079:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 3290,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "62079:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 3293,
																"initialValue": {
																	"hexValue": "30",
																	"id": 3292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "62091:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "62079:13:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 3298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "62113:3:0",
																	"subExpression": {
																		"id": 3297,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3291,
																		"src": "62113:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3299,
																"nodeType": "ExpressionStatement",
																"src": "62113:3:0"
															},
															"nodeType": "ForStatement",
															"src": "62074:276:0"
														},
														{
															"functionReturnParameters": 3272,
															"id": 3320,
															"nodeType": "Return",
															"src": "62364:7:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 3418,
													"nodeType": "Block",
													"src": "62438:1165:0",
													"statements": [
														{
															"assignments": [
																3334
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3334,
																	"mutability": "mutable",
																	"name": "lastAccRewardPerShare",
																	"nodeType": "VariableDeclaration",
																	"scope": 3418,
																	"src": "62453:29:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3333,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "62453:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3342,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 3335,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1808,
																				"src": "62485:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1792_storage_$",
																					"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
																				}
																			},
																			"id": 3337,
																			"indexExpression": {
																				"id": 3336,
																				"name": "_pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3268,
																				"src": "62494:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "62485:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1792_storage",
																				"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
																			}
																		},
																		"id": 3338,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "poolRewardData",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1791,
																		"src": "62485:47:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1777_storage_$",
																			"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																		}
																	},
																	"id": 3340,
																	"indexExpression": {
																		"id": 3339,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3324,
																		"src": "62533:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "62485:50:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolRewardData_$1777_storage",
																		"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																	}
																},
																"id": 3341,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "accRewardPerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1776,
																"src": "62485:86:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "62453:118:0"
														},
														{
															"assignments": [
																3344
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3344,
																	"mutability": "mutable",
																	"name": "rewardData",
																	"nodeType": "VariableDeclaration",
																	"scope": 3418,
																	"src": "62586:33:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserRewardData_$1765_storage_ptr",
																		"typeString": "struct KyberFairLaunch.UserRewardData"
																	},
																	"typeName": {
																		"id": 3343,
																		"name": "UserRewardData",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 1765,
																		"src": "62586:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRewardData_$1765_storage_ptr",
																			"typeString": "struct KyberFairLaunch.UserRewardData"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3353,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 3345,
																				"name": "userInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1814,
																				"src": "62622:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$_$",
																					"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
																				}
																			},
																			"id": 3347,
																			"indexExpression": {
																				"id": 3346,
																				"name": "_pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3268,
																				"src": "62631:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "62622:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1772_storage_$",
																				"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
																			}
																		},
																		"id": 3349,
																		"indexExpression": {
																			"id": 3348,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3266,
																			"src": "62637:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "62622:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1772_storage",
																			"typeString": "struct KyberFairLaunch.UserInfo storage ref"
																		}
																	},
																	"id": 3350,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "userRewardData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1771,
																	"src": "62622:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1765_storage_$",
																		"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData storage ref)"
																	}
																},
																"id": 3352,
																"indexExpression": {
																	"id": 3351,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3324,
																	"src": "62675:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "62622:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserRewardData_$1765_storage",
																	"typeString": "struct KyberFairLaunch.UserRewardData storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "62586:91:0"
														},
														{
															"assignments": [
																3355
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3355,
																	"mutability": "mutable",
																	"name": "_pending",
																	"nodeType": "VariableDeclaration",
																	"scope": 3418,
																	"src": "62815:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3354,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "62815:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3366,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 3360,
																						"name": "rewardData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3344,
																						"src": "62893:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserRewardData_$1765_storage_ptr",
																							"typeString": "struct KyberFairLaunch.UserRewardData storage pointer"
																						}
																					},
																					"id": 3361,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "lastRewardPerShare",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1764,
																					"src": "62893:29:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 3358,
																					"name": "lastAccRewardPerShare",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3334,
																					"src": "62867:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3359,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1341,
																				"src": "62867:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "62867:56:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 3356,
																			"name": "userAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3274,
																			"src": "62834:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1375,
																		"src": "62834:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "62834:104:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 3364,
																	"name": "PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1760,
																	"src": "62941:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "62834:116:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "62815:135:0"
														},
														{
															"expression": {
																"id": 3373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3367,
																	"name": "_pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3355,
																	"src": "62965:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 3370,
																				"name": "rewardData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3344,
																				"src": "62989:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserRewardData_$1765_storage_ptr",
																					"typeString": "struct KyberFairLaunch.UserRewardData storage pointer"
																				}
																			},
																			"id": 3371,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "unclaimedReward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1762,
																			"src": "62989:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 3368,
																			"name": "_pending",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3355,
																			"src": "62976:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1319,
																		"src": "62976:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "62976:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "62965:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3374,
															"nodeType": "ExpressionStatement",
															"src": "62965:51:0"
														},
														{
															"expression": {
																"id": 3382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3375,
																		"name": "rewardData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3344,
																		"src": "63033:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRewardData_$1765_storage_ptr",
																			"typeString": "struct KyberFairLaunch.UserRewardData storage pointer"
																		}
																	},
																	"id": 3377,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "unclaimedReward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1762,
																	"src": "63033:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 3378,
																		"name": "shouldHarvest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3270,
																		"src": "63062:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3380,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3355,
																		"src": "63082:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "63062:28:0",
																	"trueExpression": {
																		"hexValue": "30",
																		"id": 3379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "63078:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "63033:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3383,
															"nodeType": "ExpressionStatement",
															"src": "63033:57:0"
														},
														{
															"expression": {
																"id": 3388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3384,
																		"name": "rewardData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3344,
																		"src": "63191:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRewardData_$1765_storage_ptr",
																			"typeString": "struct KyberFairLaunch.UserRewardData storage pointer"
																		}
																	},
																	"id": 3386,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardPerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1764,
																	"src": "63191:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3387,
																	"name": "lastAccRewardPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3334,
																	"src": "63223:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "63191:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3389,
															"nodeType": "ExpressionStatement",
															"src": "63191:53:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3390,
																	"name": "shouldHarvest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3270,
																	"src": "63265:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3391,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3355,
																		"src": "63282:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 3392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "63293:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "63282:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "63265:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3417,
															"nodeType": "IfStatement",
															"src": "63261:331:0",
															"trueBody": {
																"id": 3416,
																"nodeType": "Block",
																"src": "63296:296:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 3397,
																								"name": "rewardTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1801,
																								"src": "63337:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_storage",
																									"typeString": "address[] storage ref"
																								}
																							},
																							"id": 3399,
																							"indexExpression": {
																								"id": 3398,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3324,
																								"src": "63350:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "63337:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 3396,
																						"name": "IERC20Ext",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 982,
																						"src": "63327:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20Ext_$982_$",
																							"typeString": "type(contract IERC20Ext)"
																						}
																					},
																					"id": 3400,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "63327:26:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Ext_$982",
																						"typeString": "contract IERC20Ext"
																					}
																				},
																				{
																					"id": 3401,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3266,
																					"src": "63355:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3402,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3355,
																					"src": "63360:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC20Ext_$982",
																						"typeString": "contract IERC20Ext"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3395,
																				"name": "_lockReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3481,
																				"src": "63315:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Ext_$982_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (contract IERC20Ext,address,uint256)"
																				}
																			},
																			"id": 3403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "63315:54:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3404,
																		"nodeType": "ExpressionStatement",
																		"src": "63315:54:0"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 3406,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3266,
																					"src": "63423:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3407,
																					"name": "_pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3268,
																					"src": "63449:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"baseExpression": {
																						"id": 3408,
																						"name": "rewardTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1801,
																						"src": "63476:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_storage",
																							"typeString": "address[] storage ref"
																						}
																					},
																					"id": 3410,
																					"indexExpression": {
																						"id": 3409,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3324,
																						"src": "63489:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "63476:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3411,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3355,
																					"src": "63514:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 3412,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "63545:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 3413,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "number",
																					"nodeType": "MemberAccess",
																					"src": "63545:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3405,
																				"name": "Harvest",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1877,
																				"src": "63393:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,address,uint256,uint256)"
																				}
																			},
																			"id": 3414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "63393:183:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3415,
																		"nodeType": "EmitStatement",
																		"src": "63388:188:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3327,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3324,
														"src": "62414:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3328,
														"name": "rTokensLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3283,
														"src": "62418:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "62414:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3419,
												"initializationExpression": {
													"assignments": [
														3324
													],
													"declarations": [
														{
															"constant": false,
															"id": 3324,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 3419,
															"src": "62399:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3323,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "62399:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3326,
													"initialValue": {
														"hexValue": "30",
														"id": 3325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "62411:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "62399:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 3331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "62433:3:0",
														"subExpression": {
															"id": 3330,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3324,
															"src": "62433:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3332,
													"nodeType": "ExpressionStatement",
													"src": "62433:3:0"
												},
												"nodeType": "ForStatement",
												"src": "62394:1209:0"
											}
										]
									},
									"documentation": {
										"id": 3264,
										"nodeType": "StructuredDocumentation",
										"src": "61463:88:0",
										"text": " @dev Update reward of _to address from pool _pid, harvest if needed"
									},
									"id": 3421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateUserReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3266,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 3421,
												"src": "61594:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61594:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3268,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 3421,
												"src": "61616:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3270,
												"mutability": "mutable",
												"name": "shouldHarvest",
												"nodeType": "VariableDeclaration",
												"scope": 3421,
												"src": "61639:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3269,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "61639:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61583:81:0"
									},
									"returnParameters": {
										"id": 3272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61674:0:0"
									},
									"scope": 3482,
									"src": "61557:2053:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3448,
										"nodeType": "Block",
										"src": "63865:121:0",
										"statements": [
											{
												"expression": {
													"id": 3434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3429,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3427,
														"src": "63876:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3430,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1808,
																"src": "63885:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1792_storage_$",
																	"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
																}
															},
															"id": 3432,
															"indexExpression": {
																"id": 3431,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3424,
																"src": "63894:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "63885:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1792_storage",
																"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
															}
														},
														"id": 3433,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "endBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1785,
														"src": "63885:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "63876:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 3435,
												"nodeType": "ExpressionStatement",
												"src": "63876:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3436,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3427,
														"src": "63923:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 3437,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "63932:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "63932:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "63923:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3447,
												"nodeType": "IfStatement",
												"src": "63919:59:0",
												"trueBody": {
													"expression": {
														"id": 3445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3440,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3427,
															"src": "63946:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"expression": {
																		"id": 3441,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "63955:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "63955:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toUint32",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 358,
																"src": "63955:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint32)"
																}
															},
															"id": 3444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "63955:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "63946:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 3446,
													"nodeType": "ExpressionStatement",
													"src": "63946:32:0"
												}
											}
										]
									},
									"documentation": {
										"id": 3422,
										"nodeType": "StructuredDocumentation",
										"src": "63618:122:0",
										"text": " @dev Returns last accounted reward block, either the current block number or the endBlock of the pool"
									},
									"id": 3449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_lastAccountedRewardBlock",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3424,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 3449,
												"src": "63781:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63780:14:0"
									},
									"returnParameters": {
										"id": 3428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3427,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 3449,
												"src": "63845:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3426,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "63845:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63844:15:0"
									},
									"scope": 3482,
									"src": "63746:240:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3480,
										"nodeType": "Block",
										"src": "64178:138:0",
										"statements": [
											{
												"assignments": [
													3460
												],
												"declarations": [
													{
														"constant": false,
														"id": 3460,
														"mutability": "mutable",
														"name": "value",
														"nodeType": "VariableDeclaration",
														"scope": 3480,
														"src": "64189:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3459,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "64189:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3469,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_contract$_IERC20Ext_$982",
															"typeString": "contract IERC20Ext"
														},
														"id": 3465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3461,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3452,
															"src": "64205:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Ext_$982",
																"typeString": "contract IERC20Ext"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "64224:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3462,
																"name": "IERC20Ext",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "64214:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Ext_$982_$",
																	"typeString": "type(contract IERC20Ext)"
																}
															},
															"id": 3464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "64214:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Ext_$982",
																"typeString": "contract IERC20Ext"
															}
														},
														"src": "64205:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 3467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "64239:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 3468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "64205:35:0",
													"trueExpression": {
														"id": 3466,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3456,
														"src": "64229:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "64189:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3475,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3452,
															"src": "64283:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Ext_$982",
																"typeString": "contract IERC20Ext"
															}
														},
														{
															"id": 3476,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3454,
															"src": "64290:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3477,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3456,
															"src": "64300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Ext_$982",
																"typeString": "contract IERC20Ext"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20Ext_$982",
																	"typeString": "contract IERC20Ext"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 3470,
																"name": "rewardLocker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1798,
																"src": "64251:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IKyberRewardLocker_$1138",
																	"typeString": "contract IKyberRewardLocker"
																}
															},
															"id": 3472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1037,
															"src": "64251:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_contract$_IERC20Ext_$982_$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (contract IERC20Ext,address,uint256) payable external"
															}
														},
														"id": 3474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 3473,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3460,
																"src": "64276:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "64251:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_contract$_IERC20Ext_$982_$_t_address_$_t_uint256_$returns$__$value",
															"typeString": "function (contract IERC20Ext,address,uint256) payable external"
														}
													},
													"id": 3478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "64251:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3479,
												"nodeType": "ExpressionStatement",
												"src": "64251:57:0"
											}
										]
									},
									"documentation": {
										"id": 3450,
										"nodeType": "StructuredDocumentation",
										"src": "63994:62:0",
										"text": " @dev Call locker contract to lock rewards"
									},
									"id": 3481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_lockReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3452,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 3481,
												"src": "64093:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$982",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 3451,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 982,
													"src": "64093:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$982",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3454,
												"mutability": "mutable",
												"name": "_account",
												"nodeType": "VariableDeclaration",
												"scope": 3481,
												"src": "64119:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64119:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3456,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 3481,
												"src": "64146:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64082:86:0"
									},
									"returnParameters": {
										"id": 3458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "64178:0:0"
									},
									"scope": 3482,
									"src": "64062:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3483,
							"src": "41959:22360:0"
						}
					],
					"src": "120:64201:0"
				},
				"id": 0
			}
		}
	}
}