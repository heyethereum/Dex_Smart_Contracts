{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount0",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount1",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "Burn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount0",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount1",
						"type": "uint256"
					}
				],
				"name": "Mint",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount0In",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount1In",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount0Out",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount1Out",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "feeInPrecision",
						"type": "uint256"
					}
				],
				"name": "Swap",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "vReserve0",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "vReserve1",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "reserve0",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "reserve1",
						"type": "uint256"
					}
				],
				"name": "Sync",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "shortEMA",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "longEMA",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "lastBlockVolume",
						"type": "uint128"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "skipBlock",
						"type": "uint256"
					}
				],
				"name": "UpdateEMA",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "MINIMUM_LIQUIDITY",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "PERMIT_TYPEHASH",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ampBps",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "burn",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amount0",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount1",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "domainSeparator",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "factory",
				"outputs": [
					{
						"internalType": "contract IDMMFactory",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getReserves",
				"outputs": [
					{
						"internalType": "uint112",
						"name": "_reserve0",
						"type": "uint112"
					},
					{
						"internalType": "uint112",
						"name": "_reserve1",
						"type": "uint112"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTradeInfo",
				"outputs": [
					{
						"internalType": "uint112",
						"name": "_reserve0",
						"type": "uint112"
					},
					{
						"internalType": "uint112",
						"name": "_reserve1",
						"type": "uint112"
					},
					{
						"internalType": "uint112",
						"name": "_vReserve0",
						"type": "uint112"
					},
					{
						"internalType": "uint112",
						"name": "_vReserve1",
						"type": "uint112"
					},
					{
						"internalType": "uint256",
						"name": "feeInPrecision",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getVolumeTrendData",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "_shortEMA",
						"type": "uint128"
					},
					{
						"internalType": "uint128",
						"name": "_longEMA",
						"type": "uint128"
					},
					{
						"internalType": "uint128",
						"name": "_currentBlockVolume",
						"type": "uint128"
					},
					{
						"internalType": "uint128",
						"name": "_lastTradeBlock",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20",
						"name": "_token0",
						"type": "address"
					},
					{
						"internalType": "contract IERC20",
						"name": "_token1",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "_ampBps",
						"type": "uint32"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "kLast",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "mint",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "liquidity",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "nonces",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "permit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "skim",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount0Out",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount1Out",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "callbackData",
						"type": "bytes"
					}
				],
				"name": "swap",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "sync",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "token0",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "token1",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"details": "See {IERC20-allowance}."
				},
				"approve(address,uint256)": {
					"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
				},
				"balanceOf(address)": {
					"details": "See {IERC20-balanceOf}."
				},
				"burn(address)": {
					"details": "this low-level function should be called from a contractwhich performs important safety checksuser must transfer LP token to this contract before call burn"
				},
				"decimals()": {
					"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
				},
				"decreaseAllowance(address,uint256)": {
					"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
				},
				"getReserves()": {
					"details": "returns reserve data to calculate amount to add liquidity"
				},
				"getTradeInfo()": {
					"details": "returns data to calculate amountIn, amountOut"
				},
				"increaseAllowance(address,uint256)": {
					"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
				},
				"mint(address)": {
					"details": "this low-level function should be called from a contract                 which performs important safety checks"
				},
				"name()": {
					"details": "Returns the name of the token."
				},
				"skim(address)": {
					"details": "force balances to match reserves"
				},
				"swap(uint256,uint256,address,bytes)": {
					"details": "this low-level function should be called from a contractwhich performs important safety checks"
				},
				"symbol()": {
					"details": "Returns the symbol of the token, usually a shorter version of the name."
				},
				"sync()": {
					"details": "force reserves to match balances"
				},
				"totalSupply()": {
					"details": "See {IERC20-totalSupply}."
				},
				"transfer(address,uint256)": {
					"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
				}
			},
			"stateVariables": {
				"factory": {
					"details": "To make etherscan auto-verify new pool, these variables are not immutable"
				},
				"kLast": {
					"details": "vReserve0 * vReserve1, as of immediately after the most recent liquidity event"
				},
				"reserve0": {
					"details": "uses single storage slot, accessible via getReservesData"
				},
				"vReserve0": {
					"details": "addition param only when amplification factor > 1"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/DMMPool.sol": "DMMPool"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/math/Math.sol": {
			"keccak256": "0x363bd3b45201f07c9b71c2edc96533468cf14a3d029fabd82fddceb1eb3ebd9c",
			"license": "MIT",
			"urls": [
				"bzz-raw://d676d5c3a72e5fea8364a1e3e5b488a959aae08d069995b1274027f3845e6521",
				"dweb:/ipfs/Qma7DL738Wje4G9kcwW9bXwTGY4ePR7SMmsMhbULWqmixE"
			]
		},
		"@openzeppelin/contracts/math/SafeMath.sol": {
			"keccak256": "0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52",
			"license": "MIT",
			"urls": [
				"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c",
				"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR"
			]
		},
		"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3",
			"license": "MIT",
			"urls": [
				"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e",
				"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5",
			"license": "MIT",
			"urls": [
				"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08",
				"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC"
			]
		},
		"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
			"keccak256": "0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc",
			"license": "MIT",
			"urls": [
				"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a",
				"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea",
			"license": "MIT",
			"urls": [
				"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c",
				"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0",
			"license": "MIT",
			"urls": [
				"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f",
				"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"
			]
		},
		"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
			"keccak256": "0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61",
			"license": "MIT",
			"urls": [
				"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182",
				"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK"
			]
		},
		"contracts/DMMPool.sol": {
			"keccak256": "0xfac861cd77e07bc495ff3b502c71d5a1e4d0c57475efef28d8ac2404766cc464",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://25531bcd87ac99687e81a14a0d31de77baa6db721f79e4db56d51fe1da414e24",
				"dweb:/ipfs/QmXZPARAvfuiZXsGXMtiLkWF4tGotZXGEdqHkpVGawACdL"
			]
		},
		"contracts/VolumeTrendRecorder.sol": {
			"keccak256": "0xe6aac84459f42d72ee23507a1ea285806ba7f394533d8d4ec420de0398e16d9c",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://7bb71204897d8143f5997271d0f39437b86751de54fd971af98b170fcab1322a",
				"dweb:/ipfs/QmWzTyaUx1ShMjKxb3211DcsuXRY9xg9SD5g4crnfoqcDJ"
			]
		},
		"contracts/interfaces/IDMMCallee.sol": {
			"keccak256": "0xb559885ffa9c36a059c81b97ef98592ad519cc165930246e8a6db4bf5f66eaee",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://16b383b3d06a8cc29fb6f09d48244eda1fb104740f9a2582acd2f2f5c4e636de",
				"dweb:/ipfs/QmVFbcMhnnvNC4i4G8jTd9e7Sm2qFj6ccHrr9GdR7TgRYm"
			]
		},
		"contracts/interfaces/IDMMFactory.sol": {
			"keccak256": "0x7ed2f27b0bd2fd65146c55fee305559b9c2b5c39f58beb4f8e9a92d7bcd9a3f6",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://6e5e5f3ed631ec243355a650b63ada342a62155a71c88d0878f66eee8133d99d",
				"dweb:/ipfs/QmXq9rbaVuy7bZqPvuCFZnucZ1yzmUfceXZSshiMC9S8oB"
			]
		},
		"contracts/interfaces/IDMMPool.sol": {
			"keccak256": "0xa9ff635e56a7d639beb2d4bc7804d4a53e21925ae3ccceb2e78900957bf72407",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://5304678fe96f99ae584b0ab8c1b64dae94f3c5f8000daf835307d80dc3026ae2",
				"dweb:/ipfs/QmY2hXfkepdu9wLJX1qBsJkgQfnMjXiDakB81ZaVx6BViV"
			]
		},
		"contracts/interfaces/IERC20Metadata.sol": {
			"keccak256": "0xb7fdf4392032b461dac4f1ece50b47dcb5171c9fc99fd95c9bc176b2e6163405",
			"license": "MIT",
			"urls": [
				"bzz-raw://f2c72eca5a0f67009561a9638ea48be71c4ddec0a0004de76ca5ee9d328919d9",
				"dweb:/ipfs/QmU7dexTWxcBzzdXrJ2cqP9rpSbyNos1sxdtxEwFjEC4pn"
			]
		},
		"contracts/interfaces/IERC20Permit.sol": {
			"keccak256": "0x9fbef09a7c8174613a3a3da3d989fd863bdad96a88071bda0debcb3803f640a4",
			"license": "MIT",
			"urls": [
				"bzz-raw://dd53d8fe21e33c015d929d1a0ad40e7e98db54cc62e795dfae2b6a336d1891bf",
				"dweb:/ipfs/QmT6GWNrT8DYqW1z4tW31Me34VHbXgK3aDBtbmNvjtQmrB"
			]
		},
		"contracts/libraries/ERC20Permit.sol": {
			"keccak256": "0x80629e63e9925f111ae9f3e46b999796209a81f474539842b6ed154b1def5e48",
			"license": "MIT",
			"urls": [
				"bzz-raw://f49f742cf4c47b37aed514713abc78449324f637cbf30c651c0661caa6d5042f",
				"dweb:/ipfs/QmX7Jb9twR7cfLyZwCwi9CY6LVQc52WjsorUPfm6dLwY2Q"
			]
		},
		"contracts/libraries/FeeFomula.sol": {
			"keccak256": "0x613b76cc6d6a9ed0c675e2101bd557f714cbb08e3b3ba8d6c84f94c4e8862805",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://a95f811c0f2dc59ad64d8c3f47a3cefc968be4f93a1b52043ce8127cc2694a5b",
				"dweb:/ipfs/QmP4b2r3DMi5FZKtE27TSdCQwpVfJ91oYzSZ837yfVd9BE"
			]
		},
		"contracts/libraries/MathExt.sol": {
			"keccak256": "0x6cfbb067217d3b5ff7a66c3f573b3f327752abbbfcc51ccd531aee8af441e14e",
			"license": "MIT",
			"urls": [
				"bzz-raw://bb05ec5c30b4415dbae89f746d9bc09eb994cfad6506902b4cfa32facefe0f28",
				"dweb:/ipfs/Qmdk6dLWGgwzUqi2YKwCyc5uCuao567JDDBE6A4ekAtW68"
			]
		}
	},
	"version": 1
}