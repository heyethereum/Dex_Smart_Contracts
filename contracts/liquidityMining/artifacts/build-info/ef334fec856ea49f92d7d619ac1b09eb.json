{
	"id": "ef334fec856ea49f92d7d619ac1b09eb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/liquidityMining/KyberFairLaunch.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.6;\r\n//pragma abicoder v2;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport {SafeMath} from \"@openzeppelin/contracts/math/SafeMath.sol\";\r\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\r\nimport {SafeCast} from \"@openzeppelin/contracts/utils/SafeCast.sol\";\r\nimport {IERC20Ext} from \"../manual/IERC20Ext.sol\";\r\nimport {PermissionAdmin} from \"../manual/PermissionAdmin.sol\";\r\nimport {IKyberFairLaunch} from \"../interfaces/liquidityMining/IKyberFairLaunch.sol\";\r\nimport {IKyberRewardLocker} from \"../interfaces/liquidityMining/IKyberRewardLocker.sol\";\r\n\r\n/// FairLaunch contract for Kyber DMM Liquidity Mining program\r\n/// Allow stakers to stake LP tokens and receive reward tokens\r\n/// Allow extend or renew a pool to continue/restart the LM program\r\n/// When harvesting, rewards will be transferred to a RewardLocker\r\n/// Support multiple reward tokens, reward tokens must be distinct and immutable\r\ncontract KyberFairLaunch is IKyberFairLaunch, PermissionAdmin, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    using SafeCast for uint256;\r\n    using SafeERC20 for IERC20Ext;\r\n\r\n    uint256 internal constant PRECISION = 1e12;\r\n\r\n    struct UserRewardData {\r\n        uint256 unclaimedReward;\r\n        uint256 lastRewardPerShare;\r\n    }\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount; // How many Staking tokens the user has provided.\r\n        mapping(uint256 => UserRewardData) userRewardData;\r\n        //\r\n        // Basically, any point in time, the amount of reward token\r\n        // entitled to a user but is pending to be distributed is:\r\n        //\r\n        //   pending reward = user.unclaimAmount + (user.amount * (pool.accRewardPerShare - user.lastRewardPerShare)\r\n        //\r\n        // Whenever a user deposits or withdraws Staking tokens to a pool. Here's what happens:\r\n        //   1. The pool's `accRewardPerShare` (and `lastRewardBlock`) gets updated.\r\n        //   2. User receives the pending reward sent to his/her address.\r\n        //   3. User's `lastRewardPerShare` gets updated.\r\n        //   4. User's `amount` gets updated.\r\n    }\r\n\r\n    struct PoolRewardData {\r\n        uint256 rewardPerBlock;\r\n        uint256 accRewardPerShare;\r\n    }\r\n    // Info of each pool\r\n    // poolRewardData: reward data for each reward token\r\n    //      rewardPerBlock: amount of reward token per block\r\n    //      accRewardPerShare: accumulated reward per share of token\r\n    // totalStake: total amount of stakeToken has been staked\r\n    // stakeToken: token to stake, should be an ERC20 token\r\n    // startBlock: the block that the reward starts\r\n    // endBlock: the block that the reward ends\r\n    // lastRewardBlock: last block number that rewards distribution occurs\r\n    struct PoolInfo {\r\n        uint256 totalStake;\r\n        address stakeToken;\r\n        uint32 startBlock;\r\n        uint32 endBlock;\r\n        uint32 lastRewardBlock;\r\n        mapping(uint256 => PoolRewardData) poolRewardData;\r\n    }\r\n\r\n    // check if a pool exists for a stakeToken\r\n    mapping(address => bool) public poolExists;\r\n    // contract for locking reward\r\n    IKyberRewardLocker public immutable rewardLocker;\r\n    // list reward tokens, use 0x0 for native token, shouldn't be too many reward tokens\r\n    // don't validate values or length by trusting the deployer\r\n    address[] public rewardTokens;\r\n\r\n    // Info of each pool.\r\n    uint256 public override poolLength;\r\n    mapping(uint256 => PoolInfo) internal poolInfo;\r\n    // Info of each user that stakes Staking tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) internal userInfo;\r\n\r\n    event AddNewPool(\r\n        address indexed stakeToken,\r\n        uint32 indexed startBlock,\r\n        uint32 indexed endBlock,\r\n        uint256[] rewardPerBlocks\r\n    );\r\n    event RenewPool(\r\n        uint256 indexed pid,\r\n        uint32 indexed startBlock,\r\n        uint32 indexed endBlock,\r\n        uint256[] rewardPerBlocks\r\n    );\r\n    event UpdatePool(\r\n        uint256 indexed pid,\r\n        uint32 indexed endBlock,\r\n        uint256[] rewardPerBlocks\r\n    );\r\n    event Deposit(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        uint256 indexed blockNumber,\r\n        uint256 amount\r\n    );\r\n    event Withdraw(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        uint256 indexed blockNumber,\r\n        uint256 amount\r\n    );\r\n    event Harvest(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        address indexed rewardToken,\r\n        uint256 lockedAmount,\r\n        uint256 blockNumber\r\n    );\r\n    event EmergencyWithdraw(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        uint256 indexed blockNumber,\r\n        uint256 amount\r\n    );\r\n\r\n    constructor(\r\n        address _admin,\r\n        address[] memory _rewardTokens,\r\n        IKyberRewardLocker _rewardLocker\r\n    ) PermissionAdmin(_admin) {\r\n        rewardTokens = _rewardTokens;\r\n        rewardLocker = _rewardLocker;\r\n\r\n        // approve allowance to reward locker\r\n        for (uint256 i = 0; i < _rewardTokens.length; i++) {\r\n            if (_rewardTokens[i] != address(0)) {\r\n                IERC20Ext(_rewardTokens[i]).safeApprove(\r\n                    address(_rewardLocker),\r\n                    type(uint256).max\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    /**\r\n     * @dev Allow admin to withdraw only reward tokens\r\n     */\r\n    function adminWithdraw(uint256 rewardTokenIndex, uint256 amount)\r\n        external\r\n        onlyAdmin\r\n    {\r\n        IERC20Ext rewardToken = IERC20Ext(rewardTokens[rewardTokenIndex]);\r\n        if (rewardToken == IERC20Ext(0)) {\r\n            (bool success, ) = msg.sender.call{value: amount}(\"\");\r\n            require(success, \"transfer reward token failed\");\r\n        } else {\r\n            rewardToken.safeTransfer(msg.sender, amount);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Add a new lp to the pool. Can only be called by the admin.\r\n     * @param _stakeToken: token to be staked to the pool\r\n     * @param _startBlock: block where the reward starts\r\n     * @param _endBlock: block where the reward ends\r\n     * @param _rewardPerBlocks: amount of reward token per block for the pool for each reward token\r\n     */\r\n    function addPool(\r\n        address _stakeToken,\r\n        uint32 _startBlock,\r\n        uint32 _endBlock,\r\n        uint256[] calldata _rewardPerBlocks\r\n    ) external override onlyAdmin {\r\n        require(!poolExists[_stakeToken], \"add: duplicated pool\");\r\n        require(_stakeToken != address(0), \"add: invalid stake token\");\r\n        require(\r\n            rewardTokens.length == _rewardPerBlocks.length,\r\n            \"add: invalid length\"\r\n        );\r\n\r\n        require(\r\n            _startBlock > block.number && _endBlock > _startBlock,\r\n            \"add: invalid blocks\"\r\n        );\r\n\r\n        poolInfo[poolLength].stakeToken = _stakeToken;\r\n        poolInfo[poolLength].startBlock = _startBlock;\r\n        poolInfo[poolLength].endBlock = _endBlock;\r\n        poolInfo[poolLength].lastRewardBlock = _startBlock;\r\n\r\n        for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r\n            poolInfo[poolLength].poolRewardData[i] = PoolRewardData({\r\n                rewardPerBlock: _rewardPerBlocks[i],\r\n                accRewardPerShare: 0\r\n            });\r\n        }\r\n\r\n        poolLength++;\r\n\r\n        poolExists[_stakeToken] = true;\r\n\r\n        emit AddNewPool(_stakeToken, _startBlock, _endBlock, _rewardPerBlocks);\r\n    }\r\n\r\n    /**\r\n     * @dev Renew a pool to start another liquidity mining program\r\n     * @param _pid: id of the pool to renew, must be pool that has not started or already ended\r\n     * @param _startBlock: block where the reward starts\r\n     * @param _endBlock: block where the reward ends\r\n     * @param _rewardPerBlocks: amount of reward token per block for the pool\r\n     *   0 if we want to stop the pool from accumulating rewards\r\n     */\r\n    function renewPool(\r\n        uint256 _pid,\r\n        uint32 _startBlock,\r\n        uint32 _endBlock,\r\n        uint256[] calldata _rewardPerBlocks\r\n    ) external override onlyAdmin {\r\n        updatePoolRewards(_pid);\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        // check if pool has not started or already ended\r\n        require(\r\n            pool.startBlock > block.number || pool.endBlock < block.number,\r\n            \"renew: invalid pool state to renew\"\r\n        );\r\n        // checking data of new pool\r\n        require(\r\n            rewardTokens.length == _rewardPerBlocks.length,\r\n            \"renew: invalid length\"\r\n        );\r\n        require(\r\n            _startBlock > block.number && _endBlock > _startBlock,\r\n            \"renew: invalid blocks\"\r\n        );\r\n\r\n        pool.startBlock = _startBlock;\r\n        pool.endBlock = _endBlock;\r\n        pool.lastRewardBlock = _startBlock;\r\n\r\n        for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r\n            pool.poolRewardData[i].rewardPerBlock = _rewardPerBlocks[i];\r\n        }\r\n\r\n        emit RenewPool(_pid, _startBlock, _endBlock, _rewardPerBlocks);\r\n    }\r\n\r\n    /**\r\n     * @dev Update a pool, allow to change end block, reward per block\r\n     * @param _pid: pool id to be renew\r\n     * @param _endBlock: block where the reward ends\r\n     * @param _rewardPerBlocks: amount of reward token per block for the pool,\r\n     *   0 if we want to stop the pool from accumulating rewards\r\n     */\r\n    function updatePool(\r\n        uint256 _pid,\r\n        uint32 _endBlock,\r\n        uint256[] calldata _rewardPerBlocks\r\n    ) external override onlyAdmin {\r\n        updatePoolRewards(_pid);\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n\r\n        // should call renew pool if the pool has ended\r\n        require(pool.endBlock > block.number, \"update: pool already ended\");\r\n        require(\r\n            rewardTokens.length == _rewardPerBlocks.length,\r\n            \"update: invalid length\"\r\n        );\r\n        require(\r\n            _endBlock > block.number && _endBlock > pool.startBlock,\r\n            \"update: invalid end block\"\r\n        );\r\n\r\n        pool.endBlock = _endBlock;\r\n        for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r\n            pool.poolRewardData[i].rewardPerBlock = _rewardPerBlocks[i];\r\n        }\r\n\r\n        emit UpdatePool(_pid, _endBlock, _rewardPerBlocks);\r\n    }\r\n\r\n    /**\r\n     * @dev Deposit tokens to accumulate rewards\r\n     * @param _pid: id of the pool\r\n     * @param _amount: amount of stakeToken to be deposited\r\n     * @param _shouldHarvest: whether to harvest the reward or not\r\n     */\r\n    function deposit(\r\n        uint256 _pid,\r\n        uint256 _amount,\r\n        bool _shouldHarvest\r\n    ) external override nonReentrant {\r\n        // update pool rewards, user's rewards\r\n        updatePoolRewards(_pid);\r\n        _updateUserReward(msg.sender, _pid, _shouldHarvest);\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n\r\n        // collect stakeToken\r\n        IERC20Ext(pool.stakeToken).safeTransferFrom(\r\n            msg.sender,\r\n            address(this),\r\n            _amount\r\n        );\r\n\r\n        // update user staked amount, and total staked amount for the pool\r\n        user.amount = user.amount.add(_amount);\r\n        pool.totalStake = pool.totalStake.add(_amount);\r\n\r\n        emit Deposit(msg.sender, _pid, block.number, _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraw token (of the sender) from pool, also harvest rewards\r\n     * @param _pid: id of the pool\r\n     * @param _amount: amount of stakeToken to withdraw\r\n     */\r\n    function withdraw(uint256 _pid, uint256 _amount)\r\n        external\r\n        override\r\n        nonReentrant\r\n    {\r\n        _withdraw(_pid, _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraw all tokens (of the sender) from pool, also harvest reward\r\n     * @param _pid: id of the pool\r\n     */\r\n    function withdrawAll(uint256 _pid) external override nonReentrant {\r\n        _withdraw(_pid, userInfo[_pid][msg.sender].amount);\r\n    }\r\n\r\n    /**\r\n     * @notice EMERGENCY USAGE ONLY, USER'S REWARDS WILL BE RESET\r\n     * @dev Emergency withdrawal function to allow withdraw all deposited tokens (of the sender)\r\n     *   and reset all rewards\r\n     * @param _pid: id of the pool\r\n     */\r\n    function emergencyWithdraw(uint256 _pid) external override nonReentrant {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        uint256 amount = user.amount;\r\n\r\n        user.amount = 0;\r\n        for (uint256 i = 0; i < rewardTokens.length; i++) {\r\n            UserRewardData storage rewardData = user.userRewardData[i];\r\n            rewardData.lastRewardPerShare = 0;\r\n            rewardData.unclaimedReward = 0;\r\n        }\r\n\r\n        pool.totalStake = pool.totalStake.sub(amount);\r\n\r\n        if (amount > 0) {\r\n            IERC20Ext(pool.stakeToken).safeTransfer(msg.sender, amount);\r\n        }\r\n\r\n        emit EmergencyWithdraw(msg.sender, _pid, block.number, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Harvest rewards from multiple pools for the sender\r\n     *   combine rewards from all pools and only transfer once to save gas\r\n     */\r\n    function harvestMultiplePools(uint256[] calldata _pids) external override {\r\n        address[] memory rTokens = rewardTokens;\r\n        uint256[] memory totalRewards = new uint256[](rTokens.length);\r\n        address account = msg.sender;\r\n        uint256 pid;\r\n\r\n        for (uint256 i = 0; i < _pids.length; i++) {\r\n            pid = _pids[i];\r\n            updatePoolRewards(pid);\r\n            // update user reward without harvesting\r\n            _updateUserReward(account, pid, false);\r\n\r\n            for (uint256 j = 0; j < rTokens.length; j++) {\r\n                uint256 reward = userInfo[pid][account]\r\n                    .userRewardData[j]\r\n                    .unclaimedReward;\r\n                if (reward > 0) {\r\n                    totalRewards[j] = totalRewards[j].add(reward);\r\n                    userInfo[pid][account]\r\n                        .userRewardData[j]\r\n                        .unclaimedReward = 0;\r\n                    emit Harvest(\r\n                        account,\r\n                        pid,\r\n                        rTokens[j],\r\n                        reward,\r\n                        block.number\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        for (uint256 i = 0; i < totalRewards.length; i++) {\r\n            if (totalRewards[i] > 0) {\r\n                _lockReward(IERC20Ext(rTokens[i]), account, totalRewards[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Get pending rewards of a user from a pool, mostly for front-end\r\n     * @param _pid: id of the pool\r\n     * @param _user: user to check for pending rewards\r\n     */\r\n    function pendingRewards(uint256 _pid, address _user)\r\n        external\r\n        view\r\n        override\r\n        returns (uint256[] memory rewards)\r\n    {\r\n        uint256 rTokensLength = rewardTokens.length;\r\n        rewards = new uint256[](rTokensLength);\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 _totalStake = pool.totalStake;\r\n        uint256 _poolLastRewardBlock = pool.lastRewardBlock;\r\n        uint32 lastAccountedBlock = _lastAccountedRewardBlock(_pid);\r\n        for (uint256 i = 0; i < rTokensLength; i++) {\r\n            uint256 _accRewardPerShare = pool\r\n                .poolRewardData[i]\r\n                .accRewardPerShare;\r\n            if (lastAccountedBlock > _poolLastRewardBlock && _totalStake != 0) {\r\n                uint256 reward = (lastAccountedBlock - _poolLastRewardBlock)\r\n                    .mul(pool.poolRewardData[i].rewardPerBlock);\r\n                _accRewardPerShare = _accRewardPerShare.add(\r\n                    reward.mul(PRECISION) / _totalStake\r\n                );\r\n            }\r\n\r\n            rewards[i] =\r\n                user.amount.mul(\r\n                    _accRewardPerShare.sub(\r\n                        user.userRewardData[i].lastRewardPerShare\r\n                    )\r\n                ) /\r\n                PRECISION;\r\n            rewards[i] = rewards[i].add(user.userRewardData[i].unclaimedReward);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return list reward tokens\r\n     */\r\n    function getRewardTokens()\r\n        external\r\n        view\r\n        override\r\n        returns (address[] memory)\r\n    {\r\n        return rewardTokens;\r\n    }\r\n\r\n    /**\r\n     * @dev Return full details of a pool\r\n     */\r\n    function getPoolInfo(uint256 _pid)\r\n        external\r\n        view\r\n        override\r\n        returns (\r\n            uint256 totalStake,\r\n            address stakeToken,\r\n            uint32 startBlock,\r\n            uint32 endBlock,\r\n            uint32 lastRewardBlock,\r\n            uint256[] memory rewardPerBlocks,\r\n            uint256[] memory accRewardPerShares\r\n        )\r\n    {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        (totalStake, stakeToken, startBlock, endBlock, lastRewardBlock) = (\r\n            pool.totalStake,\r\n            pool.stakeToken,\r\n            pool.startBlock,\r\n            pool.endBlock,\r\n            pool.lastRewardBlock\r\n        );\r\n        rewardPerBlocks = new uint256[](rewardTokens.length);\r\n        accRewardPerShares = new uint256[](rewardTokens.length);\r\n        for (uint256 i = 0; i < rewardTokens.length; i++) {\r\n            rewardPerBlocks[i] = pool.poolRewardData[i].rewardPerBlock;\r\n            accRewardPerShares[i] = pool.poolRewardData[i].accRewardPerShare;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return user's info including deposited amount and reward data\r\n     */\r\n    function getUserInfo(uint256 _pid, address _account)\r\n        external\r\n        view\r\n        override\r\n        returns (\r\n            uint256 amount,\r\n            uint256[] memory unclaimedRewards,\r\n            uint256[] memory lastRewardPerShares\r\n        )\r\n    {\r\n        UserInfo storage user = userInfo[_pid][_account];\r\n        amount = user.amount;\r\n        unclaimedRewards = new uint256[](rewardTokens.length);\r\n        lastRewardPerShares = new uint256[](rewardTokens.length);\r\n        for (uint256 i = 0; i < rewardTokens.length; i++) {\r\n            unclaimedRewards[i] = user.userRewardData[i].unclaimedReward;\r\n            lastRewardPerShares[i] = user.userRewardData[i].lastRewardPerShare;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Harvest rewards from a pool for the sender\r\n     * @param _pid: id of the pool\r\n     */\r\n    function harvest(uint256 _pid) public override {\r\n        updatePoolRewards(_pid);\r\n        _updateUserReward(msg.sender, _pid, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Update rewards for one pool\r\n     */\r\n    function updatePoolRewards(uint256 _pid) public override {\r\n        require(_pid < poolLength, \"invalid pool id\");\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        uint32 lastAccountedBlock = _lastAccountedRewardBlock(_pid);\r\n        if (lastAccountedBlock <= pool.lastRewardBlock) return;\r\n        uint256 _totalStake = pool.totalStake;\r\n        if (_totalStake == 0) {\r\n            pool.lastRewardBlock = lastAccountedBlock;\r\n            return;\r\n        }\r\n        uint256 numberBlocks = lastAccountedBlock - pool.lastRewardBlock;\r\n        for (uint256 i = 0; i < rewardTokens.length; i++) {\r\n            PoolRewardData storage rewardData = pool.poolRewardData[i];\r\n            uint256 reward = numberBlocks.mul(rewardData.rewardPerBlock);\r\n            rewardData.accRewardPerShare = rewardData.accRewardPerShare.add(\r\n                reward.mul(PRECISION) / _totalStake\r\n            );\r\n        }\r\n        pool.lastRewardBlock = lastAccountedBlock;\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraw _amount of stakeToken from pool _pid, also harvest reward for the sender\r\n     */\r\n    function _withdraw(uint256 _pid, uint256 _amount) internal {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        require(user.amount >= _amount, \"withdraw: insufficient amount\");\r\n\r\n        // update pool reward and harvest\r\n        updatePoolRewards(_pid);\r\n        _updateUserReward(msg.sender, _pid, true);\r\n\r\n        user.amount = user.amount.sub(_amount);\r\n        pool.totalStake = pool.totalStake.sub(_amount);\r\n\r\n        IERC20Ext(pool.stakeToken).safeTransfer(msg.sender, _amount);\r\n\r\n        emit Withdraw(msg.sender, _pid, block.number, _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Update reward of _to address from pool _pid, harvest if needed\r\n     */\r\n    function _updateUserReward(\r\n        address _to,\r\n        uint256 _pid,\r\n        bool shouldHarvest\r\n    ) internal {\r\n        uint256 userAmount = userInfo[_pid][_to].amount;\r\n        uint256 rTokensLength = rewardTokens.length;\r\n\r\n        if (userAmount == 0) {\r\n            // update user last reward per share to the latest pool reward per share\r\n            // by right if user.amount is 0, user.unclaimedReward should be 0 as well,\r\n            // except when user uses emergencyWithdraw function\r\n            for (uint256 i = 0; i < rTokensLength; i++) {\r\n                userInfo[_pid][_to]\r\n                    .userRewardData[i]\r\n                    .lastRewardPerShare = poolInfo[_pid]\r\n                    .poolRewardData[i]\r\n                    .accRewardPerShare;\r\n            }\r\n            return;\r\n        }\r\n\r\n        for (uint256 i = 0; i < rTokensLength; i++) {\r\n            uint256 lastAccRewardPerShare = poolInfo[_pid]\r\n                .poolRewardData[i]\r\n                .accRewardPerShare;\r\n            UserRewardData storage rewardData = userInfo[_pid][_to]\r\n                .userRewardData[i];\r\n            // user's unclaim reward + user's amount * (pool's accRewardPerShare - user's lastRewardPerShare) / precision\r\n            uint256 _pending = userAmount.mul(\r\n                lastAccRewardPerShare.sub(rewardData.lastRewardPerShare)\r\n            ) / PRECISION;\r\n            _pending = _pending.add(rewardData.unclaimedReward);\r\n\r\n            rewardData.unclaimedReward = shouldHarvest ? 0 : _pending;\r\n            // update user last reward per share to the latest pool reward per share\r\n            rewardData.lastRewardPerShare = lastAccRewardPerShare;\r\n\r\n            if (shouldHarvest && _pending > 0) {\r\n                _lockReward(IERC20Ext(rewardTokens[i]), _to, _pending);\r\n                emit Harvest(\r\n                    _to,\r\n                    _pid,\r\n                    rewardTokens[i],\r\n                    _pending,\r\n                    block.number\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns last accounted reward block, either the current block number or the endBlock of the pool\r\n     */\r\n    function _lastAccountedRewardBlock(uint256 _pid)\r\n        internal\r\n        view\r\n        returns (uint32 _value)\r\n    {\r\n        _value = poolInfo[_pid].endBlock;\r\n        if (_value > block.number) _value = block.number.toUint32();\r\n    }\r\n\r\n    /**\r\n     * @dev Call locker contract to lock rewards\r\n     */\r\n    function _lockReward(\r\n        IERC20Ext token,\r\n        address _account,\r\n        uint256 _amount\r\n    ) internal {\r\n        uint256 value = token == IERC20Ext(0) ? _amount : 0;\r\n        rewardLocker.lock{value: value}(token, _account, _amount);\r\n    }\r\n}\r\n"
			},
			"contracts/interfaces/liquidityMining/IKyberRewardLocker.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.6;\r\npragma abicoder v2;\r\n\r\nimport {IERC20Ext} from \"../../manual/IERC20Ext.sol\";\r\n\r\ninterface IKyberRewardLocker {\r\n    struct VestingSchedule {\r\n        uint64 startBlock;\r\n        uint64 endBlock;\r\n        uint128 quantity;\r\n        uint128 vestedQuantity;\r\n    }\r\n\r\n    event VestingEntryCreated(\r\n        IERC20Ext indexed token,\r\n        address indexed beneficiary,\r\n        uint256 startBlock,\r\n        uint256 endBlock,\r\n        uint256 quantity,\r\n        uint256 index\r\n    );\r\n\r\n    event VestingEntryQueued(\r\n        uint256 indexed index,\r\n        IERC20Ext indexed token,\r\n        address indexed beneficiary,\r\n        uint256 quantity\r\n    );\r\n\r\n    event Vested(\r\n        IERC20Ext indexed token,\r\n        address indexed beneficiary,\r\n        uint256 vestedQuantity,\r\n        uint256 index\r\n    );\r\n\r\n    /**\r\n     * @dev queue a vesting schedule starting from now\r\n     */\r\n    function lock(\r\n        IERC20Ext token,\r\n        address account,\r\n        uint256 amount\r\n    ) external payable;\r\n\r\n    /**\r\n     * @dev queue a vesting schedule\r\n     */\r\n    function lockWithStartBlock(\r\n        IERC20Ext token,\r\n        address account,\r\n        uint256 quantity,\r\n        uint256 startBlock\r\n    ) external payable;\r\n\r\n    /**\r\n     * @dev vest all completed schedules for multiple tokens\r\n     */\r\n    function vestCompletedSchedulesForMultipleTokens(\r\n        IERC20Ext[] calldata tokens\r\n    ) external returns (uint256[] memory vestedAmounts);\r\n\r\n    /**\r\n     * @dev claim multiple tokens for specific vesting schedule,\r\n     *      if schedule has not ended yet, claiming amounts are linear with vesting blocks\r\n     */\r\n    function vestScheduleForMultipleTokensAtIndices(\r\n        IERC20Ext[] calldata tokens,\r\n        uint256[][] calldata indices\r\n    ) external returns (uint256[] memory vestedAmounts);\r\n\r\n    /**\r\n     * @dev for all completed schedule, claim token\r\n     */\r\n    function vestCompletedSchedules(IERC20Ext token) external returns (uint256);\r\n\r\n    /**\r\n     * @dev claim token for specific vesting schedule,\r\n     * @dev if schedule has not ended yet, claiming amount is linear with vesting blocks\r\n     */\r\n    function vestScheduleAtIndices(IERC20Ext token, uint256[] calldata indexes)\r\n        external\r\n        returns (uint256);\r\n\r\n    /**\r\n     * @dev claim token for specific vesting schedule from startIndex to endIndex\r\n     */\r\n    function vestSchedulesInRange(\r\n        IERC20Ext token,\r\n        uint256 startIndex,\r\n        uint256 endIndex\r\n    ) external returns (uint256);\r\n\r\n    /**\r\n     * @dev length of vesting schedules array\r\n     */\r\n    function numVestingSchedules(address account, IERC20Ext token)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    /**\r\n     * @dev get detailed of each vesting schedule\r\n     */\r\n    function getVestingScheduleAtIndex(\r\n        address account,\r\n        IERC20Ext token,\r\n        uint256 index\r\n    ) external view returns (VestingSchedule memory);\r\n\r\n    /**\r\n     * @dev get vesting shedules array\r\n     */\r\n    function getVestingSchedules(address account, IERC20Ext token)\r\n        external\r\n        view\r\n        returns (VestingSchedule[] memory schedules);\r\n}\r\n"
			},
			"contracts/interfaces/liquidityMining/IKyberFairLaunch.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.6;\r\npragma abicoder v2;\r\n\r\ninterface IKyberFairLaunch {\r\n    /**\r\n     * @dev Add a new lp to the pool. Can only be called by the admin.\r\n     * @param _stakeToken: token to be staked to the pool\r\n     * @param _startBlock: block where the reward starts\r\n     * @param _endBlock: block where the reward ends\r\n     * @param _rewardPerBlocks: amount of reward token per block for the pool\r\n     */\r\n    function addPool(\r\n        address _stakeToken,\r\n        uint32 _startBlock,\r\n        uint32 _endBlock,\r\n        uint256[] calldata _rewardPerBlocks\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Renew a pool to start another liquidity mining program\r\n     * @param _pid: id of the pool to renew, must be pool that has not started or already ended\r\n     * @param _startBlock: block where the reward starts\r\n     * @param _endBlock: block where the reward ends\r\n     * @param _rewardPerBlocks: amount of reward token per block for the pool\r\n     *   0 if we want to stop the pool from accumulating rewards\r\n     */\r\n    function renewPool(\r\n        uint256 _pid,\r\n        uint32 _startBlock,\r\n        uint32 _endBlock,\r\n        uint256[] calldata _rewardPerBlocks\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Update a pool, allow to change end block, reward per block\r\n     * @param _pid: pool id to be renew\r\n     * @param _endBlock: block where the reward ends\r\n     * @param _rewardPerBlocks: amount of reward token per block for the pool\r\n     *   0 if we want to stop the pool from accumulating rewards\r\n     */\r\n    function updatePool(\r\n        uint256 _pid,\r\n        uint32 _endBlock,\r\n        uint256[] calldata _rewardPerBlocks\r\n    ) external;\r\n\r\n    /**\r\n     * @dev deposit to tokens to accumulate rewards\r\n     * @param _pid: id of the pool\r\n     * @param _amount: amount of stakeToken to be deposited\r\n     * @param _shouldHarvest: whether to harvest the reward or not\r\n     */\r\n    function deposit(\r\n        uint256 _pid,\r\n        uint256 _amount,\r\n        bool _shouldHarvest\r\n    ) external;\r\n\r\n    /**\r\n     * @dev withdraw token (of the sender) from pool, also harvest reward\r\n     * @param _pid: id of the pool\r\n     * @param _amount: amount of stakeToken to withdraw\r\n     */\r\n    function withdraw(uint256 _pid, uint256 _amount) external;\r\n\r\n    /**\r\n     * @dev withdraw all tokens (of the sender) from pool, also harvest reward\r\n     * @param _pid: id of the pool\r\n     */\r\n    function withdrawAll(uint256 _pid) external;\r\n\r\n    /**\r\n     * @dev emergency withdrawal function to allow withdraw all deposited token (of the sender)\r\n     *   without harvesting the reward\r\n     * @param _pid: id of the pool\r\n     */\r\n    function emergencyWithdraw(uint256 _pid) external;\r\n\r\n    /**\r\n     * @dev harvest reward from pool for the sender\r\n     * @param _pid: id of the pool\r\n     */\r\n    function harvest(uint256 _pid) external;\r\n\r\n    /**\r\n     * @dev harvest rewards from multiple pools for the sender\r\n     */\r\n    function harvestMultiplePools(uint256[] calldata _pids) external;\r\n\r\n    /**\r\n     * @dev update reward for one pool\r\n     */\r\n    function updatePoolRewards(uint256 _pid) external;\r\n\r\n    /**\r\n     * @dev return the total of pools that have been added\r\n     */\r\n    function poolLength() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev return full details of a pool\r\n     */\r\n    function getPoolInfo(uint256 _pid)\r\n        external\r\n        view\r\n        returns (\r\n            uint256 totalStake,\r\n            address stakeToken,\r\n            uint32 startBlock,\r\n            uint32 endBlock,\r\n            uint32 lastRewardBlock,\r\n            uint256[] memory rewardPerBlocks,\r\n            uint256[] memory accRewardPerShares\r\n        );\r\n\r\n    /**\r\n     * @dev get user's info\r\n     */\r\n    function getUserInfo(uint256 _pid, address _account)\r\n        external\r\n        view\r\n        returns (\r\n            uint256 amount,\r\n            uint256[] memory unclaimedRewards,\r\n            uint256[] memory lastRewardPerShares\r\n        );\r\n\r\n    /**\r\n     * @dev return list reward tokens\r\n     */\r\n    function getRewardTokens() external view returns (address[] memory);\r\n\r\n    /**\r\n     * @dev get pending reward of a user from a pool, mostly for front-end\r\n     * @param _pid: id of the pool\r\n     * @param _user: user to check for pending rewards\r\n     */\r\n    function pendingRewards(uint256 _pid, address _user)\r\n        external\r\n        view\r\n        returns (uint256[] memory rewards);\r\n}\r\n"
			},
			"contracts/manual/PermissionAdmin.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.7.6;\r\n\r\nabstract contract PermissionAdmin {\r\n    address public admin;\r\n    address public pendingAdmin;\r\n\r\n    event AdminClaimed(address newAdmin, address previousAdmin);\r\n\r\n    event TransferAdminPending(address pendingAdmin);\r\n\r\n    constructor(address _admin) {\r\n        require(_admin != address(0), \"admin 0\");\r\n        admin = _admin;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, \"only admin\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current admin to set the pendingAdmin address.\r\n     * @param newAdmin The address to transfer ownership to.\r\n     */\r\n    function transferAdmin(address newAdmin) public onlyAdmin {\r\n        require(newAdmin != address(0), \"new admin 0\");\r\n        emit TransferAdminPending(newAdmin);\r\n        pendingAdmin = newAdmin;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current admin to set the admin in one tx. Useful initial deployment.\r\n     * @param newAdmin The address to transfer ownership to.\r\n     */\r\n    function transferAdminQuickly(address newAdmin) public onlyAdmin {\r\n        require(newAdmin != address(0), \"admin 0\");\r\n        emit TransferAdminPending(newAdmin);\r\n        emit AdminClaimed(newAdmin, admin);\r\n        admin = newAdmin;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the pendingAdmin address to finalize the change admin process.\r\n     */\r\n    function claimAdmin() public {\r\n        require(pendingAdmin == msg.sender, \"not pending\");\r\n        emit AdminClaimed(pendingAdmin, admin);\r\n        admin = pendingAdmin;\r\n        pendingAdmin = address(0);\r\n    }\r\n}\r\n"
			},
			"contracts/manual/IERC20Ext.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.7.6;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface extending ERC20 standard to include decimals() as\r\n *      it is optional in the OpenZeppelin IERC20 interface.\r\n */\r\ninterface IERC20Ext is IERC20 {\r\n    /**\r\n     * @dev This function is required as Kyber requires to interact\r\n     *      with token.decimals() with many of its operations.\r\n     */\r\n    function decimals() external view returns (uint8 digits);\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value < 2**128, \"SafeCast: value doesn\\'t fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value < 2**64, \"SafeCast: value doesn\\'t fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value < 2**32, \"SafeCast: value doesn\\'t fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value < 2**16, \"SafeCast: value doesn\\'t fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits.\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value < 2**8, \"SafeCast: value doesn\\'t fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128) {\n        require(value >= -2**127 && value < 2**127, \"SafeCast: value doesn\\'t fit in 128 bits\");\n        return int128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64) {\n        require(value >= -2**63 && value < 2**63, \"SafeCast: value doesn\\'t fit in 64 bits\");\n        return int64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32) {\n        require(value >= -2**31 && value < 2**31, \"SafeCast: value doesn\\'t fit in 32 bits\");\n        return int32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16) {\n        require(value >= -2**15 && value < 2**15, \"SafeCast: value doesn\\'t fit in 16 bits\");\n        return int16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits.\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8) {\n        require(value >= -2**7 && value < 2**7, \"SafeCast: value doesn\\'t fit in 8 bits\");\n        return int8(value);\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        require(value < 2**255, \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor () internal {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ed91d7ee35e69b03bc70ba7df46ba2c319a80b5211d1963c6d763b8ea7c914c764736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ed91d7ee35e69b03bc70ba7df46ba2c319a80b5211d1963c6d763b8ea7c914c764736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED SWAP2 0xD7 0xEE CALLDATALOAD 0xE6 SWAP12 SUB 0xBC PUSH17 0xBA7DF46BA2C319A80B5211D1963C6D763B DUP15 0xA7 0xC9 EQ 0xC7 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "630:6594:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ed91d7ee35e69b03bc70ba7df46ba2c319a80b5211d1963c6d763b8ea7c914c764736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED SWAP2 0xD7 0xEE CALLDATALOAD 0xE6 SWAP12 SUB 0xBC PUSH17 0xBA7DF46BA2C319A80B5211D1963C6D763B DUP15 0xA7 0xC9 EQ 0xC7 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "630:6594:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ed91d7ee35e69b03bc70ba7df46ba2c319a80b5211d1963c6d763b8ea7c914c764736f6c63430007060033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":616:3720  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":616:3720  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206d77f1722e169b5b3c12766546ed8a851561fd04e36e4756124443be283c8e1e64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d77f1722e169b5b3c12766546ed8a851561fd04e36e4756124443be283c8e1e64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x77F1722E169B5B3C12766546ED8A DUP6 ISZERO PUSH2 0xFD04 0xE3 PUSH15 0x4756124443BE283C8E1E64736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "616:3104:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d77f1722e169b5b3c12766546ed8a851561fd04e36e4756124443be283c8e1e64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x77F1722E169B5B3C12766546ED8A DUP6 ISZERO PUSH2 0xFD04 0xE3 PUSH15 0x4756124443BE283C8E1E64736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "616:3104:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206d77f1722e169b5b3c12766546ed8a851561fd04e36e4756124443be283c8e1e64736f6c63430007060033",
									".code": [
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":134:7818  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":134:7818  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fb5bb9debea9bd8962c622d14ce3aa3ba0084fd976b1d98f62700c8d45bbfbd664736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb5bb9debea9bd8962c622d14ce3aa3ba0084fd976b1d98f62700c8d45bbfbd664736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB JUMPDEST 0xB9 0xDE 0xBE 0xA9 0xBD DUP10 PUSH3 0xC622D1 0x4C 0xE3 0xAA EXTCODESIZE LOG0 ADDMOD 0x4F 0xD9 PUSH23 0xB1D98F62700C8D45BBFBD664736F6C6343000706003300 ",
							"sourceMap": "134:7684:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb5bb9debea9bd8962c622d14ce3aa3ba0084fd976b1d98f62700c8d45bbfbd664736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB JUMPDEST 0xB9 0xDE 0xBE 0xA9 0xBD DUP10 PUSH3 0xC622D1 0x4C 0xE3 0xAA EXTCODESIZE LOG0 ADDMOD 0x4F 0xD9 PUSH23 0xB1D98F62700C8D45BBFBD664736F6C6343000706003300 ",
							"sourceMap": "134:7684:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb5bb9debea9bd8962c622d14ce3aa3ba0084fd976b1d98f62700c8d45bbfbd664736f6c63430007060033",
									".code": [
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182\",\"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 952,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/SafeCast.sol": {
				"SafeCast": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/SafeCast.sol\":777:6542  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/SafeCast.sol\":777:6542  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202dcfb38656bdc306cb9fe5082d9735c45e99e47da12296eeb362809fb9bbd8a564736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202dcfb38656bdc306cb9fe5082d9735c45e99e47da12296eeb362809fb9bbd8a564736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xCF 0xB3 DUP7 JUMP 0xBD 0xC3 MOD 0xCB SWAP16 0xE5 ADDMOD 0x2D SWAP8 CALLDATALOAD 0xC4 0x5E SWAP10 0xE4 PUSH30 0xA12296EEB362809FB9BBD8A564736F6C6343000706003300000000000000 ",
							"sourceMap": "777:5765:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202dcfb38656bdc306cb9fe5082d9735c45e99e47da12296eeb362809fb9bbd8a564736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xCF 0xB3 DUP7 JUMP 0xBD 0xC3 MOD 0xCB SWAP16 0xE5 ADDMOD 0x2D SWAP8 CALLDATALOAD 0xC4 0x5E SWAP10 0xE4 PUSH30 0xA12296EEB362809FB9BBD8A564736F6C6343000706003300000000000000 ",
							"sourceMap": "777:5765:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toInt128(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint8(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 777,
									"end": 6542,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 777,
									"end": 6542,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202dcfb38656bdc306cb9fe5082d9735c45e99e47da12296eeb362809fb9bbd8a564736f6c63430007060033",
									".code": [
										{
											"begin": 777,
											"end": 6542,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 777,
											"end": 6542,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 777,
											"end": 6542,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 777,
											"end": 6542,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 777,
											"end": 6542,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 6542,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 777,
											"end": 6542,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 6542,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 777,
											"end": 6542,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SafeCast.sol\":{\"keccak256\":\"0x7b2b8baa20fd60ab4a328c8e34c64a353651b80ba4b5b157cbb61813f6f85d55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://125b7f9efa390e663d630c62b97ae4e0707f31623bea989ef94c97ca9d777dd2\",\"dweb:/ipfs/QmaaLSuwvqK7wqcgyS3utHgfmB7RntcvP7eJSuvQod8Z9P\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/liquidityMining/IKyberFairLaunch.sol": {
				"IKyberFairLaunch": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakeToken",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "_startBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "_endBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256[]",
									"name": "_rewardPerBlocks",
									"type": "uint256[]"
								}
							],
							"name": "addPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_shouldHarvest",
									"type": "bool"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "getPoolInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalStake",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "stakeToken",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "startBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "endBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "lastRewardBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256[]",
									"name": "rewardPerBlocks",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "accRewardPerShares",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardTokens",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getUserInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "unclaimedRewards",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "lastRewardPerShares",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_pids",
									"type": "uint256[]"
								}
							],
							"name": "harvestMultiplePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingRewards",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "rewards",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "_startBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "_endBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256[]",
									"name": "_rewardPerBlocks",
									"type": "uint256[]"
								}
							],
							"name": "renewPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "_endBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256[]",
									"name": "_rewardPerBlocks",
									"type": "uint256[]"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePoolRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "withdrawAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addPool(address,uint32,uint32,uint256[])": {
								"details": "Add a new lp to the pool. Can only be called by the admin.",
								"params": {
									"_endBlock": ": block where the reward ends",
									"_rewardPerBlocks": ": amount of reward token per block for the pool",
									"_stakeToken": ": token to be staked to the pool",
									"_startBlock": ": block where the reward starts"
								}
							},
							"deposit(uint256,uint256,bool)": {
								"details": "deposit to tokens to accumulate rewards",
								"params": {
									"_amount": ": amount of stakeToken to be deposited",
									"_pid": ": id of the pool",
									"_shouldHarvest": ": whether to harvest the reward or not"
								}
							},
							"emergencyWithdraw(uint256)": {
								"details": "emergency withdrawal function to allow withdraw all deposited token (of the sender)   without harvesting the reward",
								"params": {
									"_pid": ": id of the pool"
								}
							},
							"getPoolInfo(uint256)": {
								"details": "return full details of a pool"
							},
							"getRewardTokens()": {
								"details": "return list reward tokens"
							},
							"getUserInfo(uint256,address)": {
								"details": "get user's info"
							},
							"harvest(uint256)": {
								"details": "harvest reward from pool for the sender",
								"params": {
									"_pid": ": id of the pool"
								}
							},
							"harvestMultiplePools(uint256[])": {
								"details": "harvest rewards from multiple pools for the sender"
							},
							"pendingRewards(uint256,address)": {
								"details": "get pending reward of a user from a pool, mostly for front-end",
								"params": {
									"_pid": ": id of the pool",
									"_user": ": user to check for pending rewards"
								}
							},
							"poolLength()": {
								"details": "return the total of pools that have been added"
							},
							"renewPool(uint256,uint32,uint32,uint256[])": {
								"details": "Renew a pool to start another liquidity mining program",
								"params": {
									"_endBlock": ": block where the reward ends",
									"_pid": ": id of the pool to renew, must be pool that has not started or already ended",
									"_rewardPerBlocks": ": amount of reward token per block for the pool   0 if we want to stop the pool from accumulating rewards",
									"_startBlock": ": block where the reward starts"
								}
							},
							"updatePool(uint256,uint32,uint256[])": {
								"details": "Update a pool, allow to change end block, reward per block",
								"params": {
									"_endBlock": ": block where the reward ends",
									"_pid": ": pool id to be renew",
									"_rewardPerBlocks": ": amount of reward token per block for the pool   0 if we want to stop the pool from accumulating rewards"
								}
							},
							"updatePoolRewards(uint256)": {
								"details": "update reward for one pool"
							},
							"withdraw(uint256,uint256)": {
								"details": "withdraw token (of the sender) from pool, also harvest reward",
								"params": {
									"_amount": ": amount of stakeToken to withdraw",
									"_pid": ": id of the pool"
								}
							},
							"withdrawAll(uint256)": {
								"details": "withdraw all tokens (of the sender) from pool, also harvest reward",
								"params": {
									"_pid": ": id of the pool"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addPool(address,uint32,uint32,uint256[])": "2fb40ce1",
							"deposit(uint256,uint256,bool)": "43a0d066",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"getPoolInfo(uint256)": "2f380b35",
							"getRewardTokens()": "c4f59f9b",
							"getUserInfo(uint256,address)": "1069f3b5",
							"harvest(uint256)": "ddc63262",
							"harvestMultiplePools(uint256[])": "52fd9f2f",
							"pendingRewards(uint256,address)": "d18df53c",
							"poolLength()": "081e3eda",
							"renewPool(uint256,uint32,uint32,uint256[])": "b43c6270",
							"updatePool(uint256,uint32,uint256[])": "affb9fc8",
							"updatePoolRewards(uint256)": "adb82b31",
							"withdraw(uint256,uint256)": "441a3e70",
							"withdrawAll(uint256)": "958e2d31"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakeToken\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_startBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_endBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"_rewardPerBlocks\",\"type\":\"uint256[]\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_shouldHarvest\",\"type\":\"bool\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"getPoolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalStake\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"lastRewardBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"rewardPerBlocks\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"accRewardPerShares\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"unclaimedRewards\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"lastRewardPerShares\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_pids\",\"type\":\"uint256[]\"}],\"name\":\"harvestMultiplePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingRewards\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"rewards\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_startBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_endBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"_rewardPerBlocks\",\"type\":\"uint256[]\"}],\"name\":\"renewPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_endBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"_rewardPerBlocks\",\"type\":\"uint256[]\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePoolRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addPool(address,uint32,uint32,uint256[])\":{\"details\":\"Add a new lp to the pool. Can only be called by the admin.\",\"params\":{\"_endBlock\":\": block where the reward ends\",\"_rewardPerBlocks\":\": amount of reward token per block for the pool\",\"_stakeToken\":\": token to be staked to the pool\",\"_startBlock\":\": block where the reward starts\"}},\"deposit(uint256,uint256,bool)\":{\"details\":\"deposit to tokens to accumulate rewards\",\"params\":{\"_amount\":\": amount of stakeToken to be deposited\",\"_pid\":\": id of the pool\",\"_shouldHarvest\":\": whether to harvest the reward or not\"}},\"emergencyWithdraw(uint256)\":{\"details\":\"emergency withdrawal function to allow withdraw all deposited token (of the sender)   without harvesting the reward\",\"params\":{\"_pid\":\": id of the pool\"}},\"getPoolInfo(uint256)\":{\"details\":\"return full details of a pool\"},\"getRewardTokens()\":{\"details\":\"return list reward tokens\"},\"getUserInfo(uint256,address)\":{\"details\":\"get user's info\"},\"harvest(uint256)\":{\"details\":\"harvest reward from pool for the sender\",\"params\":{\"_pid\":\": id of the pool\"}},\"harvestMultiplePools(uint256[])\":{\"details\":\"harvest rewards from multiple pools for the sender\"},\"pendingRewards(uint256,address)\":{\"details\":\"get pending reward of a user from a pool, mostly for front-end\",\"params\":{\"_pid\":\": id of the pool\",\"_user\":\": user to check for pending rewards\"}},\"poolLength()\":{\"details\":\"return the total of pools that have been added\"},\"renewPool(uint256,uint32,uint32,uint256[])\":{\"details\":\"Renew a pool to start another liquidity mining program\",\"params\":{\"_endBlock\":\": block where the reward ends\",\"_pid\":\": id of the pool to renew, must be pool that has not started or already ended\",\"_rewardPerBlocks\":\": amount of reward token per block for the pool   0 if we want to stop the pool from accumulating rewards\",\"_startBlock\":\": block where the reward starts\"}},\"updatePool(uint256,uint32,uint256[])\":{\"details\":\"Update a pool, allow to change end block, reward per block\",\"params\":{\"_endBlock\":\": block where the reward ends\",\"_pid\":\": pool id to be renew\",\"_rewardPerBlocks\":\": amount of reward token per block for the pool   0 if we want to stop the pool from accumulating rewards\"}},\"updatePoolRewards(uint256)\":{\"details\":\"update reward for one pool\"},\"withdraw(uint256,uint256)\":{\"details\":\"withdraw token (of the sender) from pool, also harvest reward\",\"params\":{\"_amount\":\": amount of stakeToken to withdraw\",\"_pid\":\": id of the pool\"}},\"withdrawAll(uint256)\":{\"details\":\"withdraw all tokens (of the sender) from pool, also harvest reward\",\"params\":{\"_pid\":\": id of the pool\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/liquidityMining/IKyberFairLaunch.sol\":\"IKyberFairLaunch\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/liquidityMining/IKyberFairLaunch.sol\":{\"keccak256\":\"0x6a6bc894e7f69ee50094f8b42d3638dda4b6d0d9e9b8fd0bda6eadf4b2d0bc66\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://0a517744db39d5ecdb31c53f7402276fed5a0aaedc83b1ced1f2d573dee3ff69\",\"dweb:/ipfs/QmQ8rwsVYfwsS6GJiHd5hrYjmheFHL55miZf9QLujKWoaG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/liquidityMining/IKyberRewardLocker.sol": {
				"IKyberRewardLocker": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "vestedQuantity",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "Vested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startBlock",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endBlock",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "VestingEntryCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "VestingEntryQueued",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getVestingScheduleAtIndex",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint64",
											"name": "startBlock",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "endBlock",
											"type": "uint64"
										},
										{
											"internalType": "uint128",
											"name": "quantity",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "vestedQuantity",
											"type": "uint128"
										}
									],
									"internalType": "struct IKyberRewardLocker.VestingSchedule",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getVestingSchedules",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint64",
											"name": "startBlock",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "endBlock",
											"type": "uint64"
										},
										{
											"internalType": "uint128",
											"name": "quantity",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "vestedQuantity",
											"type": "uint128"
										}
									],
									"internalType": "struct IKyberRewardLocker.VestingSchedule[]",
									"name": "schedules",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "lock",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startBlock",
									"type": "uint256"
								}
							],
							"name": "lockWithStartBlock",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								}
							],
							"name": "numVestingSchedules",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								}
							],
							"name": "vestCompletedSchedules",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Ext[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "vestCompletedSchedulesForMultipleTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "vestedAmounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "indexes",
									"type": "uint256[]"
								}
							],
							"name": "vestScheduleAtIndices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Ext[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[][]",
									"name": "indices",
									"type": "uint256[][]"
								}
							],
							"name": "vestScheduleForMultipleTokensAtIndices",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "vestedAmounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Ext",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "startIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endIndex",
									"type": "uint256"
								}
							],
							"name": "vestSchedulesInRange",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getVestingScheduleAtIndex(address,address,uint256)": {
								"details": "get detailed of each vesting schedule"
							},
							"getVestingSchedules(address,address)": {
								"details": "get vesting shedules array"
							},
							"lock(address,address,uint256)": {
								"details": "queue a vesting schedule starting from now"
							},
							"lockWithStartBlock(address,address,uint256,uint256)": {
								"details": "queue a vesting schedule"
							},
							"numVestingSchedules(address,address)": {
								"details": "length of vesting schedules array"
							},
							"vestCompletedSchedules(address)": {
								"details": "for all completed schedule, claim token"
							},
							"vestCompletedSchedulesForMultipleTokens(address[])": {
								"details": "vest all completed schedules for multiple tokens"
							},
							"vestScheduleAtIndices(address,uint256[])": {
								"details": "claim token for specific vesting schedule,if schedule has not ended yet, claiming amount is linear with vesting blocks"
							},
							"vestScheduleForMultipleTokensAtIndices(address[],uint256[][])": {
								"details": "claim multiple tokens for specific vesting schedule,      if schedule has not ended yet, claiming amounts are linear with vesting blocks"
							},
							"vestSchedulesInRange(address,uint256,uint256)": {
								"details": "claim token for specific vesting schedule from startIndex to endIndex"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getVestingScheduleAtIndex(address,address,uint256)": "0a3b7e31",
							"getVestingSchedules(address,address)": "2f50bd72",
							"lock(address,address,uint256)": "7750c9f0",
							"lockWithStartBlock(address,address,uint256,uint256)": "a5d21e31",
							"numVestingSchedules(address,address)": "679f7f77",
							"vestCompletedSchedules(address)": "fdfaaa05",
							"vestCompletedSchedulesForMultipleTokens(address[])": "9059aa6a",
							"vestScheduleAtIndices(address,uint256[])": "0f5636c3",
							"vestScheduleForMultipleTokensAtIndices(address[],uint256[][])": "4d4f3d93",
							"vestSchedulesInRange(address,uint256,uint256)": "c33fddf8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vestedQuantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"Vested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"VestingEntryCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"VestingEntryQueued\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getVestingScheduleAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"quantity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"vestedQuantity\",\"type\":\"uint128\"}],\"internalType\":\"struct IKyberRewardLocker.VestingSchedule\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getVestingSchedules\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"quantity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"vestedQuantity\",\"type\":\"uint128\"}],\"internalType\":\"struct IKyberRewardLocker.VestingSchedule[]\",\"name\":\"schedules\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"}],\"name\":\"lockWithStartBlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"numVestingSchedules\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"vestCompletedSchedules\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Ext[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"vestCompletedSchedulesForMultipleTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"vestedAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"indexes\",\"type\":\"uint256[]\"}],\"name\":\"vestScheduleAtIndices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Ext[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"indices\",\"type\":\"uint256[][]\"}],\"name\":\"vestScheduleForMultipleTokensAtIndices\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"vestedAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Ext\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endIndex\",\"type\":\"uint256\"}],\"name\":\"vestSchedulesInRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getVestingScheduleAtIndex(address,address,uint256)\":{\"details\":\"get detailed of each vesting schedule\"},\"getVestingSchedules(address,address)\":{\"details\":\"get vesting shedules array\"},\"lock(address,address,uint256)\":{\"details\":\"queue a vesting schedule starting from now\"},\"lockWithStartBlock(address,address,uint256,uint256)\":{\"details\":\"queue a vesting schedule\"},\"numVestingSchedules(address,address)\":{\"details\":\"length of vesting schedules array\"},\"vestCompletedSchedules(address)\":{\"details\":\"for all completed schedule, claim token\"},\"vestCompletedSchedulesForMultipleTokens(address[])\":{\"details\":\"vest all completed schedules for multiple tokens\"},\"vestScheduleAtIndices(address,uint256[])\":{\"details\":\"claim token for specific vesting schedule,if schedule has not ended yet, claiming amount is linear with vesting blocks\"},\"vestScheduleForMultipleTokensAtIndices(address[],uint256[][])\":{\"details\":\"claim multiple tokens for specific vesting schedule,      if schedule has not ended yet, claiming amounts are linear with vesting blocks\"},\"vestSchedulesInRange(address,uint256,uint256)\":{\"details\":\"claim token for specific vesting schedule from startIndex to endIndex\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/liquidityMining/IKyberRewardLocker.sol\":\"IKyberRewardLocker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"contracts/interfaces/liquidityMining/IKyberRewardLocker.sol\":{\"keccak256\":\"0xec68acc60e50d8b02ff529d2edf1a18b286f4528ada1fa19f0f42697c9735c52\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://4fb58b6c3e9950f13f2a7325329f86a19eb44a1fbdf8a73ef2f508a4ddc8f3c1\",\"dweb:/ipfs/QmbZnGPrudUaWbENU5aRTfnv1aXDuL4HCE8mGJvkXkTJBy\"]},\"contracts/manual/IERC20Ext.sol\":{\"keccak256\":\"0x54e497c3ce45962c3736dcb053d97a309c7dca2c2228587be579de92317ece0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2405069927d8a940e85b5c96941a976a94e85eca5e4bb88419826731e050f7f7\",\"dweb:/ipfs/QmXcerpy1ZDmKykehn2qi9WX1ia2xZPhYxyYMH6xnDtCJ9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/liquidityMining/KyberFairLaunch.sol": {
				"KyberFairLaunch": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "_rewardTokens",
									"type": "address[]"
								},
								{
									"internalType": "contract IKyberRewardLocker",
									"name": "_rewardLocker",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "stakeToken",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "startBlock",
									"type": "uint32"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "endBlock",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "rewardPerBlocks",
									"type": "uint256[]"
								}
							],
							"name": "AddNewPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								}
							],
							"name": "AdminClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "rewardToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockedAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "Harvest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "startBlock",
									"type": "uint32"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "endBlock",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "rewardPerBlocks",
									"type": "uint256[]"
								}
							],
							"name": "RenewPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pendingAdmin",
									"type": "address"
								}
							],
							"name": "TransferAdminPending",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "endBlock",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "rewardPerBlocks",
									"type": "uint256[]"
								}
							],
							"name": "UpdatePool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakeToken",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "_startBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "_endBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256[]",
									"name": "_rewardPerBlocks",
									"type": "uint256[]"
								}
							],
							"name": "addPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rewardTokenIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "adminWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_shouldHarvest",
									"type": "bool"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "getPoolInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalStake",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "stakeToken",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "startBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "endBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "lastRewardBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256[]",
									"name": "rewardPerBlocks",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "accRewardPerShares",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardTokens",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getUserInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "unclaimedRewards",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "lastRewardPerShares",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_pids",
									"type": "uint256[]"
								}
							],
							"name": "harvestMultiplePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingRewards",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "rewards",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "poolExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "_startBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "_endBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256[]",
									"name": "_rewardPerBlocks",
									"type": "uint256[]"
								}
							],
							"name": "renewPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardLocker",
							"outputs": [
								{
									"internalType": "contract IKyberRewardLocker",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "rewardTokens",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "transferAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "transferAdminQuickly",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "_endBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256[]",
									"name": "_rewardPerBlocks",
									"type": "uint256[]"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePoolRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "withdrawAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addPool(address,uint32,uint32,uint256[])": {
								"details": "Add a new lp to the pool. Can only be called by the admin.",
								"params": {
									"_endBlock": ": block where the reward ends",
									"_rewardPerBlocks": ": amount of reward token per block for the pool for each reward token",
									"_stakeToken": ": token to be staked to the pool",
									"_startBlock": ": block where the reward starts"
								}
							},
							"adminWithdraw(uint256,uint256)": {
								"details": "Allow admin to withdraw only reward tokens"
							},
							"claimAdmin()": {
								"details": "Allows the pendingAdmin address to finalize the change admin process."
							},
							"deposit(uint256,uint256,bool)": {
								"details": "Deposit tokens to accumulate rewards",
								"params": {
									"_amount": ": amount of stakeToken to be deposited",
									"_pid": ": id of the pool",
									"_shouldHarvest": ": whether to harvest the reward or not"
								}
							},
							"emergencyWithdraw(uint256)": {
								"details": "Emergency withdrawal function to allow withdraw all deposited tokens (of the sender)   and reset all rewards",
								"params": {
									"_pid": ": id of the pool"
								}
							},
							"getPoolInfo(uint256)": {
								"details": "Return full details of a pool"
							},
							"getRewardTokens()": {
								"details": "Return list reward tokens"
							},
							"getUserInfo(uint256,address)": {
								"details": "Return user's info including deposited amount and reward data"
							},
							"harvest(uint256)": {
								"details": "Harvest rewards from a pool for the sender",
								"params": {
									"_pid": ": id of the pool"
								}
							},
							"harvestMultiplePools(uint256[])": {
								"details": "Harvest rewards from multiple pools for the sender   combine rewards from all pools and only transfer once to save gas"
							},
							"pendingRewards(uint256,address)": {
								"details": "Get pending rewards of a user from a pool, mostly for front-end",
								"params": {
									"_pid": ": id of the pool",
									"_user": ": user to check for pending rewards"
								}
							},
							"renewPool(uint256,uint32,uint32,uint256[])": {
								"details": "Renew a pool to start another liquidity mining program",
								"params": {
									"_endBlock": ": block where the reward ends",
									"_pid": ": id of the pool to renew, must be pool that has not started or already ended",
									"_rewardPerBlocks": ": amount of reward token per block for the pool   0 if we want to stop the pool from accumulating rewards",
									"_startBlock": ": block where the reward starts"
								}
							},
							"transferAdmin(address)": {
								"details": "Allows the current admin to set the pendingAdmin address.",
								"params": {
									"newAdmin": "The address to transfer ownership to."
								}
							},
							"transferAdminQuickly(address)": {
								"details": "Allows the current admin to set the admin in one tx. Useful initial deployment.",
								"params": {
									"newAdmin": "The address to transfer ownership to."
								}
							},
							"updatePool(uint256,uint32,uint256[])": {
								"details": "Update a pool, allow to change end block, reward per block",
								"params": {
									"_endBlock": ": block where the reward ends",
									"_pid": ": pool id to be renew",
									"_rewardPerBlocks": ": amount of reward token per block for the pool,   0 if we want to stop the pool from accumulating rewards"
								}
							},
							"updatePoolRewards(uint256)": {
								"details": "Update rewards for one pool"
							},
							"withdraw(uint256,uint256)": {
								"details": "Withdraw token (of the sender) from pool, also harvest rewards",
								"params": {
									"_amount": ": amount of stakeToken to withdraw",
									"_pid": ": id of the pool"
								}
							},
							"withdrawAll(uint256)": {
								"details": "Withdraw all tokens (of the sender) from pool, also harvest reward",
								"params": {
									"_pid": ": id of the pool"
								}
							}
						},
						"stateVariables": {
							"poolLength": {
								"details": "return the total of pools that have been added"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":1064:23424  contract KyberFairLaunch is IKyberFairLaunch, PermissionAdmin, ReentrancyGuard {\r... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":4873:5461  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5017:5023  _admin */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/manual/PermissionAdmin.sol\":335:355  _admin != address(0) */\n  dup2\n  and\n    /* \"contracts/manual/PermissionAdmin.sol\":327:367  require(_admin != address(0), \"admin 0\") */\n  tag_8\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x07\n  0x24\n  dup3\n  add\n  mstore\n  shl(0xcc, 0x061646d696e203)\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_8:\n    /* \"contracts/manual/PermissionAdmin.sol\":378:383  admin */\n  0x00\n    /* \"contracts/manual/PermissionAdmin.sol\":378:392  admin = _admin */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1760:1767  _status */\n  0x02\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1760:1782  _status = _NOT_ENTERED */\n  sstore\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5036:5064  rewardTokens = _rewardTokens */\n  dup2\n  mload\n  tag_11\n  swap1\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5036:5048  rewardTokens */\n  0x04\n  swap1\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5036:5064  rewardTokens = _rewardTokens */\n  0x20\n  dup6\n  add\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  pop\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5075:5103  rewardLocker = _rewardLocker */\n  0x60\n  dup3\n  swap1\n  shl\n  and\n  0x80\n  mstore\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5168:5177  uint256 i */\n  0x00\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5163:5454  for (uint256 i = 0; i < _rewardTokens.length; i++) {\r... */\ntag_13:\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5187:5200  _rewardTokens */\n  dup3\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5187:5207  _rewardTokens.length */\n  mload\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5183:5184  i */\n  dup2\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5183:5207  i < _rewardTokens.length */\n  lt\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5163:5454  for (uint256 i = 0; i < _rewardTokens.length; i++) {\r... */\n  iszero\n  tag_14\n  jumpi\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5261:5262  0 */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5233:5263  _rewardTokens[i] != address(0) */\n  and\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5233:5246  _rewardTokens */\n  dup4\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5247:5248  i */\n  dup3\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5233:5249  _rewardTokens[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_16\n  jumpi\n  invalid\ntag_16:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5233:5263  _rewardTokens[i] != address(0) */\n  and\n  eq\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5229:5443  if (_rewardTokens[i] != address(0)) {\r... */\n  tag_18\n  jumpi\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5284:5427  IERC20Ext(_rewardTokens[i]).safeApprove(\r... */\n  tag_18\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5354:5367  _rewardLocker */\n  dup3\n  not(0x00)\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5294:5307  _rewardTokens */\n  dup6\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5308:5309  i */\n  dup5\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5294:5310  _rewardTokens[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_19\n  jumpi\n  invalid\ntag_19:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5284:5323  IERC20Ext(_rewardTokens[i]).safeApprove */\n  and\n  or(tag_0_149, shl(0x20, tag_20))\n  swap1\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5284:5427  IERC20Ext(_rewardTokens[i]).safeApprove(\r... */\n  swap3\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5209:5212  i++ */\n  0x01\n  add\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5163:5454  for (uint256 i = 0; i < _rewardTokens.length; i++) {\r... */\n  jump(tag_13)\ntag_14:\n  pop\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":4873:5461  constructor(\r... */\n  pop\n  pop\n  pop\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":1064:23424  contract KyberFairLaunch is IKyberFairLaunch, PermissionAdmin, ReentrancyGuard {\r... */\n  jump(tag_70)\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1348:1961  function safeApprove(IERC20 token, address spender, uint256 value) internal {... */\ntag_20:\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1713:1723  value == 0 */\n  dup1\n  iszero\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1712:1774  (value == 0) || (token.allowance(address(this), spender) == 0) */\n  tag_23\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1768  token.allowance(address(this), spender) */\n  0x40\n  dup1\n  mload\n  shl(0xe1, 0x6eb1769f)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1753:1757  this */\n  address\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1768  token.allowance(address(this), spender) */\n  0x04\n  dup3\n  add\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  0x24\n  dup4\n  add\n  mstore\n  swap2\n  mload\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1744  token.allowance */\n  swap2\n  dup6\n  and\n  swap2\n  0xdd62ed3e\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1768  token.allowance(address(this), spender) */\n  0x44\n  dup1\n  dup3\n  add\n  swap3\n  0x20\n  swap3\n  swap1\n  swap2\n  swap1\n  dup3\n  swap1\n  sub\n  add\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1744  token.allowance */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1768  token.allowance(address(this), spender) */\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_24\n  jumpi\n  0x00\n  dup1\n  revert\ntag_24:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_26\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_26:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  0x20\n  dup2\n  lt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup1\n  revert\ntag_27:\n  pop\n  mload\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1773  token.allowance(address(this), spender) == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1712:1774  (value == 0) || (token.allowance(address(this), spender) == 0) */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1704:1854  require((value == 0) || (token.allowance(address(this), spender) == 0),... */\n  tag_28\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x36\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25\n  0x36\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1891:1953  abi.encodeWithSelector(token.approve.selector, spender, value) */\n  0x40\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  0x24\n  dup3\n  add\n  mstore\n  0x44\n  dup1\n  dup3\n  add\n  dup5\n  swap1\n  mstore\n  dup3\n  mload\n  dup1\n  dup4\n  sub\n  swap1\n  swap2\n  add\n  dup2\n  mstore\n  0x64\n  swap1\n  swap2\n  add\n  swap1\n  swap2\n  mstore\n  0x20\n  dup2\n  add\n  dup1\n  mload\n  sub(shl(0xe0, 0x01), 0x01)\n  swap1\n  dup2\n  and\n  shl(0xe0, 0x095ea7b3)\n  or\n  swap1\n  swap2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1864:1954  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n  tag_29\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1884:1889  token */\n  dup6\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1864:1883  _callOptionalReturn */\n  tag_30\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1864:1954  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n  and\n  jump\t// in\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1348:1961  function safeApprove(IERC20 token, address spender, uint256 value) internal {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2967:3718  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3386:3409  bytes memory returndata */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  tag_32\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3440:3444  data */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x20\n  dup2\n  mstore\n  0x20\n  add\n  0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3420:3425  token */\n  dup6\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3439  address(token).functionCall */\n  and\n  or(tag_0_150, shl(0x20, tag_33))\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  swap3\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3495:3512  returndata.length */\n  dup1\n  mload\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3386:3481  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  swap1\n  swap2\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3495:3516  returndata.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3491:3712  if (returndata.length > 0) { // Return data is optional... */\n  tag_29\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3635:3645  returndata */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3624:3654  abi.decode(returndata, (bool)) */\n  dup1\n  0x20\n  add\n  swap1\n  mload\n  0x20\n  dup2\n  lt\n  iszero\n  tag_35\n  jumpi\n  0x00\n  dup1\n  revert\ntag_35:\n  pop\n  mload\n    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3616:3701  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n  tag_29\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x2a\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n  0x2a\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3684:3696  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n  tag_38\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3737:3743  target */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3745:3749  data */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3751:3752  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3754:3766  errorMessage */\n  dup6\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3715:3736  functionCallWithValue */\n  tag_39\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n  jump\t// in\ntag_38:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3708:3767  return functionCallWithValue(target, data, 0, errorMessage) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\ntag_37:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\ntag_39:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4735:4747  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4792:4797  value */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4767:4788  address(this).balance */\n  selfbalance\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4767:4797  address(this).balance >= value */\n  lt\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4759:4840  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n  tag_41\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x26\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n  0x26\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_41:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n  tag_42\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4869:4875  target */\n  dup6\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4858:4868  isContract */\n  tag_43\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n  jump\t// in\ntag_42:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4850:4910  require(isContract(target), \"Address: call to non-contract\") */\n  tag_44\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1d\n  0x24\n  dup3\n  add\n  mstore\n  0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_44:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4981:4993  bool success */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4995:5018  bytes memory returndata */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5022:5028  target */\n  dup7\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5022:5033  target.call */\n  and\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5042:5047  value */\n  dup6\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5050:5054  data */\n  dup8\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5022:5055  target.call{ value: value }(data) */\n  mload(0x40)\n  dup1\n  dup3\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\ntag_45:\n  0x20\n  dup4\n  lt\n  tag_47\n  jumpi\n  dup1\n  mload\n  dup3\n  mstore\n  not(0x1f)\n  swap1\n  swap3\n  add\n  swap2\n  0x20\n  swap2\n  dup3\n  add\n  swap2\n  add\n  jump(tag_45)\ntag_47:\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  dup1\n  not\n  dup3\n  mload\n  and\n  dup2\n  dup5\n  mload\n  and\n  dup1\n  dup3\n  or\n  dup6\n  mstore\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  add\n  swap2\n  pop\n  pop\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  dup8\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_50\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_49)\ntag_50:\n  0x60\n  swap2\n  pop\ntag_49:\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4980:5055  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n  swap1\n  swap3\n  pop\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n  tag_51\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4980:5055  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n  dup3\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5111:5123  errorMessage */\n  dup7\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5072:5089  _verifyCallResult */\n  tag_52\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n  jump\t// in\ntag_51:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5065:5124  return _verifyCallResult(success, returndata, errorMessage) */\n  swap8\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n  dup1\n  extcodesize\n    /* \"@openzeppelin/contracts/utils/Address.sol\":1124:1132  size > 0 */\n  iszero\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\ntag_53:\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\ntag_52:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7206:7218  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7234:7241  success */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n  iszero\n  tag_55\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7264:7274  returndata */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7257:7274  return returndata */\n  jump(tag_37)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7230:7810  if (success) {... */\ntag_55:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7375:7392  returndata.length */\n  dup3\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7375:7396  returndata.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7371:7800  if (returndata.length > 0) {... */\n  tag_57\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7633:7643  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7627:7644  mload(returndata) */\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7693:7708  returndata_size */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7680:7690  returndata */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7676:7678  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7672:7691  add(32, returndata) */\n  add\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7665:7709  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7582:7727  {... */\ntag_57:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7772:7784  errorMessage */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  dup4\n  dup2\n  dup2\n  mload\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_59:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_61\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_59)\ntag_61:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_62\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_62:\n  pop\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":1064:23424  contract KyberFairLaunch is IKyberFairLaunch, PermissionAdmin, ReentrancyGuard {\r... */\ntag_12:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_65\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_64:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_65\n  jumpi\n  dup3\n  mload\n  dup3\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  or\n  dup3\n  sstore\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  0x01\n  swap1\n  swap2\n  add\n  swap1\n  jump(tag_64)\ntag_65:\n  pop\n  tag_66\n  swap3\n  swap2\n  pop\n  tag_67\n  jump\t// in\ntag_66:\n  pop\n  swap1\n  jump\t// out\ntag_67:\ntag_68:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_66\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_68)\n    /* \"#utility.yul\":14:156   */\ntag_71:\n    /* \"#utility.yul\":95:108   */\n  dup1\n  mload\n    /* \"#utility.yul\":117:150   */\n  tag_53\n    /* \"#utility.yul\":95:108   */\n  dup2\n    /* \"#utility.yul\":117:150   */\n  tag_74\n  jump\t// in\n    /* \"#utility.yul\":161:1561   */\ntag_3:\n  0x00\n  dup1\n  0x00\n    /* \"#utility.yul\":370:372   */\n  0x60\n    /* \"#utility.yul\":358:367   */\n  dup5\n    /* \"#utility.yul\":349:356   */\n  dup7\n    /* \"#utility.yul\":345:368   */\n  sub\n    /* \"#utility.yul\":341:373   */\n  slt\n    /* \"#utility.yul\":338:340   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":391:397   */\n  dup3\n    /* \"#utility.yul\":383:389   */\n  dup4\n    /* \"#utility.yul\":376:398   */\n  revert\n    /* \"#utility.yul\":338:340   */\ntag_76:\n    /* \"#utility.yul\":428:437   */\n  dup4\n    /* \"#utility.yul\":422:438   */\n  mload\n    /* \"#utility.yul\":447:480   */\n  tag_77\n    /* \"#utility.yul\":474:479   */\n  dup2\n    /* \"#utility.yul\":447:480   */\n  tag_74\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":523:525   */\n  0x20\n    /* \"#utility.yul\":554:572   */\n  dup6\n  dup2\n  add\n    /* \"#utility.yul\":548:573   */\n  mload\n    /* \"#utility.yul\":499:504   */\n  swap2\n  swap5\n  pop\n    /* \"#utility.yul\":523:525   */\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":622:636   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":619:621   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":654:660   */\n  dup5\n    /* \"#utility.yul\":646:652   */\n  dup6\n    /* \"#utility.yul\":639:661   */\n  revert\n    /* \"#utility.yul\":619:621   */\ntag_78:\n    /* \"#utility.yul\":697:703   */\n  dup2\n    /* \"#utility.yul\":686:695   */\n  dup8\n    /* \"#utility.yul\":682:704   */\n  add\n    /* \"#utility.yul\":672:704   */\n  swap2\n  pop\n    /* \"#utility.yul\":742:749   */\n  dup8\n    /* \"#utility.yul\":735:739   */\n  0x1f\n    /* \"#utility.yul\":731:733   */\n  dup4\n    /* \"#utility.yul\":727:740   */\n  add\n    /* \"#utility.yul\":723:750   */\n  slt\n    /* \"#utility.yul\":713:715   */\n  tag_79\n  jumpi\n    /* \"#utility.yul\":769:775   */\n  dup5\n    /* \"#utility.yul\":761:767   */\n  dup6\n    /* \"#utility.yul\":754:776   */\n  revert\n    /* \"#utility.yul\":713:715   */\ntag_79:\n    /* \"#utility.yul\":803:805   */\n  dup2\n    /* \"#utility.yul\":797:806   */\n  mload\n    /* \"#utility.yul\":825:827   */\n  dup2\n    /* \"#utility.yul\":821:823   */\n  dup2\n    /* \"#utility.yul\":818:828   */\n  gt\n    /* \"#utility.yul\":815:817   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":831:840   */\n  invalid\n    /* \"#utility.yul\":815:817   */\ntag_80:\n    /* \"#utility.yul\":869:871   */\n  dup4\n    /* \"#utility.yul\":865:867   */\n  dup2\n    /* \"#utility.yul\":861:872   */\n  mul\n    /* \"#utility.yul\":901:903   */\n  0x40\n    /* \"#utility.yul\":895:904   */\n  mload\n    /* \"#utility.yul\":952:954   */\n  dup6\n    /* \"#utility.yul\":947:949   */\n  dup3\n    /* \"#utility.yul\":939:945   */\n  dup3\n    /* \"#utility.yul\":935:950   */\n  add\n    /* \"#utility.yul\":931:955   */\n  add\n    /* \"#utility.yul\":1005:1011   */\n  dup2\n    /* \"#utility.yul\":993:1003   */\n  dup2\n    /* \"#utility.yul\":990:1012   */\n  lt\n    /* \"#utility.yul\":985:987   */\n  dup6\n    /* \"#utility.yul\":973:983   */\n  dup3\n    /* \"#utility.yul\":970:988   */\n  gt\n    /* \"#utility.yul\":967:1013   */\n  or\n    /* \"#utility.yul\":964:966   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":1016:1025   */\n  invalid\n    /* \"#utility.yul\":964:966   */\ntag_81:\n    /* \"#utility.yul\":1043:1045   */\n  0x40\n    /* \"#utility.yul\":1036:1058   */\n  mstore\n    /* \"#utility.yul\":1093:1111   */\n  dup3\n  dup2\n  mstore\n    /* \"#utility.yul\":1127:1142   */\n  dup6\n  dup2\n  add\n  swap4\n  pop\n    /* \"#utility.yul\":1162:1173   */\n  dup5\n  dup7\n  add\n    /* \"#utility.yul\":1192:1203   */\n  dup3\n  dup7\n  add\n    /* \"#utility.yul\":1188:1208   */\n  dup8\n  add\n    /* \"#utility.yul\":1185:1218   */\n  dup13\n  lt\n    /* \"#utility.yul\":1182:1184   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":1236:1242   */\n  dup9\n    /* \"#utility.yul\":1228:1234   */\n  dup10\n    /* \"#utility.yul\":1221:1243   */\n  revert\n    /* \"#utility.yul\":1182:1184   */\ntag_82:\n    /* \"#utility.yul\":1263:1269   */\n  dup9\n    /* \"#utility.yul\":1254:1269   */\n  swap6\n  pop\n    /* \"#utility.yul\":1278:1460   */\ntag_83:\n    /* \"#utility.yul\":1292:1294   */\n  dup4\n    /* \"#utility.yul\":1289:1290   */\n  dup7\n    /* \"#utility.yul\":1286:1295   */\n  lt\n    /* \"#utility.yul\":1278:1460   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":1349:1385   */\n  tag_86\n    /* \"#utility.yul\":1381:1384   */\n  dup2\n    /* \"#utility.yul\":1349:1385   */\n  tag_71\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":1337:1386   */\n  dup6\n  mstore\n    /* \"#utility.yul\":1310:1311   */\n  0x01\n    /* \"#utility.yul\":1303:1312   */\n  swap6\n  swap1\n  swap6\n  add\n  swap5\n    /* \"#utility.yul\":1406:1418   */\n  swap4\n  dup7\n  add\n  swap4\n    /* \"#utility.yul\":1438:1450   */\n  dup7\n  add\n    /* \"#utility.yul\":1278:1460   */\n  jump(tag_83)\ntag_85:\n    /* \"#utility.yul\":1282:1285   */\n  pop\n    /* \"#utility.yul\":1479:1485   */\n  dup1\n    /* \"#utility.yul\":1469:1485   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1504:1555   */\n  tag_87\n    /* \"#utility.yul\":1551:1553   */\n  0x40\n    /* \"#utility.yul\":1540:1549   */\n  dup6\n    /* \"#utility.yul\":1536:1554   */\n  add\n    /* \"#utility.yul\":1504:1555   */\n  tag_71\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":1494:1555   */\n  swap1\n  pop\n    /* \"#utility.yul\":328:1561   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1566:1699   */\ntag_74:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1643:1674   */\n  dup2\n  and\n    /* \"#utility.yul\":1633:1675   */\n  dup2\n  eq\n    /* \"#utility.yul\":1623:1625   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":1689:1690   */\n  0x00\n    /* \"#utility.yul\":1686:1687   */\n  dup1\n    /* \"#utility.yul\":1679:1691   */\n  revert\n    /* \"#utility.yul\":1623:1625   */\ntag_89:\n    /* \"#utility.yul\":1613:1699   */\n  pop\n  jump\t// out\ntag_70:\n    /* \"contracts/liquidityMining/KyberFairLaunch.sol\":1064:23424  contract KyberFairLaunch is IKyberFairLaunch, PermissionAdmin, ReentrancyGuard {\r... */\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x840fecb9bca2c4e63427c4b817f3137cd391e6a160600107c90b96ae83fdac7e\")\n  return(0x00, dataSize(sub_0))\nstop\ndata_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\ndata_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\ndata_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25 5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365\n\nsub_0: assembly {\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":1064:23424  contract KyberFairLaunch is IKyberFairLaunch, PermissionAdmin, ReentrancyGuard {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x77f50f97\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xb43c6270\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xb43c6270\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc4f59f9b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd12e4ceb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd18df53c\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xddc63262\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x77f50f97\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7acc8678\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7bb7bed1\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x958e2d31\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xadb82b31\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xaffb9fc8\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x3892601c\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x3892601c\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x43a0d066\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x52fd9f2f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x75829def\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x081e3eda\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1069f3b5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1e1c6a07\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x26782247\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2f380b35\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2fb40ce1\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":3529:3563  uint256 public override poolLength */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17792:18514  function getUserInfo(uint256 _pid, address _account)\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_35\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":3169:3211  mapping(address => bool) public poolExists */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n        /* \"contracts/manual/PermissionAdmin.sol\":127:154  address public pendingAdmin */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16659:17691  function getPoolInfo(uint256 _pid)\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_35\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6404:7634  function addPool(\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":3254:3302  IKyberRewardLocker public immutable rewardLocker */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_52\n      tag_70\n      jump\t// in\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10703:11524  function deposit(\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_64\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11719:11874  function withdraw(uint256 _pid, uint256 _amount)\r... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_64\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13318:14732  function harvestMultiplePools(uint256[] calldata _pids) external override {\r... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_64\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12410:13152  function emergencyWithdraw(uint256 _pid) external override nonReentrant {\r... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_64\n      tag_90\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"contracts/manual/PermissionAdmin.sol\":661:864  function transferAdmin(address newAdmin) public onlyAdmin {\r... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_64\n      tag_94\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"contracts/manual/PermissionAdmin.sol\":1398:1612  function claimAdmin() public {\r... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_64\n      tag_98\n      jump\t// in\n        /* \"contracts/manual/PermissionAdmin.sol\":1045:1289  function transferAdminQuickly(address newAdmin) public onlyAdmin {\r... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_64\n      tag_101\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":3464:3493  address[] public rewardTokens */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_52\n      tag_105\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12016:12151  function withdrawAll(uint256 _pid) external override nonReentrant {\r... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_64\n      tag_110\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18840:19808  function updatePoolRewards(uint256 _pid) public override {\r... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_64\n      tag_114\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9560:10462  function updatePool(\r... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_64\n      tag_118\n      calldatasize\n      0x04\n      tag_119\n      jump\t// in\n    tag_118:\n      tag_120\n      jump\t// in\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8082:9221  function renewPool(\r... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_64\n      tag_123\n      calldatasize\n      0x04\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16434:16590  function getRewardTokens()\r... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5580:6034  function adminWithdraw(uint256 rewardTokenIndex, uint256 amount)\r... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_64\n      tag_133\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14927:16369  function pendingRewards(uint256 _pid, address _user)\r... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_136\n      tag_137\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18632:18773  function harvest(uint256 _pid) public override {\r... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_64\n      tag_143\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n        /* \"contracts/manual/PermissionAdmin.sol\":100:120  address public admin */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_52\n      tag_147\n      jump\t// in\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":3529:3563  uint256 public override poolLength */\n    tag_34:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17792:18514  function getUserInfo(uint256 _pid, address _account)\r... */\n    tag_41:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17927:17941  uint256 amount */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18092:18106  userInfo[_pid] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18092:18100  userInfo */\n      0x07\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18092:18106  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18092:18116  userInfo[_pid][_account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18136:18147  user.amount */\n      dup1\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18191:18203  rewardTokens */\n      0x04\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18191:18210  rewardTokens.length */\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18136:18147  user.amount */\n      swap1\n      swap2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17956:17989  uint256[] memory unclaimedRewards */\n      0x60\n      swap2\n      dup3\n      swap2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18092:18116  userInfo[_pid][_account] */\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18177:18211  new uint256[](rewardTokens.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_153\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_153:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18258:18270  rewardTokens */\n      0x04\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18258:18277  rewardTokens.length */\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18158:18211  unclaimedRewards = new uint256[](rewardTokens.length) */\n      swap1\n      swap4\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18244:18278  new uint256[](rewardTokens.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_155\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_155:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18222:18278  lastRewardPerShares = new uint256[](rewardTokens.length) */\n      swap2\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18294:18303  uint256 i */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18289:18507  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n    tag_156:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18313:18325  rewardTokens */\n      0x04\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18313:18332  rewardTokens.length */\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18309:18332  i < rewardTokens.length */\n      dup2\n      lt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18289:18507  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n      iszero\n      tag_157\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18376:18398  user.userRewardData[i] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18376:18395  user.userRewardData */\n      0x01\n      dup4\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18376:18398  user.userRewardData[i] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18376:18414  user.userRewardData[i].unclaimedReward */\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18354:18373  unclaimedRewards[i] */\n      dup5\n      mload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18354:18370  unclaimedRewards */\n      dup6\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18396:18397  i */\n      dup4\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18354:18373  unclaimedRewards[i] */\n      dup2\n      lt\n      tag_159\n      jumpi\n      invalid\n    tag_159:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18354:18414  unclaimedRewards[i] = user.userRewardData[i].unclaimedReward */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18454:18458  user */\n      dup2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18454:18473  user.userRewardData */\n      0x01\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18454:18476  user.userRewardData[i] */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18474:18475  i */\n      dup3\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18454:18476  user.userRewardData[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18454:18495  user.userRewardData[i].lastRewardPerShare */\n      0x01\n      add\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18429:18448  lastRewardPerShares */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18449:18450  i */\n      dup3\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18429:18451  lastRewardPerShares[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_160\n      jumpi\n      invalid\n    tag_160:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18429:18495  lastRewardPerShares[i] = user.userRewardData[i].lastRewardPerShare */\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18334:18337  i++ */\n      0x01\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18289:18507  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n      jump(tag_156)\n    tag_157:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17792:18514  function getUserInfo(uint256 _pid, address _account)\r... */\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":3169:3211  mapping(address => bool) public poolExists */\n    tag_48:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/manual/PermissionAdmin.sol\":127:154  address public pendingAdmin */\n    tag_53:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16659:17691  function getPoolInfo(uint256 _pid)\r... */\n    tag_60:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16776:16794  uint256 totalStake */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17075:17089  poolInfo[_pid] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17075:17083  poolInfo */\n      0x06\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17075:17089  poolInfo[_pid] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17181:17196  pool.totalStake */\n      dup1\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17211:17226  pool.stakeToken */\n      0x01\n      dup3\n      add\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17373:17385  rewardTokens */\n      0x04\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17373:17392  rewardTokens.length */\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17181:17196  pool.totalStake */\n      swap2\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17211:17226  pool.stakeToken */\n      dup3\n      and\n      swap3\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17241:17256  pool.startBlock */\n      0xffffffff\n      shl(0xa0, 0x01)\n      dup5\n      div\n      dup2\n      and\n      swap4\n      shl(0xc0, 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17271:17284  pool.endBlock */\n      dup2\n      div\n      dup3\n      and\n      swap4\n      shl(0xe0, 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17299:17319  pool.lastRewardBlock */\n      swap1\n      swap2\n      div\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16941:16973  uint256[] memory rewardPerBlocks */\n      0x60\n      swap2\n      dup3\n      swap2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17359:17393  new uint256[](rewardTokens.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_163\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_163:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17439:17451  rewardTokens */\n      0x04\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17439:17458  rewardTokens.length */\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17341:17393  rewardPerBlocks = new uint256[](rewardTokens.length) */\n      swap1\n      swap4\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17425:17459  new uint256[](rewardTokens.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_165\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_165:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17404:17459  accRewardPerShares = new uint256[](rewardTokens.length) */\n      swap2\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17475:17484  uint256 i */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17470:17684  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n    tag_166:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17494:17506  rewardTokens */\n      0x04\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17494:17513  rewardTokens.length */\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17490:17513  i < rewardTokens.length */\n      dup2\n      lt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17470:17684  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n      iszero\n      tag_167\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17556:17578  pool.poolRewardData[i] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17556:17575  pool.poolRewardData */\n      0x02\n      dup4\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17556:17578  pool.poolRewardData[i] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17556:17593  pool.poolRewardData[i].rewardPerBlock */\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17535:17553  rewardPerBlocks[i] */\n      dup5\n      mload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17535:17550  rewardPerBlocks */\n      dup6\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17576:17577  i */\n      dup4\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17535:17553  rewardPerBlocks[i] */\n      dup2\n      lt\n      tag_169\n      jumpi\n      invalid\n    tag_169:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17535:17593  rewardPerBlocks[i] = pool.poolRewardData[i].rewardPerBlock */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17632:17636  pool */\n      dup2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17632:17651  pool.poolRewardData */\n      0x02\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17632:17654  pool.poolRewardData[i] */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17652:17653  i */\n      dup3\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17632:17654  pool.poolRewardData[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17632:17672  pool.poolRewardData[i].accRewardPerShare */\n      0x01\n      add\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17608:17626  accRewardPerShares */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17627:17628  i */\n      dup3\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17608:17629  accRewardPerShares[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_170\n      jumpi\n      invalid\n    tag_170:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17608:17672  accRewardPerShares[i] = pool.poolRewardData[i].accRewardPerShare */\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17515:17518  i++ */\n      0x01\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":17470:17684  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n      jump(tag_166)\n    tag_167:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16659:17691  function getPoolInfo(uint256 _pid)\r... */\n      pop\n      swap2\n      swap4\n      swap6\n      swap8\n      swap1\n      swap3\n      swap5\n      swap7\n      pop\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6404:7634  function addPool(\r... */\n    tag_67:\n        /* \"contracts/manual/PermissionAdmin.sol\":462:467  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/manual/PermissionAdmin.sol\":448:458  msg.sender */\n      caller\n        /* \"contracts/manual/PermissionAdmin.sol\":448:467  msg.sender == admin */\n      eq\n        /* \"contracts/manual/PermissionAdmin.sol\":440:482  require(msg.sender == admin, \"only admin\") */\n      tag_172\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0a\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb1, 0x37b7363c9030b236b4b7)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6608:6631  poolExists[_stakeToken] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6608:6618  poolExists */\n      0x03\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6608:6631  poolExists[_stakeToken] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6607:6631  !poolExists[_stakeToken] */\n      iszero\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6599:6656  require(!poolExists[_stakeToken], \"add: duplicated pool\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6675:6700  _stakeToken != address(0) */\n      dup6\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6667:6729  require(_stakeToken != address(0), \"add: invalid stake token\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_179\n      jump\t// in\n    tag_177:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6762:6774  rewardTokens */\n      0x04\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6762:6781  rewardTokens.length */\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6762:6808  rewardTokens.length == _rewardPerBlocks.length */\n      dup2\n      eq\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6740:6855  require(\r... */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_182\n      jump\t// in\n    tag_180:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6904:6916  block.number */\n      number\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6890:6901  _startBlock */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6890:6916  _startBlock > block.number */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6890:6943  _startBlock > block.number && _endBlock > _startBlock */\n      dup1\n      iszero\n      tag_183\n      jumpi\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6932:6943  _startBlock */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6920:6943  _endBlock > _startBlock */\n      0xffffffff\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6920:6929  _endBlock */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6920:6943  _endBlock > _startBlock */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6890:6943  _startBlock > block.number && _endBlock > _startBlock */\n    tag_183:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6868:6990  require(\r... */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_186\n      jump\t// in\n    tag_184:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7012:7022  poolLength */\n      0x05\n      dup1\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7003:7023  poolInfo[poolLength] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7003:7011  poolInfo */\n      0x06\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7003:7023  poolInfo[poolLength] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7003:7034  poolInfo[poolLength].stakeToken */\n      0x01\n      swap1\n      dup2\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7003:7048  poolInfo[poolLength].stakeToken = _stakeToken */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup12\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7068:7078  poolLength */\n      dup4\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7059:7079  poolInfo[poolLength] */\n      dup4\n      mstore\n      dup2\n      dup4\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7059:7090  poolInfo[poolLength].startBlock */\n      dup2\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7059:7104  poolInfo[poolLength].startBlock = _startBlock */\n      dup1\n      sload\n      not(shl(0xa0, 0xffffffff))\n      and\n      shl(0xa0, 0x01)\n      0xffffffff\n      dup12\n      dup2\n      and\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7124:7134  poolLength */\n      dup6\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7115:7135  poolInfo[poolLength] */\n      dup6\n      mstore\n      dup4\n      dup6\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7115:7144  poolInfo[poolLength].endBlock */\n      dup4\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7115:7156  poolInfo[poolLength].endBlock = _endBlock */\n      dup1\n      sload\n      not(shl(0xc0, 0xffffffff))\n      and\n      shl(0xc0, 0x01)\n      swap3\n      dup12\n      and\n      swap3\n      swap1\n      swap3\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7176:7186  poolLength */\n      swap4\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7167:7187  poolInfo[poolLength] */\n      dup4\n      mstore\n      swap1\n      dup3\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7167:7203  poolInfo[poolLength].lastRewardBlock */\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7167:7217  poolInfo[poolLength].lastRewardBlock = _startBlock */\n      dup1\n      sload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x01)\n      swap1\n      swap4\n      mul\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7230:7476  for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r... */\n    tag_187:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7250:7277  i < _rewardPerBlocks.length */\n      dup2\n      dup2\n      lt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7230:7476  for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r... */\n      iszero\n      tag_188\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7340:7464  PoolRewardData({\r... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7390:7406  _rewardPerBlocks */\n      dup5\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7407:7408  i */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7390:7409  _rewardPerBlocks[i] */\n      dup2\n      dup2\n      lt\n      tag_190\n      jumpi\n      invalid\n    tag_190:\n      0x20\n      swap1\n      dup2\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      calldataload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7340:7464  PoolRewardData({\r... */\n      dup4\n      mstore\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7447:7448  0 */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7340:7464  PoolRewardData({\r... */\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7308:7318  poolLength */\n      sload(0x05)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7299:7319  poolInfo[poolLength] */\n      dup3\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7299:7307  poolInfo */\n      0x06\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7299:7319  poolInfo[poolLength] */\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7299:7337  poolInfo[poolLength].poolRewardData[i] */\n      dup6\n      dup5\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7299:7334  poolInfo[poolLength].poolRewardData */\n      0x02\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7299:7337  poolInfo[poolLength].poolRewardData[i] */\n      dup3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7299:7464  poolInfo[poolLength].poolRewardData[i] = PoolRewardData({\r... */\n      dup3\n      mload\n      dup2\n      sstore\n      swap2\n      add\n      mload\n      0x01\n      swap2\n      dup3\n      add\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7279:7282  i++ */\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7230:7476  for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r... */\n      jump(tag_187)\n    tag_188:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7488:7498  poolLength */\n      0x05\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7488:7500  poolLength++ */\n      dup1\n      sload\n      0x01\n      swap1\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7513:7536  poolExists[_stakeToken] */\n      dup7\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7488:7498  poolLength */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7513:7536  poolExists[_stakeToken] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7513:7523  poolExists */\n      0x03\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7513:7536  poolExists[_stakeToken] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7513:7543  poolExists[_stakeToken] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7561:7626  AddNewPool(_stakeToken, _startBlock, _endBlock, _rewardPerBlocks) */\n      swap1\n      mload\n      0xffffffff\n      dup1\n      dup7\n      and\n      swap3\n      swap1\n      dup8\n      and\n      swap2\n      0xeb19e76b03b99eff4d0329a19e44569c131f242c9590234f19b76f2c56a817a1\n      swap1\n      tag_191\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7609:7625  _rewardPerBlocks */\n      dup8\n      swap1\n      dup8\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":7561:7626  AddNewPool(_stakeToken, _startBlock, _endBlock, _rewardPerBlocks) */\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6404:7634  function addPool(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":3254:3302  IKyberRewardLocker public immutable rewardLocker */\n    tag_70:\n      immutable(\"0x840fecb9bca2c4e63427c4b817f3137cd391e6a160600107c90b96ae83fdac7e\")\n      dup2\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10703:11524  function deposit(\r... */\n    tag_77:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2277:2284  _status */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2277:2296  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2269:2332  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_194\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_194:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2407:2425  _status = _ENTERED */\n      dup1\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10896:10919  updatePoolRewards(_pid) */\n      tag_196\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10914:10918  _pid */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10896:10913  updatePoolRewards */\n      tag_115\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10896:10919  updatePoolRewards(_pid) */\n      jump\t// in\n    tag_196:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10930:10981  _updateUserReward(msg.sender, _pid, _shouldHarvest) */\n      tag_197\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10948:10958  msg.sender */\n      caller\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10960:10964  _pid */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10966:10980  _shouldHarvest */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10930:10947  _updateUserReward */\n      tag_198\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10930:10981  _updateUserReward(msg.sender, _pid, _shouldHarvest) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10994:11015  PoolInfo storage pool */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11018:11032  poolInfo[_pid] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11018:11026  poolInfo */\n      0x06\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11018:11032  poolInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11067:11075  userInfo */\n      0x07\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11067:11081  userInfo[_pid] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11082:11092  msg.sender */\n      caller\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11067:11093  userInfo[_pid][msg.sender] */\n      dup1\n      dup7\n      mstore\n      swap4\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11147:11162  pool.stakeToken */\n      0x01\n      dup4\n      add\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11067:11093  userInfo[_pid][msg.sender] */\n      swap1\n      swap2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11137:11266  IERC20Ext(pool.stakeToken).safeTransferFrom(\r... */\n      tag_199\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11147:11162  pool.stakeToken */\n      and\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11228:11232  this */\n      address\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11248:11255  _amount */\n      dup8\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11137:11180  IERC20Ext(pool.stakeToken).safeTransferFrom */\n      tag_200\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11137:11266  IERC20Ext(pool.stakeToken).safeTransferFrom(\r... */\n      jump\t// in\n    tag_199:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11369:11380  user.amount */\n      dup1\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11369:11393  user.amount.add(_amount) */\n      tag_201\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11385:11392  _amount */\n      dup6\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11369:11384  user.amount.add */\n      tag_202\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11369:11393  user.amount.add(_amount) */\n      jump\t// in\n    tag_201:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11355:11393  user.amount = user.amount.add(_amount) */\n      dup2\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11422:11437  pool.totalStake */\n      dup2\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11422:11450  pool.totalStake.add(_amount) */\n      tag_203\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11442:11449  _amount */\n      dup6\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11422:11441  pool.totalStake.add */\n      tag_202\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11422:11450  pool.totalStake.add(_amount) */\n      jump\t// in\n    tag_203:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11404:11450  pool.totalStake = pool.totalStake.add(_amount) */\n      dup3\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11468:11516  Deposit(msg.sender, _pid, block.number, _amount) */\n      mload(0x40)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11494:11506  block.number */\n      number\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11488:11492  _pid */\n      dup7\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11476:11486  msg.sender */\n      caller\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11468:11516  Deposit(msg.sender, _pid, block.number, _amount) */\n      0x36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e\n      swap1\n      tag_204\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11508:11515  _amount */\n      dup10\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11468:11516  Deposit(msg.sender, _pid, block.number, _amount) */\n      tag_36\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1645:1646  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2580:2587  _status */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2580:2602  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10703:11524  function deposit(\r... */\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11719:11874  function withdraw(uint256 _pid, uint256 _amount)\r... */\n    tag_82:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2277:2284  _status */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2277:2296  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2269:2332  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_206\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2407:2425  _status = _ENTERED */\n      dup1\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11842:11866  _withdraw(_pid, _amount) */\n      tag_208\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11852:11856  _pid */\n      dup3\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11858:11865  _amount */\n      dup3\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11842:11851  _withdraw */\n      tag_209\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11842:11866  _withdraw(_pid, _amount) */\n      jump\t// in\n    tag_208:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1645:1646  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2580:2587  _status */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2580:2602  _status = _NOT_ENTERED */\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":11719:11874  function withdraw(uint256 _pid, uint256 _amount)\r... */\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13318:14732  function harvestMultiplePools(uint256[] calldata _pids) external override {\r... */\n    tag_87:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13403:13427  address[] memory rTokens */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13430:13442  rewardTokens */\n      0x04\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13403:13442  address[] memory rTokens = rewardTokens */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_211\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_212:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_212\n      jumpi\n    tag_211:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13453:13482  uint256[] memory totalRewards */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13499:13506  rTokens */\n      dup2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13499:13513  rTokens.length */\n      mload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13485:13514  new uint256[](rTokens.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_213\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_213:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_214\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_214:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13453:13514  uint256[] memory totalRewards = new uint256[](rTokens.length) */\n      swap1\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13543:13553  msg.sender */\n      caller\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13525:13540  address account */\n      0x00\n      dup1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13588:14517  for (uint256 i = 0; i < _pids.length; i++) {\r... */\n    tag_215:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13608:13624  i < _pids.length */\n      dup6\n      dup2\n      lt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13588:14517  for (uint256 i = 0; i < _pids.length; i++) {\r... */\n      iszero\n      tag_216\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13652:13657  _pids */\n      dup7\n      dup7\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13658:13659  i */\n      dup3\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13652:13660  _pids[i] */\n      dup2\n      dup2\n      lt\n      tag_218\n      jumpi\n      invalid\n    tag_218:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13646:13660  pid = _pids[i] */\n      swap2\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13675:13697  updatePoolRewards(pid) */\n      tag_219\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13693:13696  pid */\n      dup3\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13675:13692  updatePoolRewards */\n      tag_115\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13675:13697  updatePoolRewards(pid) */\n      jump\t// in\n    tag_219:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13766:13804  _updateUserReward(account, pid, false) */\n      tag_220\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13784:13791  account */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13793:13796  pid */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13798:13803  false */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13766:13783  _updateUserReward */\n      tag_198\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13766:13804  _updateUserReward(account, pid, false) */\n      jump\t// in\n    tag_220:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13826:13835  uint256 j */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13821:14506  for (uint256 j = 0; j < rTokens.length; j++) {\r... */\n    tag_221:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13845:13852  rTokens */\n      dup6\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13845:13859  rTokens.length */\n      mload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13841:13842  j */\n      dup2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13841:13859  j < rTokens.length */\n      lt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13821:14506  for (uint256 j = 0; j < rTokens.length; j++) {\r... */\n      iszero\n      tag_222\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13885:13899  uint256 reward */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13902:13915  userInfo[pid] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13902:13910  userInfo */\n      0x07\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13902:13915  userInfo[pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13902:13924  userInfo[pid][account] */\n      dup9\n      and\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13902:13964  userInfo[pid][account]\r... */\n      dup5\n      dup5\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13902:13961  userInfo[pid][account]\r... */\n      0x01\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13902:13964  userInfo[pid][account]\r... */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13902:14002  userInfo[pid][account]\r... */\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14025:14035  reward > 0 */\n      dup1\n      iszero\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14021:14491  if (reward > 0) {\r... */\n      tag_224\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14078:14105  totalRewards[j].add(reward) */\n      tag_225\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14098:14104  reward */\n      dup2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14078:14090  totalRewards */\n      dup8\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14091:14092  j */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14078:14093  totalRewards[j] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_226\n      jumpi\n      invalid\n    tag_226:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14078:14097  totalRewards[j].add */\n      tag_202\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14078:14105  totalRewards[j].add(reward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_225:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14060:14072  totalRewards */\n      dup7\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14073:14074  j */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14060:14075  totalRewards[j] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_227\n      jumpi\n      invalid\n    tag_227:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14060:14105  totalRewards[j] = totalRewards[j].add(reward) */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14239:14240  0 */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14128:14141  userInfo[pid] */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14128:14136  userInfo */\n      0x07\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14128:14141  userInfo[pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14128:14150  userInfo[pid][account] */\n      dup10\n      and\n      dup4\n      mstore\n      dup4\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14128:14194  userInfo[pid][account]\r... */\n      dup6\n      dup4\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14128:14191  userInfo[pid][account]\r... */\n      0x01\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14128:14194  userInfo[pid][account]\r... */\n      swap1\n      swap3\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14128:14240  userInfo[pid][account]\r... */\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14366:14376  rTokens[j] */\n      dup7\n      mload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14366:14373  rTokens */\n      dup8\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14192:14193  j */\n      dup4\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14366:14376  rTokens[j] */\n      dup2\n      lt\n      tag_228\n      jumpi\n      invalid\n    tag_228:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14268:14471  Harvest(\r... */\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14336:14339  pid */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14302:14309  account */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14268:14471  Harvest(\r... */\n      and\n      0xf75f3d433c6628e04e01a0be1a2c6692a6011ce4b00389824cfa8b8a12f3c1c4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14403:14409  reward */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14436:14448  block.number */\n      number\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14268:14471  Harvest(\r... */\n      mload(0x40)\n      tag_229\n      swap3\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14021:14491  if (reward > 0) {\r... */\n    tag_224:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13861:13864  j++ */\n      0x01\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13821:14506  for (uint256 j = 0; j < rTokens.length; j++) {\r... */\n      jump(tag_221)\n    tag_222:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13626:13629  i++ */\n      0x01\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13588:14517  for (uint256 i = 0; i < _pids.length; i++) {\r... */\n      jump(tag_215)\n    tag_216:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14534:14543  uint256 i */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14529:14725  for (uint256 i = 0; i < totalRewards.length; i++) {\r... */\n    tag_231:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14553:14565  totalRewards */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14553:14572  totalRewards.length */\n      mload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14549:14550  i */\n      dup2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14549:14572  i < totalRewards.length */\n      lt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14529:14725  for (uint256 i = 0; i < totalRewards.length; i++) {\r... */\n      iszero\n      tag_232\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14616:14617  0 */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14598:14610  totalRewards */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14611:14612  i */\n      dup3\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14598:14613  totalRewards[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_234\n      jumpi\n      invalid\n    tag_234:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14598:14617  totalRewards[i] > 0 */\n      gt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14594:14714  if (totalRewards[i] > 0) {\r... */\n      iszero\n      tag_236\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14638:14698  _lockReward(IERC20Ext(rTokens[i]), account, totalRewards[i]) */\n      tag_236\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14660:14667  rTokens */\n      dup6\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14668:14669  i */\n      dup3\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14660:14670  rTokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_237\n      jumpi\n      invalid\n    tag_237:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14673:14680  account */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14682:14694  totalRewards */\n      dup7\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14695:14696  i */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14682:14697  totalRewards[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_238\n      jumpi\n      invalid\n    tag_238:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14638:14649  _lockReward */\n      tag_239\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14638:14698  _lockReward(IERC20Ext(rTokens[i]), account, totalRewards[i]) */\n      jump\t// in\n    tag_236:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14574:14577  i++ */\n      0x01\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14529:14725  for (uint256 i = 0; i < totalRewards.length; i++) {\r... */\n      jump(tag_231)\n    tag_232:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13318:14732  function harvestMultiplePools(uint256[] calldata _pids) external override {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12410:13152  function emergencyWithdraw(uint256 _pid) external override nonReentrant {\r... */\n    tag_91:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2277:2284  _status */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2277:2296  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2269:2332  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_241\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_241:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2407:2425  _status = _ENTERED */\n      dup1\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12493:12514  PoolInfo storage pool */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12517:12531  poolInfo[_pid] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12517:12525  poolInfo */\n      0x06\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12517:12531  poolInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12566:12574  userInfo */\n      0x07\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12566:12580  userInfo[_pid] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12581:12591  msg.sender */\n      caller\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12566:12592  userInfo[_pid][msg.sender] */\n      dup6\n      mstore\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12620:12631  user.amount */\n      dup1\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12644:12659  user.amount = 0 */\n      dup4\n      dup3\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12517:12531  poolInfo[_pid] */\n      swap2\n      swap3\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12566:12592  userInfo[_pid][msg.sender] */\n      swap1\n      swap2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12620:12631  user.amount */\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12670:12898  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n    tag_243:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12694:12706  rewardTokens */\n      0x04\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12694:12713  rewardTokens.length */\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12690:12713  i < rewardTokens.length */\n      dup2\n      lt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12670:12898  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n      iszero\n      tag_244\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12735:12768  UserRewardData storage rewardData */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12771:12793  user.userRewardData[i] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12771:12790  user.userRewardData */\n      0x01\n      dup1\n      dup6\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12771:12793  user.userRewardData[i] */\n      0x20\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12808:12837  rewardData.lastRewardPerShare */\n      dup1\n      dup3\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12808:12841  rewardData.lastRewardPerShare = 0 */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12856:12886  rewardData.unclaimedReward = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12715:12718  i++ */\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12670:12898  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n      jump(tag_243)\n    tag_244:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12928:12943  pool.totalStake */\n      dup3\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12928:12955  pool.totalStake.sub(amount) */\n      tag_246\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12948:12954  amount */\n      dup3\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12928:12947  pool.totalStake.sub */\n      tag_247\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12928:12955  pool.totalStake.sub(amount) */\n      jump\t// in\n    tag_246:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12910:12955  pool.totalStake = pool.totalStake.sub(amount) */\n      dup4\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12972:12982  amount > 0 */\n      dup1\n      iszero\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12968:13070  if (amount > 0) {\r... */\n      tag_249\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13009:13024  pool.stakeToken */\n      0x01\n      dup4\n      add\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12999:13058  IERC20Ext(pool.stakeToken).safeTransfer(msg.sender, amount) */\n      tag_249\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13009:13024  pool.stakeToken */\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13039:13049  msg.sender */\n      caller\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13051:13057  amount */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12999:13038  IERC20Ext(pool.stakeToken).safeTransfer */\n      tag_250\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12999:13058  IERC20Ext(pool.stakeToken).safeTransfer(msg.sender, amount) */\n      jump\t// in\n    tag_249:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13123:13135  block.number */\n      number\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13117:13121  _pid */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13105:13115  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13087:13144  EmergencyWithdraw(msg.sender, _pid, block.number, amount) */\n      and\n      0x2369db1bafee945aee5630782f4a170682e3f8188d8dc247a4c73eb8c9e692d2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13137:13143  amount */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":13087:13144  EmergencyWithdraw(msg.sender, _pid, block.number, amount) */\n      mload(0x40)\n      tag_251\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1645:1646  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2580:2587  _status */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2580:2602  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12410:13152  function emergencyWithdraw(uint256 _pid) external override nonReentrant {\r... */\n      jump\t// out\n        /* \"contracts/manual/PermissionAdmin.sol\":661:864  function transferAdmin(address newAdmin) public onlyAdmin {\r... */\n    tag_95:\n        /* \"contracts/manual/PermissionAdmin.sol\":462:467  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/manual/PermissionAdmin.sol\":448:458  msg.sender */\n      caller\n        /* \"contracts/manual/PermissionAdmin.sol\":448:467  msg.sender == admin */\n      eq\n        /* \"contracts/manual/PermissionAdmin.sol\":440:482  require(msg.sender == admin, \"only admin\") */\n      tag_253\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0a\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb1, 0x37b7363c9030b236b4b7)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_253:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/manual/PermissionAdmin.sol\":738:760  newAdmin != address(0) */\n      dup2\n      and\n        /* \"contracts/manual/PermissionAdmin.sol\":730:776  require(newAdmin != address(0), \"new admin 0\") */\n      tag_255\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0b\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xac, 0x06e65772061646d696e203)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_255:\n        /* \"contracts/manual/PermissionAdmin.sol\":792:822  TransferAdminPending(newAdmin) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      dup2\n      mstore\n      swap1\n      mload\n      0x3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc40\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log1\n        /* \"contracts/manual/PermissionAdmin.sol\":833:845  pendingAdmin */\n      0x01\n        /* \"contracts/manual/PermissionAdmin.sol\":833:856  pendingAdmin = newAdmin */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/manual/PermissionAdmin.sol\":661:864  function transferAdmin(address newAdmin) public onlyAdmin {\r... */\n      jump\t// out\n        /* \"contracts/manual/PermissionAdmin.sol\":1398:1612  function claimAdmin() public {\r... */\n    tag_98:\n        /* \"contracts/manual/PermissionAdmin.sol\":1446:1458  pendingAdmin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/manual/PermissionAdmin.sol\":1462:1472  msg.sender */\n      caller\n        /* \"contracts/manual/PermissionAdmin.sol\":1446:1472  pendingAdmin == msg.sender */\n      eq\n        /* \"contracts/manual/PermissionAdmin.sol\":1438:1488  require(pendingAdmin == msg.sender, \"not pending\") */\n      tag_257\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0b\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa8, 0x6e6f742070656e64696e67)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_257:\n        /* \"contracts/manual/PermissionAdmin.sol\":1517:1529  pendingAdmin */\n      sload(0x01)\n      0x00\n        /* \"contracts/manual/PermissionAdmin.sol\":1531:1536  admin */\n      sload\n        /* \"contracts/manual/PermissionAdmin.sol\":1504:1537  AdminClaimed(pendingAdmin, admin) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/manual/PermissionAdmin.sol\":1517:1529  pendingAdmin */\n      swap4\n      dup5\n      and\n        /* \"contracts/manual/PermissionAdmin.sol\":1504:1537  AdminClaimed(pendingAdmin, admin) */\n      dup2\n      mstore\n        /* \"contracts/manual/PermissionAdmin.sol\":1531:1536  admin */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"contracts/manual/PermissionAdmin.sol\":1504:1537  AdminClaimed(pendingAdmin, admin) */\n      0x20\n      dup4\n      add\n      mstore\n      dup1\n      mload\n      0x65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"contracts/manual/PermissionAdmin.sol\":1556:1568  pendingAdmin */\n      0x01\n      dup1\n      sload\n      0x00\n        /* \"contracts/manual/PermissionAdmin.sol\":1548:1568  admin = pendingAdmin */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/manual/PermissionAdmin.sol\":1556:1568  pendingAdmin */\n      dup5\n      and\n        /* \"contracts/manual/PermissionAdmin.sol\":1548:1568  admin = pendingAdmin */\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/manual/PermissionAdmin.sol\":1579:1604  pendingAdmin = address(0) */\n      and\n      swap1\n      sstore\n        /* \"contracts/manual/PermissionAdmin.sol\":1398:1612  function claimAdmin() public {\r... */\n      jump\t// out\n        /* \"contracts/manual/PermissionAdmin.sol\":1045:1289  function transferAdminQuickly(address newAdmin) public onlyAdmin {\r... */\n    tag_102:\n        /* \"contracts/manual/PermissionAdmin.sol\":462:467  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/manual/PermissionAdmin.sol\":448:458  msg.sender */\n      caller\n        /* \"contracts/manual/PermissionAdmin.sol\":448:467  msg.sender == admin */\n      eq\n        /* \"contracts/manual/PermissionAdmin.sol\":440:482  require(msg.sender == admin, \"only admin\") */\n      tag_259\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0a\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb1, 0x37b7363c9030b236b4b7)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/manual/PermissionAdmin.sol\":1129:1151  newAdmin != address(0) */\n      dup2\n      and\n        /* \"contracts/manual/PermissionAdmin.sol\":1121:1163  require(newAdmin != address(0), \"admin 0\") */\n      tag_261\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x07\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xcc, 0x061646d696e203)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_261:\n        /* \"contracts/manual/PermissionAdmin.sol\":1179:1209  TransferAdminPending(newAdmin) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      dup2\n      mstore\n      swap1\n      mload\n      0x3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc40\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log1\n        /* \"contracts/manual/PermissionAdmin.sol\":1248:1253  admin */\n      sload(0x00)\n        /* \"contracts/manual/PermissionAdmin.sol\":1225:1254  AdminClaimed(newAdmin, admin) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      dup3\n      mstore\n        /* \"contracts/manual/PermissionAdmin.sol\":1248:1253  admin */\n      swap1\n      swap3\n      and\n        /* \"contracts/manual/PermissionAdmin.sol\":1225:1254  AdminClaimed(newAdmin, admin) */\n      0x20\n      dup4\n      add\n      mstore\n      dup1\n      mload\n      0x65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"contracts/manual/PermissionAdmin.sol\":1265:1270  admin */\n      0x00\n        /* \"contracts/manual/PermissionAdmin.sol\":1265:1281  admin = newAdmin */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/manual/PermissionAdmin.sol\":1045:1289  function transferAdminQuickly(address newAdmin) public onlyAdmin {\r... */\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":3464:3493  address[] public rewardTokens */\n    tag_106:\n      0x04\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_262\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_262:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12016:12151  function withdrawAll(uint256 _pid) external override nonReentrant {\r... */\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2277:2284  _status */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2277:2296  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2269:2332  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_265\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_265:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2407:2425  _status = _ENTERED */\n      dup1\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12109:12123  userInfo[_pid] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12109:12117  userInfo */\n      0x07\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12109:12123  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12124:12134  msg.sender */\n      caller\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12109:12135  userInfo[_pid][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12109:12142  userInfo[_pid][msg.sender].amount */\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12093:12143  _withdraw(_pid, userInfo[_pid][msg.sender].amount) */\n      tag_267\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12103:12107  _pid */\n      dup3\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12093:12102  _withdraw */\n      tag_209\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12093:12143  _withdraw(_pid, userInfo[_pid][msg.sender].amount) */\n      jump\t// in\n    tag_267:\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1645:1646  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2580:2587  _status */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2580:2602  _status = _NOT_ENTERED */\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":12016:12151  function withdrawAll(uint256 _pid) external override nonReentrant {\r... */\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18840:19808  function updatePoolRewards(uint256 _pid) public override {\r... */\n    tag_115:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18923:18933  poolLength */\n      sload(0x05)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18916:18920  _pid */\n      dup2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18916:18933  _pid < poolLength */\n      lt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18908:18953  require(_pid < poolLength, \"invalid pool id\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_271\n      jump\t// in\n    tag_269:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18964:18985  PoolInfo storage pool */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18988:19002  poolInfo[_pid] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18988:18996  poolInfo */\n      0x06\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18988:19002  poolInfo[_pid] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19041:19072  _lastAccountedRewardBlock(_pid) */\n      tag_272\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18997:19001  _pid */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19041:19066  _lastAccountedRewardBlock */\n      tag_273\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19041:19072  _lastAccountedRewardBlock(_pid) */\n      jump\t// in\n    tag_272:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19109:19129  pool.lastRewardBlock */\n      0x01\n      dup4\n      add\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19013:19072  uint32 lastAccountedBlock = _lastAccountedRewardBlock(_pid) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19109:19129  pool.lastRewardBlock */\n      0xffffffff\n      shl(0xe0, 0x01)\n      swap1\n      swap2\n      div\n      dup2\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19087:19129  lastAccountedBlock <= pool.lastRewardBlock */\n      swap1\n      dup3\n      and\n      gt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19083:19138  if (lastAccountedBlock <= pool.lastRewardBlock) return; */\n      tag_274\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19131:19138  return; */\n      pop\n      pop\n      jump(tag_268)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19083:19138  if (lastAccountedBlock <= pool.lastRewardBlock) return; */\n    tag_274:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19170:19185  pool.totalStake */\n      dup2\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19200:19216  _totalStake == 0 */\n      dup1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19196:19307  if (_totalStake == 0) {\r... */\n      tag_275\n      jumpi\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19233:19253  pool.lastRewardBlock */\n      0x01\n      swap1\n      swap2\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19233:19274  pool.lastRewardBlock = lastAccountedBlock */\n      dup1\n      sload\n      0xffffffff\n      swap1\n      swap3\n      and\n      shl(0xe0, 0x01)\n      mul\n      sub(shl(0xe0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19289:19296  return; */\n      jump(tag_268)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19196:19307  if (_totalStake == 0) {\r... */\n    tag_275:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19361:19381  pool.lastRewardBlock */\n      0x01\n      dup4\n      add\n      sload\n      0xffffffff\n      shl(0xe0, 0x01)\n      swap1\n      swap2\n      div\n      dup2\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19340:19381  lastAccountedBlock - pool.lastRewardBlock */\n      dup4\n      sub\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19317:19381  uint256 numberBlocks = lastAccountedBlock - pool.lastRewardBlock */\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19317:19337  uint256 numberBlocks */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19392:19749  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n    tag_276:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19416:19428  rewardTokens */\n      0x04\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19416:19435  rewardTokens.length */\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19412:19435  i < rewardTokens.length */\n      dup2\n      lt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19392:19749  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n      iszero\n      tag_277\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19457:19490  PoolRewardData storage rewardData */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19493:19515  pool.poolRewardData[i] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19493:19512  pool.poolRewardData */\n      0x02\n      dup7\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19493:19515  pool.poolRewardData[i] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19564:19589  rewardData.rewardPerBlock */\n      dup1\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19493:19515  pool.poolRewardData[i] */\n      swap1\n      swap2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19457:19490  PoolRewardData storage rewardData */\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19547:19590  numberBlocks.mul(rewardData.rewardPerBlock) */\n      tag_279\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19547:19559  numberBlocks */\n      dup6\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19547:19563  numberBlocks.mul */\n      tag_280\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19547:19590  numberBlocks.mul(rewardData.rewardPerBlock) */\n      jump\t// in\n    tag_279:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19530:19590  uint256 reward = numberBlocks.mul(rewardData.rewardPerBlock) */\n      swap1\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19636:19737  rewardData.accRewardPerShare.add(\r... */\n      tag_281\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19711:19722  _totalStake */\n      dup6\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19687:19708  reward.mul(PRECISION) */\n      tag_282\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19530:19590  uint256 reward = numberBlocks.mul(rewardData.rewardPerBlock) */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":1292:1296  1e12 */\n      0xe8d4a51000\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19687:19697  reward.mul */\n      tag_280\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19687:19708  reward.mul(PRECISION) */\n      jump\t// in\n    tag_282:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19687:19722  reward.mul(PRECISION) / _totalStake */\n      dup2\n      tag_283\n      jumpi\n      invalid\n    tag_283:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19636:19664  rewardData.accRewardPerShare */\n      0x01\n      dup6\n      add\n      sload\n      swap2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19687:19722  reward.mul(PRECISION) / _totalStake */\n      swap1\n      div\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19636:19668  rewardData.accRewardPerShare.add */\n      tag_202\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19636:19737  rewardData.accRewardPerShare.add(\r... */\n      jump\t// in\n    tag_281:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19605:19633  rewardData.accRewardPerShare */\n      0x01\n      swap3\n      dup4\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19605:19737  rewardData.accRewardPerShare = rewardData.accRewardPerShare.add(\r... */\n      sstore\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19437:19440  i++ */\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19392:19749  for (uint256 i = 0; i < rewardTokens.length; i++) {\r... */\n      jump(tag_276)\n    tag_277:\n      pop\n      pop\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19759:19779  pool.lastRewardBlock */\n      0x01\n      swap1\n      swap2\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19759:19800  pool.lastRewardBlock = lastAccountedBlock */\n      dup1\n      sload\n      0xffffffff\n      swap1\n      swap3\n      and\n      shl(0xe0, 0x01)\n      mul\n      sub(shl(0xe0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18840:19808  function updatePoolRewards(uint256 _pid) public override {\r... */\n    tag_268:\n      pop\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9560:10462  function updatePool(\r... */\n    tag_120:\n        /* \"contracts/manual/PermissionAdmin.sol\":462:467  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/manual/PermissionAdmin.sol\":448:458  msg.sender */\n      caller\n        /* \"contracts/manual/PermissionAdmin.sol\":448:467  msg.sender == admin */\n      eq\n        /* \"contracts/manual/PermissionAdmin.sol\":440:482  require(msg.sender == admin, \"only admin\") */\n      tag_285\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0a\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb1, 0x37b7363c9030b236b4b7)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_285:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9722:9745  updatePoolRewards(_pid) */\n      tag_287\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9740:9744  _pid */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9722:9739  updatePoolRewards */\n      tag_115\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9722:9745  updatePoolRewards(_pid) */\n      jump\t// in\n    tag_287:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9758:9779  PoolInfo storage pool */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9782:9796  poolInfo[_pid] */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9782:9790  poolInfo */\n      0x06\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9782:9796  poolInfo[_pid] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9874:9887  pool.endBlock */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9890:9902  block.number */\n      number\n      shl(0xc0, 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9874:9887  pool.endBlock */\n      swap1\n      swap2\n      div\n      0xffffffff\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9874:9902  pool.endBlock > block.number */\n      gt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9866:9933  require(pool.endBlock > block.number, \"update: pool already ended\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_290\n      jump\t// in\n    tag_288:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9966:9978  rewardTokens */\n      0x04\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9966:9985  rewardTokens.length */\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9966:10012  rewardTokens.length == _rewardPerBlocks.length */\n      dup3\n      eq\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9944:10062  require(\r... */\n      tag_291\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_293\n      jump\t// in\n    tag_291:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10107:10119  block.number */\n      number\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10095:10104  _endBlock */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10095:10119  _endBlock > block.number */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10095:10150  _endBlock > block.number && _endBlock > pool.startBlock */\n      dup1\n      iszero\n      tag_294\n      jumpi\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10135:10150  pool.startBlock */\n      0x01\n      dup2\n      add\n      sload\n      0xffffffff\n      shl(0xa0, 0x01)\n      swap1\n      swap2\n      div\n      dup2\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10123:10150  _endBlock > pool.startBlock */\n      swap1\n      dup6\n      and\n      gt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10095:10150  _endBlock > block.number && _endBlock > pool.startBlock */\n    tag_294:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10073:10203  require(\r... */\n      tag_295\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_297\n      jump\t// in\n    tag_295:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10216:10229  pool.endBlock */\n      0x01\n      dup2\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10216:10241  pool.endBlock = _endBlock */\n      dup1\n      sload\n      not(shl(0xc0, 0xffffffff))\n      and\n      shl(0xc0, 0x01)\n      0xffffffff\n      dup8\n      and\n      mul\n      or\n      swap1\n      sstore\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10252:10392  for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r... */\n    tag_298:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10272:10299  i < _rewardPerBlocks.length */\n      dup3\n      dup2\n      lt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10252:10392  for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r... */\n      iszero\n      tag_299\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10361:10377  _rewardPerBlocks */\n      dup4\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10378:10379  i */\n      dup3\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10361:10380  _rewardPerBlocks[i] */\n      dup2\n      dup2\n      lt\n      tag_301\n      jumpi\n      invalid\n    tag_301:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10321:10343  pool.poolRewardData[i] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10321:10340  pool.poolRewardData */\n      0x02\n      dup7\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10361:10380  _rewardPerBlocks[i] */\n      0x20\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10321:10343  pool.poolRewardData[i] */\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10361:10380  _rewardPerBlocks[i] */\n      swap2\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      calldataload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10321:10380  pool.poolRewardData[i].rewardPerBlock = _rewardPerBlocks[i] */\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10301:10304  i++ */\n      0x01\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10252:10392  for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r... */\n      jump(tag_298)\n    tag_299:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10426:10435  _endBlock */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10409:10454  UpdatePool(_pid, _endBlock, _rewardPerBlocks) */\n      0xffffffff\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10420:10424  _pid */\n      dup6\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10409:10454  UpdatePool(_pid, _endBlock, _rewardPerBlocks) */\n      0xba2d8506275d684e80223910f1065a195ea279f37e27eb97ac24f4107eba6cf9\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10437:10453  _rewardPerBlocks */\n      dup6\n      dup6\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":10409:10454  UpdatePool(_pid, _endBlock, _rewardPerBlocks) */\n      mload(0x40)\n      tag_302\n      swap3\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/manual/PermissionAdmin.sol\":493:494  _ */\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9560:10462  function updatePool(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8082:9221  function renewPool(\r... */\n    tag_125:\n        /* \"contracts/manual/PermissionAdmin.sol\":462:467  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/manual/PermissionAdmin.sol\":448:458  msg.sender */\n      caller\n        /* \"contracts/manual/PermissionAdmin.sol\":448:467  msg.sender == admin */\n      eq\n        /* \"contracts/manual/PermissionAdmin.sol\":440:482  require(msg.sender == admin, \"only admin\") */\n      tag_304\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0a\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb1, 0x37b7363c9030b236b4b7)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_304:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8272:8295  updatePoolRewards(_pid) */\n      tag_306\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8290:8294  _pid */\n      dup6\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8272:8289  updatePoolRewards */\n      tag_115\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8272:8295  updatePoolRewards(_pid) */\n      jump\t// in\n    tag_306:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8308:8329  PoolInfo storage pool */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8332:8346  poolInfo[_pid] */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8332:8340  poolInfo */\n      0x06\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8332:8346  poolInfo[_pid] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8438:8453  pool.startBlock */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8456:8468  block.number */\n      number\n      shl(0xa0, 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8438:8453  pool.startBlock */\n      swap1\n      swap2\n      div\n      0xffffffff\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8438:8468  pool.startBlock > block.number */\n      gt\n      dup1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8438:8500  pool.startBlock > block.number || pool.endBlock < block.number */\n      tag_307\n      jumpi\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8472:8485  pool.endBlock */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8488:8500  block.number */\n      number\n      shl(0xc0, 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8472:8485  pool.endBlock */\n      swap1\n      swap2\n      div\n      0xffffffff\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8472:8500  pool.endBlock < block.number */\n      lt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8438:8500  pool.startBlock > block.number || pool.endBlock < block.number */\n    tag_307:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8416:8562  require(\r... */\n      tag_308\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_310\n      jump\t// in\n    tag_308:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8633:8645  rewardTokens */\n      0x04\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8633:8652  rewardTokens.length */\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8633:8679  rewardTokens.length == _rewardPerBlocks.length */\n      dup3\n      eq\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8611:8728  require(\r... */\n      tag_311\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_313\n      jump\t// in\n    tag_311:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8775:8787  block.number */\n      number\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8761:8772  _startBlock */\n      dup6\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8761:8787  _startBlock > block.number */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8761:8814  _startBlock > block.number && _endBlock > _startBlock */\n      dup1\n      iszero\n      tag_314\n      jumpi\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8803:8814  _startBlock */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8791:8814  _endBlock > _startBlock */\n      0xffffffff\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8791:8800  _endBlock */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8791:8814  _endBlock > _startBlock */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8761:8814  _startBlock > block.number && _endBlock > _startBlock */\n    tag_314:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8739:8863  require(\r... */\n      tag_315\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_317\n      jump\t// in\n    tag_315:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8876:8891  pool.startBlock */\n      0x01\n      dup2\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8876:8905  pool.startBlock = _startBlock */\n      dup1\n      sload\n      not(shl(0xa0, 0xffffffff))\n      and\n      shl(0xa0, 0x01)\n      0xffffffff\n      dup9\n      dup2\n      and\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      or\n      not(shl(0xc0, 0xffffffff))\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8916:8941  pool.endBlock = _endBlock */\n      and\n      shl(0xc0, 0x01)\n      swap3\n      dup9\n      and\n      swap3\n      swap1\n      swap3\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8952:8986  pool.lastRewardBlock = _startBlock */\n      and\n      shl(0xe0, 0x01)\n      swap2\n      swap1\n      swap2\n      mul\n      or\n      swap1\n      sstore\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8999:9139  for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r... */\n    tag_318:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9019:9046  i < _rewardPerBlocks.length */\n      dup3\n      dup2\n      lt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8999:9139  for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r... */\n      iszero\n      tag_319\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9108:9124  _rewardPerBlocks */\n      dup4\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9125:9126  i */\n      dup3\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9108:9127  _rewardPerBlocks[i] */\n      dup2\n      dup2\n      lt\n      tag_321\n      jumpi\n      invalid\n    tag_321:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9068:9090  pool.poolRewardData[i] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9068:9087  pool.poolRewardData */\n      0x02\n      dup7\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9108:9127  _rewardPerBlocks[i] */\n      0x20\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9068:9090  pool.poolRewardData[i] */\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9108:9127  _rewardPerBlocks[i] */\n      swap2\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      calldataload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9068:9127  pool.poolRewardData[i].rewardPerBlock = _rewardPerBlocks[i] */\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9048:9051  i++ */\n      0x01\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8999:9139  for (uint256 i = 0; i < _rewardPerBlocks.length; i++) {\r... */\n      jump(tag_318)\n    tag_319:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9185:9194  _endBlock */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9156:9213  RenewPool(_pid, _startBlock, _endBlock, _rewardPerBlocks) */\n      0xffffffff\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9172:9183  _startBlock */\n      dup6\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9156:9213  RenewPool(_pid, _startBlock, _endBlock, _rewardPerBlocks) */\n      0xffffffff\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9166:9170  _pid */\n      dup8\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9156:9213  RenewPool(_pid, _startBlock, _endBlock, _rewardPerBlocks) */\n      0x4f863dc93468acf71ff8f5770599fbead4d0ff8ea6bd0c3251576f68fdad0904\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9196:9212  _rewardPerBlocks */\n      dup7\n      dup7\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":9156:9213  RenewPool(_pid, _startBlock, _endBlock, _rewardPerBlocks) */\n      mload(0x40)\n      tag_322\n      swap3\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_322:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/manual/PermissionAdmin.sol\":493:494  _ */\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":8082:9221  function renewPool(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16434:16590  function getRewardTokens()\r... */\n    tag_128:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16529:16545  address[] memory */\n      0x60\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16570:16582  rewardTokens */\n      0x04\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16563:16582  return rewardTokens */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_324\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_325:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_325\n      jumpi\n    tag_324:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16434:16590  function getRewardTokens()\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5580:6034  function adminWithdraw(uint256 rewardTokenIndex, uint256 amount)\r... */\n    tag_134:\n        /* \"contracts/manual/PermissionAdmin.sol\":462:467  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/manual/PermissionAdmin.sol\":448:458  msg.sender */\n      caller\n        /* \"contracts/manual/PermissionAdmin.sol\":448:467  msg.sender == admin */\n      eq\n        /* \"contracts/manual/PermissionAdmin.sol\":440:482  require(msg.sender == admin, \"only admin\") */\n      tag_327\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0a\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb1, 0x37b7363c9030b236b4b7)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_327:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5698:5719  IERC20Ext rewardToken */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5732:5744  rewardTokens */\n      0x04\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5745:5761  rewardTokenIndex */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5732:5762  rewardTokens[rewardTokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_329\n      jumpi\n      invalid\n    tag_329:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5778:5805  rewardToken == IERC20Ext(0) */\n      dup1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5774:6027  if (rewardToken == IERC20Ext(0)) {\r... */\n      tag_331\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5823:5835  bool success */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5841:5851  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5841:5856  msg.sender.call */\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5864:5870  amount */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5841:5875  msg.sender.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_332\n      swap1\n      tag_333\n      jump\t// in\n    tag_332:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_336\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_335)\n    tag_336:\n      0x60\n      swap2\n      pop\n    tag_335:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5822:5875  (bool success, ) = msg.sender.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5898:5905  success */\n      dup1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5890:5938  require(success, \"transfer reward token failed\") */\n      tag_337\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_339\n      jump\t// in\n    tag_337:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5774:6027  if (rewardToken == IERC20Ext(0)) {\r... */\n      pop\n      jump(tag_341)\n    tag_331:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5971:6015  rewardToken.safeTransfer(msg.sender, amount) */\n      tag_341\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5971:5995  rewardToken.safeTransfer */\n      dup3\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5996:6006  msg.sender */\n      caller\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":6008:6014  amount */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5971:5995  rewardToken.safeTransfer */\n      tag_250\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5971:6015  rewardToken.safeTransfer(msg.sender, amount) */\n      jump\t// in\n    tag_341:\n        /* \"contracts/manual/PermissionAdmin.sol\":493:494  _ */\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":5580:6034  function adminWithdraw(uint256 rewardTokenIndex, uint256 amount)\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14927:16369  function pendingRewards(uint256 _pid, address _user)\r... */\n    tag_138:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15114:15126  rewardTokens */\n      0x04\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15114:15133  rewardTokens.length */\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15048:15072  uint256[] memory rewards */\n      0x60\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15114:15133  rewardTokens.length */\n      dup1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15154:15182  new uint256[](rTokensLength) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_343\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_343:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_344\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_344:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15193:15214  PoolInfo storage pool */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15217:15231  poolInfo[_pid] */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15217:15225  poolInfo */\n      0x06\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15217:15231  poolInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15266:15274  userInfo */\n      0x07\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15266:15280  userInfo[_pid] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15266:15287  userInfo[_pid][_user] */\n      dup10\n      and\n      dup6\n      mstore\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15320:15335  pool.totalStake */\n      dup2\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15377:15397  pool.lastRewardBlock */\n      0x01\n      dup4\n      add\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15144:15182  rewards = new uint256[](rTokensLength) */\n      swap5\n      swap7\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15217:15231  poolInfo[_pid] */\n      swap2\n      swap4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15266:15287  userInfo[_pid][_user] */\n      swap1\n      swap3\n      shl(0xe0, 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15377:15397  pool.lastRewardBlock */\n      swap1\n      swap2\n      div\n      0xffffffff\n      and\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15436:15467  _lastAccountedRewardBlock(_pid) */\n      tag_345\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15217:15231  poolInfo[_pid] */\n      dup10\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15436:15461  _lastAccountedRewardBlock */\n      tag_273\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15436:15467  _lastAccountedRewardBlock(_pid) */\n      jump\t// in\n    tag_345:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15408:15467  uint32 lastAccountedBlock = _lastAccountedRewardBlock(_pid) */\n      swap1\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15483:15492  uint256 i */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15478:16362  for (uint256 i = 0; i < rTokensLength; i++) {\r... */\n    tag_346:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15502:15515  rTokensLength */\n      dup7\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15498:15499  i */\n      dup2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15498:15515  i < rTokensLength */\n      lt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15478:16362  for (uint256 i = 0; i < rTokensLength; i++) {\r... */\n      iszero\n      tag_347\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15537:15563  uint256 _accRewardPerShare */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15566:15606  pool\r... */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15566:15603  pool\r... */\n      0x02\n      dup8\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15566:15606  pool\r... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15566:15642  pool\r... */\n      0x01\n      add\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15661:15702  lastAccountedBlock > _poolLastRewardBlock */\n      0xffffffff\n      dup4\n      and\n      dup5\n      lt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15661:15722  lastAccountedBlock > _poolLastRewardBlock && _totalStake != 0 */\n      dup1\n      iszero\n      tag_349\n      jumpi\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15706:15722  _totalStake != 0 */\n      dup5\n      iszero\n      iszero\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15661:15722  lastAccountedBlock > _poolLastRewardBlock && _totalStake != 0 */\n    tag_349:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15657:16023  if (lastAccountedBlock > _poolLastRewardBlock && _totalStake != 0) {\r... */\n      iszero\n      tag_350\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15743:15757  uint256 reward */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15830:15852  pool.poolRewardData[i] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15830:15849  pool.poolRewardData */\n      0x02\n      dup9\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15830:15852  pool.poolRewardData[i] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15830:15867  pool.poolRewardData[i].rewardPerBlock */\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15760:15868  (lastAccountedBlock - _poolLastRewardBlock)\r... */\n      tag_351\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15761:15802  lastAccountedBlock - _poolLastRewardBlock */\n      0xffffffff\n      dup1\n      dup8\n      and\n      dup9\n      swap1\n      sub\n      swap2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15830:15867  pool.poolRewardData[i].rewardPerBlock */\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15760:15829  (lastAccountedBlock - _poolLastRewardBlock)\r... */\n      tag_280\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15760:15868  (lastAccountedBlock - _poolLastRewardBlock)\r... */\n      and\n      jump\t// in\n    tag_351:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15743:15868  uint256 reward = (lastAccountedBlock - _poolLastRewardBlock)\r... */\n      swap1\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15908:16007  _accRewardPerShare.add(\r... */\n      tag_352\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15977:15988  _totalStake */\n      dup7\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15953:15974  reward.mul(PRECISION) */\n      tag_353\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15743:15868  uint256 reward = (lastAccountedBlock - _poolLastRewardBlock)\r... */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":1292:1296  1e12 */\n      0xe8d4a51000\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15953:15963  reward.mul */\n      tag_280\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15953:15974  reward.mul(PRECISION) */\n      jump\t// in\n    tag_353:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15953:15988  reward.mul(PRECISION) / _totalStake */\n      dup2\n      tag_354\n      jumpi\n      invalid\n    tag_354:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15908:15926  _accRewardPerShare */\n      dup5\n      swap2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15953:15988  reward.mul(PRECISION) / _totalStake */\n      swap1\n      div\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15908:15930  _accRewardPerShare.add */\n      tag_202\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15908:16007  _accRewardPerShare.add(\r... */\n      jump\t// in\n    tag_352:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15887:16007  _accRewardPerShare = _accRewardPerShare.add(\r... */\n      swap2\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15657:16023  if (lastAccountedBlock > _poolLastRewardBlock && _totalStake != 0) {\r... */\n      pop\n    tag_350:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16156:16178  user.userRewardData[i] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16156:16175  user.userRewardData */\n      0x01\n      dup1\n      dup9\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16156:16178  user.userRewardData[i] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16156:16197  user.userRewardData[i].lastRewardPerShare */\n      add\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":1292:1296  1e12 */\n      0xe8d4a51000\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16069:16239  user.amount.mul(\r... */\n      tag_355\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16107:16220  _accRewardPerShare.sub(\r... */\n      tag_356\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16107:16125  _accRewardPerShare */\n      dup5\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16107:16129  _accRewardPerShare.sub */\n      tag_247\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16107:16220  _accRewardPerShare.sub(\r... */\n      jump\t// in\n    tag_356:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16069:16080  user.amount */\n      dup9\n      sload\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16069:16084  user.amount.mul */\n      tag_280\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16069:16239  user.amount.mul(\r... */\n      jump\t// in\n    tag_355:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16069:16268  user.amount.mul(\r... */\n      dup2\n      tag_357\n      jumpi\n      invalid\n    tag_357:\n      div\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16039:16046  rewards */\n      dup10\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16047:16048  i */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16039:16049  rewards[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_358\n      jumpi\n      invalid\n    tag_358:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16039:16268  rewards[i] =\r... */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16296:16350  rewards[i].add(user.userRewardData[i].unclaimedReward) */\n      tag_359\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16311:16315  user */\n      dup7\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16311:16330  user.userRewardData */\n      0x01\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16311:16333  user.userRewardData[i] */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16331:16332  i */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16311:16333  user.userRewardData[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16311:16349  user.userRewardData[i].unclaimedReward */\n      0x00\n      add\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16296:16303  rewards */\n      dup11\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16304:16305  i */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16296:16306  rewards[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_226\n      jumpi\n      invalid\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16296:16350  rewards[i].add(user.userRewardData[i].unclaimedReward) */\n    tag_359:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16283:16290  rewards */\n      dup10\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16291:16292  i */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16283:16293  rewards[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_361\n      jumpi\n      invalid\n    tag_361:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":16283:16350  rewards[i] = rewards[i].add(user.userRewardData[i].unclaimedReward) */\n      mstore\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15517:15520  i++ */\n      0x01\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":15478:16362  for (uint256 i = 0; i < rTokensLength; i++) {\r... */\n      jump(tag_346)\n    tag_347:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":14927:16369  function pendingRewards(uint256 _pid, address _user)\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18632:18773  function harvest(uint256 _pid) public override {\r... */\n    tag_144:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18690:18713  updatePoolRewards(_pid) */\n      tag_363\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18708:18712  _pid */\n      dup2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18690:18707  updatePoolRewards */\n      tag_115\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18690:18713  updatePoolRewards(_pid) */\n      jump\t// in\n    tag_363:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18724:18765  _updateUserReward(msg.sender, _pid, true) */\n      tag_268\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18742:18752  msg.sender */\n      caller\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18754:18758  _pid */\n      dup3\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18760:18764  true */\n      0x01\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18724:18741  _updateUserReward */\n      tag_198\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":18724:18765  _updateUserReward(msg.sender, _pid, true) */\n      jump\t// in\n        /* \"contracts/manual/PermissionAdmin.sol\":100:120  address public admin */\n    tag_147:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1348:1961  function safeApprove(IERC20 token, address spender, uint256 value) internal {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1713:1723  value == 0 */\n      dup1\n      iszero\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1712:1774  (value == 0) || (token.allowance(address(this), spender) == 0) */\n      tag_366\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1768  token.allowance(address(this), spender) */\n      0x40\n      dup1\n      mload\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1753:1757  this */\n      address\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1768  token.allowance(address(this), spender) */\n      0x04\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      swap2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1744  token.allowance */\n      swap2\n      dup6\n      and\n      swap2\n      0xdd62ed3e\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1768  token.allowance(address(this), spender) */\n      0x44\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1744  token.allowance */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1768  token.allowance(address(this), spender) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_367\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_367:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_369\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_369:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_370\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_370:\n      pop\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1729:1773  token.allowance(address(this), spender) == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1712:1774  (value == 0) || (token.allowance(address(this), spender) == 0) */\n    tag_366:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1704:1854  require((value == 0) || (token.allowance(address(this), spender) == 0),... */\n      tag_371\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x36\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25\n      0x36\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_371:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1891:1953  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x095ea7b3)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1864:1954  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      tag_341\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1884:1889  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1864:1883  _callOptionalReturn */\n      tag_373\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1864:1954  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3684:3696  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_375\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3737:3743  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3745:3749  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3751:3752  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3754:3766  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3715:3736  functionCallWithValue */\n      tag_376\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_375:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3708:3767  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_374:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20662:22715  function _updateUserReward(\r... */\n    tag_198:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20790:20808  uint256 userAmount */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20811:20825  userInfo[_pid] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20811:20819  userInfo */\n      0x07\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20811:20825  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20811:20830  userInfo[_pid][_to] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20811:20837  userInfo[_pid][_to].amount */\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20872:20884  rewardTokens */\n      0x04\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20872:20891  rewardTokens.length */\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20908:20923  userAmount == 0 */\n      dup2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20904:21487  if (userAmount == 0) {\r... */\n      tag_378\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21184:21193  uint256 i */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21179:21455  for (uint256 i = 0; i < rTokensLength; i++) {\r... */\n    tag_379:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21203:21216  rTokensLength */\n      dup2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21199:21200  i */\n      dup2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21199:21216  i < rTokensLength */\n      lt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21179:21455  for (uint256 i = 0; i < rTokensLength; i++) {\r... */\n      iszero\n      tag_380\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21345:21359  poolInfo[_pid] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21345:21353  poolInfo */\n      0x06\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21345:21359  poolInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21345:21399  poolInfo[_pid]\r... */\n      dup5\n      dup5\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21345:21396  poolInfo[_pid]\r... */\n      0x02\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21345:21399  poolInfo[_pid]\r... */\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21345:21439  poolInfo[_pid]\r... */\n      0x01\n      swap1\n      dup2\n      add\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21242:21256  userInfo[_pid] */\n      dup10\n      dup6\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21242:21250  userInfo */\n      0x07\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21242:21256  userInfo[_pid] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21242:21261  userInfo[_pid][_to] */\n      dup13\n      and\n      dup7\n      mstore\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21242:21301  userInfo[_pid][_to]\r... */\n      dup7\n      dup7\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21242:21298  userInfo[_pid][_to]\r... */\n      dup3\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21242:21301  userInfo[_pid][_to]\r... */\n      swap1\n      swap4\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21242:21342  userInfo[_pid][_to]\r... */\n      dup3\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21242:21439  userInfo[_pid][_to]\r... */\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21218:21221  i++ */\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21179:21455  for (uint256 i = 0; i < rTokensLength; i++) {\r... */\n      jump(tag_379)\n    tag_380:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21469:21476  return; */\n      pop\n      pop\n      jump(tag_341)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20904:21487  if (userAmount == 0) {\r... */\n    tag_378:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21504:21513  uint256 i */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21499:22708  for (uint256 i = 0; i < rTokensLength; i++) {\r... */\n    tag_382:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21523:21536  rTokensLength */\n      dup2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21519:21520  i */\n      dup2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21519:21536  i < rTokensLength */\n      lt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21499:22708  for (uint256 i = 0; i < rTokensLength; i++) {\r... */\n      iszero\n      tag_383\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21558:21587  uint256 lastAccRewardPerShare */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21590:21604  poolInfo[_pid] */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21590:21598  poolInfo */\n      0x06\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21590:21604  poolInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21590:21640  poolInfo[_pid]\r... */\n      dup5\n      dup5\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21590:21637  poolInfo[_pid]\r... */\n      0x02\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21590:21640  poolInfo[_pid]\r... */\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21590:21676  poolInfo[_pid]\r... */\n      0x01\n      swap1\n      dup2\n      add\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21727:21741  userInfo[_pid] */\n      dup10\n      dup6\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21727:21735  userInfo */\n      0x07\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21727:21741  userInfo[_pid] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21727:21746  userInfo[_pid][_to] */\n      dup13\n      and\n      dup7\n      mstore\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21727:21782  userInfo[_pid][_to]\r... */\n      dup7\n      dup7\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21727:21779  userInfo[_pid][_to]\r... */\n      dup3\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21727:21782  userInfo[_pid][_to]\r... */\n      swap1\n      swap4\n      mstore\n      swap1\n      dup4\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21998:22027  rewardData.lastRewardPerShare */\n      swap1\n      dup2\n      add\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21590:21676  poolInfo[_pid]\r... */\n      swap2\n      swap3\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21727:21782  userInfo[_pid][_to]\r... */\n      swap1\n      swap2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":1292:1296  1e12 */\n      0xe8d4a51000\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21939:22043  userAmount.mul(\r... */\n      tag_385\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21972:22028  lastAccRewardPerShare.sub(rewardData.lastRewardPerShare) */\n      tag_386\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21590:21676  poolInfo[_pid]\r... */\n      dup7\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21972:21997  lastAccRewardPerShare.sub */\n      tag_247\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21972:22028  lastAccRewardPerShare.sub(rewardData.lastRewardPerShare) */\n      jump\t// in\n    tag_386:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21939:21949  userAmount */\n      dup9\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21939:21953  userAmount.mul */\n      tag_280\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21939:22043  userAmount.mul(\r... */\n      jump\t// in\n    tag_385:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21939:22055  userAmount.mul(\r... */\n      dup2\n      tag_387\n      jumpi\n      invalid\n    tag_387:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22094:22120  rewardData.unclaimedReward */\n      dup4\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21939:22055  userAmount.mul(\r... */\n      swap2\n      swap1\n      div\n      swap2\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22081:22121  _pending.add(rewardData.unclaimedReward) */\n      tag_388\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21939:22055  userAmount.mul(\r... */\n      dup3\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22081:22093  _pending.add */\n      tag_202\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22081:22121  _pending.add(rewardData.unclaimedReward) */\n      jump\t// in\n    tag_388:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22070:22121  _pending = _pending.add(rewardData.unclaimedReward) */\n      swap1\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22167:22180  shouldHarvest */\n      dup7\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22167:22195  shouldHarvest ? 0 : _pending */\n      tag_389\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22187:22195  _pending */\n      dup1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22167:22195  shouldHarvest ? 0 : _pending */\n      jump(tag_390)\n    tag_389:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22183:22184  0 */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22167:22195  shouldHarvest ? 0 : _pending */\n    tag_390:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22138:22195  rewardData.unclaimedReward = shouldHarvest ? 0 : _pending */\n      dup3\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22296:22325  rewardData.lastRewardPerShare */\n      0x01\n      dup3\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22296:22349  rewardData.lastRewardPerShare = lastAccRewardPerShare */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22370:22383  shouldHarvest */\n      dup7\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22370:22399  shouldHarvest && _pending > 0 */\n      dup1\n      iszero\n      tag_391\n      jumpi\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22398:22399  0 */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22387:22395  _pending */\n      dup2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22387:22399  _pending > 0 */\n      gt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22370:22399  shouldHarvest && _pending > 0 */\n    tag_391:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22366:22697  if (shouldHarvest && _pending > 0) {\r... */\n      iszero\n      tag_392\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22420:22474  _lockReward(IERC20Ext(rewardTokens[i]), _to, _pending) */\n      tag_393\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22442:22454  rewardTokens */\n      0x04\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22455:22456  i */\n      dup6\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22442:22457  rewardTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_394\n      jumpi\n      invalid\n    tag_394:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22460:22463  _to */\n      dup11\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22465:22473  _pending */\n      dup4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22420:22431  _lockReward */\n      tag_239\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22420:22474  _lockReward(IERC20Ext(rewardTokens[i]), _to, _pending) */\n      jump\t// in\n    tag_393:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22581:22593  rewardTokens */\n      0x04\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22594:22595  i */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22581:22596  rewardTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_396\n      jumpi\n      invalid\n    tag_396:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22498:22681  Harvest(\r... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22581:22596  rewardTokens[i] */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22554:22558  _pid */\n      dup11\n      swap2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22498:22681  Harvest(\r... */\n      swap1\n      dup13\n      and\n      swap1\n      0xf75f3d433c6628e04e01a0be1a2c6692a6011ce4b00389824cfa8b8a12f3c1c4\n      swap1\n      tag_398\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22619:22627  _pending */\n      dup7\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22650:22662  block.number */\n      number\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22498:22681  Harvest(\r... */\n      tag_230\n      jump\t// in\n    tag_398:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22366:22697  if (shouldHarvest && _pending > 0) {\r... */\n    tag_392:\n      pop\n      pop\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21538:21541  i++ */\n      0x01\n      add\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":21499:22708  for (uint256 i = 0; i < rTokensLength; i++) {\r... */\n      jump(tag_382)\n    tag_383:\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20662:22715  function _updateUserReward(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":885:1088  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1012:1080  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      0x24\n      dup4\n      add\n      mstore\n      dup5\n      and\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x84\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":985:1081  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_400\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1005:1010  token */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":985:1004  _callOptionalReturn */\n      tag_373\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":985:1081  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_400:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":885:1088  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      dup3\n      dup3\n      add\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_402\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_402:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2857:2858  c */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_401:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19929:20560  function _withdraw(uint256 _pid, uint256 _amount) internal {\r... */\n    tag_209:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19999:20020  PoolInfo storage pool */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20023:20037  poolInfo[_pid] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20023:20031  poolInfo */\n      0x06\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20023:20037  poolInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20072:20080  userInfo */\n      0x07\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20072:20086  userInfo[_pid] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20087:20097  msg.sender */\n      caller\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20072:20098  userInfo[_pid][msg.sender] */\n      dup6\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20117:20128  user.amount */\n      dup1\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20117:20139  user.amount >= _amount */\n      dup4\n      gt\n      iszero\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20109:20173  require(user.amount >= _amount, \"withdraw: insufficient amount\") */\n      tag_404\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_406\n      jump\t// in\n    tag_404:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20229:20252  updatePoolRewards(_pid) */\n      tag_407\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20247:20251  _pid */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20229:20246  updatePoolRewards */\n      tag_115\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20229:20252  updatePoolRewards(_pid) */\n      jump\t// in\n    tag_407:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20263:20304  _updateUserReward(msg.sender, _pid, true) */\n      tag_408\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20281:20291  msg.sender */\n      caller\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20293:20297  _pid */\n      dup6\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20299:20303  true */\n      0x01\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20263:20280  _updateUserReward */\n      tag_198\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20263:20304  _updateUserReward(msg.sender, _pid, true) */\n      jump\t// in\n    tag_408:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20331:20342  user.amount */\n      dup1\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20331:20355  user.amount.sub(_amount) */\n      tag_409\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20347:20354  _amount */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20331:20346  user.amount.sub */\n      tag_247\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20331:20355  user.amount.sub(_amount) */\n      jump\t// in\n    tag_409:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20317:20355  user.amount = user.amount.sub(_amount) */\n      dup2\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20384:20399  pool.totalStake */\n      dup2\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20384:20412  pool.totalStake.sub(_amount) */\n      tag_410\n      swap1\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20404:20411  _amount */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20384:20403  pool.totalStake.sub */\n      tag_247\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20384:20412  pool.totalStake.sub(_amount) */\n      jump\t// in\n    tag_410:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20366:20412  pool.totalStake = pool.totalStake.sub(_amount) */\n      dup3\n      sstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20435:20450  pool.stakeToken */\n      0x01\n      dup3\n      add\n      sload\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20425:20485  IERC20Ext(pool.stakeToken).safeTransfer(msg.sender, _amount) */\n      tag_411\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20435:20450  pool.stakeToken */\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20465:20475  msg.sender */\n      caller\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20477:20484  _amount */\n      dup6\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20425:20464  IERC20Ext(pool.stakeToken).safeTransfer */\n      tag_250\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20425:20485  IERC20Ext(pool.stakeToken).safeTransfer(msg.sender, _amount) */\n      jump\t// in\n    tag_411:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20530:20542  block.number */\n      number\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20524:20528  _pid */\n      dup5\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20512:20522  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20503:20552  Withdraw(msg.sender, _pid, block.number, _amount) */\n      and\n      0x02f25270a4d87bea75db541cdfe559334a275b4a233520ed6c0a2429667cca94\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20544:20551  _amount */\n      dup7\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":20503:20552  Withdraw(msg.sender, _pid, block.number, _amount) */\n      mload(0x40)\n      tag_412\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_412:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":19929:20560  function _withdraw(uint256 _pid, uint256 _amount) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23167:23421  function _lockReward(\r... */\n    tag_239:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23294:23307  uint256 value */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23310:23331  token == IERC20Ext(0) */\n      dup5\n      and\n      iszero\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23310:23345  token == IERC20Ext(0) ? _amount : 0 */\n      tag_414\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23344:23345  0 */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23310:23345  token == IERC20Ext(0) ? _amount : 0 */\n      jump(tag_415)\n    tag_414:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23334:23341  _amount */\n      dup2\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23310:23345  token == IERC20Ext(0) ? _amount : 0 */\n    tag_415:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23294:23345  uint256 value = token == IERC20Ext(0) ? _amount : 0 */\n      swap1\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23356:23368  rewardLocker */\n      immutable(\"0x840fecb9bca2c4e63427c4b817f3137cd391e6a160600107c90b96ae83fdac7e\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23356:23373  rewardLocker.lock */\n      and\n      0x7750c9f0\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23381:23386  value */\n      dup3\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23388:23393  token */\n      dup7\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23395:23403  _account */\n      dup7\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23405:23412  _amount */\n      dup7\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23356:23413  rewardLocker.lock{value: value}(token, _account, _amount) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_416\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_417\n      jump\t// in\n    tag_416:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_418\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_418:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_420\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_420:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23167:23421  function _lockReward(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3194:3201  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3226:3227  a */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3221:3222  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3221:3227  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3213:3262  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_422\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_422:\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3279:3284  a - b */\n      swap1\n      sub\n      swap1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":704:879  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":813:871  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_341\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":806:811  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":786:805  _callOptionalReturn */\n      tag_373\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22851:23091  function _lastAccountedRewardBlock(uint256 _pid)\r... */\n    tag_273:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22950:22963  uint32 _value */\n      0x00\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22990:23004  poolInfo[_pid] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22990:22998  poolInfo */\n      0x06\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22990:23004  poolInfo[_pid] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22990:23013  poolInfo[_pid].endBlock */\n      0x01\n      add\n      sload\n      shl(0xc0, 0x01)\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23037:23049  block.number */\n      number\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23028:23049  _value > block.number */\n      dup2\n      gt\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23024:23083  if (_value > block.number) _value = block.number.toUint32() */\n      iszero\n      tag_426\n      jumpi\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23060:23083  block.number.toUint32() */\n      tag_427\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23060:23072  block.number */\n      number\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23060:23081  block.number.toUint32 */\n      tag_428\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23060:23083  block.number.toUint32() */\n      jump\t// in\n    tag_427:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23051:23083  _value = block.number.toUint32() */\n      swap1\n      pop\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":23024:23083  if (_value > block.number) _value = block.number.toUint32() */\n    tag_426:\n        /* \"contracts/liquidityMining/KyberFairLaunch.sol\":22851:23091  function _lastAccountedRewardBlock(uint256 _pid)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3596:3603  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3619:3625  a == 0 */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n      tag_430\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3634:3635  0 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3627:3635  return 0 */\n      jump(tag_401)\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n    tag_430:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3657:3662  a * b */\n      dup3\n      dup3\n      mul\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3661:3662  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3657:3658  a */\n      dup5\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3657:3662  a * b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3657:3658  a */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3680:3685  c / a */\n      tag_431\n      jumpi\n      invalid\n    tag_431:\n      div\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3680:3690  c / a == b */\n      eq\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3672:3728  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_402\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2967:3718  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_373:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3386:3409  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_434\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3440:3444  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3420:3425  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3439  address(token).functionCall */\n      and\n      tag_150\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_434:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3495:3512  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3386:3481  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3495:3516  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3491:3712  if (returndata.length > 0) { // Return data is optional... */\n      tag_341\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3635:3645  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3624:3654  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_436\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_436:\n      pop\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3616:3701  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_376:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4735:4747  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4792:4797  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4767:4788  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4767:4797  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4759:4840  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_439\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_439:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      tag_440\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4869:4875  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4858:4868  isContract */\n      tag_441\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      jump\t// in\n    tag_440:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4850:4910  require(isContract(target), \"Address: call to non-contract\") */\n      tag_442\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_442:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4981:4993  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4995:5018  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5022:5028  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5022:5033  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5042:5047  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5050:5054  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5022:5055  target.call{ value: value }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_443:\n      0x20\n      dup4\n      lt\n      tag_445\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_443)\n    tag_445:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_448\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_447)\n    tag_448:\n      0x60\n      swap2\n      pop\n    tag_447:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4980:5055  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      tag_449\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5090:5097  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5099:5109  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5111:5123  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5072:5089  _verifyCallResult */\n      tag_450\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_449:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5065:5124  return _verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/SafeCast.sol\":2017:2193  function toUint32(uint256 value) internal pure returns (uint32) {... */\n    tag_428:\n        /* \"@openzeppelin/contracts/utils/SafeCast.sol\":2073:2079  uint32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/SafeCast.sol\":2107:2112  2**32 */\n      0x0100000000\n        /* \"@openzeppelin/contracts/utils/SafeCast.sol\":2099:2104  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/SafeCast.sol\":2099:2112  value < 2**32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/SafeCast.sol\":2091:2156  require(value < 2**32, \"SafeCast: value doesn\\'t fit in 32 bits\") */\n      tag_452\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_452:\n      pop\n        /* \"@openzeppelin/contracts/utils/SafeCast.sol\":2180:2185  value */\n      swap1\n        /* \"@openzeppelin/contracts/utils/SafeCast.sol\":2017:2193  function toUint32(uint256 value) internal pure returns (uint32) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n    tag_441:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1124:1132  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_450:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7206:7218  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7234:7241  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n      iszero\n      tag_455\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7264:7274  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7257:7274  return returndata */\n      jump(tag_374)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n    tag_455:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7375:7392  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7375:7396  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7371:7800  if (returndata.length > 0) {... */\n      tag_457\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7633:7643  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7627:7644  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7693:7708  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7680:7690  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7676:7678  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7672:7691  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7665:7709  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7582:7727  {... */\n    tag_457:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7772:7784  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_459:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_461\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_459)\n    tag_461:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_462\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_462:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:189   */\n    tag_464:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":194:598   */\n    tag_467:\n      0x00\n      dup1\n        /* \"#utility.yul\":327:330   */\n      dup4\n        /* \"#utility.yul\":320:324   */\n      0x1f\n        /* \"#utility.yul\":312:318   */\n      dup5\n        /* \"#utility.yul\":308:325   */\n      add\n        /* \"#utility.yul\":304:331   */\n      slt\n        /* \"#utility.yul\":294:296   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":352:360   */\n      dup2\n        /* \"#utility.yul\":342:350   */\n      dup3\n        /* \"#utility.yul\":335:361   */\n      revert\n        /* \"#utility.yul\":294:296   */\n    tag_469:\n      pop\n        /* \"#utility.yul\":382:402   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":425:443   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":414:444   */\n      dup2\n      gt\n        /* \"#utility.yul\":411:413   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":464:472   */\n      dup2\n        /* \"#utility.yul\":454:462   */\n      dup3\n        /* \"#utility.yul\":447:473   */\n      revert\n        /* \"#utility.yul\":411:413   */\n    tag_470:\n        /* \"#utility.yul\":508:512   */\n      0x20\n        /* \"#utility.yul\":500:506   */\n      dup4\n        /* \"#utility.yul\":496:513   */\n      add\n        /* \"#utility.yul\":484:513   */\n      swap2\n      pop\n        /* \"#utility.yul\":571:574   */\n      dup4\n        /* \"#utility.yul\":564:568   */\n      0x20\n        /* \"#utility.yul\":556:560   */\n      dup1\n        /* \"#utility.yul\":548:554   */\n      dup4\n        /* \"#utility.yul\":544:561   */\n      mul\n        /* \"#utility.yul\":536:542   */\n      dup6\n        /* \"#utility.yul\":532:562   */\n      add\n        /* \"#utility.yul\":528:569   */\n      add\n        /* \"#utility.yul\":525:575   */\n      gt\n        /* \"#utility.yul\":522:524   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":588:589   */\n      0x00\n        /* \"#utility.yul\":585:586   */\n      dup1\n        /* \"#utility.yul\":578:590   */\n      revert\n        /* \"#utility.yul\":522:524   */\n    tag_471:\n        /* \"#utility.yul\":284:598   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":603:768   */\n    tag_472:\n        /* \"#utility.yul\":672:692   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":732:742   */\n      0xffffffff\n        /* \"#utility.yul\":721:743   */\n      dup2\n      and\n        /* \"#utility.yul\":711:744   */\n      dup2\n      eq\n        /* \"#utility.yul\":701:703   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":758:759   */\n      0x00\n        /* \"#utility.yul\":755:756   */\n      dup1\n        /* \"#utility.yul\":748:760   */\n      revert\n        /* \"#utility.yul\":773:971   */\n    tag_47:\n      0x00\n        /* \"#utility.yul\":885:887   */\n      0x20\n        /* \"#utility.yul\":873:882   */\n      dup3\n        /* \"#utility.yul\":864:871   */\n      dup5\n        /* \"#utility.yul\":860:883   */\n      sub\n        /* \"#utility.yul\":856:888   */\n      slt\n        /* \"#utility.yul\":853:855   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":906:912   */\n      dup1\n        /* \"#utility.yul\":898:904   */\n      dup2\n        /* \"#utility.yul\":891:913   */\n      revert\n        /* \"#utility.yul\":853:855   */\n    tag_476:\n        /* \"#utility.yul\":934:965   */\n      tag_374\n        /* \"#utility.yul\":955:964   */\n      dup3\n        /* \"#utility.yul\":934:965   */\n      tag_464\n      jump\t// in\n        /* \"#utility.yul\":976:1664   */\n    tag_66:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":1172:1175   */\n      0x80\n        /* \"#utility.yul\":1160:1169   */\n      dup7\n        /* \"#utility.yul\":1151:1158   */\n      dup9\n        /* \"#utility.yul\":1147:1170   */\n      sub\n        /* \"#utility.yul\":1143:1176   */\n      slt\n        /* \"#utility.yul\":1140:1142   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":1194:1200   */\n      dup1\n        /* \"#utility.yul\":1186:1192   */\n      dup2\n        /* \"#utility.yul\":1179:1201   */\n      revert\n        /* \"#utility.yul\":1140:1142   */\n    tag_479:\n        /* \"#utility.yul\":1222:1253   */\n      tag_480\n        /* \"#utility.yul\":1243:1252   */\n      dup7\n        /* \"#utility.yul\":1222:1253   */\n      tag_464\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":1212:1253   */\n      swap5\n      pop\n        /* \"#utility.yul\":1272:1311   */\n      tag_481\n        /* \"#utility.yul\":1307:1309   */\n      0x20\n        /* \"#utility.yul\":1296:1305   */\n      dup8\n        /* \"#utility.yul\":1292:1310   */\n      add\n        /* \"#utility.yul\":1272:1311   */\n      tag_472\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":1262:1311   */\n      swap4\n      pop\n        /* \"#utility.yul\":1330:1369   */\n      tag_482\n        /* \"#utility.yul\":1365:1367   */\n      0x40\n        /* \"#utility.yul\":1354:1363   */\n      dup8\n        /* \"#utility.yul\":1350:1368   */\n      add\n        /* \"#utility.yul\":1330:1369   */\n      tag_472\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":1320:1369   */\n      swap3\n      pop\n        /* \"#utility.yul\":1420:1422   */\n      0x60\n        /* \"#utility.yul\":1409:1418   */\n      dup7\n        /* \"#utility.yul\":1405:1423   */\n      add\n        /* \"#utility.yul\":1392:1424   */\n      calldataload\n        /* \"#utility.yul\":1447:1465   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1439:1445   */\n      dup2\n        /* \"#utility.yul\":1436:1466   */\n      gt\n        /* \"#utility.yul\":1433:1435   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":1484:1490   */\n      dup2\n        /* \"#utility.yul\":1476:1482   */\n      dup3\n        /* \"#utility.yul\":1469:1491   */\n      revert\n        /* \"#utility.yul\":1433:1435   */\n    tag_483:\n        /* \"#utility.yul\":1528:1604   */\n      tag_484\n        /* \"#utility.yul\":1596:1603   */\n      dup9\n        /* \"#utility.yul\":1587:1593   */\n      dup3\n        /* \"#utility.yul\":1576:1585   */\n      dup10\n        /* \"#utility.yul\":1572:1594   */\n      add\n        /* \"#utility.yul\":1528:1604   */\n      tag_467\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":1130:1664   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":1623:1631   */\n      swap3\n      swap5\n        /* \"#utility.yul\":1502:1604   */\n      swap4\n        /* \"#utility.yul\":1130:1664   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1669:2132   */\n    tag_86:\n      0x00\n      dup1\n        /* \"#utility.yul\":1816:1818   */\n      0x20\n        /* \"#utility.yul\":1804:1813   */\n      dup4\n        /* \"#utility.yul\":1795:1802   */\n      dup6\n        /* \"#utility.yul\":1791:1814   */\n      sub\n        /* \"#utility.yul\":1787:1819   */\n      slt\n        /* \"#utility.yul\":1784:1786   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":1837:1843   */\n      dup2\n        /* \"#utility.yul\":1829:1835   */\n      dup3\n        /* \"#utility.yul\":1822:1844   */\n      revert\n        /* \"#utility.yul\":1784:1786   */\n    tag_486:\n        /* \"#utility.yul\":1882:1891   */\n      dup3\n        /* \"#utility.yul\":1869:1892   */\n      calldataload\n        /* \"#utility.yul\":1915:1933   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1907:1913   */\n      dup2\n        /* \"#utility.yul\":1904:1934   */\n      gt\n        /* \"#utility.yul\":1901:1903   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":1952:1958   */\n      dup3\n        /* \"#utility.yul\":1944:1950   */\n      dup4\n        /* \"#utility.yul\":1937:1959   */\n      revert\n        /* \"#utility.yul\":1901:1903   */\n    tag_487:\n        /* \"#utility.yul\":1996:2072   */\n      tag_488\n        /* \"#utility.yul\":2064:2071   */\n      dup6\n        /* \"#utility.yul\":2055:2061   */\n      dup3\n        /* \"#utility.yul\":2044:2053   */\n      dup7\n        /* \"#utility.yul\":2040:2062   */\n      add\n        /* \"#utility.yul\":1996:2072   */\n      tag_467\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":2091:2099   */\n      swap1\n      swap7\n        /* \"#utility.yul\":1970:2072   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":1774:2132   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2137:2327   */\n    tag_59:\n      0x00\n        /* \"#utility.yul\":2249:2251   */\n      0x20\n        /* \"#utility.yul\":2237:2246   */\n      dup3\n        /* \"#utility.yul\":2228:2235   */\n      dup5\n        /* \"#utility.yul\":2224:2247   */\n      sub\n        /* \"#utility.yul\":2220:2252   */\n      slt\n        /* \"#utility.yul\":2217:2219   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":2270:2276   */\n      dup1\n        /* \"#utility.yul\":2262:2268   */\n      dup2\n        /* \"#utility.yul\":2255:2277   */\n      revert\n        /* \"#utility.yul\":2217:2219   */\n    tag_490:\n      pop\n        /* \"#utility.yul\":2298:2321   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2207:2327   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2332:2598   */\n    tag_40:\n      0x00\n      dup1\n        /* \"#utility.yul\":2461:2463   */\n      0x40\n        /* \"#utility.yul\":2449:2458   */\n      dup4\n        /* \"#utility.yul\":2440:2447   */\n      dup6\n        /* \"#utility.yul\":2436:2459   */\n      sub\n        /* \"#utility.yul\":2432:2464   */\n      slt\n        /* \"#utility.yul\":2429:2431   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":2482:2488   */\n      dup2\n        /* \"#utility.yul\":2474:2480   */\n      dup3\n        /* \"#utility.yul\":2467:2489   */\n      revert\n        /* \"#utility.yul\":2429:2431   */\n    tag_492:\n        /* \"#utility.yul\":2523:2532   */\n      dup3\n        /* \"#utility.yul\":2510:2533   */\n      calldataload\n        /* \"#utility.yul\":2500:2533   */\n      swap2\n      pop\n        /* \"#utility.yul\":2552:2592   */\n      tag_493\n        /* \"#utility.yul\":2588:2590   */\n      0x20\n        /* \"#utility.yul\":2577:2586   */\n      dup5\n        /* \"#utility.yul\":2573:2591   */\n      add\n        /* \"#utility.yul\":2552:2592   */\n      tag_464\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":2542:2592   */\n      swap1\n      pop\n        /* \"#utility.yul\":2419:2598   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2603:2861   */\n    tag_81:\n      0x00\n      dup1\n        /* \"#utility.yul\":2732:2734   */\n      0x40\n        /* \"#utility.yul\":2720:2729   */\n      dup4\n        /* \"#utility.yul\":2711:2718   */\n      dup6\n        /* \"#utility.yul\":2707:2730   */\n      sub\n        /* \"#utility.yul\":2703:2735   */\n      slt\n        /* \"#utility.yul\":2700:2702   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":2753:2759   */\n      dup2\n        /* \"#utility.yul\":2745:2751   */\n      dup3\n        /* \"#utility.yul\":2738:2760   */\n      revert\n        /* \"#utility.yul\":2700:2702   */\n    tag_495:\n      pop\n      pop\n        /* \"#utility.yul\":2781:2804   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":2851:2853   */\n      0x20\n        /* \"#utility.yul\":2836:2854   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2823:2855   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2690:2861   */\n      jump\t// out\n        /* \"#utility.yul\":2866:3295   */\n    tag_76:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":3009:3011   */\n      0x60\n        /* \"#utility.yul\":2997:3006   */\n      dup5\n        /* \"#utility.yul\":2988:2995   */\n      dup7\n        /* \"#utility.yul\":2984:3007   */\n      sub\n        /* \"#utility.yul\":2980:3012   */\n      slt\n        /* \"#utility.yul\":2977:2979   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":3030:3036   */\n      dup3\n        /* \"#utility.yul\":3022:3028   */\n      dup4\n        /* \"#utility.yul\":3015:3037   */\n      revert\n        /* \"#utility.yul\":2977:2979   */\n    tag_497:\n        /* \"#utility.yul\":3071:3080   */\n      dup4\n        /* \"#utility.yul\":3058:3081   */\n      calldataload\n        /* \"#utility.yul\":3048:3081   */\n      swap3\n      pop\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3117:3126   */\n      dup5\n        /* \"#utility.yul\":3113:3131   */\n      add\n        /* \"#utility.yul\":3100:3132   */\n      calldataload\n        /* \"#utility.yul\":3090:3132   */\n      swap2\n      pop\n        /* \"#utility.yul\":3182:3184   */\n      0x40\n        /* \"#utility.yul\":3171:3180   */\n      dup5\n        /* \"#utility.yul\":3167:3185   */\n      add\n        /* \"#utility.yul\":3154:3186   */\n      calldataload\n        /* \"#utility.yul\":3229:3234   */\n      dup1\n        /* \"#utility.yul\":3222:3235   */\n      iszero\n        /* \"#utility.yul\":3215:3236   */\n      iszero\n        /* \"#utility.yul\":3208:3213   */\n      dup2\n        /* \"#utility.yul\":3205:3237   */\n      eq\n        /* \"#utility.yul\":3195:3197   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":3256:3262   */\n      dup2\n        /* \"#utility.yul\":3248:3254   */\n      dup3\n        /* \"#utility.yul\":3241:3263   */\n      revert\n        /* \"#utility.yul\":3195:3197   */\n    tag_498:\n        /* \"#utility.yul\":3284:3289   */\n      dup1\n        /* \"#utility.yul\":3274:3289   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2967:3295   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3300:3905   */\n    tag_119:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":3480:3482   */\n      0x60\n        /* \"#utility.yul\":3468:3477   */\n      dup6\n        /* \"#utility.yul\":3459:3466   */\n      dup8\n        /* \"#utility.yul\":3455:3478   */\n      sub\n        /* \"#utility.yul\":3451:3483   */\n      slt\n        /* \"#utility.yul\":3448:3450   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":3501:3507   */\n      dup4\n        /* \"#utility.yul\":3493:3499   */\n      dup5\n        /* \"#utility.yul\":3486:3508   */\n      revert\n        /* \"#utility.yul\":3448:3450   */\n    tag_500:\n        /* \"#utility.yul\":3542:3551   */\n      dup5\n        /* \"#utility.yul\":3529:3552   */\n      calldataload\n        /* \"#utility.yul\":3519:3552   */\n      swap4\n      pop\n        /* \"#utility.yul\":3571:3610   */\n      tag_501\n        /* \"#utility.yul\":3606:3608   */\n      0x20\n        /* \"#utility.yul\":3595:3604   */\n      dup7\n        /* \"#utility.yul\":3591:3609   */\n      add\n        /* \"#utility.yul\":3571:3610   */\n      tag_472\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":3561:3610   */\n      swap3\n      pop\n        /* \"#utility.yul\":3661:3663   */\n      0x40\n        /* \"#utility.yul\":3650:3659   */\n      dup6\n        /* \"#utility.yul\":3646:3664   */\n      add\n        /* \"#utility.yul\":3633:3665   */\n      calldataload\n        /* \"#utility.yul\":3688:3706   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3680:3686   */\n      dup2\n        /* \"#utility.yul\":3677:3707   */\n      gt\n        /* \"#utility.yul\":3674:3676   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":3725:3731   */\n      dup3\n        /* \"#utility.yul\":3717:3723   */\n      dup4\n        /* \"#utility.yul\":3710:3732   */\n      revert\n        /* \"#utility.yul\":3674:3676   */\n    tag_502:\n        /* \"#utility.yul\":3769:3845   */\n      tag_503\n        /* \"#utility.yul\":3837:3844   */\n      dup8\n        /* \"#utility.yul\":3828:3834   */\n      dup3\n        /* \"#utility.yul\":3817:3826   */\n      dup9\n        /* \"#utility.yul\":3813:3835   */\n      add\n        /* \"#utility.yul\":3769:3845   */\n      tag_467\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":3438:3905   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n        /* \"#utility.yul\":3864:3872   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3438:3905   */\n      jump\t// out\n        /* \"#utility.yul\":3910:4590   */\n    tag_124:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":4106:4109   */\n      0x80\n        /* \"#utility.yul\":4094:4103   */\n      dup7\n        /* \"#utility.yul\":4085:4092   */\n      dup9\n        /* \"#utility.yul\":4081:4104   */\n      sub\n        /* \"#utility.yul\":4077:4110   */\n      slt\n        /* \"#utility.yul\":4074:4076   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":4128:4134   */\n      dup1\n        /* \"#utility.yul\":4120:4126   */\n      dup2\n        /* \"#utility.yul\":4113:4135   */\n      revert\n        /* \"#utility.yul\":4074:4076   */\n    tag_505:\n        /* \"#utility.yul\":4169:4178   */\n      dup6\n        /* \"#utility.yul\":4156:4179   */\n      calldataload\n        /* \"#utility.yul\":4146:4179   */\n      swap5\n      pop\n        /* \"#utility.yul\":4198:4237   */\n      tag_481\n        /* \"#utility.yul\":4233:4235   */\n      0x20\n        /* \"#utility.yul\":4222:4231   */\n      dup8\n        /* \"#utility.yul\":4218:4236   */\n      add\n        /* \"#utility.yul\":4198:4237   */\n      tag_472\n      jump\t// in\n        /* \"#utility.yul\":4595:5038   */\n    tag_510:\n      0x00\n        /* \"#utility.yul\":4692:4697   */\n      dup2\n        /* \"#utility.yul\":4686:4698   */\n      mload\n        /* \"#utility.yul\":4719:4725   */\n      dup1\n        /* \"#utility.yul\":4714:4717   */\n      dup5\n        /* \"#utility.yul\":4707:4726   */\n      mstore\n        /* \"#utility.yul\":4745:4749   */\n      0x20\n        /* \"#utility.yul\":4774:4776   */\n      dup1\n        /* \"#utility.yul\":4769:4772   */\n      dup6\n        /* \"#utility.yul\":4765:4777   */\n      add\n        /* \"#utility.yul\":4758:4777   */\n      swap5\n      pop\n        /* \"#utility.yul\":4811:4813   */\n      dup1\n        /* \"#utility.yul\":4804:4809   */\n      dup5\n        /* \"#utility.yul\":4800:4814   */\n      add\n        /* \"#utility.yul\":4832:4835   */\n      dup4\n        /* \"#utility.yul\":4844:5013   */\n    tag_512:\n        /* \"#utility.yul\":4858:4864   */\n      dup4\n        /* \"#utility.yul\":4855:4856   */\n      dup2\n        /* \"#utility.yul\":4852:4865   */\n      lt\n        /* \"#utility.yul\":4844:5013   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":4919:4932   */\n      dup2\n      mload\n        /* \"#utility.yul\":4907:4933   */\n      dup8\n      mstore\n        /* \"#utility.yul\":4953:4965   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":4988:5003   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":4880:4881   */\n      0x01\n        /* \"#utility.yul\":4873:4882   */\n      add\n        /* \"#utility.yul\":4844:5013   */\n      jump(tag_512)\n    tag_514:\n      pop\n        /* \"#utility.yul\":5029:5032   */\n      swap5\n      swap6\n        /* \"#utility.yul\":4662:5038   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5043:5248   */\n    tag_333:\n        /* \"#utility.yul\":5243:5246   */\n      swap1\n        /* \"#utility.yul\":5234:5248   */\n      jump\t// out\n        /* \"#utility.yul\":5253:5456   */\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5417:5449   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5399:5450   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5387:5389   */\n      0x20\n        /* \"#utility.yul\":5372:5390   */\n      add\n      swap1\n        /* \"#utility.yul\":5354:5456   */\n      jump\t// out\n        /* \"#utility.yul\":5461:6122   */\n    tag_130:\n        /* \"#utility.yul\":5632:5634   */\n      0x20\n        /* \"#utility.yul\":5684:5705   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5754:5767   */\n      dup3\n      mload\n        /* \"#utility.yul\":5657:5675   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":5776:5798   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5461:6122   */\n      0x00\n      swap2\n        /* \"#utility.yul\":5632:5634   */\n      swap1\n        /* \"#utility.yul\":5855:5870   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5829:5831   */\n      0x40\n        /* \"#utility.yul\":5814:5832   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":5461:6122   */\n      dup5\n        /* \"#utility.yul\":5901:6096   */\n    tag_518:\n        /* \"#utility.yul\":5915:5921   */\n      dup2\n        /* \"#utility.yul\":5912:5913   */\n      dup2\n        /* \"#utility.yul\":5909:5922   */\n      lt\n        /* \"#utility.yul\":5901:6096   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":5980:5993   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5976:6015   */\n      and\n        /* \"#utility.yul\":5964:6016   */\n      dup4\n      mstore\n        /* \"#utility.yul\":6071:6086   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":6036:6048   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":6012:6013   */\n      0x01\n        /* \"#utility.yul\":5930:5939   */\n      add\n        /* \"#utility.yul\":5901:6096   */\n      jump(tag_518)\n    tag_520:\n      pop\n        /* \"#utility.yul\":6113:6116   */\n      swap1\n      swap7\n        /* \"#utility.yul\":5612:6122   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6127:6623   */\n    tag_192:\n        /* \"#utility.yul\":6316:6318   */\n      0x20\n        /* \"#utility.yul\":6298:6319   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6335:6353   */\n      dup2\n      add\n        /* \"#utility.yul\":6328:6362   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6127:6623   */\n      0x00\n      sub(shl(0xfb, 0x01), 0x01)\n        /* \"#utility.yul\":6374:6405   */\n      dup4\n      gt\n        /* \"#utility.yul\":6371:6373   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":6421:6425   */\n      dup1\n        /* \"#utility.yul\":6415:6419   */\n      dup2\n        /* \"#utility.yul\":6408:6426   */\n      revert\n        /* \"#utility.yul\":6371:6373   */\n    tag_522:\n        /* \"#utility.yul\":6463:6465   */\n      0x20\n        /* \"#utility.yul\":6455:6461   */\n      dup4\n        /* \"#utility.yul\":6451:6466   */\n      mul\n        /* \"#utility.yul\":6516:6522   */\n      dup1\n        /* \"#utility.yul\":6508:6514   */\n      dup6\n        /* \"#utility.yul\":6503:6505   */\n      0x40\n        /* \"#utility.yul\":6492:6501   */\n      dup6\n        /* \"#utility.yul\":6488:6506   */\n      add\n        /* \"#utility.yul\":6475:6523   */\n      calldatacopy\n        /* \"#utility.yul\":6546:6568   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6570:6572   */\n      0x40\n        /* \"#utility.yul\":6542:6573   */\n      add\n        /* \"#utility.yul\":6582:6598   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":6542:6573   */\n      swap3\n        /* \"#utility.yul\":6288:6623   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6628:6895   */\n    tag_140:\n      0x00\n        /* \"#utility.yul\":6807:6809   */\n      0x20\n        /* \"#utility.yul\":6796:6805   */\n      dup3\n        /* \"#utility.yul\":6789:6810   */\n      mstore\n        /* \"#utility.yul\":6827:6889   */\n      tag_374\n        /* \"#utility.yul\":6885:6887   */\n      0x20\n        /* \"#utility.yul\":6874:6883   */\n      dup4\n        /* \"#utility.yul\":6870:6888   */\n      add\n        /* \"#utility.yul\":6862:6868   */\n      dup5\n        /* \"#utility.yul\":6827:6889   */\n      tag_510\n      jump\t// in\n        /* \"#utility.yul\":6900:7087   */\n    tag_50:\n        /* \"#utility.yul\":7065:7079   */\n      swap1\n      iszero\n        /* \"#utility.yul\":7058:7080   */\n      iszero\n        /* \"#utility.yul\":7040:7081   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7028:7030   */\n      0x20\n        /* \"#utility.yul\":7013:7031   */\n      add\n      swap1\n        /* \"#utility.yul\":6995:7087   */\n      jump\t// out\n        /* \"#utility.yul\":7092:7485   */\n    tag_417:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7368:7383   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":7350:7384   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7420:7435   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":7415:7417   */\n      0x20\n        /* \"#utility.yul\":7400:7418   */\n      dup3\n      add\n        /* \"#utility.yul\":7393:7436   */\n      mstore\n        /* \"#utility.yul\":7467:7469   */\n      0x40\n        /* \"#utility.yul\":7452:7470   */\n      dup2\n      add\n        /* \"#utility.yul\":7445:7479   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":7300:7302   */\n      0x60\n        /* \"#utility.yul\":7285:7303   */\n      add\n      swap1\n        /* \"#utility.yul\":7267:7485   */\n      jump\t// out\n        /* \"#utility.yul\":7725:8073   */\n    tag_179:\n        /* \"#utility.yul\":7927:7929   */\n      0x20\n        /* \"#utility.yul\":7909:7930   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7966:7968   */\n      0x18\n        /* \"#utility.yul\":7946:7964   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7939:7969   */\n      mstore\n        /* \"#utility.yul\":8005:8031   */\n      0x6164643a20696e76616c6964207374616b6520746f6b656e0000000000000000\n        /* \"#utility.yul\":8000:8002   */\n      0x40\n        /* \"#utility.yul\":7985:8003   */\n      dup3\n      add\n        /* \"#utility.yul\":7978:8032   */\n      mstore\n        /* \"#utility.yul\":8064:8066   */\n      0x60\n        /* \"#utility.yul\":8049:8067   */\n      add\n      swap1\n        /* \"#utility.yul\":7899:8073   */\n      jump\t// out\n        /* \"#utility.yul\":8078:8423   */\n    tag_317:\n        /* \"#utility.yul\":8280:8282   */\n      0x20\n        /* \"#utility.yul\":8262:8283   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8319:8321   */\n      0x15\n        /* \"#utility.yul\":8299:8317   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8292:8322   */\n      mstore\n      shl(0x58, 0x72656e65773a20696e76616c696420626c6f636b73)\n        /* \"#utility.yul\":8353:8355   */\n      0x40\n        /* \"#utility.yul\":8338:8356   */\n      dup3\n      add\n        /* \"#utility.yul\":8331:8382   */\n      mstore\n        /* \"#utility.yul\":8414:8416   */\n      0x60\n        /* \"#utility.yul\":8399:8417   */\n      add\n      swap1\n        /* \"#utility.yul\":8252:8423   */\n      jump\t// out\n        /* \"#utility.yul\":8428:8774   */\n    tag_293:\n        /* \"#utility.yul\":8630:8632   */\n      0x20\n        /* \"#utility.yul\":8612:8633   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8669:8671   */\n      0x16\n        /* \"#utility.yul\":8649:8667   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8642:8672   */\n      mstore\n      shl(0x53, 0x0eae0c8c2e8ca7440d2dcecc2d8d2c840d8cadccee8d)\n        /* \"#utility.yul\":8703:8705   */\n      0x40\n        /* \"#utility.yul\":8688:8706   */\n      dup3\n      add\n        /* \"#utility.yul\":8681:8733   */\n      mstore\n        /* \"#utility.yul\":8765:8767   */\n      0x60\n        /* \"#utility.yul\":8750:8768   */\n      add\n      swap1\n        /* \"#utility.yul\":8602:8774   */\n      jump\t// out\n        /* \"#utility.yul\":8779:9118   */\n    tag_271:\n        /* \"#utility.yul\":8981:8983   */\n      0x20\n        /* \"#utility.yul\":8963:8984   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9020:9022   */\n      0x0f\n        /* \"#utility.yul\":9000:9018   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8993:9023   */\n      mstore\n      shl(0x8a, 0x1a5b9d985b1a59081c1bdbdb081a59)\n        /* \"#utility.yul\":9054:9056   */\n      0x40\n        /* \"#utility.yul\":9039:9057   */\n      dup3\n      add\n        /* \"#utility.yul\":9032:9077   */\n      mstore\n        /* \"#utility.yul\":9109:9111   */\n      0x60\n        /* \"#utility.yul\":9094:9112   */\n      add\n      swap1\n        /* \"#utility.yul\":8953:9118   */\n      jump\t// out\n        /* \"#utility.yul\":9123:9466   */\n    tag_182:\n        /* \"#utility.yul\":9325:9327   */\n      0x20\n        /* \"#utility.yul\":9307:9328   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9364:9366   */\n      0x13\n        /* \"#utility.yul\":9344:9362   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9337:9367   */\n      mstore\n      shl(0x6b, 0x0c2c8c87440d2dcecc2d8d2c840d8cadccee8d)\n        /* \"#utility.yul\":9398:9400   */\n      0x40\n        /* \"#utility.yul\":9383:9401   */\n      dup3\n      add\n        /* \"#utility.yul\":9376:9425   */\n      mstore\n        /* \"#utility.yul\":9457:9459   */\n      0x60\n        /* \"#utility.yul\":9442:9460   */\n      add\n      swap1\n        /* \"#utility.yul\":9297:9466   */\n      jump\t// out\n        /* \"#utility.yul\":9471:9816   */\n    tag_313:\n        /* \"#utility.yul\":9673:9675   */\n      0x20\n        /* \"#utility.yul\":9655:9676   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9712:9714   */\n      0x15\n        /* \"#utility.yul\":9692:9710   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9685:9715   */\n      mstore\n      shl(0x5b, 0x0e4cadccaee7440d2dcecc2d8d2c840d8cadccee8d)\n        /* \"#utility.yul\":9746:9748   */\n      0x40\n        /* \"#utility.yul\":9731:9749   */\n      dup3\n      add\n        /* \"#utility.yul\":9724:9775   */\n      mstore\n        /* \"#utility.yul\":9807:9809   */\n      0x60\n        /* \"#utility.yul\":9792:9810   */\n      add\n      swap1\n        /* \"#utility.yul\":9645:9816   */\n      jump\t// out\n        /* \"#utility.yul\":9821:10174   */\n    tag_406:\n        /* \"#utility.yul\":10023:10025   */\n      0x20\n        /* \"#utility.yul\":10005:10026   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10062:10064   */\n      0x1d\n        /* \"#utility.yul\":10042:10060   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10035:10065   */\n      mstore\n        /* \"#utility.yul\":10101:10132   */\n      0x77697468647261773a20696e73756666696369656e7420616d6f756e74000000\n        /* \"#utility.yul\":10096:10098   */\n      0x40\n        /* \"#utility.yul\":10081:10099   */\n      dup3\n      add\n        /* \"#utility.yul\":10074:10133   */\n      mstore\n        /* \"#utility.yul\":10165:10167   */\n      0x60\n        /* \"#utility.yul\":10150:10168   */\n      add\n      swap1\n        /* \"#utility.yul\":9995:10174   */\n      jump\t// out\n        /* \"#utility.yul\":10179:10528   */\n    tag_297:\n        /* \"#utility.yul\":10381:10383   */\n      0x20\n        /* \"#utility.yul\":10363:10384   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10420:10422   */\n      0x19\n        /* \"#utility.yul\":10400:10418   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10393:10423   */\n      mstore\n        /* \"#utility.yul\":10459:10486   */\n      0x7570646174653a20696e76616c696420656e6420626c6f636b00000000000000\n        /* \"#utility.yul\":10454:10456   */\n      0x40\n        /* \"#utility.yul\":10439:10457   */\n      dup3\n      add\n        /* \"#utility.yul\":10432:10487   */\n      mstore\n        /* \"#utility.yul\":10519:10521   */\n      0x60\n        /* \"#utility.yul\":10504:10522   */\n      add\n      swap1\n        /* \"#utility.yul\":10353:10528   */\n      jump\t// out\n        /* \"#utility.yul\":10533:10885   */\n    tag_339:\n        /* \"#utility.yul\":10735:10737   */\n      0x20\n        /* \"#utility.yul\":10717:10738   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10774:10776   */\n      0x1c\n        /* \"#utility.yul\":10754:10772   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10747:10777   */\n      mstore\n        /* \"#utility.yul\":10813:10843   */\n      0x7472616e736665722072657761726420746f6b656e206661696c656400000000\n        /* \"#utility.yul\":10808:10810   */\n      0x40\n        /* \"#utility.yul\":10793:10811   */\n      dup3\n      add\n        /* \"#utility.yul\":10786:10844   */\n      mstore\n        /* \"#utility.yul\":10876:10878   */\n      0x60\n        /* \"#utility.yul\":10861:10879   */\n      add\n      swap1\n        /* \"#utility.yul\":10707:10885   */\n      jump\t// out\n        /* \"#utility.yul\":10890:11234   */\n    tag_176:\n        /* \"#utility.yul\":11092:11094   */\n      0x20\n        /* \"#utility.yul\":11074:11095   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11131:11133   */\n      0x14\n        /* \"#utility.yul\":11111:11129   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11104:11134   */\n      mstore\n      shl(0x62, 0x1859190e88191d5c1b1a58d85d1959081c1bdbdb)\n        /* \"#utility.yul\":11165:11167   */\n      0x40\n        /* \"#utility.yul\":11150:11168   */\n      dup3\n      add\n        /* \"#utility.yul\":11143:11193   */\n      mstore\n        /* \"#utility.yul\":11225:11227   */\n      0x60\n        /* \"#utility.yul\":11210:11228   */\n      add\n      swap1\n        /* \"#utility.yul\":11064:11234   */\n      jump\t// out\n        /* \"#utility.yul\":11239:11637   */\n    tag_310:\n        /* \"#utility.yul\":11441:11443   */\n      0x20\n        /* \"#utility.yul\":11423:11444   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11480:11482   */\n      0x22\n        /* \"#utility.yul\":11460:11478   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11453:11483   */\n      mstore\n        /* \"#utility.yul\":11519:11553   */\n      0x72656e65773a20696e76616c696420706f6f6c20737461746520746f2072656e\n        /* \"#utility.yul\":11514:11516   */\n      0x40\n        /* \"#utility.yul\":11499:11517   */\n      dup3\n      add\n        /* \"#utility.yul\":11492:11554   */\n      mstore\n      shl(0xf0, 0x6577)\n        /* \"#utility.yul\":11585:11587   */\n      0x60\n        /* \"#utility.yul\":11570:11588   */\n      dup3\n      add\n        /* \"#utility.yul\":11563:11595   */\n      mstore\n        /* \"#utility.yul\":11627:11630   */\n      0x80\n        /* \"#utility.yul\":11612:11631   */\n      add\n      swap1\n        /* \"#utility.yul\":11413:11637   */\n      jump\t// out\n        /* \"#utility.yul\":11642:11992   */\n    tag_290:\n        /* \"#utility.yul\":11844:11846   */\n      0x20\n        /* \"#utility.yul\":11826:11847   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11883:11885   */\n      0x1a\n        /* \"#utility.yul\":11863:11881   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11856:11886   */\n      mstore\n        /* \"#utility.yul\":11922:11950   */\n      0x7570646174653a20706f6f6c20616c726561647920656e646564000000000000\n        /* \"#utility.yul\":11917:11919   */\n      0x40\n        /* \"#utility.yul\":11902:11920   */\n      dup3\n      add\n        /* \"#utility.yul\":11895:11951   */\n      mstore\n        /* \"#utility.yul\":11983:11985   */\n      0x60\n        /* \"#utility.yul\":11968:11986   */\n      add\n      swap1\n        /* \"#utility.yul\":11816:11992   */\n      jump\t// out\n        /* \"#utility.yul\":11997:12340   */\n    tag_186:\n        /* \"#utility.yul\":12199:12201   */\n      0x20\n        /* \"#utility.yul\":12181:12202   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12238:12240   */\n      0x13\n        /* \"#utility.yul\":12218:12236   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12211:12241   */\n      mstore\n      shl(0x68, 0x6164643a20696e76616c696420626c6f636b73)\n        /* \"#utility.yul\":12272:12274   */\n      0x40\n        /* \"#utility.yul\":12257:12275   */\n      dup3\n      add\n        /* \"#utility.yul\":12250:12299   */\n      mstore\n        /* \"#utility.yul\":12331:12333   */\n      0x60\n        /* \"#utility.yul\":12316:12334   */\n      add\n      swap1\n        /* \"#utility.yul\":12171:12340   */\n      jump\t// out\n        /* \"#utility.yul\":12345:12522   */\n    tag_36:\n        /* \"#utility.yul\":12491:12516   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":12479:12481   */\n      0x20\n        /* \"#utility.yul\":12464:12482   */\n      add\n      swap1\n        /* \"#utility.yul\":12446:12522   */\n      jump\t// out\n        /* \"#utility.yul\":12527:13440   */\n    tag_62:\n        /* \"#utility.yul\":12900:12925   */\n      dup8\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12961:12993   */\n      dup8\n      and\n        /* \"#utility.yul\":12956:12958   */\n      0x20\n        /* \"#utility.yul\":12941:12959   */\n      dup3\n      add\n        /* \"#utility.yul\":12934:12994   */\n      mstore\n        /* \"#utility.yul\":13013:13023   */\n      0xffffffff\n        /* \"#utility.yul\":13059:13074   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":13054:13056   */\n      0x40\n        /* \"#utility.yul\":13039:13057   */\n      dup4\n      add\n        /* \"#utility.yul\":13032:13075   */\n      mstore\n        /* \"#utility.yul\":13111:13126   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":13106:13108   */\n      0x60\n        /* \"#utility.yul\":13091:13109   */\n      dup4\n      add\n        /* \"#utility.yul\":13084:13127   */\n      mstore\n        /* \"#utility.yul\":13164:13179   */\n      dup5\n      and\n        /* \"#utility.yul\":13158:13161   */\n      0x80\n        /* \"#utility.yul\":13143:13162   */\n      dup3\n      add\n        /* \"#utility.yul\":13136:13180   */\n      mstore\n        /* \"#utility.yul\":13217:13220   */\n      0xe0\n        /* \"#utility.yul\":12981:12984   */\n      0xa0\n        /* \"#utility.yul\":13196:13215   */\n      dup3\n      add\n        /* \"#utility.yul\":13189:13221   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12527:13440   */\n      0x00\n      swap1\n        /* \"#utility.yul\":13244:13307   */\n      tag_543\n      swap1\n        /* \"#utility.yul\":13287:13306   */\n      dup4\n      add\n        /* \"#utility.yul\":13279:13285   */\n      dup6\n        /* \"#utility.yul\":13244:13307   */\n      tag_510\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":13356:13365   */\n      dup3\n        /* \"#utility.yul\":13348:13354   */\n      dup2\n        /* \"#utility.yul\":13344:13366   */\n      sub\n        /* \"#utility.yul\":13338:13341   */\n      0xc0\n        /* \"#utility.yul\":13327:13336   */\n      dup5\n        /* \"#utility.yul\":13323:13342   */\n      add\n        /* \"#utility.yul\":13316:13367   */\n      mstore\n        /* \"#utility.yul\":13384:13434   */\n      tag_544\n        /* \"#utility.yul\":13427:13433   */\n      dup2\n        /* \"#utility.yul\":13419:13425   */\n      dup6\n        /* \"#utility.yul\":13384:13434   */\n      tag_510\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":13376:13434   */\n      swap11\n        /* \"#utility.yul\":12890:13440   */\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13445:13993   */\n    tag_43:\n      0x00\n        /* \"#utility.yul\":13730:13736   */\n      dup5\n        /* \"#utility.yul\":13719:13728   */\n      dup3\n        /* \"#utility.yul\":13712:13737   */\n      mstore\n        /* \"#utility.yul\":13773:13775   */\n      0x60\n        /* \"#utility.yul\":13768:13770   */\n      0x20\n        /* \"#utility.yul\":13757:13766   */\n      dup4\n        /* \"#utility.yul\":13753:13771   */\n      add\n        /* \"#utility.yul\":13746:13776   */\n      mstore\n        /* \"#utility.yul\":13799:13861   */\n      tag_546\n        /* \"#utility.yul\":13857:13859   */\n      0x60\n        /* \"#utility.yul\":13846:13855   */\n      dup4\n        /* \"#utility.yul\":13842:13860   */\n      add\n        /* \"#utility.yul\":13834:13840   */\n      dup6\n        /* \"#utility.yul\":13799:13861   */\n      tag_510\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":13909:13918   */\n      dup3\n        /* \"#utility.yul\":13901:13907   */\n      dup2\n        /* \"#utility.yul\":13897:13919   */\n      sub\n        /* \"#utility.yul\":13892:13894   */\n      0x40\n        /* \"#utility.yul\":13881:13890   */\n      dup5\n        /* \"#utility.yul\":13877:13895   */\n      add\n        /* \"#utility.yul\":13870:13920   */\n      mstore\n        /* \"#utility.yul\":13937:13987   */\n      tag_547\n        /* \"#utility.yul\":13980:13986   */\n      dup2\n        /* \"#utility.yul\":13972:13978   */\n      dup6\n        /* \"#utility.yul\":13937:13987   */\n      tag_510\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":13929:13987   */\n      swap7\n        /* \"#utility.yul\":13702:13993   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13998:14246   */\n    tag_230:\n        /* \"#utility.yul\":14172:14197   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":14228:14230   */\n      0x20\n        /* \"#utility.yul\":14213:14231   */\n      dup3\n      add\n        /* \"#utility.yul\":14206:14240   */\n      mstore\n        /* \"#utility.yul\":14160:14162   */\n      0x40\n        /* \"#utility.yul\":14145:14163   */\n      add\n      swap1\n        /* \"#utility.yul\":14127:14246   */\n      jump\t// out\n    stop\n    data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c 5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19 53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25 5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365\n\n    auxdata: 0xa2646970667358221220c5123b60dff18c0319a60de1a907c57be74f3db5bfa5928e7b14949e5eb97be864736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1701:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "76:80:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "86:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "101:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "95:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "95:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "144:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "117:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "117:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "117:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "55:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "66:5:11",
														"type": ""
													}
												],
												"src": "14:142:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "328:1233:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "374:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "383:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "391:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "376:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "376:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "376:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "349:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "358:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "345:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "370:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "341:32:11"
															},
															"nodeType": "YulIf",
															"src": "338:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "409:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "422:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "422:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "413:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "474:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "447:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "447:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "447:33:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "489:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "499:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "489:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "513:12:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "523:2:11",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "517:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "534:39:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "558:9:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "569:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "554:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "554:18:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "548:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "548:25:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "538:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "582:28:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "600:2:11",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "604:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "596:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "596:10:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "608:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "592:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "592:18:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "586:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "637:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "646:6:11"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "654:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "639:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "639:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "639:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "625:6:11"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "633:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "622:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:14:11"
															},
															"nodeType": "YulIf",
															"src": "619:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "672:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "686:9:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "682:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:22:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "676:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "752:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "761:6:11"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "769:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "754:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "754:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "754:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "731:2:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "735:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "727:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "727:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "742:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "723:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:35:11"
															},
															"nodeType": "YulIf",
															"src": "713:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "787:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "803:2:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "797:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:9:11"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "791:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "829:13:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "831:7:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "831:9:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "831:9:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "821:2:11"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "825:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "818:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:10:11"
															},
															"nodeType": "YulIf",
															"src": "815:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "851:21:11",
															"value": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "865:2:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "869:2:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "861:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:11:11"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "855:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "881:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "901:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "895:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "885:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "913:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "939:6:11"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "947:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "935:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "935:15:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "952:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "931:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "931:24:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "917:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1014:13:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "1016:7:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1016:9:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1016:9:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "973:10:11"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "985:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "970:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "970:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "993:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1005:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "990:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "990:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "967:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:46:11"
															},
															"nodeType": "YulIf",
															"src": "964:2:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1043:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1047:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1036:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1036:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1036:22:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1067:17:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1078:6:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1071:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1100:6:11"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1108:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1093:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1093:18:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1093:18:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1120:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1131:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1139:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1127:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:15:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1120:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1151:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1166:2:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1170:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1162:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1162:11:11"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1155:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1219:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1228:6:11"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1236:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1221:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1221:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1221:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1196:2:11"
																					},
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "1200:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1192:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1192:11:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1205:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1188:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1188:20:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1210:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1185:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1185:33:11"
															},
															"nodeType": "YulIf",
															"src": "1182:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1254:15:11",
															"value": {
																"name": "value1",
																"nodeType": "YulIdentifier",
																"src": "1263:6:11"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1258:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1323:137:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1344:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1381:3:11"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "1349:31:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1349:36:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1337:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1337:49:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1337:49:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1399:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1410:3:11"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1415:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1406:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1406:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1399:3:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1431:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1442:3:11"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1447:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1438:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1438:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1431:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1289:1:11"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1292:2:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1286:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:9:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1296:18:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1298:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1307:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1310:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1303:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1303:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1298:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1282:3:11",
																"statements": []
															},
															"src": "1278:182:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1469:16:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1479:6:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1494:61:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1540:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1551:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1504:31:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1504:51:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_contract$_IKyberRewardLocker_$1605_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "278:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "289:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "301:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "309:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "317:6:11",
														"type": ""
													}
												],
												"src": "161:1400:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:86:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1677:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1686:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1689:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1679:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1679:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1679:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1636:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1647:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1662:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1667:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1658:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1658:11:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1671:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1654:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1654:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1643:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1643:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1633:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1633:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1626:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1626:50:11"
															},
															"nodeType": "YulIf",
															"src": "1623:2:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1602:5:11",
														"type": ""
													}
												],
												"src": "1566:133:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_contract$_IKyberRewardLocker_$1605_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let _1 := 32\n        let offset := mload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(value1, value1) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { invalid() }\n        let _5 := mul(_4, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, _5), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(value1, value1) }\n        let i := value1\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_t_address_fromMemory(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value1 := memPtr\n        value2 := abi_decode_t_address_fromMemory(add(headStart, 64))\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523480156200001157600080fd5b50604051620033a4380380620033a48339810160408190526200003491620005f6565b826001600160a01b0381166200007b576040805162461bcd60e51b8152602060048201526007602482015266061646d696e20360cc1b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b039290921691909117905560016002558151620000b590600490602085019062000568565b506001600160601b0319606082901b1660805260005b8251811015620001485760006001600160a01b0316838281518110620000ed57fe5b60200260200101516001600160a01b0316146200013f576200013f826000198584815181106200011957fe5b60200260200101516001600160a01b03166200015260201b62001a88179092919060201c565b600101620000cb565b50505050620006f8565b801580620001dc575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015620001ac57600080fd5b505afa158015620001c1573d6000803e3d6000fd5b505050506040513d6020811015620001d857600080fd5b5051155b620002195760405162461bcd60e51b81526004018080602001828103825260368152602001806200336e6036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620002719185916200027616565b505050565b6000620002d2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200033260201b62001b9b179092919060201c565b8051909150156200027157808060200190516020811015620002f357600080fd5b5051620002715760405162461bcd60e51b815260040180806020018281038252602a81526020018062003344602a913960400191505060405180910390fd5b60606200034384846000856200034d565b90505b9392505050565b606082471015620003905760405162461bcd60e51b81526004018080602001828103825260268152602001806200331e6026913960400191505060405180910390fd5b6200039b85620004b4565b620003ed576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106200042d5780518252601f1990920191602091820191016200040c565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811462000491576040519150601f19603f3d011682016040523d82523d6000602084013e62000496565b606091505b509092509050620004a9828286620004be565b979650505050505050565b803b15155b919050565b60608315620004cf57508162000346565b825115620004e05782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200052c57818101518382015260200162000512565b50505050905090810190601f1680156200055a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b828054828255906000526020600020908101928215620005c0579160200282015b82811115620005c057825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000589565b50620005ce929150620005d2565b5090565b5b80821115620005ce5760008155600101620005d3565b8051620004b981620006df565b6000806000606084860312156200060b578283fd5b83516200061881620006df565b602085810151919450906001600160401b038082111562000637578485fd5b818701915087601f8301126200064b578485fd5b8151818111156200065857fe5b838102604051858282010181811085821117156200067257fe5b604052828152858101935084860182860187018c101562000691578889fd5b8895505b83861015620006be57620006a981620005e9565b85526001959095019493860193860162000695565b50809750505050505050620006d660408501620005e9565b90509250925092565b6001600160a01b0381168114620006f557600080fd5b50565b60805160601c612c036200071b600039806109d35280611f595250612c036000f3fe60806040526004361061014f5760003560e01c806377f50f97116100b6578063b43c62701161006f578063b43c6270146103c3578063c4f59f9b146103e3578063d12e4ceb14610405578063d18df53c14610425578063ddc6326214610452578063f851a4401461047257610156565b806377f50f971461030e5780637acc8678146103235780637bb7bed114610343578063958e2d3114610363578063adb82b3114610383578063affb9fc8146103a357610156565b80633892601c116101085780633892601c1461025957806343a0d0661461026e578063441a3e701461028e57806352fd9f2f146102ae5780635312ea8e146102ce57806375829def146102ee57610156565b8063081e3eda1461015b5780631069f3b5146101865780631e1c6a07146101b557806326782247146101e25780632f380b35146102045780632fb40ce11461023757610156565b3661015657005b600080fd5b34801561016757600080fd5b50610170610487565b60405161017d9190612a2e565b60405180910390f35b34801561019257600080fd5b506101a66101a1366004612579565b61048d565b60405161017d93929190612a9d565b3480156101c157600080fd5b506101d56101d0366004612493565b6105bf565b60405161017d919061276b565b3480156101ee57600080fd5b506101f76105d4565b60405161017d91906126bd565b34801561021057600080fd5b5061022461021f366004612561565b6105e3565b60405161017d9796959493929190612a37565b34801561024357600080fd5b506102576102523660046124ad565b610739565b005b34801561026557600080fd5b506101f76109d1565b34801561027a57600080fd5b506102576102893660046125c5565b6109f5565b34801561029a57600080fd5b506102576102a93660046125a4565b610af4565b3480156102ba57600080fd5b506102576102c9366004612521565b610b50565b3480156102da57600080fd5b506102576102e9366004612561565b610dbb565b3480156102fa57600080fd5b50610257610309366004612493565b610ed6565b34801561031a57600080fd5b50610257610fc9565b34801561032f57600080fd5b5061025761033e366004612493565b611089565b34801561034f57600080fd5b506101f761035e366004612561565b6111c0565b34801561036f57600080fd5b5061025761037e366004612561565b6111ea565b34801561038f57600080fd5b5061025761039e366004612561565b611260565b3480156103af57600080fd5b506102576103be366004612601565b611399565b3480156103cf57600080fd5b506102576103de366004612659565b611539565b3480156103ef57600080fd5b506103f8611727565b60405161017d91906126d1565b34801561041157600080fd5b506102576104203660046125a4565b611789565b34801561043157600080fd5b50610445610440366004612579565b61189b565b60405161017d9190612758565b34801561045e57600080fd5b5061025761046d366004612561565b611a64565b34801561047e57600080fd5b506101f7611a79565b60055481565b60008281526007602090815260408083206001600160a01b038516845290915290208054600454909160609182919067ffffffffffffffff811180156104d257600080fd5b506040519080825280602002602001820160405280156104fc578160200160208202803683370190505b5060045490935067ffffffffffffffff8111801561051957600080fd5b50604051908082528060200260200182016040528015610543578160200160208202803683370190505b50915060005b6004548110156105b6576000818152600183016020526040902054845185908390811061057257fe5b602002602001018181525050816001016000828152602001908152602001600020600101548382815181106105a357fe5b6020908102919091010152600101610549565b50509250925092565b60036020526000908152604090205460ff1681565b6001546001600160a01b031681565b60008181526006602052604090208054600182015460045491926001600160a01b0382169263ffffffff600160a01b8404811693600160c01b8104821693600160e01b90910490911691606091829167ffffffffffffffff8111801561064857600080fd5b50604051908082528060200260200182016040528015610672578160200160208202803683370190505b5060045490935067ffffffffffffffff8111801561068f57600080fd5b506040519080825280602002602001820160405280156106b9578160200160208202803683370190505b50915060005b60045481101561072c57600081815260028301602052604090205484518590839081106106e857fe5b6020026020010181815250508160020160008281526020019081526020016000206001015483828151811061071957fe5b60209081029190910101526001016106bf565b5050919395979092949650565b6000546001600160a01b03163314610785576040805162461bcd60e51b815260206004820152600a60248201526937b7363c9030b236b4b760b11b604482015290519081900360640190fd5b6001600160a01b03851660009081526003602052604090205460ff16156107c75760405162461bcd60e51b81526004016107be9061295a565b60405180910390fd5b6001600160a01b0385166107ed5760405162461bcd60e51b81526004016107be9061279a565b600454811461080e5760405162461bcd60e51b81526004016107be90612859565b438463ffffffff1611801561082e57508363ffffffff168363ffffffff16115b61084a5760405162461bcd60e51b81526004016107be90612a01565b60058054600090815260066020526040808220600190810180546001600160a01b0319166001600160a01b038b16179055835483528183208101805463ffffffff60a01b1916600160a01b63ffffffff8b811691820292909217909255855485528385208301805463ffffffff60c01b1916600160c01b928b1692909202919091179055935483529082200180546001600160e01b0316600160e01b909302929092179091555b8181101561095157604051806040016040528084848481811061091057fe5b6020908102929092013583525060009181018290526005548252600681526040808320858452600201825290912082518155910151600191820155016108f1565b506005805460019081019091556001600160a01b03861660008181526003602052604090819020805460ff1916909317909255905163ffffffff80861692908716917feb19e76b03b99eff4d0329a19e44569c131f242c9590234f19b76f2c56a817a1906109c2908790879061271e565b60405180910390a45050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600280541415610a3a576040805162461bcd60e51b815260206004820152601f6024820152600080516020612ae1833981519152604482015290519081900360640190fd5b60028055610a4783611260565b610a52338483611bb4565b600083815260066020908152604080832060078352818420338086529352922060018301549091610a8e916001600160a01b0316903087611da3565b8054610a9a9085611e03565b81558154610aa89085611e03565b82556040514390869033907f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e90610ae0908990612a2e565b60405180910390a450506001600255505050565b600280541415610b39576040805162461bcd60e51b815260206004820152601f6024820152600080516020612ae1833981519152604482015290519081900360640190fd5b60028055610b478282611e66565b50506001600255565b60006004805480602002602001604051908101604052809291908181526020018280548015610ba857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b8a575b505050505090506000815167ffffffffffffffff81118015610bc957600080fd5b50604051908082528060200260200182016040528015610bf3578160200160208202803683370190505b509050336000805b85811015610d5057868682818110610c0f57fe5b905060200201359150610c2182611260565b610c2d83836000611bb4565b60005b8551811015610d475760008381526007602090815260408083206001600160a01b038816845282528083208484526001019091529020548015610d3e57610c9381878481518110610c7d57fe5b6020026020010151611e0390919063ffffffff16565b868381518110610c9f57fe5b60209081029190910181019190915260008581526007825260408082206001600160a01b03891683528352808220858352600101909252908120558651879083908110610ce857fe5b60200260200101516001600160a01b031684866001600160a01b03167ff75f3d433c6628e04e01a0be1a2c6692a6011ce4b00389824cfa8b8a12f3c1c48443604051610d35929190612ad2565b60405180910390a45b50600101610c30565b50600101610bfb565b5060005b8351811015610db2576000848281518110610d6b57fe5b60200260200101511115610daa57610daa858281518110610d8857fe5b602002602001015184868481518110610d9d57fe5b6020026020010151611f3b565b600101610d54565b50505050505050565b600280541415610e00576040805162461bcd60e51b815260206004820152601f6024820152600080516020612ae1833981519152604482015290519081900360640190fd5b600280556000818152600660209081526040808320600783528184203385529092528220805483825591929091905b600454811015610e5a5760008181526001808501602052604082208082018390559190915501610e2f565b508254610e679082611fe0565b83558015610e88576001830154610e88906001600160a01b0316338361203d565b4384336001600160a01b03167f2369db1bafee945aee5630782f4a170682e3f8188d8dc247a4c73eb8c9e692d284604051610ec39190612a2e565b60405180910390a4505060016002555050565b6000546001600160a01b03163314610f22576040805162461bcd60e51b815260206004820152600a60248201526937b7363c9030b236b4b760b11b604482015290519081900360640190fd5b6001600160a01b038116610f6b576040805162461bcd60e51b815260206004820152600b60248201526a06e65772061646d696e20360ac1b604482015290519081900360640190fd5b604080516001600160a01b038316815290517f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc409181900360200190a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314611016576040805162461bcd60e51b815260206004820152600b60248201526a6e6f742070656e64696e6760a81b604482015290519081900360640190fd5b600154600054604080516001600160a01b03938416815292909116602083015280517f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed9281900390910190a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031633146110d5576040805162461bcd60e51b815260206004820152600a60248201526937b7363c9030b236b4b760b11b604482015290519081900360640190fd5b6001600160a01b03811661111a576040805162461bcd60e51b8152602060048201526007602482015266061646d696e20360cc1b604482015290519081900360640190fd5b604080516001600160a01b038316815290517f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc409181900360200190a1600054604080516001600160a01b038085168252909216602083015280517f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed9281900390910190a1600080546001600160a01b0319166001600160a01b0392909216919091179055565b600481815481106111d057600080fd5b6000918252602090912001546001600160a01b0316905081565b60028054141561122f576040805162461bcd60e51b815260206004820152601f6024820152600080516020612ae1833981519152604482015290519081900360640190fd5b600280556000818152600760209081526040808320338452909152902054611258908290611e66565b506001600255565b60055481106112815760405162461bcd60e51b81526004016107be90612830565b6000818152600660205260408120906112998361208f565b600183015490915063ffffffff600160e01b9091048116908216116112bf575050611396565b8154806112f257506001909101805463ffffffff909216600160e01b026001600160e01b03909216919091179055611396565b600183015463ffffffff600160e01b909104811683031660005b60045481101561136c576000818152600286016020526040812080549091906113369085906120c7565b905061135f8561134b8364e8d4a510006120c7565b8161135257fe5b6001850154919004611e03565b600192830155500161130c565b5050506001909101805463ffffffff909216600160e01b026001600160e01b039092169190911790555b50565b6000546001600160a01b031633146113e5576040805162461bcd60e51b815260206004820152600a60248201526937b7363c9030b236b4b760b11b604482015290519081900360640190fd5b6113ee84611260565b6000848152600660205260409020600181015443600160c01b90910463ffffffff161161142d5760405162461bcd60e51b81526004016107be906129ca565b600454821461144e5760405162461bcd60e51b81526004016107be90612800565b438463ffffffff161180156114775750600181015463ffffffff600160a01b9091048116908516115b6114935760405162461bcd60e51b81526004016107be906128ec565b60018101805463ffffffff60c01b1916600160c01b63ffffffff87160217905560005b828110156114f0578383828181106114ca57fe5b6000848152600286016020908152604090912091029290920135909155506001016114b6565b508363ffffffff16857fba2d8506275d684e80223910f1065a195ea279f37e27eb97ac24f4107eba6cf9858560405161152a92919061271e565b60405180910390a35050505050565b6000546001600160a01b03163314611585576040805162461bcd60e51b815260206004820152600a60248201526937b7363c9030b236b4b760b11b604482015290519081900360640190fd5b61158e85611260565b6000858152600660205260409020600181015443600160a01b90910463ffffffff1611806115cd5750600181015443600160c01b90910463ffffffff16105b6115e95760405162461bcd60e51b81526004016107be90612988565b600454821461160a5760405162461bcd60e51b81526004016107be90612886565b438563ffffffff1611801561162a57508463ffffffff168463ffffffff16115b6116465760405162461bcd60e51b81526004016107be906127d1565b60018101805463ffffffff60a01b1916600160a01b63ffffffff8881169182029290921763ffffffff60c01b1916600160c01b92881692909202919091176001600160e01b0316600160e01b9190910217905560005b828110156116d6578383828181106116b057fe5b60008481526002860160209081526040909120910292909201359091555060010161169c565b508363ffffffff168563ffffffff16877f4f863dc93468acf71ff8f5770599fbead4d0ff8ea6bd0c3251576f68fdad0904868660405161171792919061271e565b60405180910390a4505050505050565b6060600480548060200260200160405190810160405280929190818152602001828054801561177f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611761575b5050505050905090565b6000546001600160a01b031633146117d5576040805162461bcd60e51b815260206004820152600a60248201526937b7363c9030b236b4b760b11b604482015290519081900360640190fd5b6000600483815481106117e457fe5b6000918252602090912001546001600160a01b0316905080611882576000336001600160a01b031683604051611819906126ba565b60006040518083038185875af1925050503d8060008114611856576040519150601f19603f3d011682016040523d82523d6000602084013e61185b565b606091505b505090508061187c5760405162461bcd60e51b81526004016107be90612923565b50611896565b6118966001600160a01b038216338461203d565b505050565b6004546060908067ffffffffffffffff811180156118b857600080fd5b506040519080825280602002602001820160405280156118e2578160200160208202803683370190505b506000858152600660209081526040808320600783528184206001600160a01b038916855290925282208154600183015494965091939092600160e01b90910463ffffffff16906119328961208f565b905060005b86811015611a5757600081815260028701602052604090206001015463ffffffff83168410801561196757508415155b156119bd5760008281526002880160205260408120546119949063ffffffff80871688900391906120c716565b90506119b9866119a98364e8d4a510006120c7565b816119b057fe5b84919004611e03565b9150505b600082815260018088016020526040909120015464e8d4a51000906119ef906119e7908490611fe0565b8854906120c7565b816119f657fe5b04898381518110611a0357fe5b602002602001018181525050611a37866001016000848152602001908152602001600020600001548a8481518110610c7d57fe5b898381518110611a4357fe5b602090810291909101015250600101611937565b5050505050505092915050565b611a6d81611260565b61139633826001611bb4565b6000546001600160a01b031681565b801580611b0e575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015611ae057600080fd5b505afa158015611af4573d6000803e3d6000fd5b505050506040513d6020811015611b0a57600080fd5b5051155b611b495760405162461bcd60e51b8152600401808060200182810382526036815260200180612b986036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052611896908490612120565b6060611baa84846000856121d1565b90505b9392505050565b60008281526007602090815260408083206001600160a01b038716845290915290205460045481611c425760005b81811015611c3a5760008581526006602090815260408083208484526002018252808320600190810154898552600784528285206001600160a01b038c16865284528285208686528201909352922082015501611be2565b505050611896565b60005b81811015611d9b5760008581526006602090815260408083208484526002018252808320600190810154898552600784528285206001600160a01b038c16865284528285208686528201909352908320908101549192909164e8d4a5100090611cba90611cb3908690611fe0565b88906120c7565b81611cc157fe5b83549190049150611cd3908290611e03565b905086611ce05780611ce3565b60005b825560018201839055868015611cf95750600081115b15611d9057611d2a60048581548110611d0e57fe5b6000918252602090912001546001600160a01b03168a83611f3b565b60048481548110611d3757fe5b6000918252602090912001546040516001600160a01b03918216918a91908c16907ff75f3d433c6628e04e01a0be1a2c6692a6011ce4b00389824cfa8b8a12f3c1c490611d879086904390612ad2565b60405180910390a45b505050600101611c45565b505050505050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611dfd908590612120565b50505050565b600082820183811015611e5d576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b6000828152600660209081526040808320600783528184203385529092529091208054831115611ea85760405162461bcd60e51b81526004016107be906128b5565b611eb184611260565b611ebd33856001611bb4565b8054611ec99084611fe0565b81558154611ed79084611fe0565b82556001820154611ef2906001600160a01b0316338561203d565b4384336001600160a01b03167f02f25270a4d87bea75db541cdfe559334a275b4a233520ed6c0a2429667cca9486604051611f2d9190612a2e565b60405180910390a450505050565b60006001600160a01b03841615611f53576000611f55565b815b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637750c9f0828686866040518563ffffffff1660e01b8152600401611fa893929190612776565b6000604051808303818588803b158015611fc157600080fd5b505af1158015611fd5573d6000803e3d6000fd5b505050505050505050565b600082821115612037576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611896908490612120565b600081815260066020526040902060010154600160c01b900463ffffffff16438111156120c2576120bf4361232c565b90505b919050565b6000826120d657506000611e60565b828202828482816120e357fe5b0414611e5d5760405162461bcd60e51b8152600401808060200182810382526021815260200180612b276021913960400191505060405180910390fd5b6000612175826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b9b9092919063ffffffff16565b8051909150156118965780806020019051602081101561219457600080fd5b50516118965760405162461bcd60e51b815260040180806020018281038252602a815260200180612b6e602a913960400191505060405180910390fd5b6060824710156122125760405162461bcd60e51b8152600401808060200182810382526026815260200180612b016026913960400191505060405180910390fd5b61221b85612375565b61226c576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106122aa5780518252601f19909201916020918201910161228b565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461230c576040519150601f19603f3d011682016040523d82523d6000602084013e612311565b606091505b509150915061232182828661237b565b979650505050505050565b600064010000000082106123715760405162461bcd60e51b8152600401808060200182810382526026815260200180612b486026913960400191505060405180910390fd5b5090565b3b151590565b6060831561238a575081611bad565b82511561239a5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156123e45781810151838201526020016123cc565b50505050905090810190601f1680156124115780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b80356001600160a01b03811681146120c257600080fd5b60008083601f840112612447578182fd5b50813567ffffffffffffffff81111561245e578182fd5b602083019150836020808302850101111561247857600080fd5b9250929050565b803563ffffffff811681146120c257600080fd5b6000602082840312156124a4578081fd5b611bad8261241f565b6000806000806000608086880312156124c4578081fd5b6124cd8661241f565b94506124db6020870161247f565b93506124e96040870161247f565b9250606086013567ffffffffffffffff811115612504578182fd5b61251088828901612436565b969995985093965092949392505050565b60008060208385031215612533578182fd5b823567ffffffffffffffff811115612549578283fd5b61255585828601612436565b90969095509350505050565b600060208284031215612572578081fd5b5035919050565b6000806040838503121561258b578182fd5b8235915061259b6020840161241f565b90509250929050565b600080604083850312156125b6578182fd5b50508035926020909101359150565b6000806000606084860312156125d9578283fd5b8335925060208401359150604084013580151581146125f6578182fd5b809150509250925092565b60008060008060608587031215612616578384fd5b843593506126266020860161247f565b9250604085013567ffffffffffffffff811115612641578283fd5b61264d87828801612436565b95989497509550505050565b600080600080600060808688031215612670578081fd5b853594506124db6020870161247f565b6000815180845260208085019450808401835b838110156126af57815187529582019590820190600101612693565b509495945050505050565b90565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b818110156127125783516001600160a01b0316835292840192918401916001016126ed565b50909695505050505050565b6020808252810182905260006001600160fb1b0383111561273d578081fd5b60208302808560408501379190910160400190815292915050565b600060208252611bad6020830184612680565b901515815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60208082526018908201527f6164643a20696e76616c6964207374616b6520746f6b656e0000000000000000604082015260600190565b60208082526015908201527472656e65773a20696e76616c696420626c6f636b7360581b604082015260600190565b6020808252601690820152750eae0c8c2e8ca7440d2dcecc2d8d2c840d8cadccee8d60531b604082015260600190565b6020808252600f908201526e1a5b9d985b1a59081c1bdbdb081a59608a1b604082015260600190565b6020808252601390820152720c2c8c87440d2dcecc2d8d2c840d8cadccee8d606b1b604082015260600190565b6020808252601590820152740e4cadccaee7440d2dcecc2d8d2c840d8cadccee8d605b1b604082015260600190565b6020808252601d908201527f77697468647261773a20696e73756666696369656e7420616d6f756e74000000604082015260600190565b60208082526019908201527f7570646174653a20696e76616c696420656e6420626c6f636b00000000000000604082015260600190565b6020808252601c908201527f7472616e736665722072657761726420746f6b656e206661696c656400000000604082015260600190565b6020808252601490820152731859190e88191d5c1b1a58d85d1959081c1bdbdb60621b604082015260600190565b60208082526022908201527f72656e65773a20696e76616c696420706f6f6c20737461746520746f2072656e604082015261657760f01b606082015260800190565b6020808252601a908201527f7570646174653a20706f6f6c20616c726561647920656e646564000000000000604082015260600190565b6020808252601390820152726164643a20696e76616c696420626c6f636b7360681b604082015260600190565b90815260200190565b8781526001600160a01b038716602082015263ffffffff868116604083015285811660608301528416608082015260e060a08201819052600090612a7d90830185612680565b82810360c0840152612a8f8185612680565b9a9950505050505050505050565b600084825260606020830152612ab66060830185612680565b8281036040840152612ac88185612680565b9695505050505050565b91825260208201526040019056fe5265656e7472616e637947756172643a207265656e7472616e742063616c6c00416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7753616665436173743a2076616c756520646f65736e27742066697420696e20333220626974735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a2646970667358221220c5123b60dff18c0319a60de1a907c57be74f3db5bfa5928e7b14949e5eb97be864736f6c63430007060033416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x33A4 CODESIZE SUB DUP1 PUSH3 0x33A4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x5F6 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x7B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x61646D696E203 PUSH1 0xCC SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x2 SSTORE DUP2 MLOAD PUSH3 0xB5 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x568 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP3 SWAP1 SHL AND PUSH1 0x80 MSTORE PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH3 0x148 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0xED JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x13F JUMPI PUSH3 0x13F DUP3 PUSH1 0x0 NOT DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x119 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x152 PUSH1 0x20 SHL PUSH3 0x1A88 OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 ADD PUSH3 0xCB JUMP JUMPDEST POP POP POP POP PUSH3 0x6F8 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH3 0x1DC JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH3 0x219 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x336E PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 DUP2 AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 SWAP2 MSTORE PUSH3 0x271 SWAP2 DUP6 SWAP2 PUSH3 0x276 AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D2 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x332 PUSH1 0x20 SHL PUSH3 0x1B9B OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH3 0x271 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x271 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x3344 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH3 0x343 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH3 0x34D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH3 0x390 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x331E PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x39B DUP6 PUSH3 0x4B4 JUMP JUMPDEST PUSH3 0x3ED JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH3 0x42D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0x40C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x491 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x496 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0x4A9 DUP3 DUP3 DUP7 PUSH3 0x4BE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO ISZERO JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH3 0x4CF JUMPI POP DUP2 PUSH3 0x346 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH3 0x4E0 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x52C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x512 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x55A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x5C0 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x5C0 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x589 JUMP JUMPDEST POP PUSH3 0x5CE SWAP3 SWAP2 POP PUSH3 0x5D2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x5CE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x5D3 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x4B9 DUP2 PUSH3 0x6DF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x60B JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x618 DUP2 PUSH3 0x6DF JUMP JUMPDEST PUSH1 0x20 DUP6 DUP2 ADD MLOAD SWAP2 SWAP5 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x637 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x64B JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x658 JUMPI INVALID JUMPDEST DUP4 DUP2 MUL PUSH1 0x40 MLOAD DUP6 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH3 0x672 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP13 LT ISZERO PUSH3 0x691 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH3 0x6BE JUMPI PUSH3 0x6A9 DUP2 PUSH3 0x5E9 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH3 0x695 JUMP JUMPDEST POP DUP1 SWAP8 POP POP POP POP POP POP POP PUSH3 0x6D6 PUSH1 0x40 DUP6 ADD PUSH3 0x5E9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x6F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x2C03 PUSH3 0x71B PUSH1 0x0 CODECOPY DUP1 PUSH2 0x9D3 MSTORE DUP1 PUSH2 0x1F59 MSTORE POP PUSH2 0x2C03 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77F50F97 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xB43C6270 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB43C6270 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xC4F59F9B EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0xD12E4CEB EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xD18DF53C EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0xDDC63262 EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x472 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x77F50F97 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x7ACC8678 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x7BB7BED1 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x958E2D31 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xADB82B31 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xAFFB9FC8 EQ PUSH2 0x3A3 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x3892601C GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x3892601C EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x43A0D066 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x52FD9F2F EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x75829DEF EQ PUSH2 0x2EE JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x1069F3B5 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x1E1C6A07 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x26782247 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x2F380B35 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x2FB40CE1 EQ PUSH2 0x237 JUMPI PUSH2 0x156 JUMP JUMPDEST CALLDATASIZE PUSH2 0x156 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x2A2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2579 JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A9D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D5 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2493 JUMP JUMPDEST PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x276B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x26BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x2561 JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A37 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x24AD JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x9D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0x25C5 JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x25A4 JUMP JUMPDEST PUSH2 0xAF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2521 JUMP JUMPDEST PUSH2 0xB50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2561 JUMP JUMPDEST PUSH2 0xDBB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x309 CALLDATASIZE PUSH1 0x4 PUSH2 0x2493 JUMP JUMPDEST PUSH2 0xED6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0xFC9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0x2493 JUMP JUMPDEST PUSH2 0x1089 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x2561 JUMP JUMPDEST PUSH2 0x11C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x2561 JUMP JUMPDEST PUSH2 0x11EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x2561 JUMP JUMPDEST PUSH2 0x1260 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2601 JUMP JUMPDEST PUSH2 0x1399 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x3DE CALLDATASIZE PUSH1 0x4 PUSH2 0x2659 JUMP JUMPDEST PUSH2 0x1539 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F8 PUSH2 0x1727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x26D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x420 CALLDATASIZE PUSH1 0x4 PUSH2 0x25A4 JUMP JUMPDEST PUSH2 0x1789 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x445 PUSH2 0x440 CALLDATASIZE PUSH1 0x4 PUSH2 0x2579 JUMP JUMPDEST PUSH2 0x189B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x2758 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x46D CALLDATASIZE PUSH1 0x4 PUSH2 0x2561 JUMP JUMPDEST PUSH2 0x1A64 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x4 SLOAD SWAP1 SWAP2 PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4FC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 SWAP4 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x543 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 MLOAD DUP6 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x572 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A3 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x549 JUMP JUMPDEST POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x4 SLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP3 PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL DUP5 DIV DUP2 AND SWAP4 PUSH1 0x1 PUSH1 0xC0 SHL DUP2 DIV DUP3 AND SWAP4 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x60 SWAP2 DUP3 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x672 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 SWAP4 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6B9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x72C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 MLOAD DUP6 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x6E8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x719 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x6BF JUMP JUMPDEST POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x785 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x295A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x7ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x279A JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 EQ PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x2859 JUMP JUMPDEST NUMBER DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x82E JUMPI POP DUP4 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT JUMPDEST PUSH2 0x84A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x2A01 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND OR SWAP1 SSTORE DUP4 SLOAD DUP4 MSTORE DUP2 DUP4 KECCAK256 DUP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH4 0xFFFFFFFF DUP12 DUP2 AND SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE DUP6 SLOAD DUP6 MSTORE DUP4 DUP6 KECCAK256 DUP4 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP3 DUP12 AND SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP4 SLOAD DUP4 MSTORE SWAP1 DUP3 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x951 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x910 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x5 SLOAD DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x2 ADD DUP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP2 ADD MLOAD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE ADD PUSH2 0x8F1 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH4 0xFFFFFFFF DUP1 DUP7 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH32 0xEB19E76B03B99EFF4D0329A19E44569C131F242C9590234F19B76F2C56A817A1 SWAP1 PUSH2 0x9C2 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ ISZERO PUSH2 0xA3A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AE1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0xA47 DUP4 PUSH2 0x1260 JUMP JUMPDEST PUSH2 0xA52 CALLER DUP5 DUP4 PUSH2 0x1BB4 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 CALLER DUP1 DUP7 MSTORE SWAP4 MSTORE SWAP3 KECCAK256 PUSH1 0x1 DUP4 ADD SLOAD SWAP1 SWAP2 PUSH2 0xA8E SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 ADDRESS DUP8 PUSH2 0x1DA3 JUMP JUMPDEST DUP1 SLOAD PUSH2 0xA9A SWAP1 DUP6 PUSH2 0x1E03 JUMP JUMPDEST DUP2 SSTORE DUP2 SLOAD PUSH2 0xAA8 SWAP1 DUP6 PUSH2 0x1E03 JUMP JUMPDEST DUP3 SSTORE PUSH1 0x40 MLOAD NUMBER SWAP1 DUP7 SWAP1 CALLER SWAP1 PUSH32 0x36AF321EC8D3C75236829C5317AFFD40DDB308863A1236D2D277A4025CCCEE1E SWAP1 PUSH2 0xAE0 SWAP1 DUP10 SWAP1 PUSH2 0x2A2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ ISZERO PUSH2 0xB39 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AE1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0xB47 DUP3 DUP3 PUSH2 0x1E66 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB8A JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xBC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBF3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP CALLER PUSH1 0x0 DUP1 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xD50 JUMPI DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0xC0F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP2 POP PUSH2 0xC21 DUP3 PUSH2 0x1260 JUMP JUMPDEST PUSH2 0xC2D DUP4 DUP4 PUSH1 0x0 PUSH2 0x1BB4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0xD47 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xD3E JUMPI PUSH2 0xC93 DUP2 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC7D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1E03 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC9F JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP4 MSTORE DUP4 MSTORE DUP1 DUP3 KECCAK256 DUP6 DUP4 MSTORE PUSH1 0x1 ADD SWAP1 SWAP3 MSTORE SWAP1 DUP2 KECCAK256 SSTORE DUP7 MLOAD DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xCE8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF75F3D433C6628E04E01A0BE1A2C6692A6011CE4B00389824CFA8B8A12F3C1C4 DUP5 NUMBER PUSH1 0x40 MLOAD PUSH2 0xD35 SWAP3 SWAP2 SWAP1 PUSH2 0x2AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xC30 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xBFB JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xDB2 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD6B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0xDAA JUMPI PUSH2 0xDAA DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD88 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD9D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1F3B JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xD54 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ ISZERO PUSH2 0xE00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AE1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD DUP4 DUP3 SSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xE5A JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 DUP3 ADD DUP4 SWAP1 SSTORE SWAP2 SWAP1 SWAP2 SSTORE ADD PUSH2 0xE2F JUMP JUMPDEST POP DUP3 SLOAD PUSH2 0xE67 SWAP1 DUP3 PUSH2 0x1FE0 JUMP JUMPDEST DUP4 SSTORE DUP1 ISZERO PUSH2 0xE88 JUMPI PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0xE88 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x203D JUMP JUMPDEST NUMBER DUP5 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2369DB1BAFEE945AEE5630782F4A170682E3F8188D8DC247A4C73EB8C9E692D2 DUP5 PUSH1 0x40 MLOAD PUSH2 0xEC3 SWAP2 SWAP1 PUSH2 0x2A2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF22 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF6B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x6E65772061646D696E203 PUSH1 0xAC SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x3B81CAF78FA51ECBC8ACB482FD7012A277B428D9B80F9D156E8A54107496CC40 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1016 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x6E6F742070656E64696E67 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x65DA1CFC2C2E81576AD96AFB24A581F8E109B7A403B35CBD3243A1C99EFDB9ED SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x10D5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x111A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x61646D696E203 PUSH1 0xCC SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x3B81CAF78FA51ECBC8ACB482FD7012A277B428D9B80F9D156E8A54107496CC40 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND DUP3 MSTORE SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x65DA1CFC2C2E81576AD96AFB24A581F8E109B7A403B35CBD3243A1C99EFDB9ED SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x11D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ ISZERO PUSH2 0x122F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AE1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x1258 SWAP1 DUP3 SWAP1 PUSH2 0x1E66 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT PUSH2 0x1281 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x2830 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1299 DUP4 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD SWAP1 SWAP2 POP PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP3 AND GT PUSH2 0x12BF JUMPI POP POP PUSH2 0x1396 JUMP JUMPDEST DUP2 SLOAD DUP1 PUSH2 0x12F2 JUMPI POP PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV DUP2 AND DUP4 SUB AND PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x136C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1336 SWAP1 DUP6 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x135F DUP6 PUSH2 0x134B DUP4 PUSH5 0xE8D4A51000 PUSH2 0x20C7 JUMP JUMPDEST DUP2 PUSH2 0x1352 JUMPI INVALID JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD SWAP2 SWAP1 DIV PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x1 SWAP3 DUP4 ADD SSTORE POP ADD PUSH2 0x130C JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13E5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x13EE DUP5 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD NUMBER PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND GT PUSH2 0x142D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x29CA JUMP JUMPDEST PUSH1 0x4 SLOAD DUP3 EQ PUSH2 0x144E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x2800 JUMP JUMPDEST NUMBER DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1477 JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP6 AND GT JUMPDEST PUSH2 0x1493 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL PUSH4 0xFFFFFFFF DUP8 AND MUL OR SWAP1 SSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x14F0 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x14CA JUMPI INVALID JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 DUP7 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD SWAP1 SWAP2 SSTORE POP PUSH1 0x1 ADD PUSH2 0x14B6 JUMP JUMPDEST POP DUP4 PUSH4 0xFFFFFFFF AND DUP6 PUSH32 0xBA2D8506275D684E80223910F1065A195EA279F37E27EB97AC24F4107EBA6CF9 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x152A SWAP3 SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1585 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x158E DUP6 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD NUMBER PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND GT DUP1 PUSH2 0x15CD JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD NUMBER PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND LT JUMPDEST PUSH2 0x15E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x2988 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP3 EQ PUSH2 0x160A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x2886 JUMP JUMPDEST NUMBER DUP6 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x162A JUMPI POP DUP5 PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND GT JUMPDEST PUSH2 0x1646 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x27D1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH4 0xFFFFFFFF DUP9 DUP2 AND SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 OR PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP3 DUP9 AND SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x16D6 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x16B0 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 DUP7 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD SWAP1 SWAP2 SSTORE POP PUSH1 0x1 ADD PUSH2 0x169C JUMP JUMPDEST POP DUP4 PUSH4 0xFFFFFFFF AND DUP6 PUSH4 0xFFFFFFFF AND DUP8 PUSH32 0x4F863DC93468ACF71FF8F5770599FBEAD4D0FF8EA6BD0C3251576F68FDAD0904 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1717 SWAP3 SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x177F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1761 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17D5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x17E4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH2 0x1882 JUMPI PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x1819 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1856 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x185B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x187C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x2923 JUMP JUMPDEST POP PUSH2 0x1896 JUMP JUMPDEST PUSH2 0x1896 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER DUP5 PUSH2 0x203D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x60 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x18B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x18E2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP6 MSTORE SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP2 SLOAD PUSH1 0x1 DUP4 ADD SLOAD SWAP5 SWAP7 POP SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP1 PUSH2 0x1932 DUP10 PUSH2 0x208F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1A57 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH4 0xFFFFFFFF DUP4 AND DUP5 LT DUP1 ISZERO PUSH2 0x1967 JUMPI POP DUP5 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x19BD JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP9 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1994 SWAP1 PUSH4 0xFFFFFFFF DUP1 DUP8 AND DUP9 SWAP1 SUB SWAP2 SWAP1 PUSH2 0x20C7 AND JUMP JUMPDEST SWAP1 POP PUSH2 0x19B9 DUP7 PUSH2 0x19A9 DUP4 PUSH5 0xE8D4A51000 PUSH2 0x20C7 JUMP JUMPDEST DUP2 PUSH2 0x19B0 JUMPI INVALID JUMPDEST DUP5 SWAP2 SWAP1 DIV PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP1 DUP9 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x19EF SWAP1 PUSH2 0x19E7 SWAP1 DUP5 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST DUP9 SLOAD SWAP1 PUSH2 0x20C7 JUMP JUMPDEST DUP2 PUSH2 0x19F6 JUMPI INVALID JUMPDEST DIV DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A03 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1A37 DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC7D JUMPI INVALID JUMPDEST DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A43 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x1937 JUMP JUMPDEST POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A6D DUP2 PUSH2 0x1260 JUMP JUMPDEST PUSH2 0x1396 CALLER DUP3 PUSH1 0x1 PUSH2 0x1BB4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x1B0E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH2 0x1B49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B98 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1896 SWAP1 DUP5 SWAP1 PUSH2 0x2120 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1BAA DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x21D1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x4 SLOAD DUP2 PUSH2 0x1C42 JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C3A JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x2 ADD DUP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP10 DUP6 MSTORE PUSH1 0x7 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP7 DUP7 MSTORE DUP3 ADD SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 DUP3 ADD SSTORE ADD PUSH2 0x1BE2 JUMP JUMPDEST POP POP POP PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D9B JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x2 ADD DUP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP10 DUP6 MSTORE PUSH1 0x7 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP7 DUP7 MSTORE DUP3 ADD SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 SWAP1 DUP2 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x1CBA SWAP1 PUSH2 0x1CB3 SWAP1 DUP7 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST DUP9 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST DUP2 PUSH2 0x1CC1 JUMPI INVALID JUMPDEST DUP4 SLOAD SWAP2 SWAP1 DIV SWAP2 POP PUSH2 0x1CD3 SWAP1 DUP3 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST SWAP1 POP DUP7 PUSH2 0x1CE0 JUMPI DUP1 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SWAP1 SSTORE DUP7 DUP1 ISZERO PUSH2 0x1CF9 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1D90 JUMPI PUSH2 0x1D2A PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1D0E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 DUP4 PUSH2 0x1F3B JUMP JUMPDEST PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1D37 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP11 SWAP2 SWAP1 DUP13 AND SWAP1 PUSH32 0xF75F3D433C6628E04E01A0BE1A2C6692A6011CE4B00389824CFA8B8A12F3C1C4 SWAP1 PUSH2 0x1D87 SWAP1 DUP7 SWAP1 NUMBER SWAP1 PUSH2 0x2AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0x1C45 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1DFD SWAP1 DUP6 SWAP1 PUSH2 0x2120 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1E5D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD DUP4 GT ISZERO PUSH2 0x1EA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x28B5 JUMP JUMPDEST PUSH2 0x1EB1 DUP5 PUSH2 0x1260 JUMP JUMPDEST PUSH2 0x1EBD CALLER DUP6 PUSH1 0x1 PUSH2 0x1BB4 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x1EC9 SWAP1 DUP5 PUSH2 0x1FE0 JUMP JUMPDEST DUP2 SSTORE DUP2 SLOAD PUSH2 0x1ED7 SWAP1 DUP5 PUSH2 0x1FE0 JUMP JUMPDEST DUP3 SSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x1EF2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP6 PUSH2 0x203D JUMP JUMPDEST NUMBER DUP5 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2F25270A4D87BEA75DB541CDFE559334A275B4A233520ED6C0A2429667CCA94 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1F2D SWAP2 SWAP1 PUSH2 0x2A2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x1F53 JUMPI PUSH1 0x0 PUSH2 0x1F55 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7750C9F0 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2776 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2037 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1896 SWAP1 DUP5 SWAP1 PUSH2 0x2120 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND NUMBER DUP2 GT ISZERO PUSH2 0x20C2 JUMPI PUSH2 0x20BF NUMBER PUSH2 0x232C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20D6 JUMPI POP PUSH1 0x0 PUSH2 0x1E60 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x20E3 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1E5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B27 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2175 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B9B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1896 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1896 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B6E PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2212 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B01 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x221B DUP6 PUSH2 0x2375 JUMP JUMPDEST PUSH2 0x226C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x22AA JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x228B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x230C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2321 DUP3 DUP3 DUP7 PUSH2 0x237B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP3 LT PUSH2 0x2371 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B48 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x238A JUMPI POP DUP2 PUSH2 0x1BAD JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x239A JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23E4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x23CC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2411 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x20C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2447 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x245E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x2478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x20C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24A4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1BAD DUP3 PUSH2 0x241F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x24C4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x24CD DUP7 PUSH2 0x241F JUMP JUMPDEST SWAP5 POP PUSH2 0x24DB PUSH1 0x20 DUP8 ADD PUSH2 0x247F JUMP JUMPDEST SWAP4 POP PUSH2 0x24E9 PUSH1 0x40 DUP8 ADD PUSH2 0x247F JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2504 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2510 DUP9 DUP3 DUP10 ADD PUSH2 0x2436 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2533 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2549 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2555 DUP6 DUP3 DUP7 ADD PUSH2 0x2436 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2572 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x258B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x259B PUSH1 0x20 DUP5 ADD PUSH2 0x241F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25B6 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x25D9 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x25F6 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2616 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x2626 PUSH1 0x20 DUP7 ADD PUSH2 0x247F JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2641 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x264D DUP8 DUP3 DUP9 ADD PUSH2 0x2436 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2670 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH2 0x24DB PUSH1 0x20 DUP8 ADD PUSH2 0x247F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26AF JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2693 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2712 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x26ED JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x273D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x20 DUP4 MUL DUP1 DUP6 PUSH1 0x40 DUP6 ADD CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP1 DUP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1BAD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2680 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x6164643A20696E76616C6964207374616B6520746F6B656E0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x72656E65773A20696E76616C696420626C6F636B73 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0xEAE0C8C2E8CA7440D2DCECC2D8D2C840D8CADCCEE8D PUSH1 0x53 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x1A5B9D985B1A59081C1BDBDB081A59 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0xC2C8C87440D2DCECC2D8D2C840D8CADCCEE8D PUSH1 0x6B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0xE4CADCCAEE7440D2DCECC2D8D2C840D8CADCCEE8D PUSH1 0x5B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x77697468647261773A20696E73756666696369656E7420616D6F756E74000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x7570646174653A20696E76616C696420656E6420626C6F636B00000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x7472616E736665722072657761726420746F6B656E206661696C656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x1859190E88191D5C1B1A58D85D1959081C1BDBDB PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x72656E65773A20696E76616C696420706F6F6C20737461746520746F2072656E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6577 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x7570646174653A20706F6F6C20616C726561647920656E646564000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x6164643A20696E76616C696420626C6F636B73 PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF DUP7 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2A7D SWAP1 DUP4 ADD DUP6 PUSH2 0x2680 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x2A8F DUP2 DUP6 PUSH2 0x2680 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP3 MSTORE PUSH1 0x60 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2AB6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2680 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2AC8 DUP2 DUP6 PUSH2 0x2680 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP INVALID MSTORE PUSH6 0x656E7472616E PUSH4 0x79477561 PUSH19 0x643A207265656E7472616E742063616C6C0041 PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F722063616C6C53616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7753616665436173743A KECCAK256 PUSH23 0x616C756520646F65736E27742066697420696E20333220 PUSH3 0x697473 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A2646970667358221220C5123B PUSH1 0xDF CALL DUP13 SUB NOT 0xA6 0xD 0xE1 0xA9 SMOD 0xC5 PUSH28 0xE74F3DB5BFA5928E7B14949E5EB97BE864736F6C6343000706003341 PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F722063616C6C53616665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x636500000000000000000000000000 ",
							"sourceMap": "1064:22360:8:-:0;;;4873:588;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5017:6;-1:-1:-1;;;;;335:20:10;;327:40;;;;;-1:-1:-1;;;327:40:10;;;;;;;;;;;;-1:-1:-1;;;327:40:10;;;;;;;;;;;;;;;378:5;:14;;-1:-1:-1;;;;;;378:14:10;-1:-1:-1;;;;;378:14:10;;;;;;;;;;-1:-1:-1;1760:7:4;:22;5036:28:8;;::::1;::::0;:12:::1;::::0;:28:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;;;5075:28:8::1;::::0;;;;::::1;::::0;5168:9:::1;5163:291;5187:13;:20;5183:1;:24;5163:291;;;5261:1;-1:-1:-1::0;;;;;5233:30:8::1;:13;5247:1;5233:16;;;;;;;;;;;;;;-1:-1:-1::0;;;;;5233:30:8::1;;5229:214;;5284:143;5354:13;-1:-1:-1::0;;5294:13:8::1;5308:1;5294:16;;;;;;;;;;;;;;-1:-1:-1::0;;;;;5284:39:8::1;;;;;;;:143;;;;;:::i;:::-;5209:3;;5163:291;;;;4873:588:::0;;;1064:22360;;1348:613:2;1713:10;;;1712:62;;-1:-1:-1;1729:39:2;;;-1:-1:-1;;;1729:39:2;;1753:4;1729:39;;;;-1:-1:-1;;;;;1729:39:2;;;;;;;;;:15;;;;;;:39;;;;;;;;;;;;;;;:15;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1729:39:2;:44;1712:62;1704:150;;;;-1:-1:-1;;;1704:150:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1891:62;;;-1:-1:-1;;;;;1891:62:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:62:2;;;-1:-1:-1;;;1891:62:2;;;;1864:90;;1884:5;;1864:19;:90;:::i;:::-;1348:613;;;:::o;2967:751::-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:2;;;;;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:2;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:2;3616:85;;;;-1:-1:-1;;;3616:85:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3581:193:3;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;;:::o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:3;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4980:75:3;;-1:-1:-1;4980:75:3;-1:-1:-1;5072:52:3;4980:75;;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:3:o;726:413::-;1086:20;;1124:8;;726:413;;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:3;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1064:22360:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1064:22360:8;-1:-1:-1;;;;;1064:22360:8;;;;;;;;;;;-1:-1:-1;1064:22360:8;;;;;;;-1:-1:-1;1064:22360:8;;;-1:-1:-1;1064:22360:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:142:11;95:13;;117:33;95:13;117:33;:::i;161:1400::-;;;;370:2;358:9;349:7;345:23;341:32;338:2;;;391:6;383;376:22;338:2;428:9;422:16;447:33;474:5;447:33;:::i;:::-;523:2;554:18;;;548:25;499:5;;-1:-1:-1;523:2:11;-1:-1:-1;;;;;622:14:11;;;619:2;;;654:6;646;639:22;619:2;697:6;686:9;682:22;672:32;;742:7;735:4;731:2;727:13;723:27;713:2;;769:6;761;754:22;713:2;803;797:9;825:2;821;818:10;815:2;;;831:9;815:2;869;865;861:11;901:2;895:9;952:2;947;939:6;935:15;931:24;1005:6;993:10;990:22;985:2;973:10;970:18;967:46;964:2;;;1016:9;964:2;1043;1036:22;1093:18;;;1127:15;;;;-1:-1:-1;1162:11:11;;;1192;;;1188:20;;1185:33;-1:-1:-1;1182:2:11;;;1236:6;1228;1221:22;1182:2;1263:6;1254:15;;1278:182;1292:2;1289:1;1286:9;1278:182;;;1349:36;1381:3;1349:36;:::i;:::-;1337:49;;1310:1;1303:9;;;;;1406:12;;;;1438;;1278:182;;;1282:3;1479:6;1469:16;;;;;;;;1504:51;1551:2;1540:9;1536:18;1504:51;:::i;:::-;1494:61;;328:1233;;;;;:::o;1566:133::-;-1:-1:-1;;;;;1643:31:11;;1633:42;;1623:2;;1689:1;1686;1679:12;1623:2;1613:86;:::o;:::-;1064:22360:8;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14248:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:11"
															},
															"nodeType": "YulIf",
															"src": "113:2:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:11",
														"type": ""
													}
												],
												"src": "14:175:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "284:314:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "333:30:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "arrayPos",
																					"nodeType": "YulIdentifier",
																					"src": "342:8:11"
																				},
																				{
																					"name": "arrayPos",
																					"nodeType": "YulIdentifier",
																					"src": "352:8:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:26:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:26:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "312:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "320:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "308:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "308:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "327:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "304:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "304:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "297:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "297:35:11"
															},
															"nodeType": "YulIf",
															"src": "294:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "372:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "395:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "382:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:20:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "372:6:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "445:30:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "arrayPos",
																					"nodeType": "YulIdentifier",
																					"src": "454:8:11"
																				},
																				{
																					"name": "arrayPos",
																					"nodeType": "YulIdentifier",
																					"src": "464:8:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "447:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "447:26:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "447:26:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "417:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "425:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "414:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "414:30:11"
															},
															"nodeType": "YulIf",
															"src": "411:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "484:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "500:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "496:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "496:17:11"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "484:8:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "576:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "585:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "588:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "578:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "578:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "578:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "536:6:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "548:6:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "556:4:11",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "544:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "544:17:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "532:30:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "564:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "528:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "528:41:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "571:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "525:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:50:11"
															},
															"nodeType": "YulIf",
															"src": "522:2:11"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "247:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "255:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "263:8:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "273:6:11",
														"type": ""
													}
												],
												"src": "194:404:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "653:115:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "663:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "685:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "672:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "672:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "663:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "746:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "755:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "758:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "748:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "748:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "748:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "714:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "725:5:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "732:10:11",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "721:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "721:22:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "711:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "711:33:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "704:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "704:41:11"
															},
															"nodeType": "YulIf",
															"src": "701:2:11"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "632:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "643:5:11",
														"type": ""
													}
												],
												"src": "603:165:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "843:128:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "889:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "898:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "906:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "891:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "891:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "891:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "864:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "873:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "860:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "860:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "885:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "856:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:32:11"
															},
															"nodeType": "YulIf",
															"src": "853:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "924:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "955:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "934:20:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "934:31:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "924:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "809:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "820:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "832:6:11",
														"type": ""
													}
												],
												"src": "773:198:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1130:534:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1177:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1186:6:11"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1194:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1179:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1179:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1179:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1151:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1160:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1147:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1147:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1172:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1143:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1143:33:11"
															},
															"nodeType": "YulIf",
															"src": "1140:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1243:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1222:20:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:31:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1262:49:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1296:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1307:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1292:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1292:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "1272:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:39:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1262:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1320:49:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1354:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1365:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1350:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1350:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "1330:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1330:39:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1320:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1378:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1409:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1420:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1405:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1392:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1392:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1382:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1467:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1476:6:11"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1484:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1469:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1469:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1469:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1439:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1447:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1436:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1436:30:11"
															},
															"nodeType": "YulIf",
															"src": "1433:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1502:102:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:11"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1587:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:22:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1596:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_uint256_$dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "1528:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1528:76:11"
															},
															"variables": [
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "1506:8:11",
																	"type": ""
																},
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "1516:8:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1613:18:11",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "1623:8:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1613:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1640:18:11",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "1650:8:11"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1640:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint32t_uint32t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1064:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1075:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1087:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1095:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1103:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1111:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1119:6:11",
														"type": ""
													}
												],
												"src": "976:688:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1774:358:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1820:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1829:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1837:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1822:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1822:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1822:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1795:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1804:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1791:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1791:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1816:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:32:11"
															},
															"nodeType": "YulIf",
															"src": "1784:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1855:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1882:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1869:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1869:23:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1859:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1935:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1944:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1952:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1937:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1937:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1937:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1907:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1915:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1904:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1904:30:11"
															},
															"nodeType": "YulIf",
															"src": "1901:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1970:102:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2044:9:11"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2055:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2040:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2040:22:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2064:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_uint256_$dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "1996:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1996:76:11"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "1974:8:11",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "1984:8:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2081:18:11",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "2091:8:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2081:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2108:18:11",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "2118:8:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1732:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1743:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1755:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1763:6:11",
														"type": ""
													}
												],
												"src": "1669:463:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2207:120:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2253:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2262:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2270:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2255:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2255:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2255:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2228:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2237:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2224:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2224:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2249:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2220:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2220:32:11"
															},
															"nodeType": "YulIf",
															"src": "2217:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2288:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2311:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2298:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2298:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2288:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2173:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2184:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2196:6:11",
														"type": ""
													}
												],
												"src": "2137:190:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2419:179:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2465:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2474:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2482:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2467:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2467:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2467:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2440:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2449:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2436:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2436:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2461:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2432:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2432:32:11"
															},
															"nodeType": "YulIf",
															"src": "2429:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2500:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2523:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2510:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2510:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2500:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2542:50:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2577:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2588:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2573:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2573:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2552:20:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2552:40:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2542:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2377:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2388:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2400:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2408:6:11",
														"type": ""
													}
												],
												"src": "2332:266:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2690:171:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2736:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2745:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2753:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2738:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2738:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2738:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2711:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2720:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2707:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2707:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2732:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2703:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2703:32:11"
															},
															"nodeType": "YulIf",
															"src": "2700:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2771:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2794:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2781:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2781:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2771:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2813:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2840:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2851:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2836:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2836:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2823:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2823:32:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2813:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2648:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2659:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2671:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2679:6:11",
														"type": ""
													}
												],
												"src": "2603:258:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2967:328:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3013:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3022:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3030:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3015:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3015:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3015:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2997:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2984:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2984:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3009:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2980:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2980:32:11"
															},
															"nodeType": "YulIf",
															"src": "2977:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3048:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3071:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3058:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3058:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3048:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3090:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3117:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3113:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3113:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3100:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:32:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3090:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3141:45:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3171:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3182:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3167:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3167:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3154:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3154:32:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3145:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3239:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "3248:6:11"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "3256:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3241:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3241:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3241:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3208:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3229:5:11"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3222:6:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3222:13:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3215:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3215:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3205:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3205:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3198:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3198:40:11"
															},
															"nodeType": "YulIf",
															"src": "3195:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3274:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3284:5:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3274:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2917:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2928:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2940:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2948:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2956:6:11",
														"type": ""
													}
												],
												"src": "2866:429:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3438:467:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3484:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3493:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3501:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3486:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3486:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3486:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3459:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3468:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3455:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3455:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3480:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3451:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3451:32:11"
															},
															"nodeType": "YulIf",
															"src": "3448:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3519:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3542:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3529:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3529:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3519:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3561:49:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3595:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3606:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3591:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3591:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "3571:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3571:39:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3561:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3619:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3650:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3661:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3646:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3646:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3633:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3633:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3623:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3708:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "3717:6:11"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "3725:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3710:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3710:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3710:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3680:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3688:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3677:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3677:30:11"
															},
															"nodeType": "YulIf",
															"src": "3674:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3743:102:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3817:9:11"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3828:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3813:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3813:22:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3837:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_uint256_$dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "3769:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3769:76:11"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "3747:8:11",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "3757:8:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3854:18:11",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "3864:8:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3854:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3881:18:11",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "3891:8:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3881:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint32t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3380:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3391:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3403:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3411:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3419:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3427:6:11",
														"type": ""
													}
												],
												"src": "3300:605:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4064:526:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4111:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4120:6:11"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4128:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4113:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4085:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4094:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4081:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4081:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4106:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4077:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4077:33:11"
															},
															"nodeType": "YulIf",
															"src": "4074:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4146:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4169:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4156:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4156:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4146:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4188:49:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4222:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4233:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4218:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4218:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "4198:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4198:39:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4188:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4246:49:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4280:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4291:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4276:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4276:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "4256:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4256:39:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4246:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4304:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4335:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4346:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4331:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4331:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4318:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4318:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4308:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4393:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4402:6:11"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4410:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4395:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4395:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4395:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4365:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4373:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4362:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4362:30:11"
															},
															"nodeType": "YulIf",
															"src": "4359:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4428:102:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4502:9:11"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4513:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4498:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4498:22:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4522:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_uint256_$dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4454:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4454:76:11"
															},
															"variables": [
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "4432:8:11",
																	"type": ""
																},
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "4442:8:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4539:18:11",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "4549:8:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4539:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4566:18:11",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "4576:8:11"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4566:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint32t_uint32t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3998:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4009:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4021:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4029:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4037:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4045:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4053:6:11",
														"type": ""
													}
												],
												"src": "3910:680:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4662:376:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4672:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4692:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4686:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4686:12:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4676:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4714:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4719:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4707:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4707:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4707:19:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4735:14:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4745:4:11",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4739:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4758:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4769:3:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4774:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4765:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4765:12:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4758:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4786:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4804:5:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4811:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4800:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4800:14:11"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4790:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4823:12:11",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "4832:3:11"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4827:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4893:120:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4914:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "4925:6:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4919:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4919:13:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4907:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4907:26:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4907:26:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4946:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4957:3:11"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4962:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4953:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4953:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4946:3:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4978:25:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4992:6:11"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5000:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4988:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4988:15:11"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4978:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4855:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4858:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4852:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4852:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4866:18:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4868:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4877:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4880:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4873:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4873:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4868:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4848:3:11",
																"statements": []
															},
															"src": "4844:169:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5022:10:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5029:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5022:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4639:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4646:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4654:3:11",
														"type": ""
													}
												],
												"src": "4595:443:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5234:14:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5236:10:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5243:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5236:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5218:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5226:3:11",
														"type": ""
													}
												],
												"src": "5043:205:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5354:102:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5364:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5376:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5364:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5406:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5421:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5437:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5442:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5433:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5433:11:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5446:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5429:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5429:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5417:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5417:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5399:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5399:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5323:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5334:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5345:4:11",
														"type": ""
													}
												],
												"src": "5253:203:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5612:510:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5622:12:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5632:2:11",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5626:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5643:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5661:9:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5672:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5657:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5657:18:11"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "5647:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5691:9:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5702:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5684:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5684:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5684:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5714:17:11",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "5725:6:11"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "5718:3:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5740:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5760:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5754:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5754:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5744:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "5783:6:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5791:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5776:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5776:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5776:22:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5807:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5818:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5829:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5814:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5814:18:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5807:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5841:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5859:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5867:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5855:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5855:15:11"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5845:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5879:13:11",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "5888:4:11"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5883:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5950:146:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5971:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5986:6:11"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "5980:5:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5980:13:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6003:3:11",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6008:1:11",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "5999:3:11"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5999:11:11"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6012:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "5995:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5995:19:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5976:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5976:39:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5964:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5964:52:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5964:52:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6029:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6040:3:11"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6045:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6036:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6036:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6029:3:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6061:25:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6075:6:11"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6083:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6071:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6071:15:11"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6061:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5912:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5915:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5909:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5909:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5923:18:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5925:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5934:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5937:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5930:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5930:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5925:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5905:3:11",
																"statements": []
															},
															"src": "5901:195:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6105:11:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6113:3:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6105:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5581:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5592:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5603:4:11",
														"type": ""
													}
												],
												"src": "5461:661:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6288:335:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6305:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6316:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6298:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6298:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6298:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6339:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6350:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6335:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6335:18:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6355:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6328:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6328:34:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6406:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "6415:4:11"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "6421:4:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6408:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6408:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6408:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6377:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6393:3:11",
																						"type": "",
																						"value": "251"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6398:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "6389:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6389:11:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6402:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6385:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6385:19:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6374:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6374:31:11"
															},
															"nodeType": "YulIf",
															"src": "6371:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6437:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6455:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6463:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6451:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6451:15:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6441:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6492:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6503:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6488:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6488:18:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6508:6:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6516:6:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6475:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6475:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6475:48:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6532:41:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6550:9:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6561:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6546:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6546:22:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6570:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6542:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6542:31:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6536:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6589:2:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6593:4:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6582:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6582:16:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6582:16:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6607:10:11",
															"value": {
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "6615:2:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6607:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6249:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6260:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6268:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6279:4:11",
														"type": ""
													}
												],
												"src": "6127:496:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6779:116:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6796:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6807:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6789:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6789:21:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6819:70:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6862:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6874:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6885:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6870:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6870:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6827:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6827:62:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6819:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6748:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6759:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6770:4:11",
														"type": ""
													}
												],
												"src": "6628:267:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6995:92:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7005:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7017:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7028:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7013:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7013:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7005:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7047:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "7072:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7065:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7065:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7058:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7058:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7040:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7040:41:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7040:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6964:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6975:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6986:4:11",
														"type": ""
													}
												],
												"src": "6900:187:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7267:218:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7277:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7289:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7300:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7285:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7285:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7277:4:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7312:29:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7330:3:11",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7335:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7326:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7326:11:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7339:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7322:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7322:19:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7316:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7357:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7372:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7380:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7368:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7368:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7350:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7350:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7350:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7404:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7415:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7400:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7400:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7424:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7432:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7420:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7420:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7393:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7393:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7393:43:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7456:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7467:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7452:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:18:11"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7472:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7445:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7445:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7445:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20Ext_$3378_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7220:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7231:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7239:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7247:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7258:4:11",
														"type": ""
													}
												],
												"src": "7092:393:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7618:102:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7628:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7640:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7651:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7636:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7636:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7628:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7670:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7685:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7701:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7706:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7697:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7697:11:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7710:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7693:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7693:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7681:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7681:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7663:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7663:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7663:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IKyberRewardLocker_$1605__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7587:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7598:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7609:4:11",
														"type": ""
													}
												],
												"src": "7490:230:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7899:174:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7916:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7927:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7909:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7909:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7909:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7950:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7961:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7946:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7946:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7966:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7939:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7939:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7939:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7989:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8000:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7985:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7985:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8005:26:11",
																		"type": "",
																		"value": "add: invalid stake token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7978:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7978:54:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7978:54:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8041:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8053:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8064:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8049:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8049:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8041:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0cf1347f111c1e2e524e09dc610066c7514c5455b7c1a7117c8c57b811f17690__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7876:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7890:4:11",
														"type": ""
													}
												],
												"src": "7725:348:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8252:171:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8269:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8280:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8262:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8262:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8262:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8303:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8314:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8299:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8299:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8319:2:11",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8292:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8292:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8292:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8342:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8353:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8338:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8338:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8358:23:11",
																		"type": "",
																		"value": "renew: invalid blocks"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8331:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8331:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8331:51:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8391:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8403:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8414:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8399:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8399:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8391:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14a26bf1715a2883885317c99f65178522cdf3543484696b4d8003a4076f0c02__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8229:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8243:4:11",
														"type": ""
													}
												],
												"src": "8078:345:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8602:172:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8619:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8630:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8612:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8612:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8612:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8653:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8664:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8649:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8649:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8669:2:11",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8642:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8642:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8642:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8692:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8703:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8688:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8688:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8708:24:11",
																		"type": "",
																		"value": "update: invalid length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8681:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8681:52:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8681:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8742:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8754:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8765:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8750:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8750:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8742:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_206226b2ca3d5a0c768271d8fc891ab16534a45d602f4dc09f7557c6e414751a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8579:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8593:4:11",
														"type": ""
													}
												],
												"src": "8428:346:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8953:165:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8970:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8981:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8963:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8963:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8963:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9004:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9015:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9000:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9000:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9020:2:11",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8993:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8993:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8993:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9043:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9054:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9039:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9039:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9059:17:11",
																		"type": "",
																		"value": "invalid pool id"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9032:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9032:45:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9032:45:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9086:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9098:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9109:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9094:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9094:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9086:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8930:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8944:4:11",
														"type": ""
													}
												],
												"src": "8779:339:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9297:169:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9314:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9325:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9307:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9307:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9307:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9348:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9359:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9344:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9344:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9364:2:11",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9337:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9337:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9337:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9387:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9398:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9383:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9383:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9403:21:11",
																		"type": "",
																		"value": "add: invalid length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9376:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9376:49:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9376:49:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9434:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9446:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9457:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9442:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9442:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9434:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_462aec2277423072c98fc656350ffd9dcbb353e1fa9c1cfa13a2fa86f5fec88c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9274:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9288:4:11",
														"type": ""
													}
												],
												"src": "9123:343:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9645:171:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9662:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9673:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9655:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9655:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9655:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9696:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9707:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9692:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9692:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9712:2:11",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9685:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9685:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9685:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9735:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9746:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9731:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9731:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9751:23:11",
																		"type": "",
																		"value": "renew: invalid length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9724:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9724:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9724:51:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9784:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9796:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9807:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9792:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9792:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9784:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_77180fafa0374a12058c9de85e5d1dcedc0242f76b18f525037a0f5138de63c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9622:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9636:4:11",
														"type": ""
													}
												],
												"src": "9471:345:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9995:179:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10012:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10023:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10005:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10005:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10005:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10046:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10057:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10042:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10042:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10062:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10035:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10035:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10035:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10085:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10096:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10081:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10081:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10101:31:11",
																		"type": "",
																		"value": "withdraw: insufficient amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10074:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10074:59:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10074:59:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10142:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10154:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10165:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10150:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10150:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10142:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8bc8c43108bc0174d691040f1b26bcfd2f362490f17ce12c09ee43c30f8abc24__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9972:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9986:4:11",
														"type": ""
													}
												],
												"src": "9821:353:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10353:175:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10370:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10381:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10363:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10363:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10363:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10404:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10415:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10400:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10400:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10420:2:11",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10393:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10393:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10393:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10443:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10454:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10439:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10439:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10459:27:11",
																		"type": "",
																		"value": "update: invalid end block"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10432:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10432:55:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10432:55:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10496:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10508:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10504:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10504:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10496:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_900c8e0e4572d8a0c190c3451f1d947ef66467077e2ac335d0c50ed07c0fd304__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10330:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10344:4:11",
														"type": ""
													}
												],
												"src": "10179:349:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10707:178:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10724:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10735:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10717:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10717:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10717:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10758:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10769:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10754:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10754:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10774:2:11",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10747:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10747:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10747:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10797:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10808:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10793:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10793:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10813:30:11",
																		"type": "",
																		"value": "transfer reward token failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10786:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10786:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10786:58:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10853:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10865:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10876:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10861:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10861:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10853:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_93667b8e945a805956ebe9ea399ecb8c4162704042e6f100fb7621efea8e2b35__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10684:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10698:4:11",
														"type": ""
													}
												],
												"src": "10533:352:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11064:170:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11081:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11092:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11074:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11074:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11074:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11115:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11126:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11111:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11111:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11131:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11104:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11104:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11104:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11154:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11165:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11150:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11150:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11170:22:11",
																		"type": "",
																		"value": "add: duplicated pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11143:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11143:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11143:50:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11202:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11214:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11225:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11210:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11210:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11202:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_afec7c11c0dafba4c83baee4a10fbaa3a43a46dce9b3e2c79ab91a6131e0e8e2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11041:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11055:4:11",
														"type": ""
													}
												],
												"src": "10890:344:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11413:224:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11430:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11441:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11423:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11423:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11423:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11464:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11475:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11460:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11460:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11480:2:11",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11453:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11453:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11453:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11503:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11514:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11499:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11499:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11519:34:11",
																		"type": "",
																		"value": "renew: invalid pool state to ren"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11492:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11492:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11492:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11574:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11585:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11570:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11570:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11590:4:11",
																		"type": "",
																		"value": "ew"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11563:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11563:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11563:32:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11604:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11616:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11627:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11612:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11612:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11604:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b31dc5707a57b87f831426ba8c552bc59246657a2e57bf1bc07a78701db6706b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11390:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11404:4:11",
														"type": ""
													}
												],
												"src": "11239:398:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11816:176:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11833:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11844:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11826:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11826:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11826:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11867:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11878:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11863:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11863:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11883:2:11",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11856:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11856:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11856:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11906:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11917:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11902:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11902:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11922:28:11",
																		"type": "",
																		"value": "update: pool already ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11895:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11895:56:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11895:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11960:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11972:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11983:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11968:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11968:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11960:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b833683b89b404991bdaae7cd6d4239375c0bb88e3b5fa21acbecc40c4f69f3d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11793:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11807:4:11",
														"type": ""
													}
												],
												"src": "11642:350:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12171:169:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12188:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12199:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12181:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12181:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12181:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12222:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12233:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12218:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12218:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12238:2:11",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12211:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12211:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12211:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12261:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12272:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12257:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12257:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12277:21:11",
																		"type": "",
																		"value": "add: invalid blocks"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12250:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12250:49:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12250:49:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12308:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12320:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12331:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12316:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12316:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12308:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc3a2899eec1259623d92efeb6fc5017bc79c7225fde1627f50422d59e8987b9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12148:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12162:4:11",
														"type": ""
													}
												],
												"src": "11997:343:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12446:76:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12456:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12468:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12479:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12464:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12464:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12456:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12498:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12509:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12491:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12491:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12491:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12415:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12426:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12437:4:11",
														"type": ""
													}
												],
												"src": "12345:177:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12890:550:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12907:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12918:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12900:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12900:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12900:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12945:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12956:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12941:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12941:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12965:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12981:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12986:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "12977:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12977:11:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12990:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "12973:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12973:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12961:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12961:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12934:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12934:60:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12934:60:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13003:20:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13013:10:11",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13007:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13043:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13054:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13039:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13039:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "13063:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13071:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13059:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13059:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13032:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13032:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13032:43:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13095:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13106:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13091:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13091:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "13115:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13123:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13111:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13111:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13084:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13084:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13084:43:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13147:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13158:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13143:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13143:19:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "13168:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13176:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13164:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13164:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13136:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13136:44:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13136:44:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13200:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13211:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13196:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13196:19:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13217:3:11",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13189:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13189:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13189:32:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13230:77:11",
															"value": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "13279:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13291:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13302:3:11",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13287:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13287:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13244:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13244:63:11"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "13234:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13327:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13338:3:11",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13323:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13323:19:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "13348:6:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13356:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13344:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13344:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13316:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13316:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13316:51:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13376:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "13419:6:11"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "13427:6:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13384:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13384:50:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13376:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint32_t_uint32_t_uint32_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_address_t_uint32_t_uint32_t_uint32_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12811:9:11",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "12822:6:11",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "12830:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "12838:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12846:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12854:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12862:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12870:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12881:4:11",
														"type": ""
													}
												],
												"src": "12527:913:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13702:291:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13719:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13730:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13712:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13712:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13712:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13757:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13768:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13753:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13753:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13773:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13746:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13746:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13746:30:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13785:76:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13834:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13846:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13857:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13842:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13842:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13799:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13799:62:11"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "13789:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13881:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13892:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13877:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13877:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "13901:6:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13909:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13897:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13897:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13870:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13870:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13870:50:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13929:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13972:6:11"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "13980:6:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13937:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13937:50:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13929:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13655:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13666:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13674:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13682:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13693:4:11",
														"type": ""
													}
												],
												"src": "13445:548:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14127:119:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14137:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14149:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14160:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14145:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14145:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14137:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14179:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14190:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14172:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14172:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14172:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14217:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14228:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14213:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14213:18:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14233:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14206:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14206:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14206:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14088:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14099:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14107:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14118:4:11",
														"type": ""
													}
												],
												"src": "13998:248:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_array$_t_uint256_$dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(arrayPos, arrayPos) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, mul(length, 0x20)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_t_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint32t_uint32t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_uint32(add(headStart, 32))\n        value2 := abi_decode_t_uint32(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(value4, value4) }\n        let value3_1, value4_1 := abi_decode_t_array$_t_uint256_$dyn_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let value0_1, value1_1 := abi_decode_t_array$_t_uint256_$dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value2, value2) }\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint32t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_uint32(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(value2, value2) }\n        let value2_1, value3_1 := abi_decode_t_array$_t_uint256_$dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_uint256t_uint32t_uint32t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value4, value4) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_uint32(add(headStart, 32))\n        value2 := abi_decode_t_uint32(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(value4, value4) }\n        let value3_1, value4_1 := abi_decode_t_array$_t_uint256_$dyn_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_t_array$_t_uint256_$dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), value1)\n        if gt(value1, sub(shl(251, 1), 1)) { revert(tail, tail) }\n        let length := mul(value1, 32)\n        calldatacopy(add(headStart, 64), value0, length)\n        let _1 := add(add(headStart, length), 64)\n        mstore(_1, tail)\n        tail := _1\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_array$_t_uint256_$dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20Ext_$3378_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_contract$_IKyberRewardLocker_$1605__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_0cf1347f111c1e2e524e09dc610066c7514c5455b7c1a7117c8c57b811f17690__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"add: invalid stake token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_14a26bf1715a2883885317c99f65178522cdf3543484696b4d8003a4076f0c02__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"renew: invalid blocks\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_206226b2ca3d5a0c768271d8fc891ab16534a45d602f4dc09f7557c6e414751a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"update: invalid length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"invalid pool id\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_462aec2277423072c98fc656350ffd9dcbb353e1fa9c1cfa13a2fa86f5fec88c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"add: invalid length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_77180fafa0374a12058c9de85e5d1dcedc0242f76b18f525037a0f5138de63c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"renew: invalid length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8bc8c43108bc0174d691040f1b26bcfd2f362490f17ce12c09ee43c30f8abc24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"withdraw: insufficient amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_900c8e0e4572d8a0c190c3451f1d947ef66467077e2ac335d0c50ed07c0fd304__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"update: invalid end block\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_93667b8e945a805956ebe9ea399ecb8c4162704042e6f100fb7621efea8e2b35__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"transfer reward token failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_afec7c11c0dafba4c83baee4a10fbaa3a43a46dce9b3e2c79ab91a6131e0e8e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"add: duplicated pool\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b31dc5707a57b87f831426ba8c552bc59246657a2e57bf1bc07a78701db6706b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"renew: invalid pool state to ren\")\n        mstore(add(headStart, 96), \"ew\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b833683b89b404991bdaae7cd6d4239375c0bb88e3b5fa21acbecc40c4f69f3d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"update: pool already ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc3a2899eec1259623d92efeb6fc5017bc79c7225fde1627f50422d59e8987b9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"add: invalid blocks\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint32_t_uint32_t_uint32_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_address_t_uint32_t_uint32_t_uint32_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        let _1 := 0xffffffff\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), 224)\n        let tail_1 := abi_encode_t_array$_t_uint256_$dyn(value5, add(headStart, 224))\n        mstore(add(headStart, 192), sub(tail_1, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn(value6, tail_1)\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        let tail_1 := abi_encode_t_array$_t_uint256_$dyn(value1, add(headStart, 96))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn(value2, tail_1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1681": [
									{
										"length": 32,
										"start": 2515
									},
									{
										"length": 32,
										"start": 8025
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77F50F97 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xB43C6270 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB43C6270 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xC4F59F9B EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0xD12E4CEB EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xD18DF53C EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0xDDC63262 EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x472 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x77F50F97 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x7ACC8678 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x7BB7BED1 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x958E2D31 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xADB82B31 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xAFFB9FC8 EQ PUSH2 0x3A3 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x3892601C GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x3892601C EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x43A0D066 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x52FD9F2F EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x75829DEF EQ PUSH2 0x2EE JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x1069F3B5 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x1E1C6A07 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x26782247 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x2F380B35 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x2FB40CE1 EQ PUSH2 0x237 JUMPI PUSH2 0x156 JUMP JUMPDEST CALLDATASIZE PUSH2 0x156 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x2A2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2579 JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A9D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D5 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2493 JUMP JUMPDEST PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x276B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x26BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x2561 JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A37 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x24AD JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x9D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0x25C5 JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x25A4 JUMP JUMPDEST PUSH2 0xAF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2521 JUMP JUMPDEST PUSH2 0xB50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2561 JUMP JUMPDEST PUSH2 0xDBB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x309 CALLDATASIZE PUSH1 0x4 PUSH2 0x2493 JUMP JUMPDEST PUSH2 0xED6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0xFC9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0x2493 JUMP JUMPDEST PUSH2 0x1089 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x2561 JUMP JUMPDEST PUSH2 0x11C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x2561 JUMP JUMPDEST PUSH2 0x11EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x2561 JUMP JUMPDEST PUSH2 0x1260 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2601 JUMP JUMPDEST PUSH2 0x1399 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x3DE CALLDATASIZE PUSH1 0x4 PUSH2 0x2659 JUMP JUMPDEST PUSH2 0x1539 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F8 PUSH2 0x1727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x26D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x420 CALLDATASIZE PUSH1 0x4 PUSH2 0x25A4 JUMP JUMPDEST PUSH2 0x1789 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x445 PUSH2 0x440 CALLDATASIZE PUSH1 0x4 PUSH2 0x2579 JUMP JUMPDEST PUSH2 0x189B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x2758 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x46D CALLDATASIZE PUSH1 0x4 PUSH2 0x2561 JUMP JUMPDEST PUSH2 0x1A64 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x4 SLOAD SWAP1 SWAP2 PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4FC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 SWAP4 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x543 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 MLOAD DUP6 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x572 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A3 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x549 JUMP JUMPDEST POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x4 SLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP3 PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL DUP5 DIV DUP2 AND SWAP4 PUSH1 0x1 PUSH1 0xC0 SHL DUP2 DIV DUP3 AND SWAP4 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x60 SWAP2 DUP3 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x672 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 SWAP4 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6B9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x72C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 MLOAD DUP6 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x6E8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x719 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x6BF JUMP JUMPDEST POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x785 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x295A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x7ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x279A JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 EQ PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x2859 JUMP JUMPDEST NUMBER DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x82E JUMPI POP DUP4 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT JUMPDEST PUSH2 0x84A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x2A01 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND OR SWAP1 SSTORE DUP4 SLOAD DUP4 MSTORE DUP2 DUP4 KECCAK256 DUP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH4 0xFFFFFFFF DUP12 DUP2 AND SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE DUP6 SLOAD DUP6 MSTORE DUP4 DUP6 KECCAK256 DUP4 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP3 DUP12 AND SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP4 SLOAD DUP4 MSTORE SWAP1 DUP3 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x951 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x910 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x5 SLOAD DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x2 ADD DUP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP2 ADD MLOAD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE ADD PUSH2 0x8F1 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH4 0xFFFFFFFF DUP1 DUP7 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH32 0xEB19E76B03B99EFF4D0329A19E44569C131F242C9590234F19B76F2C56A817A1 SWAP1 PUSH2 0x9C2 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ ISZERO PUSH2 0xA3A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AE1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0xA47 DUP4 PUSH2 0x1260 JUMP JUMPDEST PUSH2 0xA52 CALLER DUP5 DUP4 PUSH2 0x1BB4 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 CALLER DUP1 DUP7 MSTORE SWAP4 MSTORE SWAP3 KECCAK256 PUSH1 0x1 DUP4 ADD SLOAD SWAP1 SWAP2 PUSH2 0xA8E SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 ADDRESS DUP8 PUSH2 0x1DA3 JUMP JUMPDEST DUP1 SLOAD PUSH2 0xA9A SWAP1 DUP6 PUSH2 0x1E03 JUMP JUMPDEST DUP2 SSTORE DUP2 SLOAD PUSH2 0xAA8 SWAP1 DUP6 PUSH2 0x1E03 JUMP JUMPDEST DUP3 SSTORE PUSH1 0x40 MLOAD NUMBER SWAP1 DUP7 SWAP1 CALLER SWAP1 PUSH32 0x36AF321EC8D3C75236829C5317AFFD40DDB308863A1236D2D277A4025CCCEE1E SWAP1 PUSH2 0xAE0 SWAP1 DUP10 SWAP1 PUSH2 0x2A2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ ISZERO PUSH2 0xB39 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AE1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0xB47 DUP3 DUP3 PUSH2 0x1E66 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB8A JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xBC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBF3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP CALLER PUSH1 0x0 DUP1 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xD50 JUMPI DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0xC0F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP2 POP PUSH2 0xC21 DUP3 PUSH2 0x1260 JUMP JUMPDEST PUSH2 0xC2D DUP4 DUP4 PUSH1 0x0 PUSH2 0x1BB4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0xD47 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xD3E JUMPI PUSH2 0xC93 DUP2 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC7D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1E03 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC9F JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP4 MSTORE DUP4 MSTORE DUP1 DUP3 KECCAK256 DUP6 DUP4 MSTORE PUSH1 0x1 ADD SWAP1 SWAP3 MSTORE SWAP1 DUP2 KECCAK256 SSTORE DUP7 MLOAD DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xCE8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF75F3D433C6628E04E01A0BE1A2C6692A6011CE4B00389824CFA8B8A12F3C1C4 DUP5 NUMBER PUSH1 0x40 MLOAD PUSH2 0xD35 SWAP3 SWAP2 SWAP1 PUSH2 0x2AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xC30 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xBFB JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xDB2 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD6B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0xDAA JUMPI PUSH2 0xDAA DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD88 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD9D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1F3B JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xD54 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ ISZERO PUSH2 0xE00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AE1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD DUP4 DUP3 SSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xE5A JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 DUP3 ADD DUP4 SWAP1 SSTORE SWAP2 SWAP1 SWAP2 SSTORE ADD PUSH2 0xE2F JUMP JUMPDEST POP DUP3 SLOAD PUSH2 0xE67 SWAP1 DUP3 PUSH2 0x1FE0 JUMP JUMPDEST DUP4 SSTORE DUP1 ISZERO PUSH2 0xE88 JUMPI PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0xE88 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x203D JUMP JUMPDEST NUMBER DUP5 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2369DB1BAFEE945AEE5630782F4A170682E3F8188D8DC247A4C73EB8C9E692D2 DUP5 PUSH1 0x40 MLOAD PUSH2 0xEC3 SWAP2 SWAP1 PUSH2 0x2A2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF22 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF6B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x6E65772061646D696E203 PUSH1 0xAC SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x3B81CAF78FA51ECBC8ACB482FD7012A277B428D9B80F9D156E8A54107496CC40 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1016 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x6E6F742070656E64696E67 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x65DA1CFC2C2E81576AD96AFB24A581F8E109B7A403B35CBD3243A1C99EFDB9ED SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x10D5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x111A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x61646D696E203 PUSH1 0xCC SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x3B81CAF78FA51ECBC8ACB482FD7012A277B428D9B80F9D156E8A54107496CC40 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND DUP3 MSTORE SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x65DA1CFC2C2E81576AD96AFB24A581F8E109B7A403B35CBD3243A1C99EFDB9ED SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x11D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ ISZERO PUSH2 0x122F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AE1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x1258 SWAP1 DUP3 SWAP1 PUSH2 0x1E66 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT PUSH2 0x1281 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x2830 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1299 DUP4 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD SWAP1 SWAP2 POP PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP3 AND GT PUSH2 0x12BF JUMPI POP POP PUSH2 0x1396 JUMP JUMPDEST DUP2 SLOAD DUP1 PUSH2 0x12F2 JUMPI POP PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV DUP2 AND DUP4 SUB AND PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x136C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1336 SWAP1 DUP6 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x135F DUP6 PUSH2 0x134B DUP4 PUSH5 0xE8D4A51000 PUSH2 0x20C7 JUMP JUMPDEST DUP2 PUSH2 0x1352 JUMPI INVALID JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD SWAP2 SWAP1 DIV PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x1 SWAP3 DUP4 ADD SSTORE POP ADD PUSH2 0x130C JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13E5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x13EE DUP5 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD NUMBER PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND GT PUSH2 0x142D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x29CA JUMP JUMPDEST PUSH1 0x4 SLOAD DUP3 EQ PUSH2 0x144E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x2800 JUMP JUMPDEST NUMBER DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1477 JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP6 AND GT JUMPDEST PUSH2 0x1493 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL PUSH4 0xFFFFFFFF DUP8 AND MUL OR SWAP1 SSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x14F0 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x14CA JUMPI INVALID JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 DUP7 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD SWAP1 SWAP2 SSTORE POP PUSH1 0x1 ADD PUSH2 0x14B6 JUMP JUMPDEST POP DUP4 PUSH4 0xFFFFFFFF AND DUP6 PUSH32 0xBA2D8506275D684E80223910F1065A195EA279F37E27EB97AC24F4107EBA6CF9 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x152A SWAP3 SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1585 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x158E DUP6 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD NUMBER PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND GT DUP1 PUSH2 0x15CD JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD NUMBER PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND LT JUMPDEST PUSH2 0x15E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x2988 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP3 EQ PUSH2 0x160A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x2886 JUMP JUMPDEST NUMBER DUP6 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x162A JUMPI POP DUP5 PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND GT JUMPDEST PUSH2 0x1646 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x27D1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH4 0xFFFFFFFF DUP9 DUP2 AND SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 OR PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP3 DUP9 AND SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x16D6 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x16B0 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 DUP7 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD SWAP1 SWAP2 SSTORE POP PUSH1 0x1 ADD PUSH2 0x169C JUMP JUMPDEST POP DUP4 PUSH4 0xFFFFFFFF AND DUP6 PUSH4 0xFFFFFFFF AND DUP8 PUSH32 0x4F863DC93468ACF71FF8F5770599FBEAD4D0FF8EA6BD0C3251576F68FDAD0904 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1717 SWAP3 SWAP2 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x177F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1761 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17D5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x17E4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH2 0x1882 JUMPI PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x1819 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1856 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x185B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x187C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x2923 JUMP JUMPDEST POP PUSH2 0x1896 JUMP JUMPDEST PUSH2 0x1896 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER DUP5 PUSH2 0x203D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x60 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x18B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x18E2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP6 MSTORE SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP2 SLOAD PUSH1 0x1 DUP4 ADD SLOAD SWAP5 SWAP7 POP SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP1 PUSH2 0x1932 DUP10 PUSH2 0x208F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1A57 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH4 0xFFFFFFFF DUP4 AND DUP5 LT DUP1 ISZERO PUSH2 0x1967 JUMPI POP DUP5 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x19BD JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP9 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1994 SWAP1 PUSH4 0xFFFFFFFF DUP1 DUP8 AND DUP9 SWAP1 SUB SWAP2 SWAP1 PUSH2 0x20C7 AND JUMP JUMPDEST SWAP1 POP PUSH2 0x19B9 DUP7 PUSH2 0x19A9 DUP4 PUSH5 0xE8D4A51000 PUSH2 0x20C7 JUMP JUMPDEST DUP2 PUSH2 0x19B0 JUMPI INVALID JUMPDEST DUP5 SWAP2 SWAP1 DIV PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP1 DUP9 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x19EF SWAP1 PUSH2 0x19E7 SWAP1 DUP5 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST DUP9 SLOAD SWAP1 PUSH2 0x20C7 JUMP JUMPDEST DUP2 PUSH2 0x19F6 JUMPI INVALID JUMPDEST DIV DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A03 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1A37 DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC7D JUMPI INVALID JUMPDEST DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A43 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x1937 JUMP JUMPDEST POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A6D DUP2 PUSH2 0x1260 JUMP JUMPDEST PUSH2 0x1396 CALLER DUP3 PUSH1 0x1 PUSH2 0x1BB4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x1B0E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH2 0x1B49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B98 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1896 SWAP1 DUP5 SWAP1 PUSH2 0x2120 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1BAA DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x21D1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x4 SLOAD DUP2 PUSH2 0x1C42 JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C3A JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x2 ADD DUP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP10 DUP6 MSTORE PUSH1 0x7 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP7 DUP7 MSTORE DUP3 ADD SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 DUP3 ADD SSTORE ADD PUSH2 0x1BE2 JUMP JUMPDEST POP POP POP PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D9B JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x2 ADD DUP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP10 DUP6 MSTORE PUSH1 0x7 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP7 DUP7 MSTORE DUP3 ADD SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 SWAP1 DUP2 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x1CBA SWAP1 PUSH2 0x1CB3 SWAP1 DUP7 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST DUP9 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST DUP2 PUSH2 0x1CC1 JUMPI INVALID JUMPDEST DUP4 SLOAD SWAP2 SWAP1 DIV SWAP2 POP PUSH2 0x1CD3 SWAP1 DUP3 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST SWAP1 POP DUP7 PUSH2 0x1CE0 JUMPI DUP1 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SWAP1 SSTORE DUP7 DUP1 ISZERO PUSH2 0x1CF9 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1D90 JUMPI PUSH2 0x1D2A PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1D0E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 DUP4 PUSH2 0x1F3B JUMP JUMPDEST PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1D37 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP11 SWAP2 SWAP1 DUP13 AND SWAP1 PUSH32 0xF75F3D433C6628E04E01A0BE1A2C6692A6011CE4B00389824CFA8B8A12F3C1C4 SWAP1 PUSH2 0x1D87 SWAP1 DUP7 SWAP1 NUMBER SWAP1 PUSH2 0x2AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0x1C45 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1DFD SWAP1 DUP6 SWAP1 PUSH2 0x2120 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1E5D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD DUP4 GT ISZERO PUSH2 0x1EA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x28B5 JUMP JUMPDEST PUSH2 0x1EB1 DUP5 PUSH2 0x1260 JUMP JUMPDEST PUSH2 0x1EBD CALLER DUP6 PUSH1 0x1 PUSH2 0x1BB4 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x1EC9 SWAP1 DUP5 PUSH2 0x1FE0 JUMP JUMPDEST DUP2 SSTORE DUP2 SLOAD PUSH2 0x1ED7 SWAP1 DUP5 PUSH2 0x1FE0 JUMP JUMPDEST DUP3 SSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x1EF2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP6 PUSH2 0x203D JUMP JUMPDEST NUMBER DUP5 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2F25270A4D87BEA75DB541CDFE559334A275B4A233520ED6C0A2429667CCA94 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1F2D SWAP2 SWAP1 PUSH2 0x2A2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x1F53 JUMPI PUSH1 0x0 PUSH2 0x1F55 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7750C9F0 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2776 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2037 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1896 SWAP1 DUP5 SWAP1 PUSH2 0x2120 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND NUMBER DUP2 GT ISZERO PUSH2 0x20C2 JUMPI PUSH2 0x20BF NUMBER PUSH2 0x232C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20D6 JUMPI POP PUSH1 0x0 PUSH2 0x1E60 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x20E3 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1E5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B27 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2175 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B9B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1896 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1896 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B6E PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2212 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B01 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x221B DUP6 PUSH2 0x2375 JUMP JUMPDEST PUSH2 0x226C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x22AA JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x228B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x230C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2321 DUP3 DUP3 DUP7 PUSH2 0x237B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP3 LT PUSH2 0x2371 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B48 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x238A JUMPI POP DUP2 PUSH2 0x1BAD JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x239A JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23E4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x23CC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2411 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x20C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2447 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x245E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x2478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x20C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24A4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1BAD DUP3 PUSH2 0x241F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x24C4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x24CD DUP7 PUSH2 0x241F JUMP JUMPDEST SWAP5 POP PUSH2 0x24DB PUSH1 0x20 DUP8 ADD PUSH2 0x247F JUMP JUMPDEST SWAP4 POP PUSH2 0x24E9 PUSH1 0x40 DUP8 ADD PUSH2 0x247F JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2504 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2510 DUP9 DUP3 DUP10 ADD PUSH2 0x2436 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2533 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2549 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2555 DUP6 DUP3 DUP7 ADD PUSH2 0x2436 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2572 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x258B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x259B PUSH1 0x20 DUP5 ADD PUSH2 0x241F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25B6 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x25D9 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x25F6 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2616 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x2626 PUSH1 0x20 DUP7 ADD PUSH2 0x247F JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2641 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x264D DUP8 DUP3 DUP9 ADD PUSH2 0x2436 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2670 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH2 0x24DB PUSH1 0x20 DUP8 ADD PUSH2 0x247F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26AF JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2693 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2712 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x26ED JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x273D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x20 DUP4 MUL DUP1 DUP6 PUSH1 0x40 DUP6 ADD CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP1 DUP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1BAD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2680 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x6164643A20696E76616C6964207374616B6520746F6B656E0000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x72656E65773A20696E76616C696420626C6F636B73 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0xEAE0C8C2E8CA7440D2DCECC2D8D2C840D8CADCCEE8D PUSH1 0x53 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x1A5B9D985B1A59081C1BDBDB081A59 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0xC2C8C87440D2DCECC2D8D2C840D8CADCCEE8D PUSH1 0x6B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0xE4CADCCAEE7440D2DCECC2D8D2C840D8CADCCEE8D PUSH1 0x5B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x77697468647261773A20696E73756666696369656E7420616D6F756E74000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x7570646174653A20696E76616C696420656E6420626C6F636B00000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x7472616E736665722072657761726420746F6B656E206661696C656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x1859190E88191D5C1B1A58D85D1959081C1BDBDB PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x72656E65773A20696E76616C696420706F6F6C20737461746520746F2072656E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6577 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x7570646174653A20706F6F6C20616C726561647920656E646564000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x6164643A20696E76616C696420626C6F636B73 PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF DUP7 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2A7D SWAP1 DUP4 ADD DUP6 PUSH2 0x2680 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x2A8F DUP2 DUP6 PUSH2 0x2680 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP3 MSTORE PUSH1 0x60 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2AB6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2680 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2AC8 DUP2 DUP6 PUSH2 0x2680 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP INVALID MSTORE PUSH6 0x656E7472616E PUSH4 0x79477561 PUSH19 0x643A207265656E7472616E742063616C6C0041 PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F722063616C6C53616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7753616665436173743A KECCAK256 PUSH23 0x616C756520646F65736E27742066697420696E20333220 PUSH3 0x697473 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A2646970667358221220C5123B PUSH1 0xDF CALL DUP13 SUB NOT 0xA6 0xD 0xE1 0xA9 SMOD 0xC5 PUSH28 0xE74F3DB5BFA5928E7B14949E5EB97BE864736F6C6343000706003300 ",
							"sourceMap": "1064:22360:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3529:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17792:722;;;;;;;;;;-1:-1:-1;17792:722:8;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;3169:42::-;;;;;;;;;;-1:-1:-1;3169:42:8;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;127:27:10:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;16659:1032:8:-;;;;;;;;;;-1:-1:-1;16659:1032:8;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;6404:1230::-;;;;;;;;;;-1:-1:-1;6404:1230:8;;;;;:::i;:::-;;:::i;:::-;;3254:48;;;;;;;;;;;;;:::i;10703:821::-;;;;;;;;;;-1:-1:-1;10703:821:8;;;;;:::i;:::-;;:::i;11719:155::-;;;;;;;;;;-1:-1:-1;11719:155:8;;;;;:::i;:::-;;:::i;13318:1414::-;;;;;;;;;;-1:-1:-1;13318:1414:8;;;;;:::i;:::-;;:::i;12410:742::-;;;;;;;;;;-1:-1:-1;12410:742:8;;;;;:::i;:::-;;:::i;661:203:10:-;;;;;;;;;;-1:-1:-1;661:203:10;;;;;:::i;:::-;;:::i;1398:214::-;;;;;;;;;;;;;:::i;1045:244::-;;;;;;;;;;-1:-1:-1;1045:244:10;;;;;:::i;:::-;;:::i;3464:29:8:-;;;;;;;;;;-1:-1:-1;3464:29:8;;;;;:::i;:::-;;:::i;12016:135::-;;;;;;;;;;-1:-1:-1;12016:135:8;;;;;:::i;:::-;;:::i;18840:968::-;;;;;;;;;;-1:-1:-1;18840:968:8;;;;;:::i;:::-;;:::i;9560:902::-;;;;;;;;;;-1:-1:-1;9560:902:8;;;;;:::i;:::-;;:::i;8082:1139::-;;;;;;;;;;-1:-1:-1;8082:1139:8;;;;;:::i;:::-;;:::i;16434:156::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;5580:454::-;;;;;;;;;;-1:-1:-1;5580:454:8;;;;;:::i;:::-;;:::i;14927:1442::-;;;;;;;;;;-1:-1:-1;14927:1442:8;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;18632:141::-;;;;;;;;;;-1:-1:-1;18632:141:8;;;;;:::i;:::-;;:::i;100:20:10:-;;;;;;;;;;;;;:::i;3529:34:8:-;;;;:::o;17792:722::-;17927:14;18092;;;:8;:14;;;;;;;;-1:-1:-1;;;;;18092:24:8;;;;;;;;;18136:11;;18191:12;:19;18136:11;;17956:33;;;;18092:24;18177:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18177:34:8;-1:-1:-1;18258:12:8;:19;18158:53;;-1:-1:-1;18244:34:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18244:34:8;;18222:56;;18294:9;18289:218;18313:12;:19;18309:23;;18289:218;;;18376:22;;;;:19;;;:22;;;;;:38;18354:19;;:16;;18396:1;;18354:19;;;;;;;;;;;:60;;;;;18454:4;:19;;:22;18474:1;18454:22;;;;;;;;;;;:41;;;18429:19;18449:1;18429:22;;;;;;;;;;;;;;;;;:66;18334:3;;18289:218;;;;17792:722;;;;;;:::o;3169:42::-;;;;;;;;;;;;;;;:::o;127:27:10:-;;;-1:-1:-1;;;;;127:27:10;;:::o;16659:1032:8:-;16776:18;17075:14;;;:8;:14;;;;;17181:15;;17211;;;;17373:12;:19;17181:15;;-1:-1:-1;;;;;17211:15:8;;;17241;-1:-1:-1;;;17241:15:8;;;;;-1:-1:-1;;;17271:13:8;;;;;-1:-1:-1;;;17299:20:8;;;;;;;16941:32;;;;17359:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17359:34:8;-1:-1:-1;17439:12:8;:19;17341:52;;-1:-1:-1;17425:34:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17425:34:8;;17404:55;;17475:9;17470:214;17494:12;:19;17490:23;;17470:214;;;17556:22;;;;:19;;;:22;;;;;:37;17535:18;;:15;;17576:1;;17535:18;;;;;;;;;;;:58;;;;;17632:4;:19;;:22;17652:1;17632:22;;;;;;;;;;;:40;;;17608:18;17627:1;17608:21;;;;;;;;;;;;;;;;;:64;17515:3;;17470:214;;;;16659:1032;;;;;;;;;;:::o;6404:1230::-;462:5:10;;-1:-1:-1;;;;;462:5:10;448:10;:19;440:42;;;;;-1:-1:-1;;;440:42:10;;;;;;;;;;;;-1:-1:-1;;;440:42:10;;;;;;;;;;;;;;;-1:-1:-1;;;;;6608:23:8;::::1;;::::0;;;:10:::1;:23;::::0;;;;;::::1;;6607:24;6599:57;;;;-1:-1:-1::0;;;6599:57:8::1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;6675:25:8;::::1;6667:62;;;;-1:-1:-1::0;;;6667:62:8::1;;;;;;;:::i;:::-;6762:12;:19:::0;:46;::::1;6740:115;;;;-1:-1:-1::0;;;6740:115:8::1;;;;;;;:::i;:::-;6904:12;6890:11;:26;;;:53;;;;;6932:11;6920:23;;:9;:23;;;6890:53;6868:122;;;;-1:-1:-1::0;;;6868:122:8::1;;;;;;;:::i;:::-;7012:10;::::0;;7003:20:::1;::::0;;;:8:::1;:20;::::0;;;;;:31:::1;::::0;;::::1;:45:::0;;-1:-1:-1;;;;;;7003:45:8::1;-1:-1:-1::0;;;;;7003:45:8;::::1;;::::0;;7068:10;;7059:20;;;;;:31;::::1;:45:::0;;-1:-1:-1;;;;7059:45:8::1;-1:-1:-1::0;;;7059:45:8::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;7124:10;;7115:20;;;;;:29;::::1;:41:::0;;-1:-1:-1;;;;7115:41:8::1;-1:-1:-1::0;;;7115:41:8;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;7176:10;;7167:20;;;;;:36:::1;:50:::0;;-1:-1:-1;;;;;7167:50:8::1;-1:-1:-1::0;;;7167:50:8;;::::1;::::0;;;::::1;::::0;;;7230:246:::1;7250:27:::0;;::::1;7230:246;;;7340:124;;;;;;;;7390:16;;7407:1;7390:19;;;;;;;;::::0;;::::1;::::0;;;::::1;;7340:124:::0;;-1:-1:-1;7447:1:8::1;7340:124:::0;;::::1;::::0;;;7308:10:::1;::::0;7299:20;;:8:::1;:20:::0;;;;;;:38;;;:35:::1;;:38:::0;;;;;:165;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;7279:3:::1;7230:246;;;-1:-1:-1::0;7488:10:8::1;:12:::0;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;;;;;7513:23:8;::::1;7488:10;7513:23:::0;;;:10:::1;:23;::::0;;;;;;:30;;-1:-1:-1;;7513:30:8::1;::::0;;::::1;::::0;;;7561:65;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;7609:16;;;;7561:65:::1;:::i;:::-;;;;;;;;6404:1230:::0;;;;;:::o;3254:48::-;;;:::o;10703:821::-;1688:1:4;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2269:63:4;;;;;;;;;;;;;;;1688:1;2407:18;;10896:23:8::1;10914:4:::0;10896:17:::1;:23::i;:::-;10930:51;10948:10;10960:4;10966:14;10930:17;:51::i;:::-;10994:21;11018:14:::0;;;:8:::1;:14;::::0;;;;;;;11067:8:::1;:14:::0;;;;;11082:10:::1;11067:26:::0;;;;;;;11147:15:::1;::::0;::::1;::::0;11067:26;;11137:129:::1;::::0;-1:-1:-1;;;;;11147:15:8::1;::::0;11228:4:::1;11248:7:::0;11137:43:::1;:129::i;:::-;11369:11:::0;;:24:::1;::::0;11385:7;11369:15:::1;:24::i;:::-;11355:38:::0;;11422:15;;:28:::1;::::0;11442:7;11422:19:::1;:28::i;:::-;11404:46:::0;;11468:48:::1;::::0;11494:12:::1;::::0;11488:4;;11476:10:::1;::::0;11468:48:::1;::::0;::::1;::::0;11508:7;;11468:48:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;;1645:1:4;2580:7;:22;-1:-1:-1;;;10703:821:8:o;11719:155::-;1688:1:4;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2269:63:4;;;;;;;;;;;;;;;1688:1;2407:18;;11842:24:8::1;11852:4:::0;11858:7;11842:9:::1;:24::i;:::-;-1:-1:-1::0;;1645:1:4;2580:7;:22;11719:155:8:o;13318:1414::-;13403:24;13430:12;13403:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13403:39:8;;;;;;;;;;;;;;;;;;;;;;;13453:29;13499:7;:14;13485:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13485:29:8;-1:-1:-1;13453:61:8;-1:-1:-1;13543:10:8;13525:15;;13588:929;13608:16;;;13588:929;;;13652:5;;13658:1;13652:8;;;;;;;;;;;;;13646:14;;13675:22;13693:3;13675:17;:22::i;:::-;13766:38;13784:7;13793:3;13798:5;13766:17;:38::i;:::-;13826:9;13821:685;13845:7;:14;13841:1;:18;13821:685;;;13885:14;13902:13;;;:8;:13;;;;;;;;-1:-1:-1;;;;;13902:22:8;;;;;;;;;:62;;;:59;;:62;;;;;:100;14025:10;;14021:470;;14078:27;14098:6;14078:12;14091:1;14078:15;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;14060:12;14073:1;14060:15;;;;;;;;;;;;;;;;;;:45;;;;14239:1;14128:13;;;:8;:13;;;;;;-1:-1:-1;;;;;14128:22:8;;;;;;;;;:66;;;:63;;:66;;;;;;:112;14366:10;;:7;;14192:1;;14366:10;;;;;;;;;;;;-1:-1:-1;;;;;14268:203:8;14336:3;14302:7;-1:-1:-1;;;;;14268:203:8;;14403:6;14436:12;14268:203;;;;;;;:::i;:::-;;;;;;;;14021:470;-1:-1:-1;13861:3:8;;13821:685;;;-1:-1:-1;13626:3:8;;13588:929;;;;14534:9;14529:196;14553:12;:19;14549:1;:23;14529:196;;;14616:1;14598:12;14611:1;14598:15;;;;;;;;;;;;;;:19;14594:120;;;14638:60;14660:7;14668:1;14660:10;;;;;;;;;;;;;;14673:7;14682:12;14695:1;14682:15;;;;;;;;;;;;;;14638:11;:60::i;:::-;14574:3;;14529:196;;;;13318:1414;;;;;;:::o;12410:742::-;1688:1:4;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2269:63:4;;;;;;;;;;;;;;;1688:1;2407:18;;12493:21:8::1;12517:14:::0;;;:8:::1;:14;::::0;;;;;;;12566:8:::1;:14:::0;;;;;12581:10:::1;12566:26:::0;;;;;;;12620:11;;12644:15;;;12517:14;;12566:26;;12620:11;12670:228:::1;12694:12;:19:::0;12690:23;::::1;12670:228;;;12735:33;12771:22:::0;;;:19:::1;::::0;;::::1;:22;::::0;;;;12808:29;;::::1;:33:::0;;;12856:30;;;;12715:3:::1;12670:228;;;-1:-1:-1::0;12928:15:8;;:27:::1;::::0;12948:6;12928:19:::1;:27::i;:::-;12910:45:::0;;12972:10;;12968:102:::1;;13009:15;::::0;::::1;::::0;12999:59:::1;::::0;-1:-1:-1;;;;;13009:15:8::1;13039:10;13051:6:::0;12999:39:::1;:59::i;:::-;13123:12;13117:4;13105:10;-1:-1:-1::0;;;;;13087:57:8::1;;13137:6;13087:57;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;1645:1:4;2580:7;:22;-1:-1:-1;;12410:742:8:o;661:203:10:-;462:5;;-1:-1:-1;;;;;462:5:10;448:10;:19;440:42;;;;;-1:-1:-1;;;440:42:10;;;;;;;;;;;;-1:-1:-1;;;440:42:10;;;;;;;;;;;;;;;-1:-1:-1;;;;;738:22:10;::::1;730:46;;;::::0;;-1:-1:-1;;;730:46:10;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;730:46:10;;;;;;;;;;;;;::::1;;792:30;::::0;;-1:-1:-1;;;;;792:30:10;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;::::1;833:12;:23:::0;;-1:-1:-1;;;;;;833:23:10::1;-1:-1:-1::0;;;;;833:23:10;;;::::1;::::0;;;::::1;::::0;;661:203::o;1398:214::-;1446:12;;-1:-1:-1;;;;;1446:12:10;1462:10;1446:26;1438:50;;;;;-1:-1:-1;;;1438:50:10;;;;;;;;;;;;-1:-1:-1;;;1438:50:10;;;;;;;;;;;;;;;1517:12;;;1531:5;1504:33;;;-1:-1:-1;;;;;1517:12:10;;;1504:33;;1531:5;;;;1504:33;;;;;;;;;;;;;;;;1556:12;;;;1548:20;;-1:-1:-1;;;;;;1548:20:10;;;-1:-1:-1;;;;;1556:12:10;;1548:20;;;;1579:25;;;1398:214::o;1045:244::-;462:5;;-1:-1:-1;;;;;462:5:10;448:10;:19;440:42;;;;;-1:-1:-1;;;440:42:10;;;;;;;;;;;;-1:-1:-1;;;440:42:10;;;;;;;;;;;;;;;-1:-1:-1;;;;;1129:22:10;::::1;1121:42;;;::::0;;-1:-1:-1;;;1121:42:10;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1121:42:10;;;;;;;;;;;;;::::1;;1179:30;::::0;;-1:-1:-1;;;;;1179:30:10;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;::::1;1248:5;::::0;1225:29:::1;::::0;;-1:-1:-1;;;;;1225:29:10;;::::1;::::0;;1248:5;;::::1;1225:29;::::0;::::1;::::0;;;::::1;::::0;;;;;;;;::::1;1265:5;:16:::0;;-1:-1:-1;;;;;;1265:16:10::1;-1:-1:-1::0;;;;;1265:16:10;;;::::1;::::0;;;::::1;::::0;;1045:244::o;3464:29:8:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3464:29:8;;-1:-1:-1;3464:29:8;:::o;12016:135::-;1688:1:4;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2269:63:4;;;;;;;;;;;;;;;1688:1;2407:18;;12109:14:8::1;::::0;;;:8:::1;:14;::::0;;;;;;;12124:10:::1;12109:26:::0;;;;;;;:33;12093:50:::1;::::0;12103:4;;12093:9:::1;:50::i;:::-;-1:-1:-1::0;1645:1:4;2580:7;:22;12016:135:8:o;18840:968::-;18923:10;;18916:4;:17;18908:45;;;;-1:-1:-1;;;18908:45:8;;;;;;;:::i;:::-;18964:21;18988:14;;;:8;:14;;;;;;19041:31;18997:4;19041:25;:31::i;:::-;19109:20;;;;19013:59;;-1:-1:-1;19109:20:8;-1:-1:-1;;;19109:20:8;;;;;19087:42;;;;19083:55;;19131:7;;;;19083:55;19170:15;;19200:16;19196:111;;-1:-1:-1;19233:20:8;;;;:41;;;;;;-1:-1:-1;;;19233:41:8;-1:-1:-1;;;;;19233:41:8;;;;;;;;;19289:7;;19196:111;19361:20;;;;;-1:-1:-1;;;19361:20:8;;;;;19340:41;;19317:64;:20;19392:357;19416:12;:19;19412:23;;19392:357;;;19457:33;19493:22;;;:19;;;:22;;;;;19564:25;;19493:22;;19457:33;19547:43;;:12;;:16;:43::i;:::-;19530:60;-1:-1:-1;19636:101:8;19711:11;19687:21;19530:60;1292:4;19687:10;:21::i;:::-;:35;;;;;19636:28;;;;;19687:35;;19636:32;:101::i;:::-;19605:28;;;;:132;-1:-1:-1;19437:3:8;19392:357;;;-1:-1:-1;;;19759:20:8;;;;:41;;;;;;-1:-1:-1;;;19759:41:8;-1:-1:-1;;;;;19759:41:8;;;;;;;;;18840:968;;:::o;9560:902::-;462:5:10;;-1:-1:-1;;;;;462:5:10;448:10;:19;440:42;;;;;-1:-1:-1;;;440:42:10;;;;;;;;;;;;-1:-1:-1;;;440:42:10;;;;;;;;;;;;;;;9722:23:8::1;9740:4;9722:17;:23::i;:::-;9758:21;9782:14:::0;;;:8:::1;:14;::::0;;;;9874:13:::1;::::0;::::1;::::0;9890:12:::1;-1:-1:-1::0;;;9874:13:8;;::::1;;;:28;9866:67;;;;-1:-1:-1::0;;;9866:67:8::1;;;;;;;:::i;:::-;9966:12;:19:::0;:46;::::1;9944:118;;;;-1:-1:-1::0;;;9944:118:8::1;;;;;;;:::i;:::-;10107:12;10095:9;:24;;;:55;;;;-1:-1:-1::0;10135:15:8::1;::::0;::::1;::::0;::::1;-1:-1:-1::0;;;10135:15:8;;::::1;::::0;::::1;10123:27:::0;;::::1;;10095:55;10073:130;;;;-1:-1:-1::0;;;10073:130:8::1;;;;;;;:::i;:::-;10216:13;::::0;::::1;:25:::0;;-1:-1:-1;;;;10216:25:8::1;-1:-1:-1::0;;;10216:25:8::1;::::0;::::1;;;::::0;;-1:-1:-1;10252:140:8::1;10272:27:::0;;::::1;10252:140;;;10361:16;;10378:1;10361:19;;;;;;;10321:22;::::0;;;:19:::1;::::0;::::1;10361;10321:22:::0;;;;;;;10361:19;::::1;::::0;;;::::1;;10321:59:::0;;;-1:-1:-1;10301:3:8::1;;10252:140;;;;10426:9;10409:45;;10420:4;10409:45;10437:16;;10409:45;;;;;;;:::i;:::-;;;;;;;;493:1:10;9560:902:8::0;;;;:::o;8082:1139::-;462:5:10;;-1:-1:-1;;;;;462:5:10;448:10;:19;440:42;;;;;-1:-1:-1;;;440:42:10;;;;;;;;;;;;-1:-1:-1;;;440:42:10;;;;;;;;;;;;;;;8272:23:8::1;8290:4;8272:17;:23::i;:::-;8308:21;8332:14:::0;;;:8:::1;:14;::::0;;;;8438:15:::1;::::0;::::1;::::0;8456:12:::1;-1:-1:-1::0;;;8438:15:8;;::::1;;;:30;::::0;:62:::1;;-1:-1:-1::0;8472:13:8::1;::::0;::::1;::::0;8488:12:::1;-1:-1:-1::0;;;8472:13:8;;::::1;;;:28;8438:62;8416:146;;;;-1:-1:-1::0;;;8416:146:8::1;;;;;;;:::i;:::-;8633:12;:19:::0;:46;::::1;8611:117;;;;-1:-1:-1::0;;;8611:117:8::1;;;;;;;:::i;:::-;8775:12;8761:11;:26;;;:53;;;;;8803:11;8791:23;;:9;:23;;;8761:53;8739:124;;;;-1:-1:-1::0;;;8739:124:8::1;;;;;;;:::i;:::-;8876:15;::::0;::::1;:29:::0;;-1:-1:-1;;;;8876:29:8::1;-1:-1:-1::0;;;8876:29:8::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;8916:25:8::1;-1:-1:-1::0;;;8916:25:8;;::::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;;8952:34:8::1;-1:-1:-1::0;;;8952:34:8;;;::::1;;::::0;;-1:-1:-1;8999:140:8::1;9019:27:::0;;::::1;8999:140;;;9108:16;;9125:1;9108:19;;;;;;;9068:22;::::0;;;:19:::1;::::0;::::1;9108;9068:22:::0;;;;;;;9108:19;::::1;::::0;;;::::1;;9068:59:::0;;;-1:-1:-1;9048:3:8::1;;8999:140;;;;9185:9;9156:57;;9172:11;9156:57;;9166:4;9156:57;9196:16;;9156:57;;;;;;;:::i;:::-;;;;;;;;493:1:10;8082:1139:8::0;;;;;:::o;16434:156::-;16529:16;16570:12;16563:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16563:19:8;;;;;;;;;;;;;;;;;;;;;;;16434:156;:::o;5580:454::-;462:5:10;;-1:-1:-1;;;;;462:5:10;448:10;:19;440:42;;;;;-1:-1:-1;;;440:42:10;;;;;;;;;;;;-1:-1:-1;;;440:42:10;;;;;;;;;;;;;;;5698:21:8::1;5732:12;5745:16;5732:30;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;5732:30:8::1;::::0;-1:-1:-1;5778:27:8;5774:253:::1;;5823:12;5841:10;-1:-1:-1::0;;;;;5841:15:8::1;5864:6;5841:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5822:53;;;5898:7;5890:48;;;;-1:-1:-1::0;;;5890:48:8::1;;;;;;;:::i;:::-;5774:253;;;;5971:44;-1:-1:-1::0;;;;;5971:24:8;::::1;5996:10;6008:6:::0;5971:24:::1;:44::i;:::-;493:1:10;5580:454:8::0;;:::o;14927:1442::-;15114:12;:19;15048:24;;15114:19;15154:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15154:28:8;-1:-1:-1;15193:21:8;15217:14;;;:8;:14;;;;;;;;15266:8;:14;;;;;-1:-1:-1;;;;;15266:21:8;;;;;;;;;15320:15;;15377:20;;;;15144:38;;-1:-1:-1;15217:14:8;;15266:21;;-1:-1:-1;;;15377:20:8;;;;;;15436:31;15217:14;15436:25;:31::i;:::-;15408:59;;15483:9;15478:884;15502:13;15498:1;:17;15478:884;;;15537:26;15566:40;;;:37;;;:40;;;;;:76;;;15661:41;;;;-1:-1:-1;15661:61:8;;;;-1:-1:-1;15706:16:8;;;15661:61;15657:366;;;15743:14;15830:22;;;:19;;;:22;;;;;:37;15760:108;;15761:41;;;;;;;;15830:37;15760:69;:108;:::i;:::-;15743:125;-1:-1:-1;15908:99:8;15977:11;15953:21;15743:125;1292:4;15953:10;:21::i;:::-;:35;;;;;15908:18;;15953:35;;15908:22;:99::i;:::-;15887:120;;15657:366;;16156:22;;;;:19;;;;:22;;;;;;:41;;1292:4;;16069:170;;16107:113;;:18;;:22;:113::i;:::-;16069:11;;;:15;:170::i;:::-;:199;;;;;;16039:7;16047:1;16039:10;;;;;;;;;;;;;:229;;;;;16296:54;16311:4;:19;;:22;16331:1;16311:22;;;;;;;;;;;:38;;;16296:7;16304:1;16296:10;;;;;;;:54;16283:7;16291:1;16283:10;;;;;;;;;;;;;;;;;:67;-1:-1:-1;15517:3:8;;15478:884;;;;14927:1442;;;;;;;;;;:::o;18632:141::-;18690:23;18708:4;18690:17;:23::i;:::-;18724:41;18742:10;18754:4;18760;18724:17;:41::i;100:20:10:-;;;-1:-1:-1;;;;;100:20:10;;:::o;1348:613:2:-;1713:10;;;1712:62;;-1:-1:-1;1729:39:2;;;-1:-1:-1;;;1729:39:2;;1753:4;1729:39;;;;-1:-1:-1;;;;;1729:39:2;;;;;;;;;:15;;;;;;:39;;;;;;;;;;;;;;;:15;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1729:39:2;:44;1712:62;1704:150;;;;-1:-1:-1;;;1704:150:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1891:62;;;-1:-1:-1;;;;;1891:62:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:62:2;-1:-1:-1;;;1891:62:2;;;1864:90;;1884:5;;1864:19;:90::i;3581:193:3:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;;:::o;20662:2053:8:-;20790:18;20811:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;20811:19:8;;;;;;;;;:26;20872:12;:19;20908:15;20904:583;;21184:9;21179:276;21203:13;21199:1;:17;21179:276;;;21345:14;;;;:8;:14;;;;;;;;:54;;;:51;;:54;;;;;:94;;;;;21242:14;;;:8;:14;;;;;-1:-1:-1;;;;;21242:19:8;;;;;;;;;:59;;;:56;;:59;;;;;:100;;:197;21218:3;21179:276;;;;21469:7;;;;20904:583;21504:9;21499:1209;21523:13;21519:1;:17;21499:1209;;;21558:29;21590:14;;;:8;:14;;;;;;;;:50;;;:47;;:50;;;;;:86;;;;;21727:14;;;:8;:14;;;;;-1:-1:-1;;;;;21727:19:8;;;;;;;;;:55;;;:52;;:55;;;;;;21998:29;;;;21590:86;;21727:55;;1292:4;;21939:104;;21972:56;;21590:86;;21972:25;:56::i;:::-;21939:10;;:14;:104::i;:::-;:116;;;;;22094:26;;21939:116;;;;-1:-1:-1;22081:40:8;;21939:116;;22081:12;:40::i;:::-;22070:51;;22167:13;:28;;22187:8;22167:28;;;22183:1;22167:28;22138:57;;22296:29;;;:53;;;22370:13;:29;;;;;22398:1;22387:8;:12;22370:29;22366:331;;;22420:54;22442:12;22455:1;22442:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;22442:15:8;22460:3;22465:8;22420:11;:54::i;:::-;22581:12;22594:1;22581:15;;;;;;;;;;;;;;;;;;22498:183;;-1:-1:-1;;;;;22581:15:8;;;;22554:4;;22498:183;;;;;;;;22619:8;;22650:12;;22498:183;:::i;:::-;;;;;;;;22366:331;-1:-1:-1;;;21538:3:8;;21499:1209;;;;20662:2053;;;;;:::o;885:203:2:-;1012:68;;;-1:-1:-1;;;;;1012:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1012:68:2;-1:-1:-1;;;1012:68:2;;;985:96;;1005:5;;985:19;:96::i;:::-;885:203;;;;:::o;2690:175:0:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;-1:-1:-1;2690:175:0;;;;;:::o;19929:631:8:-;19999:21;20023:14;;;:8;:14;;;;;;;;20072:8;:14;;;;;20087:10;20072:26;;;;;;;;20117:11;;:22;-1:-1:-1;20117:22:8;20109:64;;;;-1:-1:-1;;;20109:64:8;;;;;;;:::i;:::-;20229:23;20247:4;20229:17;:23::i;:::-;20263:41;20281:10;20293:4;20299;20263:17;:41::i;:::-;20331:11;;:24;;20347:7;20331:15;:24::i;:::-;20317:38;;20384:15;;:28;;20404:7;20384:19;:28::i;:::-;20366:46;;20435:15;;;;20425:60;;-1:-1:-1;;;;;20435:15:8;20465:10;20477:7;20425:39;:60::i;:::-;20530:12;20524:4;20512:10;-1:-1:-1;;;;;20503:49:8;;20544:7;20503:49;;;;;;:::i;:::-;;;;;;;;19929:631;;;;:::o;23167:254::-;23294:13;-1:-1:-1;;;;;23310:21:8;;;:35;;23344:1;23310:35;;;23334:7;23310:35;23294:51;;23356:12;-1:-1:-1;;;;;23356:17:8;;23381:5;23388;23395:8;23405:7;23356:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23167:254;;;;:::o;3136:155:0:-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:0;;;3136:155::o;704:175:2:-;813:58;;;-1:-1:-1;;;;;813:58:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;813:58:2;-1:-1:-1;;;813:58:2;;;786:86;;806:5;;786:19;:86::i;22851:240:8:-;22950:13;22990:14;;;:8;:14;;;;;:23;;;-1:-1:-1;;;22990:23:8;;;;23037:12;23028:21;;23024:59;;;23060:23;:12;:21;:23::i;:::-;23051:32;;23024:59;22851:240;;;:::o;3538:215:0:-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:0;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2967:751:2;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:2;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:2;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:2;3616:85;;;;-1:-1:-1;;;3616:85:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4608:523:3;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:3;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:3:o;2017:176:5:-;2073:6;2107:5;2099;:13;2091:65;;;;-1:-1:-1;;;2091:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2180:5:5;2017:176::o;726:413:3:-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:3;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:175:11;84:20;;-1:-1:-1;;;;;133:31:11;;123:42;;113:2;;179:1;176;169:12;194:404;;;327:3;320:4;312:6;308:17;304:27;294:2;;352:8;342;335:26;294:2;-1:-1:-1;382:20:11;;425:18;414:30;;411:2;;;464:8;454;447:26;411:2;508:4;500:6;496:17;484:29;;571:3;564:4;556;548:6;544:17;536:6;532:30;528:41;525:50;522:2;;;588:1;585;578:12;522:2;284:314;;;;;:::o;603:165::-;672:20;;732:10;721:22;;711:33;;701:2;;758:1;755;748:12;773:198;;885:2;873:9;864:7;860:23;856:32;853:2;;;906:6;898;891:22;853:2;934:31;955:9;934:31;:::i;976:688::-;;;;;;1172:3;1160:9;1151:7;1147:23;1143:33;1140:2;;;1194:6;1186;1179:22;1140:2;1222:31;1243:9;1222:31;:::i;:::-;1212:41;;1272:39;1307:2;1296:9;1292:18;1272:39;:::i;:::-;1262:49;;1330:39;1365:2;1354:9;1350:18;1330:39;:::i;:::-;1320:49;;1420:2;1409:9;1405:18;1392:32;1447:18;1439:6;1436:30;1433:2;;;1484:6;1476;1469:22;1433:2;1528:76;1596:7;1587:6;1576:9;1572:22;1528:76;:::i;:::-;1130:534;;;;-1:-1:-1;1130:534:11;;-1:-1:-1;1623:8:11;;1502:102;1130:534;-1:-1:-1;;;1130:534:11:o;1669:463::-;;;1816:2;1804:9;1795:7;1791:23;1787:32;1784:2;;;1837:6;1829;1822:22;1784:2;1882:9;1869:23;1915:18;1907:6;1904:30;1901:2;;;1952:6;1944;1937:22;1901:2;1996:76;2064:7;2055:6;2044:9;2040:22;1996:76;:::i;:::-;2091:8;;1970:102;;-1:-1:-1;1774:358:11;-1:-1:-1;;;;1774:358:11:o;2137:190::-;;2249:2;2237:9;2228:7;2224:23;2220:32;2217:2;;;2270:6;2262;2255:22;2217:2;-1:-1:-1;2298:23:11;;2207:120;-1:-1:-1;2207:120:11:o;2332:266::-;;;2461:2;2449:9;2440:7;2436:23;2432:32;2429:2;;;2482:6;2474;2467:22;2429:2;2523:9;2510:23;2500:33;;2552:40;2588:2;2577:9;2573:18;2552:40;:::i;:::-;2542:50;;2419:179;;;;;:::o;2603:258::-;;;2732:2;2720:9;2711:7;2707:23;2703:32;2700:2;;;2753:6;2745;2738:22;2700:2;-1:-1:-1;;2781:23:11;;;2851:2;2836:18;;;2823:32;;-1:-1:-1;2690:171:11:o;2866:429::-;;;;3009:2;2997:9;2988:7;2984:23;2980:32;2977:2;;;3030:6;3022;3015:22;2977:2;3071:9;3058:23;3048:33;;3128:2;3117:9;3113:18;3100:32;3090:42;;3182:2;3171:9;3167:18;3154:32;3229:5;3222:13;3215:21;3208:5;3205:32;3195:2;;3256:6;3248;3241:22;3195:2;3284:5;3274:15;;;2967:328;;;;;:::o;3300:605::-;;;;;3480:2;3468:9;3459:7;3455:23;3451:32;3448:2;;;3501:6;3493;3486:22;3448:2;3542:9;3529:23;3519:33;;3571:39;3606:2;3595:9;3591:18;3571:39;:::i;:::-;3561:49;;3661:2;3650:9;3646:18;3633:32;3688:18;3680:6;3677:30;3674:2;;;3725:6;3717;3710:22;3674:2;3769:76;3837:7;3828:6;3817:9;3813:22;3769:76;:::i;:::-;3438:467;;;;-1:-1:-1;3864:8:11;-1:-1:-1;;;;3438:467:11:o;3910:680::-;;;;;;4106:3;4094:9;4085:7;4081:23;4077:33;4074:2;;;4128:6;4120;4113:22;4074:2;4169:9;4156:23;4146:33;;4198:39;4233:2;4222:9;4218:18;4198:39;:::i;4595:443::-;;4692:5;4686:12;4719:6;4714:3;4707:19;4745:4;4774:2;4769:3;4765:12;4758:19;;4811:2;4804:5;4800:14;4832:3;4844:169;4858:6;4855:1;4852:13;4844:169;;;4919:13;;4907:26;;4953:12;;;;4988:15;;;;4880:1;4873:9;4844:169;;;-1:-1:-1;5029:3:11;;4662:376;-1:-1:-1;;;;;4662:376:11:o;5043:205::-;5243:3;5234:14::o;5253:203::-;-1:-1:-1;;;;;5417:32:11;;;;5399:51;;5387:2;5372:18;;5354:102::o;5461:661::-;5632:2;5684:21;;;5754:13;;5657:18;;;5776:22;;;5461:661;;5632:2;5855:15;;;;5829:2;5814:18;;;5461:661;5901:195;5915:6;5912:1;5909:13;5901:195;;;5980:13;;-1:-1:-1;;;;;5976:39:11;5964:52;;6071:15;;;;6036:12;;;;6012:1;5930:9;5901:195;;;-1:-1:-1;6113:3:11;;5612:510;-1:-1:-1;;;;;;5612:510:11:o;6127:496::-;6316:2;6298:21;;;6335:18;;6328:34;;;6127:496;-1:-1:-1;;;;;6374:31:11;;6371:2;;;6421:4;6415;6408:18;6371:2;6463;6455:6;6451:15;6516:6;6508;6503:2;6492:9;6488:18;6475:48;6546:22;;;;6570:2;6542:31;6582:16;;;6542:31;6288:335;-1:-1:-1;;6288:335:11:o;6628:267::-;;6807:2;6796:9;6789:21;6827:62;6885:2;6874:9;6870:18;6862:6;6827:62;:::i;6900:187::-;7065:14;;7058:22;7040:41;;7028:2;7013:18;;6995:92::o;7092:393::-;-1:-1:-1;;;;;7368:15:11;;;7350:34;;7420:15;;;;7415:2;7400:18;;7393:43;7467:2;7452:18;;7445:34;;;;7300:2;7285:18;;7267:218::o;7725:348::-;7927:2;7909:21;;;7966:2;7946:18;;;7939:30;8005:26;8000:2;7985:18;;7978:54;8064:2;8049:18;;7899:174::o;8078:345::-;8280:2;8262:21;;;8319:2;8299:18;;;8292:30;-1:-1:-1;;;8353:2:11;8338:18;;8331:51;8414:2;8399:18;;8252:171::o;8428:346::-;8630:2;8612:21;;;8669:2;8649:18;;;8642:30;-1:-1:-1;;;8703:2:11;8688:18;;8681:52;8765:2;8750:18;;8602:172::o;8779:339::-;8981:2;8963:21;;;9020:2;9000:18;;;8993:30;-1:-1:-1;;;9054:2:11;9039:18;;9032:45;9109:2;9094:18;;8953:165::o;9123:343::-;9325:2;9307:21;;;9364:2;9344:18;;;9337:30;-1:-1:-1;;;9398:2:11;9383:18;;9376:49;9457:2;9442:18;;9297:169::o;9471:345::-;9673:2;9655:21;;;9712:2;9692:18;;;9685:30;-1:-1:-1;;;9746:2:11;9731:18;;9724:51;9807:2;9792:18;;9645:171::o;9821:353::-;10023:2;10005:21;;;10062:2;10042:18;;;10035:30;10101:31;10096:2;10081:18;;10074:59;10165:2;10150:18;;9995:179::o;10179:349::-;10381:2;10363:21;;;10420:2;10400:18;;;10393:30;10459:27;10454:2;10439:18;;10432:55;10519:2;10504:18;;10353:175::o;10533:352::-;10735:2;10717:21;;;10774:2;10754:18;;;10747:30;10813;10808:2;10793:18;;10786:58;10876:2;10861:18;;10707:178::o;10890:344::-;11092:2;11074:21;;;11131:2;11111:18;;;11104:30;-1:-1:-1;;;11165:2:11;11150:18;;11143:50;11225:2;11210:18;;11064:170::o;11239:398::-;11441:2;11423:21;;;11480:2;11460:18;;;11453:30;11519:34;11514:2;11499:18;;11492:62;-1:-1:-1;;;11585:2:11;11570:18;;11563:32;11627:3;11612:19;;11413:224::o;11642:350::-;11844:2;11826:21;;;11883:2;11863:18;;;11856:30;11922:28;11917:2;11902:18;;11895:56;11983:2;11968:18;;11816:176::o;11997:343::-;12199:2;12181:21;;;12238:2;12218:18;;;12211:30;-1:-1:-1;;;12272:2:11;12257:18;;12250:49;12331:2;12316:18;;12171:169::o;12345:177::-;12491:25;;;12479:2;12464:18;;12446:76::o;12527:913::-;12900:25;;;-1:-1:-1;;;;;12961:32:11;;12956:2;12941:18;;12934:60;13013:10;13059:15;;;13054:2;13039:18;;13032:43;13111:15;;;13106:2;13091:18;;13084:43;13164:15;;13158:3;13143:19;;13136:44;13217:3;12981;13196:19;;13189:32;;;12527:913;;13244:63;;13287:19;;13279:6;13244:63;:::i;:::-;13356:9;13348:6;13344:22;13338:3;13327:9;13323:19;13316:51;13384:50;13427:6;13419;13384:50;:::i;:::-;13376:58;12890:550;-1:-1:-1;;;;;;;;;;12890:550:11:o;13445:548::-;;13730:6;13719:9;13712:25;13773:2;13768;13757:9;13753:18;13746:30;13799:62;13857:2;13846:9;13842:18;13834:6;13799:62;:::i;:::-;13909:9;13901:6;13897:22;13892:2;13881:9;13877:18;13870:50;13937;13980:6;13972;13937:50;:::i;:::-;13929:58;13702:291;-1:-1:-1;;;;;;13702:291:11:o;13998:248::-;14172:25;;;14228:2;14213:18;;14206:34;14160:2;14145:18;;14127:119::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2253400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addPool(address,uint32,uint32,uint256[])": "infinite",
								"admin()": "1202",
								"adminWithdraw(uint256,uint256)": "infinite",
								"claimAdmin()": "45655",
								"deposit(uint256,uint256,bool)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"getPoolInfo(uint256)": "infinite",
								"getRewardTokens()": "infinite",
								"getUserInfo(uint256,address)": "infinite",
								"harvest(uint256)": "infinite",
								"harvestMultiplePools(uint256[])": "infinite",
								"pendingAdmin()": "1160",
								"pendingRewards(uint256,address)": "infinite",
								"poolExists(address)": "1332",
								"poolLength()": "1052",
								"renewPool(uint256,uint32,uint32,uint256[])": "infinite",
								"rewardLocker()": "infinite",
								"rewardTokens(uint256)": "2105",
								"transferAdmin(address)": "23257",
								"transferAdminQuickly(address)": "25330",
								"updatePool(uint256,uint32,uint256[])": "infinite",
								"updatePoolRewards(uint256)": "infinite",
								"withdraw(uint256,uint256)": "infinite",
								"withdrawAll(uint256)": "infinite"
							},
							"internal": {
								"_lastAccountedRewardBlock(uint256)": "infinite",
								"_lockReward(contract IERC20Ext,address,uint256)": "infinite",
								"_updateUserReward(address,uint256,bool)": "infinite",
								"_withdraw(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5017,
									"end": 5023,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 335,
									"end": 355,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 335,
									"end": 355,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 327,
									"end": 367,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 327,
									"end": 367,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 327,
									"end": 367,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 327,
									"end": 367,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 327,
									"end": 367,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "PUSH",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 327,
									"end": 367,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 327,
									"end": 367,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "61646D696E203"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "CC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 327,
									"end": 367,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 327,
									"end": 367,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 327,
									"end": 367,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 327,
									"end": 367,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 327,
									"end": 367,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 378,
									"end": 383,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 392,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 378,
									"end": 392,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 378,
									"end": 392,
									"name": "AND",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 378,
									"end": 392,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 378,
									"end": 392,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 378,
									"end": 392,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 378,
									"end": 392,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 378,
									"end": 392,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 378,
									"end": 392,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 378,
									"end": 392,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 378,
									"end": 392,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 378,
									"end": 392,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 378,
									"end": 392,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1760,
									"end": 1767,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1760,
									"end": 1782,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 5036,
									"end": 5064,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5036,
									"end": 5064,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5036,
									"end": 5064,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 5036,
									"end": 5064,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5036,
									"end": 5064,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5036,
									"end": 5064,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5036,
									"end": 5064,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5036,
									"end": 5064,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5036,
									"end": 5064,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 5036,
									"end": 5064,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 5036,
									"end": 5064,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 5036,
									"end": 5064,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5075,
									"end": 5103,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5075,
									"end": 5103,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5075,
									"end": 5103,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5075,
									"end": 5103,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 5075,
									"end": 5103,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5075,
									"end": 5103,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5075,
									"end": 5103,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5168,
									"end": 5177,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5163,
									"end": 5454,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 5163,
									"end": 5454,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5187,
									"end": 5200,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5187,
									"end": 5207,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5183,
									"end": 5184,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5183,
									"end": 5207,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5454,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5454,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 5163,
									"end": 5454,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5261,
									"end": 5262,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5233,
									"end": 5263,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5246,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5247,
									"end": 5248,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5249,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5249,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5249,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5249,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5249,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 5233,
									"end": 5249,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5249,
									"name": "INVALID",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5249,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 5233,
									"end": 5249,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5249,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5233,
									"end": 5249,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5249,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5233,
									"end": 5249,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5249,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5249,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5233,
									"end": 5263,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5263,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 5229,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 5229,
									"end": 5443,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5284,
									"end": 5427,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 5354,
									"end": 5367,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5294,
									"end": 5307,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5308,
									"end": 5309,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5294,
									"end": 5310,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5294,
									"end": 5310,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5294,
									"end": 5310,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5294,
									"end": 5310,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 5294,
									"end": 5310,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 5294,
									"end": 5310,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5294,
									"end": 5310,
									"name": "INVALID",
									"source": 8
								},
								{
									"begin": 5294,
									"end": 5310,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 5294,
									"end": 5310,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5294,
									"end": 5310,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5294,
									"end": 5310,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5294,
									"end": 5310,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5294,
									"end": 5310,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5294,
									"end": 5310,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5294,
									"end": 5310,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5284,
									"end": 5323,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5284,
									"end": 5323,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5284,
									"end": 5323,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5284,
									"end": 5323,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 5284,
									"end": 5323,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18446744073709551765"
								},
								{
									"begin": 5284,
									"end": 5323,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 5284,
									"end": 5323,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5284,
									"end": 5427,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5284,
									"end": 5427,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5284,
									"end": 5427,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5284,
									"end": 5427,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5284,
									"end": 5427,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 5284,
									"end": 5427,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 5284,
									"end": 5427,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 5284,
									"end": 5427,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5209,
									"end": 5212,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5209,
									"end": 5212,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5454,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 5163,
									"end": 5454,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5454,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 5163,
									"end": 5454,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 5461,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1961,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1348,
									"end": 1961,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1713,
									"end": 1723,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1713,
									"end": 1723,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1713,
									"end": 1723,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1712,
									"end": 1774,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1712,
									"end": 1774,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6EB1769F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1757,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1744,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1744,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1744,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1744,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1744,
									"name": "PUSH",
									"source": 2,
									"value": "DD62ED3E"
								},
								{
									"begin": 1729,
									"end": 1744,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1744,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "EXTCODESIZE",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "GAS",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "STATICCALL",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1729,
									"end": 1768,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1729,
									"end": 1773,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1712,
									"end": 1774,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1712,
									"end": 1774,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH data",
									"source": 2,
									"value": "EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1704,
									"end": 1854,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "PUSH",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "PUSH",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1891,
									"end": 1953,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1864,
									"end": 1954,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1864,
									"end": 1954,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1884,
									"end": 1889,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1884,
									"end": 1889,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1864,
									"end": 1883,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1864,
									"end": 1954,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1864,
									"end": 1954,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1864,
									"end": 1954,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1864,
									"end": 1954,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1348,
									"end": 1961,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1348,
									"end": 1961,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1348,
									"end": 1961,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1348,
									"end": 1961,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2967,
									"end": 3718,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 2967,
									"end": 3718,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3386,
									"end": 3409,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 3440,
									"end": 3444,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "PUSH",
									"source": 2,
									"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3420,
									"end": 3425,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3412,
									"end": 3439,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3412,
									"end": 3439,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 3412,
									"end": 3439,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3412,
									"end": 3439,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 3412,
									"end": 3439,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551766"
								},
								{
									"begin": 3412,
									"end": 3439,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3412,
									"end": 3439,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 3412,
									"end": 3481,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3495,
									"end": 3512,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3495,
									"end": 3512,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3386,
									"end": 3481,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3386,
									"end": 3481,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3495,
									"end": 3516,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3491,
									"end": 3712,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 3491,
									"end": 3712,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3635,
									"end": 3645,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3624,
									"end": 3654,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH",
									"source": 2,
									"value": "2A"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH data",
									"source": 2,
									"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH",
									"source": 2,
									"value": "2A"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3701,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3684,
									"end": 3696,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 3715,
									"end": 3767,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 3737,
									"end": 3743,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3745,
									"end": 3749,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3751,
									"end": 3752,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3754,
									"end": 3766,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3715,
									"end": 3736,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 3715,
									"end": 3767,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 3715,
									"end": 3767,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 3715,
									"end": 3767,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3708,
									"end": 3767,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3708,
									"end": 3767,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3581,
									"end": 3774,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 4608,
									"end": 5131,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 4608,
									"end": 5131,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4735,
									"end": 4747,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 4792,
									"end": 4797,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4767,
									"end": 4788,
									"name": "SELFBALANCE",
									"source": 3
								},
								{
									"begin": 4767,
									"end": 4797,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 4767,
									"end": 4797,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH data",
									"source": 3,
									"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 4759,
									"end": 4840,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4858,
									"end": 4876,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 4869,
									"end": 4875,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4858,
									"end": 4868,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 4858,
									"end": 4876,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 4858,
									"end": 4876,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 4858,
									"end": 4876,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "PUSH",
									"source": 3,
									"value": "1D"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "PUSH",
									"source": 3,
									"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "PUSH",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "PUSH",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "tag",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 4850,
									"end": 4910,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4981,
									"end": 4993,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4995,
									"end": 5018,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5028,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5022,
									"end": 5033,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5042,
									"end": 5047,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 5050,
									"end": 5054,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "tag",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "tag",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "CALL",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 3,
									"value": "3F"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "tag",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 5022,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4980,
									"end": 5055,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4980,
									"end": 5055,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4980,
									"end": 5055,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5072,
									"end": 5124,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 4980,
									"end": 5055,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4980,
									"end": 5055,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5111,
									"end": 5123,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 5072,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 5072,
									"end": 5124,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 5072,
									"end": 5124,
									"name": "tag",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 5072,
									"end": 5124,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5065,
									"end": 5124,
									"name": "SWAP8",
									"source": 3
								},
								{
									"begin": 4608,
									"end": 5131,
									"name": "SWAP7",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4608,
									"end": 5131,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1086,
									"end": 1106,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1086,
									"end": 1106,
									"name": "EXTCODESIZE",
									"source": 3
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "tag",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "tag",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7206,
									"end": 7218,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 7234,
									"end": 7241,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7264,
									"end": 7274,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7257,
									"end": 7274,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7257,
									"end": 7274,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "tag",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7375,
									"end": 7392,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7375,
									"end": 7392,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7375,
									"end": 7396,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 7371,
									"end": 7800,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 7371,
									"end": 7800,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7633,
									"end": 7643,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7627,
									"end": 7644,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7693,
									"end": 7708,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7680,
									"end": 7690,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7676,
									"end": 7678,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7672,
									"end": 7691,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7665,
									"end": 7709,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7582,
									"end": 7727,
									"name": "tag",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 7582,
									"end": 7727,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7772,
									"end": 7784,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "tag",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "tag",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "tag",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "AND",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 14,
									"end": 156,
									"name": "tag",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 14,
									"end": 156,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 95,
									"end": 108,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 95,
									"end": 108,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 117,
									"end": 150,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 95,
									"end": 108,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 117,
									"end": 150,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 117,
									"end": 150,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 161,
									"end": 1561,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 161,
									"end": 1561,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 161,
									"end": 1561,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 1561,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 161,
									"end": 1561,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 372,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 358,
									"end": 367,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 349,
									"end": 356,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 345,
									"end": 368,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 341,
									"end": 373,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 338,
									"end": 340,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 338,
									"end": 340,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 338,
									"end": 340,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 391,
									"end": 397,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 383,
									"end": 389,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 376,
									"end": 398,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 338,
									"end": 340,
									"name": "tag",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 338,
									"end": 340,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 428,
									"end": 437,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 422,
									"end": 438,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 447,
									"end": 480,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 474,
									"end": 479,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 447,
									"end": 480,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 447,
									"end": 480,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 447,
									"end": 480,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 447,
									"end": 480,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 523,
									"end": 525,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 554,
									"end": 572,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 554,
									"end": 572,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 554,
									"end": 572,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 548,
									"end": 573,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 499,
									"end": 504,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 499,
									"end": 504,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 523,
									"end": 525,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 622,
									"end": 636,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 622,
									"end": 636,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 622,
									"end": 636,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 619,
									"end": 621,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 619,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 619,
									"end": 621,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 654,
									"end": 660,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 646,
									"end": 652,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 639,
									"end": 661,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 619,
									"end": 621,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 619,
									"end": 621,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 697,
									"end": 703,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 686,
									"end": 695,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 682,
									"end": 704,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 672,
									"end": 704,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 672,
									"end": 704,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 742,
									"end": 749,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 735,
									"end": 739,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 731,
									"end": 733,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 727,
									"end": 740,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 723,
									"end": 750,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 713,
									"end": 715,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 713,
									"end": 715,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 769,
									"end": 775,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 761,
									"end": 767,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 754,
									"end": 776,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 713,
									"end": 715,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 713,
									"end": 715,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 803,
									"end": 805,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 797,
									"end": 806,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 825,
									"end": 827,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 821,
									"end": 823,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 818,
									"end": 828,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 815,
									"end": 817,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 815,
									"end": 817,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 815,
									"end": 817,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 831,
									"end": 840,
									"name": "INVALID",
									"source": 11
								},
								{
									"begin": 815,
									"end": 817,
									"name": "tag",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 815,
									"end": 817,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 869,
									"end": 871,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 865,
									"end": 867,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 861,
									"end": 872,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 901,
									"end": 903,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 895,
									"end": 904,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 952,
									"end": 954,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 947,
									"end": 949,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 939,
									"end": 945,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 935,
									"end": 950,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 931,
									"end": 955,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1005,
									"end": 1011,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 993,
									"end": 1003,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 990,
									"end": 1012,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 985,
									"end": 987,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 973,
									"end": 983,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 970,
									"end": 988,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 967,
									"end": 1013,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 964,
									"end": 966,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1016,
									"end": 1025,
									"name": "INVALID",
									"source": 11
								},
								{
									"begin": 964,
									"end": 966,
									"name": "tag",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1043,
									"end": 1045,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1036,
									"end": 1058,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1093,
									"end": 1111,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1093,
									"end": 1111,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1093,
									"end": 1111,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1127,
									"end": 1142,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1127,
									"end": 1142,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1127,
									"end": 1142,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1127,
									"end": 1142,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1162,
									"end": 1173,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1162,
									"end": 1173,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1162,
									"end": 1173,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1192,
									"end": 1203,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1192,
									"end": 1203,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1192,
									"end": 1203,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1188,
									"end": 1208,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1188,
									"end": 1208,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1185,
									"end": 1218,
									"name": "DUP13",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1182,
									"end": 1184,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1182,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 1182,
									"end": 1184,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1236,
									"end": 1242,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1228,
									"end": 1234,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 1221,
									"end": 1243,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1182,
									"end": 1184,
									"name": "tag",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 1182,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1263,
									"end": 1269,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1254,
									"end": 1269,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1254,
									"end": 1269,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1278,
									"end": 1460,
									"name": "tag",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 1278,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1292,
									"end": 1294,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1289,
									"end": 1290,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1286,
									"end": 1295,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1278,
									"end": 1460,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1278,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 1278,
									"end": 1460,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1349,
									"end": 1385,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 1381,
									"end": 1384,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1349,
									"end": 1385,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 1349,
									"end": 1385,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 1349,
									"end": 1385,
									"name": "tag",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 1349,
									"end": 1385,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1337,
									"end": 1386,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1337,
									"end": 1386,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1310,
									"end": 1311,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1303,
									"end": 1312,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1303,
									"end": 1312,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1303,
									"end": 1312,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1303,
									"end": 1312,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1303,
									"end": 1312,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 1406,
									"end": 1418,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1406,
									"end": 1418,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1406,
									"end": 1418,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1406,
									"end": 1418,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1438,
									"end": 1450,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1438,
									"end": 1450,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1278,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 1278,
									"end": 1460,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1278,
									"end": 1460,
									"name": "tag",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 1278,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1282,
									"end": 1285,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1479,
									"end": 1485,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1469,
									"end": 1485,
									"name": "SWAP8",
									"source": 11
								},
								{
									"begin": 1469,
									"end": 1485,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1469,
									"end": 1485,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1469,
									"end": 1485,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1469,
									"end": 1485,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1469,
									"end": 1485,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1469,
									"end": 1485,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1469,
									"end": 1485,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1504,
									"end": 1555,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 1551,
									"end": 1553,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1540,
									"end": 1549,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1536,
									"end": 1554,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1504,
									"end": 1555,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 1504,
									"end": 1555,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 1504,
									"end": 1555,
									"name": "tag",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 1504,
									"end": 1555,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1494,
									"end": 1555,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1494,
									"end": 1555,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 328,
									"end": 1561,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 328,
									"end": 1561,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 328,
									"end": 1561,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 328,
									"end": 1561,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 328,
									"end": 1561,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 328,
									"end": 1561,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 1566,
									"end": 1699,
									"name": "tag",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 1566,
									"end": 1699,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1643,
									"end": 1674,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1643,
									"end": 1674,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1633,
									"end": 1675,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1633,
									"end": 1675,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1623,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 1623,
									"end": 1625,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1689,
									"end": 1690,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1686,
									"end": 1687,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1691,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1623,
									"end": 1625,
									"name": "tag",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 1623,
									"end": 1625,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1613,
									"end": 1699,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1613,
									"end": 1699,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 1613,
									"end": 1699,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 1613,
									"end": 1699,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "1681"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1064,
									"end": 23424,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c5123b60dff18c0319a60de1a907c57be74f3db5bfa5928e7b14949e5eb97be864736f6c63430007060033",
									".code": [
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "77F50F97"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "B43C6270"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "B43C6270"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "C4F59F9B"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "D12E4CEB"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "D18DF53C"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "DDC63262"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "F851A440"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "77F50F97"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "7ACC8678"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "7BB7BED1"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "958E2D31"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "ADB82B31"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "AFFB9FC8"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "3892601C"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "3892601C"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "43A0D066"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "441A3E70"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "52FD9F2F"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "5312EA8E"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "75829DEF"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "81E3EDA"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "1069F3B5"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "1E1C6A07"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "26782247"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "2F380B35"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "2FB40CE1"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 23424,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 127,
											"end": 154,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 127,
											"end": 154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 127,
											"end": 154,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 127,
											"end": 154,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 127,
											"end": 154,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 127,
											"end": 154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 127,
											"end": 154,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 127,
											"end": 154,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 127,
											"end": 154,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 127,
											"end": 154,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 127,
											"end": 154,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 127,
											"end": 154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 127,
											"end": 154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 127,
											"end": 154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 127,
											"end": 154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 127,
											"end": 154,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 127,
											"end": 154,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 127,
											"end": 154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 127,
											"end": 154,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 127,
											"end": 154,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 127,
											"end": 154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 127,
											"end": 154,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 127,
											"end": 154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 127,
											"end": 154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 127,
											"end": 154,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 661,
											"end": 864,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 661,
											"end": 864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 661,
											"end": 864,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 661,
											"end": 864,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 661,
											"end": 864,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 661,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 661,
											"end": 864,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 661,
											"end": 864,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 864,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 661,
											"end": 864,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 661,
											"end": 864,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 661,
											"end": 864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 661,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 661,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 661,
											"end": 864,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 661,
											"end": 864,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 661,
											"end": 864,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 661,
											"end": 864,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 661,
											"end": 864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 661,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 661,
											"end": 864,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1398,
											"end": 1612,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1398,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1398,
											"end": 1612,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1398,
											"end": 1612,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1398,
											"end": 1612,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1398,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1398,
											"end": 1612,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1398,
											"end": 1612,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1612,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1398,
											"end": 1612,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1398,
											"end": 1612,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1398,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1398,
											"end": 1612,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1398,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1398,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1398,
											"end": 1612,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 100,
											"end": 120,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 100,
											"end": 120,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 100,
											"end": 120,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 100,
											"end": 120,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 100,
											"end": 120,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 100,
											"end": 120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17927,
											"end": 17941,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18092,
											"end": 18106,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18092,
											"end": 18106,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18092,
											"end": 18106,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18092,
											"end": 18100,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 18092,
											"end": 18106,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18092,
											"end": 18106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18092,
											"end": 18106,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18092,
											"end": 18106,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18092,
											"end": 18106,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18092,
											"end": 18106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18092,
											"end": 18106,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18092,
											"end": 18106,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18092,
											"end": 18116,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18092,
											"end": 18116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18092,
											"end": 18116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18092,
											"end": 18116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18092,
											"end": 18116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18092,
											"end": 18116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18092,
											"end": 18116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18092,
											"end": 18116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18092,
											"end": 18116,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 18136,
											"end": 18147,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18136,
											"end": 18147,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 18191,
											"end": 18203,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 18191,
											"end": 18210,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 18136,
											"end": 18147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18136,
											"end": 18147,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17956,
											"end": 17989,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 17956,
											"end": 17989,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17956,
											"end": 17989,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17956,
											"end": 17989,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18092,
											"end": 18116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 18177,
											"end": 18211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18258,
											"end": 18270,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 18258,
											"end": 18277,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 18158,
											"end": 18211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18158,
											"end": 18211,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18244,
											"end": 18278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18222,
											"end": 18278,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18222,
											"end": 18278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18294,
											"end": 18303,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18289,
											"end": 18507,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 18289,
											"end": 18507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18313,
											"end": 18325,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 18313,
											"end": 18332,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 18309,
											"end": 18332,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18309,
											"end": 18332,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 18289,
											"end": 18507,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18289,
											"end": 18507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 18289,
											"end": 18507,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18376,
											"end": 18398,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18376,
											"end": 18398,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18376,
											"end": 18398,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18376,
											"end": 18398,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18376,
											"end": 18395,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18376,
											"end": 18395,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18376,
											"end": 18395,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18376,
											"end": 18398,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18376,
											"end": 18398,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18376,
											"end": 18398,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18376,
											"end": 18398,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18376,
											"end": 18398,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 18376,
											"end": 18414,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 18354,
											"end": 18373,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18354,
											"end": 18373,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18354,
											"end": 18370,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18354,
											"end": 18370,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18396,
											"end": 18397,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18396,
											"end": 18397,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18354,
											"end": 18373,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18354,
											"end": 18373,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 18354,
											"end": 18373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 18354,
											"end": 18373,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18354,
											"end": 18373,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 18354,
											"end": 18373,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 18354,
											"end": 18373,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18354,
											"end": 18373,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18354,
											"end": 18373,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 18354,
											"end": 18373,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18354,
											"end": 18373,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18354,
											"end": 18373,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18354,
											"end": 18414,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18354,
											"end": 18414,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18354,
											"end": 18414,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18354,
											"end": 18414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18354,
											"end": 18414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18454,
											"end": 18458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18454,
											"end": 18473,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18454,
											"end": 18473,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18454,
											"end": 18476,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18474,
											"end": 18475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18454,
											"end": 18476,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18454,
											"end": 18476,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18454,
											"end": 18476,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18454,
											"end": 18476,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18454,
											"end": 18476,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18454,
											"end": 18476,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18454,
											"end": 18476,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18454,
											"end": 18476,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18454,
											"end": 18476,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18454,
											"end": 18476,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18454,
											"end": 18476,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 18454,
											"end": 18495,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18454,
											"end": 18495,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18454,
											"end": 18495,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 18429,
											"end": 18448,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18449,
											"end": 18450,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18429,
											"end": 18451,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18429,
											"end": 18451,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18429,
											"end": 18451,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18429,
											"end": 18451,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 18429,
											"end": 18451,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 18429,
											"end": 18451,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18429,
											"end": 18451,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 18429,
											"end": 18451,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 18429,
											"end": 18451,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18429,
											"end": 18451,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18429,
											"end": 18451,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18429,
											"end": 18451,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18429,
											"end": 18451,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 18429,
											"end": 18451,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18429,
											"end": 18451,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18429,
											"end": 18451,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18429,
											"end": 18451,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18429,
											"end": 18451,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18429,
											"end": 18495,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18334,
											"end": 18337,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18334,
											"end": 18337,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18289,
											"end": 18507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 18289,
											"end": 18507,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18289,
											"end": 18507,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 18289,
											"end": 18507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18289,
											"end": 18507,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17792,
											"end": 18514,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3211,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 127,
											"end": 154,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 127,
											"end": 154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 127,
											"end": 154,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 127,
											"end": 154,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 127,
											"end": 154,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 127,
											"end": 154,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 127,
											"end": 154,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16776,
											"end": 16794,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17075,
											"end": 17089,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17075,
											"end": 17089,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17075,
											"end": 17089,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17075,
											"end": 17083,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 17075,
											"end": 17089,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17075,
											"end": 17089,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17075,
											"end": 17089,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17075,
											"end": 17089,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17075,
											"end": 17089,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 17181,
											"end": 17196,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17181,
											"end": 17196,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 17211,
											"end": 17226,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 17211,
											"end": 17226,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17211,
											"end": 17226,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17211,
											"end": 17226,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 17373,
											"end": 17385,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 17373,
											"end": 17392,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 17181,
											"end": 17196,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17181,
											"end": 17196,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17211,
											"end": 17226,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17211,
											"end": 17226,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17211,
											"end": 17226,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17241,
											"end": 17256,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17241,
											"end": 17256,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17241,
											"end": 17256,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 17241,
											"end": 17256,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17241,
											"end": 17256,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17241,
											"end": 17256,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17271,
											"end": 17284,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17271,
											"end": 17284,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 17271,
											"end": 17284,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17271,
											"end": 17284,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17271,
											"end": 17284,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17299,
											"end": 17319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17299,
											"end": 17319,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17299,
											"end": 17319,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 17299,
											"end": 17319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17299,
											"end": 17319,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17299,
											"end": 17319,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17299,
											"end": 17319,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16941,
											"end": 16973,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 16941,
											"end": 16973,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16941,
											"end": 16973,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16941,
											"end": 16973,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 17359,
											"end": 17393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17439,
											"end": 17451,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 17439,
											"end": 17458,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 17341,
											"end": 17393,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17341,
											"end": 17393,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17425,
											"end": 17459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17404,
											"end": 17459,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17404,
											"end": 17459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17475,
											"end": 17484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17470,
											"end": 17684,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 17470,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17494,
											"end": 17506,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 17494,
											"end": 17513,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 17490,
											"end": 17513,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17490,
											"end": 17513,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 17470,
											"end": 17684,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17470,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 17470,
											"end": 17684,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17556,
											"end": 17578,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17556,
											"end": 17578,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17556,
											"end": 17578,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17556,
											"end": 17578,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17556,
											"end": 17575,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 17556,
											"end": 17575,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17556,
											"end": 17575,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17556,
											"end": 17578,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17556,
											"end": 17578,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17556,
											"end": 17578,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17556,
											"end": 17578,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17556,
											"end": 17578,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 17556,
											"end": 17593,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17535,
											"end": 17550,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17535,
											"end": 17550,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17576,
											"end": 17577,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17576,
											"end": 17577,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17535,
											"end": 17553,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17535,
											"end": 17593,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17535,
											"end": 17593,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17535,
											"end": 17593,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17535,
											"end": 17593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17535,
											"end": 17593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17632,
											"end": 17636,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17632,
											"end": 17651,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 17632,
											"end": 17651,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17632,
											"end": 17654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17652,
											"end": 17653,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17632,
											"end": 17654,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17632,
											"end": 17654,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17632,
											"end": 17654,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17632,
											"end": 17654,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17632,
											"end": 17654,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17632,
											"end": 17654,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17632,
											"end": 17654,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17632,
											"end": 17654,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17632,
											"end": 17654,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17632,
											"end": 17654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17632,
											"end": 17654,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 17632,
											"end": 17672,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 17632,
											"end": 17672,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17632,
											"end": 17672,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17626,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17627,
											"end": 17628,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17629,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17629,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17629,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17629,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 17608,
											"end": 17629,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17629,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17629,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 17608,
											"end": 17629,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17629,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17608,
											"end": 17629,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17629,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17629,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17629,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17629,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17629,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17629,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17629,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17672,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17515,
											"end": 17518,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 17515,
											"end": 17518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17470,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 17470,
											"end": 17684,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17470,
											"end": 17684,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 17470,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17470,
											"end": 17684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16659,
											"end": 17691,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 462,
											"end": 467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 467,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 462,
											"end": 467,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 448,
											"end": 458,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 448,
											"end": 467,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B7363C9030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6608,
											"end": 6618,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6631,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 6599,
											"end": 6656,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6675,
											"end": 6700,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6675,
											"end": 6700,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 6667,
											"end": 6729,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6729,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6667,
											"end": 6729,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6667,
											"end": 6729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6729,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6729,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6667,
											"end": 6729,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 6667,
											"end": 6729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 6667,
											"end": 6729,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6667,
											"end": 6729,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 6667,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6762,
											"end": 6774,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6762,
											"end": 6781,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6762,
											"end": 6808,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6762,
											"end": 6808,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 6740,
											"end": 6855,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6855,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6740,
											"end": 6855,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6855,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6855,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6740,
											"end": 6855,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 6740,
											"end": 6855,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 6740,
											"end": 6855,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6740,
											"end": 6855,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 6740,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6904,
											"end": 6916,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 6901,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 6916,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6890,
											"end": 6916,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 6916,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 6943,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 6943,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 6890,
											"end": 6943,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 6943,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6932,
											"end": 6943,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6920,
											"end": 6943,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6920,
											"end": 6943,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6920,
											"end": 6929,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6920,
											"end": 6943,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6920,
											"end": 6943,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6920,
											"end": 6943,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 6943,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 6890,
											"end": 6943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6868,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 6868,
											"end": 6990,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6868,
											"end": 6990,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6868,
											"end": 6990,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6868,
											"end": 6990,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6868,
											"end": 6990,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6868,
											"end": 6990,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6868,
											"end": 6990,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6868,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 6868,
											"end": 6990,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6868,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 6868,
											"end": 6990,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6868,
											"end": 6990,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 6868,
											"end": 6990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7012,
											"end": 7022,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 7012,
											"end": 7022,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7012,
											"end": 7022,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7003,
											"end": 7023,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7023,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7023,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7011,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 7003,
											"end": 7023,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7003,
											"end": 7023,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7023,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7003,
											"end": 7023,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7023,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7023,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7034,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7003,
											"end": 7034,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7034,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7034,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7048,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7078,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7078,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7079,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7079,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7079,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7079,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7079,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7104,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7104,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7059,
											"end": 7104,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7059,
											"end": 7104,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7059,
											"end": 7104,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7104,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7104,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7104,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7104,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7104,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7104,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7104,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7104,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7104,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7104,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7104,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7104,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7124,
											"end": 7134,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7124,
											"end": 7134,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7135,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7135,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7135,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7135,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7135,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7144,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7156,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7156,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7115,
											"end": 7156,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7115,
											"end": 7156,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7156,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7156,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7156,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7156,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7156,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7156,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7156,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7156,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7156,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7176,
											"end": 7186,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7176,
											"end": 7186,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7167,
											"end": 7187,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7167,
											"end": 7187,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7167,
											"end": 7187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7167,
											"end": 7187,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7167,
											"end": 7187,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7167,
											"end": 7203,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7167,
											"end": 7217,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7167,
											"end": 7217,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7167,
											"end": 7217,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7167,
											"end": 7217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7167,
											"end": 7217,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7167,
											"end": 7217,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7167,
											"end": 7217,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7167,
											"end": 7217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7167,
											"end": 7217,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7167,
											"end": 7217,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7167,
											"end": 7217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7167,
											"end": 7217,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7167,
											"end": 7217,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7230,
											"end": 7476,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 7230,
											"end": 7476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7250,
											"end": 7277,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7250,
											"end": 7277,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7250,
											"end": 7277,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7230,
											"end": 7476,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7230,
											"end": 7476,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 7230,
											"end": 7476,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7340,
											"end": 7464,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7340,
											"end": 7464,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7340,
											"end": 7464,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7340,
											"end": 7464,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7340,
											"end": 7464,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7340,
											"end": 7464,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7340,
											"end": 7464,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7340,
											"end": 7464,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7406,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7406,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7407,
											"end": 7408,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7409,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7409,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7409,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7409,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 7390,
											"end": 7409,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7409,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7409,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 7390,
											"end": 7409,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7409,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7390,
											"end": 7409,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7409,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7409,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7409,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7409,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7409,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7409,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7409,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7340,
											"end": 7464,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7340,
											"end": 7464,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7447,
											"end": 7448,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7340,
											"end": 7464,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7340,
											"end": 7464,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7340,
											"end": 7464,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7340,
											"end": 7464,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7340,
											"end": 7464,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7340,
											"end": 7464,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7308,
											"end": 7318,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 7308,
											"end": 7318,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7319,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7319,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7307,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 7299,
											"end": 7319,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7319,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7319,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7299,
											"end": 7319,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7319,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7319,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7337,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7337,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7337,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7334,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7299,
											"end": 7334,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7337,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7337,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7337,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7337,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7337,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7464,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7464,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7464,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7464,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7464,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7464,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7464,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7464,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7299,
											"end": 7464,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7464,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7464,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7464,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7279,
											"end": 7282,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7230,
											"end": 7476,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 7230,
											"end": 7476,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7230,
											"end": 7476,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 7230,
											"end": 7476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7488,
											"end": 7498,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 7488,
											"end": 7500,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7488,
											"end": 7500,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7488,
											"end": 7500,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7488,
											"end": 7500,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7488,
											"end": 7500,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7488,
											"end": 7500,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7488,
											"end": 7500,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7488,
											"end": 7500,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7488,
											"end": 7500,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7513,
											"end": 7536,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7536,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7488,
											"end": 7498,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7513,
											"end": 7536,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7536,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7536,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7523,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7513,
											"end": 7536,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7513,
											"end": 7536,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7536,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7513,
											"end": 7536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7536,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7536,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7543,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7543,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7513,
											"end": 7543,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7543,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7543,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7543,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7543,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7543,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7543,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "PUSH",
											"source": 8,
											"value": "EB19E76B03B99EFF4D0329A19E44569C131F242C9590234F19B76F2C56A817A1"
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7609,
											"end": 7625,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7609,
											"end": 7625,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7609,
											"end": 7625,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7609,
											"end": 7625,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7626,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 7634,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1681"
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3302,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10896,
											"end": 10919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 10914,
											"end": 10918,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10896,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 10896,
											"end": 10919,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10896,
											"end": 10919,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 10896,
											"end": 10919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10930,
											"end": 10981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 10948,
											"end": 10958,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 10960,
											"end": 10964,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10966,
											"end": 10980,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10930,
											"end": 10947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 10930,
											"end": 10981,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10930,
											"end": 10981,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 10930,
											"end": 10981,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10994,
											"end": 11015,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11018,
											"end": 11032,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11018,
											"end": 11032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11018,
											"end": 11032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11018,
											"end": 11026,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 11018,
											"end": 11032,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11018,
											"end": 11032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11018,
											"end": 11032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11018,
											"end": 11032,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11018,
											"end": 11032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11018,
											"end": 11032,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11018,
											"end": 11032,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11075,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 11067,
											"end": 11081,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11081,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11081,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11081,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11081,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11082,
											"end": 11092,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11093,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11093,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11093,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11093,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11093,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11093,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11093,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11147,
											"end": 11162,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 11147,
											"end": 11162,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11147,
											"end": 11162,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11147,
											"end": 11162,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11093,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11093,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11137,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 11137,
											"end": 11266,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11147,
											"end": 11162,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11147,
											"end": 11162,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11228,
											"end": 11232,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 11248,
											"end": 11255,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 11137,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 11137,
											"end": 11266,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11137,
											"end": 11266,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 11137,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11369,
											"end": 11380,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11369,
											"end": 11380,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11369,
											"end": 11393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 11369,
											"end": 11393,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11385,
											"end": 11392,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11369,
											"end": 11384,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 11369,
											"end": 11393,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11369,
											"end": 11393,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 11369,
											"end": 11393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11355,
											"end": 11393,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11355,
											"end": 11393,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 11422,
											"end": 11437,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11422,
											"end": 11437,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11422,
											"end": 11450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 11422,
											"end": 11450,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11442,
											"end": 11449,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11422,
											"end": 11441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 11422,
											"end": 11450,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11422,
											"end": 11450,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 11422,
											"end": 11450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11404,
											"end": 11450,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11404,
											"end": 11450,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 11468,
											"end": 11516,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11468,
											"end": 11516,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11494,
											"end": 11506,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": 11494,
											"end": 11506,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11488,
											"end": 11492,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11488,
											"end": 11492,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11476,
											"end": 11486,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 11476,
											"end": 11486,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11468,
											"end": 11516,
											"name": "PUSH",
											"source": 8,
											"value": "36AF321EC8D3C75236829C5317AFFD40DDB308863A1236D2D277A4025CCCEE1E"
										},
										{
											"begin": 11468,
											"end": 11516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11468,
											"end": 11516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 11468,
											"end": 11516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11508,
											"end": 11515,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 11508,
											"end": 11515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11468,
											"end": 11516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 11468,
											"end": 11516,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11468,
											"end": 11516,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 11468,
											"end": 11516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11468,
											"end": 11516,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11468,
											"end": 11516,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11468,
											"end": 11516,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11468,
											"end": 11516,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11468,
											"end": 11516,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11468,
											"end": 11516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11468,
											"end": 11516,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2580,
											"end": 2587,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10703,
											"end": 11524,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11842,
											"end": 11866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 11852,
											"end": 11856,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11858,
											"end": 11865,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11842,
											"end": 11851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 11842,
											"end": 11866,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11842,
											"end": 11866,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 11842,
											"end": 11866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2580,
											"end": 2587,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11874,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13430,
											"end": 13442,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13453,
											"end": 13482,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13499,
											"end": 13506,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13499,
											"end": 13513,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 13485,
											"end": 13514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13453,
											"end": 13514,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13543,
											"end": 13553,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 13525,
											"end": 13540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13525,
											"end": 13540,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13588,
											"end": 14517,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 13588,
											"end": 14517,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13608,
											"end": 13624,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13608,
											"end": 13624,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13608,
											"end": 13624,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 13588,
											"end": 14517,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13588,
											"end": 14517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 13588,
											"end": 14517,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13657,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13657,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13658,
											"end": 13659,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13660,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13660,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13660,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 13652,
											"end": 13660,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13660,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13660,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 13652,
											"end": 13660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13660,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13660,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13660,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13652,
											"end": 13660,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13660,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13660,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 13646,
											"end": 13660,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13646,
											"end": 13660,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13675,
											"end": 13697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 13693,
											"end": 13696,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13675,
											"end": 13692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 13675,
											"end": 13697,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13675,
											"end": 13697,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 13675,
											"end": 13697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13766,
											"end": 13804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 13784,
											"end": 13791,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13793,
											"end": 13796,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13798,
											"end": 13803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13766,
											"end": 13783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 13766,
											"end": 13804,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13766,
											"end": 13804,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 13766,
											"end": 13804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13826,
											"end": 13835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13821,
											"end": 14506,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 13821,
											"end": 14506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13845,
											"end": 13852,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13845,
											"end": 13859,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13841,
											"end": 13842,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13841,
											"end": 13859,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 13821,
											"end": 14506,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13821,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 13821,
											"end": 14506,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13885,
											"end": 13899,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13902,
											"end": 13915,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13915,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13915,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13910,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 13902,
											"end": 13915,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13902,
											"end": 13915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13915,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13915,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13915,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13902,
											"end": 13915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13915,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13915,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13902,
											"end": 13924,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13924,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13924,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13924,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13924,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13924,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13924,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13924,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13964,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13964,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13964,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13961,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13902,
											"end": 13961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13964,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13964,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 13964,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 14002,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 14025,
											"end": 14035,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14025,
											"end": 14035,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14021,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 14021,
											"end": 14491,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14078,
											"end": 14105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 14098,
											"end": 14104,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14078,
											"end": 14090,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 14091,
											"end": 14092,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14078,
											"end": 14093,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14078,
											"end": 14097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 14078,
											"end": 14097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14078,
											"end": 14105,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14078,
											"end": 14105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14078,
											"end": 14105,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14078,
											"end": 14105,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14078,
											"end": 14105,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14078,
											"end": 14105,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 14078,
											"end": 14105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14072,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14073,
											"end": 14074,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14075,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14105,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14105,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14105,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14239,
											"end": 14240,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14128,
											"end": 14141,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14141,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14141,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14136,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 14128,
											"end": 14141,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14141,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14141,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14128,
											"end": 14141,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14141,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14141,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14128,
											"end": 14150,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14150,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14150,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14150,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14150,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14150,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14194,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14194,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14194,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14191,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 14128,
											"end": 14191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14194,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14194,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14194,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14194,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14194,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14194,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 14128,
											"end": 14240,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 14366,
											"end": 14376,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14366,
											"end": 14376,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14366,
											"end": 14373,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 14366,
											"end": 14373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14192,
											"end": 14193,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14192,
											"end": 14193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14366,
											"end": 14376,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14366,
											"end": 14376,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 14366,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 14366,
											"end": 14376,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14366,
											"end": 14376,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 14366,
											"end": 14376,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 14366,
											"end": 14376,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14366,
											"end": 14376,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14366,
											"end": 14376,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 14366,
											"end": 14376,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14366,
											"end": 14376,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14366,
											"end": 14376,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14366,
											"end": 14376,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14336,
											"end": 14339,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14302,
											"end": 14309,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "PUSH",
											"source": 8,
											"value": "F75F3D433C6628E04E01A0BE1A2C6692A6011CE4B00389824CFA8B8A12F3C1C4"
										},
										{
											"begin": 14403,
											"end": 14409,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14436,
											"end": 14448,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14268,
											"end": 14471,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 14021,
											"end": 14491,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 14021,
											"end": 14491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13861,
											"end": 13864,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13861,
											"end": 13864,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13821,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 13821,
											"end": 14506,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13821,
											"end": 14506,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 13821,
											"end": 14506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13626,
											"end": 13629,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13626,
											"end": 13629,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13588,
											"end": 14517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 13588,
											"end": 14517,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13588,
											"end": 14517,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 13588,
											"end": 14517,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13588,
											"end": 14517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14534,
											"end": 14543,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14529,
											"end": 14725,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 14529,
											"end": 14725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14553,
											"end": 14565,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14553,
											"end": 14572,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14549,
											"end": 14550,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14549,
											"end": 14572,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 14529,
											"end": 14725,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14529,
											"end": 14725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 14529,
											"end": 14725,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14616,
											"end": 14617,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14598,
											"end": 14610,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14611,
											"end": 14612,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14598,
											"end": 14613,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14598,
											"end": 14613,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14598,
											"end": 14613,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14598,
											"end": 14613,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 14598,
											"end": 14613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 14598,
											"end": 14613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14598,
											"end": 14613,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 14598,
											"end": 14613,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 14598,
											"end": 14613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14598,
											"end": 14613,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14598,
											"end": 14613,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 14598,
											"end": 14613,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14598,
											"end": 14613,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14598,
											"end": 14613,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14598,
											"end": 14613,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14598,
											"end": 14617,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 14594,
											"end": 14714,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14594,
											"end": 14714,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 14594,
											"end": 14714,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14638,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 14660,
											"end": 14667,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14668,
											"end": 14669,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14660,
											"end": 14670,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14660,
											"end": 14670,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14660,
											"end": 14670,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14660,
											"end": 14670,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 14660,
											"end": 14670,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 14660,
											"end": 14670,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14660,
											"end": 14670,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 14660,
											"end": 14670,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 14660,
											"end": 14670,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14660,
											"end": 14670,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14660,
											"end": 14670,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 14660,
											"end": 14670,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14660,
											"end": 14670,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14660,
											"end": 14670,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14660,
											"end": 14670,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14673,
											"end": 14680,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14682,
											"end": 14694,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14695,
											"end": 14696,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14682,
											"end": 14697,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14682,
											"end": 14697,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14682,
											"end": 14697,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14682,
											"end": 14697,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 14682,
											"end": 14697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 14682,
											"end": 14697,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14682,
											"end": 14697,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 14682,
											"end": 14697,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 14682,
											"end": 14697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14682,
											"end": 14697,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14682,
											"end": 14697,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 14682,
											"end": 14697,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14682,
											"end": 14697,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14682,
											"end": 14697,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14682,
											"end": 14697,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14638,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 14638,
											"end": 14698,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14638,
											"end": 14698,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 14638,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14574,
											"end": 14577,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 14574,
											"end": 14577,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14529,
											"end": 14725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 14529,
											"end": 14725,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14529,
											"end": 14725,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 14529,
											"end": 14725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14529,
											"end": 14725,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13318,
											"end": 14732,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12493,
											"end": 12514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12517,
											"end": 12531,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12531,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12531,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12525,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 12517,
											"end": 12531,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12517,
											"end": 12531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12531,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12531,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12531,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12517,
											"end": 12531,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12531,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12531,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 12574,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 12566,
											"end": 12580,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 12580,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 12580,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 12580,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 12580,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12581,
											"end": 12591,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 12592,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 12592,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 12592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 12592,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 12592,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 12592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 12592,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12620,
											"end": 12631,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12620,
											"end": 12631,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12644,
											"end": 12659,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12644,
											"end": 12659,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12644,
											"end": 12659,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12531,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12531,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 12592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 12592,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12620,
											"end": 12631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12670,
											"end": 12898,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 12670,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12694,
											"end": 12706,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12694,
											"end": 12713,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12690,
											"end": 12713,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12690,
											"end": 12713,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12670,
											"end": 12898,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12670,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 12670,
											"end": 12898,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12735,
											"end": 12768,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12771,
											"end": 12793,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12771,
											"end": 12793,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12771,
											"end": 12793,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12771,
											"end": 12790,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12771,
											"end": 12790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12771,
											"end": 12790,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12771,
											"end": 12790,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12771,
											"end": 12793,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12771,
											"end": 12793,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12771,
											"end": 12793,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12771,
											"end": 12793,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12771,
											"end": 12793,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12808,
											"end": 12837,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12808,
											"end": 12837,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12808,
											"end": 12837,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12808,
											"end": 12841,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12808,
											"end": 12841,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12808,
											"end": 12841,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 12856,
											"end": 12886,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12856,
											"end": 12886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12856,
											"end": 12886,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12856,
											"end": 12886,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 12715,
											"end": 12718,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12670,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 12670,
											"end": 12898,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12670,
											"end": 12898,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 12670,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12928,
											"end": 12943,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12928,
											"end": 12943,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12928,
											"end": 12955,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 12928,
											"end": 12955,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12948,
											"end": 12954,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12928,
											"end": 12947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 12928,
											"end": 12955,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12928,
											"end": 12955,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 12928,
											"end": 12955,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12910,
											"end": 12955,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12910,
											"end": 12955,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 12972,
											"end": 12982,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12972,
											"end": 12982,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 13070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 12968,
											"end": 13070,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13009,
											"end": 13024,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13009,
											"end": 13024,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13009,
											"end": 13024,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13009,
											"end": 13024,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12999,
											"end": 13058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 12999,
											"end": 13058,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13009,
											"end": 13024,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13039,
											"end": 13049,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 13051,
											"end": 13057,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12999,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 12999,
											"end": 13058,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12999,
											"end": 13058,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 12999,
											"end": 13058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": 13117,
											"end": 13121,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13105,
											"end": 13115,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "PUSH",
											"source": 8,
											"value": "2369DB1BAFEE945AEE5630782F4A170682E3F8188D8DC247A4C73EB8C9E692D2"
										},
										{
											"begin": 13137,
											"end": 13143,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2580,
											"end": 2587,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12410,
											"end": 13152,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 661,
											"end": 864,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 661,
											"end": 864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 462,
											"end": 467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 467,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 462,
											"end": 467,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 448,
											"end": 458,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 448,
											"end": 467,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B7363C9030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 738,
											"end": 760,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 738,
											"end": 760,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 730,
											"end": 776,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 776,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 730,
											"end": 776,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 776,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 730,
											"end": 776,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 730,
											"end": 776,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 730,
											"end": 776,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E65772061646D696E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 730,
											"end": 776,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 730,
											"end": 776,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 730,
											"end": 776,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 730,
											"end": 776,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 730,
											"end": 776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 792,
											"end": 822,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 822,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 792,
											"end": 822,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 792,
											"end": 822,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 792,
											"end": 822,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 792,
											"end": 822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 792,
											"end": 822,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 792,
											"end": 822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 792,
											"end": 822,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 792,
											"end": 822,
											"name": "PUSH",
											"source": 10,
											"value": "3B81CAF78FA51ECBC8ACB482FD7012A277B428D9B80F9D156E8A54107496CC40"
										},
										{
											"begin": 792,
											"end": 822,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 792,
											"end": 822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 792,
											"end": 822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 792,
											"end": 822,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 792,
											"end": 822,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 822,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 792,
											"end": 822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 792,
											"end": 822,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 833,
											"end": 845,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 833,
											"end": 856,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 833,
											"end": 856,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 833,
											"end": 856,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 833,
											"end": 856,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 833,
											"end": 856,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 833,
											"end": 856,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 833,
											"end": 856,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 833,
											"end": 856,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 833,
											"end": 856,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 833,
											"end": 856,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 833,
											"end": 856,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 833,
											"end": 856,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 833,
											"end": 856,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 661,
											"end": 864,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1398,
											"end": 1612,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1398,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1462,
											"end": 1472,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1446,
											"end": 1472,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F742070656E64696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH",
											"source": 10,
											"value": "65DA1CFC2C2E81576AD96AFB24A581F8E109B7A403B35CBD3243A1C99EFDB9ED"
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 1556,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1556,
											"end": 1568,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1556,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1556,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1568,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1548,
											"end": 1568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1548,
											"end": 1568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1548,
											"end": 1568,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1548,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1556,
											"end": 1568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1556,
											"end": 1568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1548,
											"end": 1568,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1548,
											"end": 1568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1548,
											"end": 1568,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1548,
											"end": 1568,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1579,
											"end": 1604,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1579,
											"end": 1604,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1579,
											"end": 1604,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1398,
											"end": 1612,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 462,
											"end": 467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 467,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 462,
											"end": 467,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 448,
											"end": 458,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 448,
											"end": 467,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B7363C9030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1129,
											"end": 1151,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1151,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61646D696E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1209,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1209,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1209,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1179,
											"end": 1209,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1209,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1209,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1209,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1209,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1209,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1209,
											"name": "PUSH",
											"source": 10,
											"value": "3B81CAF78FA51ECBC8ACB482FD7012A277B428D9B80F9D156E8A54107496CC40"
										},
										{
											"begin": 1179,
											"end": 1209,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1209,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1209,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1209,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1209,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1179,
											"end": 1209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1209,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1209,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "PUSH",
											"source": 10,
											"value": "65DA1CFC2C2E81576AD96AFB24A581F8E109B7A403B35CBD3243A1C99EFDB9ED"
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1281,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1281,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1265,
											"end": 1281,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1265,
											"end": 1281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1281,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1281,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1281,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1281,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1281,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1281,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1289,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12109,
											"end": 12123,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12109,
											"end": 12123,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12123,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12123,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12117,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 12109,
											"end": 12123,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12109,
											"end": 12123,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12123,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12123,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12123,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12109,
											"end": 12123,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12123,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12123,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12124,
											"end": 12134,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12135,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12135,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12135,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12135,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12135,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12135,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12135,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12142,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12093,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 12093,
											"end": 12143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12103,
											"end": 12107,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12103,
											"end": 12107,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12093,
											"end": 12102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 12093,
											"end": 12143,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12093,
											"end": 12143,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 12093,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2580,
											"end": 2587,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12016,
											"end": 12151,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18923,
											"end": 18933,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 18923,
											"end": 18933,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 18916,
											"end": 18920,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18916,
											"end": 18933,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 18908,
											"end": 18953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 18908,
											"end": 18953,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18908,
											"end": 18953,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18908,
											"end": 18953,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18908,
											"end": 18953,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18908,
											"end": 18953,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18908,
											"end": 18953,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 18908,
											"end": 18953,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18908,
											"end": 18953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 18908,
											"end": 18953,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18908,
											"end": 18953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 18908,
											"end": 18953,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18908,
											"end": 18953,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 18908,
											"end": 18953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18964,
											"end": 18985,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18988,
											"end": 19002,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18988,
											"end": 19002,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18988,
											"end": 19002,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18988,
											"end": 18996,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 18988,
											"end": 19002,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18988,
											"end": 19002,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18988,
											"end": 19002,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18988,
											"end": 19002,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18988,
											"end": 19002,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 18988,
											"end": 19002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19041,
											"end": 19072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 18997,
											"end": 19001,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19041,
											"end": 19066,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 19041,
											"end": 19072,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19041,
											"end": 19072,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 19041,
											"end": 19072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19109,
											"end": 19129,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 19109,
											"end": 19129,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19109,
											"end": 19129,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19109,
											"end": 19129,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 19013,
											"end": 19072,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19013,
											"end": 19072,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19109,
											"end": 19129,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19109,
											"end": 19129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19109,
											"end": 19129,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19109,
											"end": 19129,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 19109,
											"end": 19129,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19109,
											"end": 19129,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19087,
											"end": 19129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19087,
											"end": 19129,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19087,
											"end": 19129,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19087,
											"end": 19129,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 19083,
											"end": 19138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 19083,
											"end": 19138,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19131,
											"end": 19138,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19131,
											"end": 19138,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19131,
											"end": 19138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 19131,
											"end": 19138,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19083,
											"end": 19138,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 19083,
											"end": 19138,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19170,
											"end": 19185,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19170,
											"end": 19185,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 19200,
											"end": 19216,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19196,
											"end": 19307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 19196,
											"end": 19307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19233,
											"end": 19253,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 19233,
											"end": 19253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19233,
											"end": 19253,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19233,
											"end": 19253,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19233,
											"end": 19274,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 19289,
											"end": 19296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 19289,
											"end": 19296,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19196,
											"end": 19307,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 19196,
											"end": 19307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19361,
											"end": 19381,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 19361,
											"end": 19381,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19361,
											"end": 19381,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19361,
											"end": 19381,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 19361,
											"end": 19381,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19361,
											"end": 19381,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19361,
											"end": 19381,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19361,
											"end": 19381,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 19361,
											"end": 19381,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19361,
											"end": 19381,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19340,
											"end": 19381,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19340,
											"end": 19381,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19317,
											"end": 19381,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19317,
											"end": 19337,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19392,
											"end": 19749,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 19392,
											"end": 19749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19416,
											"end": 19428,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 19416,
											"end": 19435,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 19412,
											"end": 19435,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19412,
											"end": 19435,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 19392,
											"end": 19749,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19392,
											"end": 19749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 19392,
											"end": 19749,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19457,
											"end": 19490,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19493,
											"end": 19515,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19493,
											"end": 19515,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19493,
											"end": 19515,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19493,
											"end": 19512,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 19493,
											"end": 19512,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 19493,
											"end": 19512,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19493,
											"end": 19515,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19493,
											"end": 19515,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19493,
											"end": 19515,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19493,
											"end": 19515,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19493,
											"end": 19515,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 19564,
											"end": 19589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19564,
											"end": 19589,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 19493,
											"end": 19515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19493,
											"end": 19515,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19457,
											"end": 19490,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19547,
											"end": 19590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 19547,
											"end": 19590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19547,
											"end": 19559,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19547,
											"end": 19559,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19547,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 19547,
											"end": 19590,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19547,
											"end": 19590,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 19547,
											"end": 19590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19530,
											"end": 19590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19636,
											"end": 19737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 19711,
											"end": 19722,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19687,
											"end": 19708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 19530,
											"end": 19590,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1296,
											"name": "PUSH",
											"source": 8,
											"value": "E8D4A51000"
										},
										{
											"begin": 19687,
											"end": 19697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 19687,
											"end": 19708,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19687,
											"end": 19708,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 19687,
											"end": 19708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19636,
											"end": 19664,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 19636,
											"end": 19664,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19636,
											"end": 19664,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19636,
											"end": 19664,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 19636,
											"end": 19664,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 19636,
											"end": 19668,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 19636,
											"end": 19737,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19636,
											"end": 19737,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 19636,
											"end": 19737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19605,
											"end": 19633,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 19605,
											"end": 19633,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19605,
											"end": 19633,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19605,
											"end": 19633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19605,
											"end": 19737,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19437,
											"end": 19440,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19392,
											"end": 19749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 19392,
											"end": 19749,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19392,
											"end": 19749,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 19392,
											"end": 19749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19759,
											"end": 19779,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 19759,
											"end": 19779,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19759,
											"end": 19779,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19759,
											"end": 19779,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19759,
											"end": 19800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19759,
											"end": 19800,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 19759,
											"end": 19800,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19759,
											"end": 19800,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19759,
											"end": 19800,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19759,
											"end": 19800,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19759,
											"end": 19800,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19759,
											"end": 19800,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19759,
											"end": 19800,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19759,
											"end": 19800,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19759,
											"end": 19800,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19759,
											"end": 19800,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19759,
											"end": 19800,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19759,
											"end": 19800,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 19759,
											"end": 19800,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19759,
											"end": 19800,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18840,
											"end": 19808,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 462,
											"end": 467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 467,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 462,
											"end": 467,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 448,
											"end": 458,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 448,
											"end": 467,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B7363C9030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9722,
											"end": 9745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 9740,
											"end": 9744,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9722,
											"end": 9739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 9722,
											"end": 9745,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9722,
											"end": 9745,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 9722,
											"end": 9745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9758,
											"end": 9779,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9782,
											"end": 9796,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9782,
											"end": 9796,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9782,
											"end": 9796,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9782,
											"end": 9790,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 9782,
											"end": 9796,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9782,
											"end": 9796,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9782,
											"end": 9796,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9782,
											"end": 9796,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9782,
											"end": 9796,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 9874,
											"end": 9887,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9874,
											"end": 9887,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9874,
											"end": 9887,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9874,
											"end": 9887,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9890,
											"end": 9902,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9874,
											"end": 9887,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9874,
											"end": 9887,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9874,
											"end": 9887,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9874,
											"end": 9887,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9874,
											"end": 9887,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9874,
											"end": 9902,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9866,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 9866,
											"end": 9933,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9866,
											"end": 9933,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9866,
											"end": 9933,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9866,
											"end": 9933,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9866,
											"end": 9933,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9866,
											"end": 9933,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9866,
											"end": 9933,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9866,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 9866,
											"end": 9933,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9866,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 9866,
											"end": 9933,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9866,
											"end": 9933,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 9866,
											"end": 9933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9966,
											"end": 9978,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9966,
											"end": 9985,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9966,
											"end": 10012,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9966,
											"end": 10012,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 9944,
											"end": 10062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 10062,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9944,
											"end": 10062,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9944,
											"end": 10062,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 10062,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 10062,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9944,
											"end": 10062,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 9944,
											"end": 10062,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 9944,
											"end": 10062,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9944,
											"end": 10062,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 9944,
											"end": 10062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10107,
											"end": 10119,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": 10095,
											"end": 10104,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10095,
											"end": 10119,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10095,
											"end": 10119,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10095,
											"end": 10119,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10095,
											"end": 10150,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10095,
											"end": 10150,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10095,
											"end": 10150,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 10095,
											"end": 10150,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10135,
											"end": 10150,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10135,
											"end": 10150,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10135,
											"end": 10150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10135,
											"end": 10150,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 10135,
											"end": 10150,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10135,
											"end": 10150,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10135,
											"end": 10150,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10135,
											"end": 10150,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10135,
											"end": 10150,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10135,
											"end": 10150,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10123,
											"end": 10150,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10123,
											"end": 10150,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10123,
											"end": 10150,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10123,
											"end": 10150,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10095,
											"end": 10150,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 10095,
											"end": 10150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10073,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 10073,
											"end": 10203,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10073,
											"end": 10203,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10073,
											"end": 10203,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10073,
											"end": 10203,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10073,
											"end": 10203,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10073,
											"end": 10203,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10073,
											"end": 10203,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10073,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 10073,
											"end": 10203,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10073,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 10073,
											"end": 10203,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10073,
											"end": 10203,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 10073,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10216,
											"end": 10229,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10216,
											"end": 10229,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10216,
											"end": 10229,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10216,
											"end": 10241,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10216,
											"end": 10241,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10216,
											"end": 10241,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10216,
											"end": 10241,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10216,
											"end": 10241,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10216,
											"end": 10241,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10216,
											"end": 10241,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10216,
											"end": 10241,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 10216,
											"end": 10241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10216,
											"end": 10241,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10252,
											"end": 10392,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 10252,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10272,
											"end": 10299,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10272,
											"end": 10299,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10272,
											"end": 10299,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10252,
											"end": 10392,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10252,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 10252,
											"end": 10392,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10377,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10377,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10378,
											"end": 10379,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10380,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10380,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10380,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 10361,
											"end": 10380,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10380,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10380,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 10361,
											"end": 10380,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10343,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10321,
											"end": 10343,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10343,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10343,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10340,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 10321,
											"end": 10340,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10340,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10380,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10321,
											"end": 10343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10343,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10343,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10343,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10321,
											"end": 10343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10343,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10380,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10380,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10380,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10380,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10380,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10380,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10380,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10380,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10380,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10380,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10301,
											"end": 10304,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10301,
											"end": 10304,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10252,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 10252,
											"end": 10392,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10252,
											"end": 10392,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 10252,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10252,
											"end": 10392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10426,
											"end": 10435,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10420,
											"end": 10424,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "PUSH",
											"source": 8,
											"value": "BA2D8506275D684E80223910F1065A195EA279F37E27EB97AC24F4107EBA6CF9"
										},
										{
											"begin": 10437,
											"end": 10453,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10437,
											"end": 10453,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10454,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 493,
											"end": 494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9560,
											"end": 10462,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 462,
											"end": 467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 467,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 462,
											"end": 467,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 448,
											"end": 458,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 448,
											"end": 467,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B7363C9030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 8290,
											"end": 8294,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8272,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 8272,
											"end": 8295,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8272,
											"end": 8295,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 8272,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8308,
											"end": 8329,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8332,
											"end": 8346,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8332,
											"end": 8346,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8332,
											"end": 8346,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8332,
											"end": 8340,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 8332,
											"end": 8346,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8332,
											"end": 8346,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8332,
											"end": 8346,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8332,
											"end": 8346,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8332,
											"end": 8346,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8438,
											"end": 8453,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8438,
											"end": 8453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8438,
											"end": 8453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8438,
											"end": 8453,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8456,
											"end": 8468,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8438,
											"end": 8453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8438,
											"end": 8453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8438,
											"end": 8453,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8438,
											"end": 8453,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8438,
											"end": 8453,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8438,
											"end": 8468,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8438,
											"end": 8468,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8438,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 8438,
											"end": 8500,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8488,
											"end": 8500,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8472,
											"end": 8485,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8472,
											"end": 8500,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8438,
											"end": 8500,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 8438,
											"end": 8500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 8416,
											"end": 8562,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8562,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8416,
											"end": 8562,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8416,
											"end": 8562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8562,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8562,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8416,
											"end": 8562,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 8416,
											"end": 8562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 8416,
											"end": 8562,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8416,
											"end": 8562,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 8416,
											"end": 8562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8633,
											"end": 8645,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8633,
											"end": 8652,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8633,
											"end": 8679,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8633,
											"end": 8679,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8611,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 8611,
											"end": 8728,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8611,
											"end": 8728,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8611,
											"end": 8728,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8611,
											"end": 8728,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8611,
											"end": 8728,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8611,
											"end": 8728,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8611,
											"end": 8728,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8611,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 8611,
											"end": 8728,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8611,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 8611,
											"end": 8728,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8611,
											"end": 8728,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 8611,
											"end": 8728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8775,
											"end": 8787,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 8772,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 8787,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8761,
											"end": 8787,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 8787,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 8814,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 8814,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 8814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 8761,
											"end": 8814,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 8814,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8803,
											"end": 8814,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8791,
											"end": 8814,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8791,
											"end": 8814,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8791,
											"end": 8800,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8791,
											"end": 8814,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8791,
											"end": 8814,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8791,
											"end": 8814,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 8814,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 8761,
											"end": 8814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8739,
											"end": 8863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 8739,
											"end": 8863,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8739,
											"end": 8863,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8739,
											"end": 8863,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8739,
											"end": 8863,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8739,
											"end": 8863,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8739,
											"end": 8863,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8739,
											"end": 8863,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8739,
											"end": 8863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 8739,
											"end": 8863,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8739,
											"end": 8863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 8739,
											"end": 8863,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8739,
											"end": 8863,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 8739,
											"end": 8863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8876,
											"end": 8891,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8876,
											"end": 8891,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8876,
											"end": 8891,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8876,
											"end": 8905,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8876,
											"end": 8905,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8876,
											"end": 8905,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8876,
											"end": 8905,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8876,
											"end": 8905,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8876,
											"end": 8905,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8876,
											"end": 8905,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8876,
											"end": 8905,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8876,
											"end": 8905,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8876,
											"end": 8905,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8876,
											"end": 8905,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8876,
											"end": 8905,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8876,
											"end": 8905,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8876,
											"end": 8905,
											"name": "OR",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8916,
											"end": 8941,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8916,
											"end": 8941,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8941,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8941,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8941,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8941,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8941,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8941,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8941,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8941,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8941,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8941,
											"name": "OR",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8952,
											"end": 8986,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8952,
											"end": 8986,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8952,
											"end": 8986,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8952,
											"end": 8986,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8952,
											"end": 8986,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8952,
											"end": 8986,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 8952,
											"end": 8986,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8952,
											"end": 8986,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8999,
											"end": 9139,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 8999,
											"end": 9139,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9019,
											"end": 9046,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9019,
											"end": 9046,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9019,
											"end": 9046,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8999,
											"end": 9139,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8999,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 8999,
											"end": 9139,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9108,
											"end": 9124,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9108,
											"end": 9124,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9125,
											"end": 9126,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9108,
											"end": 9127,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9108,
											"end": 9127,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9108,
											"end": 9127,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9108,
											"end": 9127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 9108,
											"end": 9127,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9108,
											"end": 9127,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 9108,
											"end": 9127,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 9108,
											"end": 9127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9068,
											"end": 9090,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9087,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 9068,
											"end": 9087,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9108,
											"end": 9127,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9068,
											"end": 9090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9068,
											"end": 9090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9090,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 9108,
											"end": 9127,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9108,
											"end": 9127,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9108,
											"end": 9127,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9108,
											"end": 9127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9108,
											"end": 9127,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9108,
											"end": 9127,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9108,
											"end": 9127,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9127,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9127,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9048,
											"end": 9051,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9048,
											"end": 9051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8999,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 8999,
											"end": 9139,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8999,
											"end": 9139,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 8999,
											"end": 9139,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8999,
											"end": 9139,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9185,
											"end": 9194,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9172,
											"end": 9183,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9166,
											"end": 9170,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "PUSH",
											"source": 8,
											"value": "4F863DC93468ACF71FF8F5770599FBEAD4D0FF8EA6BD0C3251576F68FDAD0904"
										},
										{
											"begin": 9196,
											"end": 9212,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9196,
											"end": 9212,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9156,
											"end": 9213,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 493,
											"end": 494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 9221,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16529,
											"end": 16545,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 16570,
											"end": 16582,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16582,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16434,
											"end": 16590,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 462,
											"end": 467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 467,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 462,
											"end": 467,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 448,
											"end": 458,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 448,
											"end": 467,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B7363C9030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 440,
											"end": 482,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 440,
											"end": 482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5698,
											"end": 5719,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5732,
											"end": 5744,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5745,
											"end": 5761,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5778,
											"end": 5805,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5774,
											"end": 6027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 5774,
											"end": 6027,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 5851,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5841,
											"end": 5856,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5864,
											"end": 5870,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5898,
											"end": 5905,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5890,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 5890,
											"end": 5938,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5890,
											"end": 5938,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5890,
											"end": 5938,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5890,
											"end": 5938,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5890,
											"end": 5938,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5890,
											"end": 5938,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5890,
											"end": 5938,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5890,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 5890,
											"end": 5938,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5890,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 5890,
											"end": 5938,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5890,
											"end": 5938,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 5890,
											"end": 5938,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5774,
											"end": 6027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5774,
											"end": 6027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 5774,
											"end": 6027,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5774,
											"end": 6027,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 5774,
											"end": 6027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5971,
											"end": 5995,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5995,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5996,
											"end": 6006,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6014,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 5971,
											"end": 6015,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5971,
											"end": 6015,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 5971,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 493,
											"end": 494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 6034,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15114,
											"end": 15126,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 15114,
											"end": 15133,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 15048,
											"end": 15072,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 15048,
											"end": 15072,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15114,
											"end": 15133,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 15154,
											"end": 15182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15193,
											"end": 15214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15217,
											"end": 15231,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15217,
											"end": 15231,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15217,
											"end": 15231,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15217,
											"end": 15225,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 15217,
											"end": 15231,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15217,
											"end": 15231,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15217,
											"end": 15231,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15217,
											"end": 15231,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15217,
											"end": 15231,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15217,
											"end": 15231,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15217,
											"end": 15231,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15217,
											"end": 15231,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 15266,
											"end": 15274,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 15266,
											"end": 15280,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15266,
											"end": 15280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15266,
											"end": 15280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15266,
											"end": 15280,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15266,
											"end": 15280,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15266,
											"end": 15287,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 15266,
											"end": 15287,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15266,
											"end": 15287,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15266,
											"end": 15287,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15266,
											"end": 15287,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15266,
											"end": 15287,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15266,
											"end": 15287,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15266,
											"end": 15287,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15266,
											"end": 15287,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 15320,
											"end": 15335,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15320,
											"end": 15335,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 15377,
											"end": 15397,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 15377,
											"end": 15397,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15377,
											"end": 15397,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15377,
											"end": 15397,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 15144,
											"end": 15182,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 15144,
											"end": 15182,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15217,
											"end": 15231,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15217,
											"end": 15231,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 15266,
											"end": 15287,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15266,
											"end": 15287,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15377,
											"end": 15397,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15377,
											"end": 15397,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15377,
											"end": 15397,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 15377,
											"end": 15397,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15377,
											"end": 15397,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15377,
											"end": 15397,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15436,
											"end": 15467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 15217,
											"end": 15231,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 15436,
											"end": 15461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 15436,
											"end": 15467,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15436,
											"end": 15467,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 15436,
											"end": 15467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15408,
											"end": 15467,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15408,
											"end": 15467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15483,
											"end": 15492,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15478,
											"end": 16362,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 15478,
											"end": 16362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15502,
											"end": 15515,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15498,
											"end": 15499,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15498,
											"end": 15515,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 15478,
											"end": 16362,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15478,
											"end": 16362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 15478,
											"end": 16362,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15537,
											"end": 15563,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15566,
											"end": 15606,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15566,
											"end": 15606,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15566,
											"end": 15606,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15566,
											"end": 15603,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 15566,
											"end": 15603,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 15566,
											"end": 15603,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15566,
											"end": 15606,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15566,
											"end": 15606,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15566,
											"end": 15606,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15566,
											"end": 15606,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15566,
											"end": 15606,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 15566,
											"end": 15642,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 15566,
											"end": 15642,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15566,
											"end": 15642,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 15661,
											"end": 15702,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15661,
											"end": 15702,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15661,
											"end": 15702,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15661,
											"end": 15702,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 15661,
											"end": 15722,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15661,
											"end": 15722,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15661,
											"end": 15722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 15661,
											"end": 15722,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15706,
											"end": 15722,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15706,
											"end": 15722,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15706,
											"end": 15722,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15661,
											"end": 15722,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 15661,
											"end": 15722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15657,
											"end": 16023,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15657,
											"end": 16023,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 15657,
											"end": 16023,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15743,
											"end": 15757,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15830,
											"end": 15852,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15830,
											"end": 15852,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15830,
											"end": 15852,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15830,
											"end": 15849,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 15830,
											"end": 15849,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 15830,
											"end": 15849,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15830,
											"end": 15852,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15830,
											"end": 15852,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15830,
											"end": 15852,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15830,
											"end": 15852,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15830,
											"end": 15852,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 15830,
											"end": 15867,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 15760,
											"end": 15868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 15760,
											"end": 15868,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15761,
											"end": 15802,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15761,
											"end": 15802,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15761,
											"end": 15802,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 15761,
											"end": 15802,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15761,
											"end": 15802,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 15761,
											"end": 15802,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15761,
											"end": 15802,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15761,
											"end": 15802,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15830,
											"end": 15867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15760,
											"end": 15829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 15760,
											"end": 15868,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15760,
											"end": 15868,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15760,
											"end": 15868,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 15760,
											"end": 15868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15743,
											"end": 15868,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15908,
											"end": 16007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 15977,
											"end": 15988,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15953,
											"end": 15974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 15743,
											"end": 15868,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1296,
											"name": "PUSH",
											"source": 8,
											"value": "E8D4A51000"
										},
										{
											"begin": 15953,
											"end": 15963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 15953,
											"end": 15974,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15953,
											"end": 15974,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 15953,
											"end": 15974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15953,
											"end": 15988,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15953,
											"end": 15988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 15953,
											"end": 15988,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15953,
											"end": 15988,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 15953,
											"end": 15988,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 15953,
											"end": 15988,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15908,
											"end": 15926,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15908,
											"end": 15926,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15953,
											"end": 15988,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15953,
											"end": 15988,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 15908,
											"end": 15930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 15908,
											"end": 16007,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15908,
											"end": 16007,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 15908,
											"end": 16007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15887,
											"end": 16007,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15887,
											"end": 16007,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15657,
											"end": 16023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15657,
											"end": 16023,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 15657,
											"end": 16023,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16156,
											"end": 16178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16156,
											"end": 16178,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16156,
											"end": 16178,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16156,
											"end": 16178,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16156,
											"end": 16175,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 16156,
											"end": 16175,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16156,
											"end": 16175,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 16156,
											"end": 16175,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16156,
											"end": 16178,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16156,
											"end": 16178,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16156,
											"end": 16178,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16156,
											"end": 16178,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16156,
											"end": 16178,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16156,
											"end": 16178,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 16156,
											"end": 16197,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16156,
											"end": 16197,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1296,
											"name": "PUSH",
											"source": 8,
											"value": "E8D4A51000"
										},
										{
											"begin": 1292,
											"end": 1296,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 16069,
											"end": 16239,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16107,
											"end": 16220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 16107,
											"end": 16220,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16107,
											"end": 16125,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16107,
											"end": 16125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16107,
											"end": 16129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 16107,
											"end": 16220,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16107,
											"end": 16220,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 16107,
											"end": 16220,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16080,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16080,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16080,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16084,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 16069,
											"end": 16239,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16069,
											"end": 16239,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 16069,
											"end": 16239,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16268,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 16069,
											"end": 16268,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16268,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16268,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 16069,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16268,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16046,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 16047,
											"end": 16048,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16049,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16049,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 16039,
											"end": 16049,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16049,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16049,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 16039,
											"end": 16049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16049,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16039,
											"end": 16049,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16049,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16039,
											"end": 16049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16268,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16268,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16268,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16268,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16268,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16296,
											"end": 16350,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 16311,
											"end": 16315,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 16311,
											"end": 16330,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 16311,
											"end": 16330,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16311,
											"end": 16333,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16331,
											"end": 16332,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16311,
											"end": 16333,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16311,
											"end": 16333,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16311,
											"end": 16333,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16311,
											"end": 16333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16311,
											"end": 16333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16311,
											"end": 16333,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16311,
											"end": 16333,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16311,
											"end": 16333,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16311,
											"end": 16333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16311,
											"end": 16333,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16311,
											"end": 16333,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 16311,
											"end": 16349,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16311,
											"end": 16349,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16311,
											"end": 16349,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 16296,
											"end": 16303,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 16304,
											"end": 16305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16296,
											"end": 16306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16296,
											"end": 16306,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16296,
											"end": 16306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16296,
											"end": 16306,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 16296,
											"end": 16306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 16296,
											"end": 16306,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16296,
											"end": 16306,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 16296,
											"end": 16350,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 16296,
											"end": 16350,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16290,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 16291,
											"end": 16292,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16293,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16293,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16293,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16293,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 16283,
											"end": 16293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16293,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16293,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 16283,
											"end": 16293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16293,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16283,
											"end": 16293,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16293,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16293,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16293,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16293,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16293,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16293,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16293,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16350,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15517,
											"end": 15520,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 15517,
											"end": 15520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15478,
											"end": 16362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 15478,
											"end": 16362,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15478,
											"end": 16362,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 15478,
											"end": 16362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15478,
											"end": 16362,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14927,
											"end": 16369,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 18632,
											"end": 18773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18690,
											"end": 18713,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 18708,
											"end": 18712,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18690,
											"end": 18707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 18690,
											"end": 18713,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18690,
											"end": 18713,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 18690,
											"end": 18713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18724,
											"end": 18765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 18742,
											"end": 18752,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 18754,
											"end": 18758,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18760,
											"end": 18764,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18724,
											"end": 18741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 18724,
											"end": 18765,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 100,
											"end": 120,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 100,
											"end": 120,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1348,
											"end": 1961,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1348,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1713,
											"end": 1723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1713,
											"end": 1723,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1713,
											"end": 1723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 1712,
											"end": 1774,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1757,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1744,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1744,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1744,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1744,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1744,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1729,
											"end": 1744,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1744,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1729,
											"end": 1768,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1773,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1774,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 1712,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH data",
											"source": 2,
											"value": "EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 1704,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1864,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 1864,
											"end": 1954,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1889,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1864,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 1864,
											"end": 1954,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3696,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 3737,
											"end": 3743,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3745,
											"end": 3749,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 3752,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3715,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 20662,
											"end": 22715,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 20662,
											"end": 22715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20790,
											"end": 20808,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20811,
											"end": 20819,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20811,
											"end": 20830,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 20811,
											"end": 20830,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20811,
											"end": 20830,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20811,
											"end": 20830,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20811,
											"end": 20830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20811,
											"end": 20830,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20811,
											"end": 20830,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20811,
											"end": 20830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20811,
											"end": 20830,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 20811,
											"end": 20837,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 20872,
											"end": 20884,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 20872,
											"end": 20891,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 20908,
											"end": 20923,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20904,
											"end": 21487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 20904,
											"end": 21487,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21184,
											"end": 21193,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21179,
											"end": 21455,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 21179,
											"end": 21455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21203,
											"end": 21216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21199,
											"end": 21200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21199,
											"end": 21216,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 21179,
											"end": 21455,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21179,
											"end": 21455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 21179,
											"end": 21455,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21359,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21345,
											"end": 21359,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21359,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21359,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21353,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 21345,
											"end": 21359,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21345,
											"end": 21359,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21359,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21359,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21359,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21345,
											"end": 21359,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21359,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21359,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21399,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21399,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21399,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21396,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 21345,
											"end": 21396,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21399,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21399,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21399,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21399,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21399,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21439,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 21345,
											"end": 21439,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21439,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21439,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21345,
											"end": 21439,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21256,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21256,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21256,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21250,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 21242,
											"end": 21256,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21256,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21256,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21256,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21256,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21242,
											"end": 21261,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21261,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21261,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21261,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21261,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21261,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21261,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21301,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21301,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21301,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21298,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21298,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21301,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21301,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21301,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21301,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21301,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21342,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21342,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21242,
											"end": 21439,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 21218,
											"end": 21221,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21179,
											"end": 21455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 21179,
											"end": 21455,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21179,
											"end": 21455,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 21179,
											"end": 21455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21179,
											"end": 21455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21469,
											"end": 21476,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21469,
											"end": 21476,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21469,
											"end": 21476,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 21469,
											"end": 21476,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20904,
											"end": 21487,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 20904,
											"end": 21487,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21504,
											"end": 21513,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21499,
											"end": 22708,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 21499,
											"end": 22708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21523,
											"end": 21536,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21519,
											"end": 21520,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21519,
											"end": 21536,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 21499,
											"end": 22708,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21499,
											"end": 22708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 21499,
											"end": 22708,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21558,
											"end": 21587,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21590,
											"end": 21604,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21604,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21604,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21598,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 21590,
											"end": 21604,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21590,
											"end": 21604,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21604,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21604,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21604,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21590,
											"end": 21604,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21604,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21604,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21640,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21640,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21640,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21637,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 21590,
											"end": 21637,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21640,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21640,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21640,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21640,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21640,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21676,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 21590,
											"end": 21676,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21676,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21676,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21676,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21741,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21741,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21741,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21735,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 21727,
											"end": 21741,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21741,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21741,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21741,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21741,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21727,
											"end": 21746,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21746,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21746,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21746,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21746,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21746,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21746,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21746,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21746,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21782,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21782,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21782,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21779,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21779,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21782,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21782,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21782,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21782,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21782,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 21998,
											"end": 22027,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21998,
											"end": 22027,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21998,
											"end": 22027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21998,
											"end": 22027,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21676,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21676,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21782,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21727,
											"end": 21782,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1296,
											"name": "PUSH",
											"source": 8,
											"value": "E8D4A51000"
										},
										{
											"begin": 1292,
											"end": 1296,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 22043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 21939,
											"end": 22043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21972,
											"end": 22028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 21972,
											"end": 22028,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21676,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21676,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21972,
											"end": 21997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 21972,
											"end": 22028,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21972,
											"end": 22028,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 21972,
											"end": 22028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 21949,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 21949,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 21953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 21939,
											"end": 22043,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21939,
											"end": 22043,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 21939,
											"end": 22043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 22055,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 22055,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 21939,
											"end": 22055,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 22055,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 22055,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 21939,
											"end": 22055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22094,
											"end": 22120,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22094,
											"end": 22120,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 22055,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 22055,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 22055,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 22055,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22081,
											"end": 22121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 22081,
											"end": 22121,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 22055,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 22055,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22081,
											"end": 22093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 22081,
											"end": 22121,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22081,
											"end": 22121,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 22081,
											"end": 22121,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22070,
											"end": 22121,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22070,
											"end": 22121,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22167,
											"end": 22180,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 22167,
											"end": 22195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 22167,
											"end": 22195,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22187,
											"end": 22195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22167,
											"end": 22195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 22167,
											"end": 22195,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22167,
											"end": 22195,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 22167,
											"end": 22195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22183,
											"end": 22184,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22167,
											"end": 22195,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 22167,
											"end": 22195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22138,
											"end": 22195,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22138,
											"end": 22195,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 22296,
											"end": 22325,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 22296,
											"end": 22325,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22296,
											"end": 22325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22296,
											"end": 22349,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22296,
											"end": 22349,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22296,
											"end": 22349,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 22370,
											"end": 22383,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 22370,
											"end": 22399,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22370,
											"end": 22399,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 22370,
											"end": 22399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 22370,
											"end": 22399,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22370,
											"end": 22399,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22398,
											"end": 22399,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22387,
											"end": 22395,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22387,
											"end": 22399,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 22370,
											"end": 22399,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 22370,
											"end": 22399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22366,
											"end": 22697,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 22366,
											"end": 22697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 22366,
											"end": 22697,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22420,
											"end": 22474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 22442,
											"end": 22454,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 22455,
											"end": 22456,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22442,
											"end": 22457,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22460,
											"end": 22463,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 22465,
											"end": 22473,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22420,
											"end": 22431,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 22420,
											"end": 22474,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22420,
											"end": 22474,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 22420,
											"end": 22474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22581,
											"end": 22593,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 22594,
											"end": 22595,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22581,
											"end": 22596,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22554,
											"end": 22558,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 22554,
											"end": 22558,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "PUSH",
											"source": 8,
											"value": "F75F3D433C6628E04E01A0BE1A2C6692A6011CE4B00389824CFA8B8A12F3C1C4"
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22619,
											"end": 22627,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 22619,
											"end": 22627,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22650,
											"end": 22662,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": 22650,
											"end": 22662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22498,
											"end": 22681,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 22366,
											"end": 22697,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 22366,
											"end": 22697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21538,
											"end": 21541,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 21538,
											"end": 21541,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21499,
											"end": 22708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 21499,
											"end": 22708,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21499,
											"end": 22708,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 21499,
											"end": 22708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21499,
											"end": 22708,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20662,
											"end": 22715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20662,
											"end": 22715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20662,
											"end": 22715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20662,
											"end": 22715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20662,
											"end": 22715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20662,
											"end": 22715,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 985,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 985,
											"end": 1081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1010,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 985,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 985,
											"end": 1081,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 985,
											"end": 1081,
											"name": "tag",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 985,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19929,
											"end": 20560,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 19929,
											"end": 20560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19999,
											"end": 20020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20023,
											"end": 20037,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20023,
											"end": 20037,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20023,
											"end": 20037,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20023,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 20023,
											"end": 20037,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20023,
											"end": 20037,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20023,
											"end": 20037,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20023,
											"end": 20037,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20023,
											"end": 20037,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20023,
											"end": 20037,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20023,
											"end": 20037,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20023,
											"end": 20037,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 20072,
											"end": 20080,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 20072,
											"end": 20086,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20072,
											"end": 20086,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20072,
											"end": 20086,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20072,
											"end": 20086,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20072,
											"end": 20086,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 20087,
											"end": 20097,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 20072,
											"end": 20098,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 20072,
											"end": 20098,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20072,
											"end": 20098,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20072,
											"end": 20098,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20072,
											"end": 20098,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20072,
											"end": 20098,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20072,
											"end": 20098,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20072,
											"end": 20098,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 20117,
											"end": 20128,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20117,
											"end": 20128,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 20117,
											"end": 20139,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 20117,
											"end": 20139,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20109,
											"end": 20173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 20109,
											"end": 20173,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20109,
											"end": 20173,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20109,
											"end": 20173,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20109,
											"end": 20173,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20109,
											"end": 20173,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20109,
											"end": 20173,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 20109,
											"end": 20173,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20109,
											"end": 20173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 20109,
											"end": 20173,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20109,
											"end": 20173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 20109,
											"end": 20173,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20109,
											"end": 20173,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 20109,
											"end": 20173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20229,
											"end": 20252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 20247,
											"end": 20251,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20229,
											"end": 20246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 20229,
											"end": 20252,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20229,
											"end": 20252,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 20229,
											"end": 20252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20263,
											"end": 20304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 20281,
											"end": 20291,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 20293,
											"end": 20297,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 20299,
											"end": 20303,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 20263,
											"end": 20280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 20263,
											"end": 20304,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20263,
											"end": 20304,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 20263,
											"end": 20304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20331,
											"end": 20342,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20331,
											"end": 20342,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 20331,
											"end": 20355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 20331,
											"end": 20355,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20347,
											"end": 20354,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20331,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 20331,
											"end": 20355,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20331,
											"end": 20355,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 20331,
											"end": 20355,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20317,
											"end": 20355,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20317,
											"end": 20355,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 20384,
											"end": 20399,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20384,
											"end": 20399,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 20384,
											"end": 20412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 20384,
											"end": 20412,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20404,
											"end": 20411,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20384,
											"end": 20403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 20384,
											"end": 20412,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20384,
											"end": 20412,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 20384,
											"end": 20412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20366,
											"end": 20412,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20366,
											"end": 20412,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 20435,
											"end": 20450,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 20435,
											"end": 20450,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20435,
											"end": 20450,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20435,
											"end": 20450,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 20425,
											"end": 20485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 20425,
											"end": 20485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20435,
											"end": 20450,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20465,
											"end": 20475,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 20477,
											"end": 20484,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 20425,
											"end": 20464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 20425,
											"end": 20485,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20425,
											"end": 20485,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 20425,
											"end": 20485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20530,
											"end": 20542,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": 20524,
											"end": 20528,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20512,
											"end": 20522,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20503,
											"end": 20552,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20503,
											"end": 20552,
											"name": "PUSH",
											"source": 8,
											"value": "2F25270A4D87BEA75DB541CDFE559334A275B4A233520ED6C0A2429667CCA94"
										},
										{
											"begin": 20544,
											"end": 20551,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20503,
											"end": 20552,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20503,
											"end": 20552,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 20503,
											"end": 20552,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 20503,
											"end": 20552,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20503,
											"end": 20552,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20503,
											"end": 20552,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 20503,
											"end": 20552,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20503,
											"end": 20552,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 20503,
											"end": 20552,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20503,
											"end": 20552,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20503,
											"end": 20552,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 20503,
											"end": 20552,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20503,
											"end": 20552,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20503,
											"end": 20552,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20503,
											"end": 20552,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20503,
											"end": 20552,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 19929,
											"end": 20560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19929,
											"end": 20560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19929,
											"end": 20560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19929,
											"end": 20560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19929,
											"end": 20560,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23167,
											"end": 23421,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 23167,
											"end": 23421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23294,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23310,
											"end": 23331,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 23310,
											"end": 23331,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 23310,
											"end": 23331,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 23310,
											"end": 23345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 23310,
											"end": 23345,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23344,
											"end": 23345,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23310,
											"end": 23345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 23310,
											"end": 23345,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23310,
											"end": 23345,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 23310,
											"end": 23345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23334,
											"end": 23341,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23310,
											"end": 23345,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 23310,
											"end": 23345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23294,
											"end": 23345,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23294,
											"end": 23345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23368,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1681"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23356,
											"end": 23373,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23373,
											"name": "PUSH",
											"source": 8,
											"value": "7750C9F0"
										},
										{
											"begin": 23381,
											"end": 23386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23388,
											"end": 23393,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 23395,
											"end": 23403,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 23405,
											"end": 23412,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23356,
											"end": 23413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23167,
											"end": 23421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23167,
											"end": 23421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23167,
											"end": 23421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23167,
											"end": 23421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23167,
											"end": 23421,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 813,
											"end": 871,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 786,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 806,
											"end": 811,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 806,
											"end": 811,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 786,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 22851,
											"end": 23091,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 22851,
											"end": 23091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22950,
											"end": 22963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22990,
											"end": 23004,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22990,
											"end": 23004,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22990,
											"end": 23004,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22990,
											"end": 22998,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 22990,
											"end": 23004,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22990,
											"end": 23004,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22990,
											"end": 23004,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22990,
											"end": 23004,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22990,
											"end": 23004,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 22990,
											"end": 23013,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 22990,
											"end": 23013,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22990,
											"end": 23013,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22990,
											"end": 23013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22990,
											"end": 23013,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 22990,
											"end": 23013,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22990,
											"end": 23013,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 23037,
											"end": 23049,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": 23028,
											"end": 23049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23028,
											"end": 23049,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 23024,
											"end": 23083,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 23024,
											"end": 23083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 23024,
											"end": 23083,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23060,
											"end": 23083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 23060,
											"end": 23072,
											"name": "NUMBER",
											"source": 8
										},
										{
											"begin": 23060,
											"end": 23081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 23060,
											"end": 23083,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23060,
											"end": 23083,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 23060,
											"end": 23083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23051,
											"end": 23083,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23051,
											"end": 23083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23024,
											"end": 23083,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 23024,
											"end": 23083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22851,
											"end": 23091,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22851,
											"end": 23091,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22851,
											"end": 23091,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22851,
											"end": 23091,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3690,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH data",
											"source": 0,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3386,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "tag",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3495,
											"end": 3512,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3495,
											"end": 3512,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3495,
											"end": 3516,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3645,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "tag",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 2,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH data",
											"source": 2,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 2,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "tag",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4792,
											"end": 4797,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4788,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH data",
											"source": 3,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "tag",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "440"
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4858,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "tag",
											"source": 3,
											"value": "440"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 3,
											"value": "1D"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 3,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "tag",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4981,
											"end": 4993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5018,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5042,
											"end": 5047,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5054,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "445"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 3,
											"value": "445"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "448"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "447"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 3,
											"value": "448"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 3,
											"value": "447"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "449"
										},
										{
											"begin": 5090,
											"end": 5097,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5099,
											"end": 5109,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5111,
											"end": 5123,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "450"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "tag",
											"source": 3,
											"value": "449"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2017,
											"end": 2193,
											"name": "tag",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 2017,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2112,
											"name": "PUSH",
											"source": 5,
											"value": "100000000"
										},
										{
											"begin": 2099,
											"end": 2104,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2099,
											"end": 2112,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "452"
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "PUSH data",
											"source": 5,
											"value": "C907489DAFCFB622D3B83F2657A14D6DA2F59E0DE3116AF0D6A80554C1A7CB19"
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "tag",
											"source": 5,
											"value": "452"
										},
										{
											"begin": 2091,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2180,
											"end": 2185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2193,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "tag",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 3,
											"value": "450"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7218,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7234,
											"end": 7241,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "455"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7264,
											"end": 7274,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "tag",
											"source": 3,
											"value": "455"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7396,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7627,
											"end": 7644,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7693,
											"end": 7708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7680,
											"end": 7690,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7678,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7665,
											"end": 7709,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "tag",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7772,
											"end": 7784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 3,
											"value": "459"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "461"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "459"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 3,
											"value": "461"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "462"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 3,
											"value": "462"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 194,
											"end": 598,
											"name": "tag",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 194,
											"end": 598,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 194,
											"end": 598,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 598,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 327,
											"end": 330,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 320,
											"end": 324,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 312,
											"end": 318,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 308,
											"end": 325,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 304,
											"end": 331,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 294,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 294,
											"end": 296,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 352,
											"end": 360,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 342,
											"end": 350,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 335,
											"end": 361,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 294,
											"end": 296,
											"name": "tag",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 294,
											"end": 296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 382,
											"end": 402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 382,
											"end": 402,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 425,
											"end": 443,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 414,
											"end": 444,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 414,
											"end": 444,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 411,
											"end": 413,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 411,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 411,
											"end": 413,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 464,
											"end": 472,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 454,
											"end": 462,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 447,
											"end": 473,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 411,
											"end": 413,
											"name": "tag",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 411,
											"end": 413,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 508,
											"end": 512,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 500,
											"end": 506,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 496,
											"end": 513,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 484,
											"end": 513,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 484,
											"end": 513,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 571,
											"end": 574,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 564,
											"end": 568,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 556,
											"end": 560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 548,
											"end": 554,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 544,
											"end": 561,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 536,
											"end": 542,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 532,
											"end": 562,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 528,
											"end": 569,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 525,
											"end": 575,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 522,
											"end": 524,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 522,
											"end": 524,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 588,
											"end": 589,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 586,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 578,
											"end": 590,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 522,
											"end": 524,
											"name": "tag",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 522,
											"end": 524,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 284,
											"end": 598,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 284,
											"end": 598,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 284,
											"end": 598,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 284,
											"end": 598,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 284,
											"end": 598,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 284,
											"end": 598,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 603,
											"end": 768,
											"name": "tag",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 603,
											"end": 768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 672,
											"end": 692,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 732,
											"end": 742,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 721,
											"end": 743,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 721,
											"end": 743,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 711,
											"end": 744,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 711,
											"end": 744,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 701,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 701,
											"end": 703,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 758,
											"end": 759,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 756,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 748,
											"end": 760,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 773,
											"end": 971,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 773,
											"end": 971,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 773,
											"end": 971,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 887,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 864,
											"end": 871,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 860,
											"end": 883,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 856,
											"end": 888,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 853,
											"end": 855,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 853,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 853,
											"end": 855,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 906,
											"end": 912,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 898,
											"end": 904,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 891,
											"end": 913,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 853,
											"end": 855,
											"name": "tag",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 853,
											"end": 855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 934,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 934,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 934,
											"end": 965,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 976,
											"end": 1664,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 976,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 976,
											"end": 1664,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 1664,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 976,
											"end": 1664,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 1664,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 976,
											"end": 1664,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1175,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1160,
											"end": 1169,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1158,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1147,
											"end": 1170,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1176,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1194,
											"end": 1200,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1186,
											"end": 1192,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1179,
											"end": 1201,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "tag",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 1243,
											"end": 1252,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 1222,
											"end": 1253,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1222,
											"end": 1253,
											"name": "tag",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 1222,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1253,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1253,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 1307,
											"end": 1309,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1305,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1310,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 1272,
											"end": 1311,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1272,
											"end": 1311,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 1272,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1262,
											"end": 1311,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1262,
											"end": 1311,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1330,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 1365,
											"end": 1367,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1363,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1350,
											"end": 1368,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1330,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 1330,
											"end": 1369,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1330,
											"end": 1369,
											"name": "tag",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 1330,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1320,
											"end": 1369,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1320,
											"end": 1369,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1420,
											"end": 1422,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1405,
											"end": 1423,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1392,
											"end": 1424,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1447,
											"end": 1465,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1445,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1436,
											"end": 1466,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1469,
											"end": 1491,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1528,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 1596,
											"end": 1603,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1587,
											"end": 1593,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1594,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1528,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 1528,
											"end": 1604,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1528,
											"end": 1604,
											"name": "tag",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 1528,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1130,
											"end": 1664,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 1130,
											"end": 1664,
											"name": "SWAP10",
											"source": 11
										},
										{
											"begin": 1130,
											"end": 1664,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 1130,
											"end": 1664,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1130,
											"end": 1664,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1130,
											"end": 1664,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1623,
											"end": 1631,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1631,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1502,
											"end": 1604,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1130,
											"end": 1664,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1130,
											"end": 1664,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1669,
											"end": 2132,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1669,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 2132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 2132,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1816,
											"end": 1818,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1804,
											"end": 1813,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1795,
											"end": 1802,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1791,
											"end": 1814,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1787,
											"end": 1819,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1784,
											"end": 1786,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1784,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 1784,
											"end": 1786,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1822,
											"end": 1844,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1784,
											"end": 1786,
											"name": "tag",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 1784,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1891,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1869,
											"end": 1892,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 1933,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1913,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1904,
											"end": 1934,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1903,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 1901,
											"end": 1903,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1944,
											"end": 1950,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1937,
											"end": 1959,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1903,
											"name": "tag",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 1901,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1996,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 2064,
											"end": 2071,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2055,
											"end": 2061,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2044,
											"end": 2053,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2040,
											"end": 2062,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1996,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 1996,
											"end": 2072,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1996,
											"end": 2072,
											"name": "tag",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 1996,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2099,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2099,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 1970,
											"end": 2072,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1970,
											"end": 2072,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1774,
											"end": 2132,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1774,
											"end": 2132,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2137,
											"end": 2327,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2137,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2327,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2251,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2235,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2247,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2220,
											"end": 2252,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2217,
											"end": 2219,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2217,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 2217,
											"end": 2219,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2270,
											"end": 2276,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2262,
											"end": 2268,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2255,
											"end": 2277,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2217,
											"end": 2219,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 2217,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 2321,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2298,
											"end": 2321,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2207,
											"end": 2327,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2207,
											"end": 2327,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2332,
											"end": 2598,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2332,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2332,
											"end": 2598,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2598,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2461,
											"end": 2463,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2449,
											"end": 2458,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2440,
											"end": 2447,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2464,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2431,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 2429,
											"end": 2431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2488,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2480,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2467,
											"end": 2489,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2431,
											"name": "tag",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 2429,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2523,
											"end": 2532,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2510,
											"end": 2533,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2500,
											"end": 2533,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2500,
											"end": 2533,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2552,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 2588,
											"end": 2590,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2577,
											"end": 2586,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2552,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 2552,
											"end": 2592,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2552,
											"end": 2592,
											"name": "tag",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 2552,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2542,
											"end": 2592,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2542,
											"end": 2592,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2419,
											"end": 2598,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2419,
											"end": 2598,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2419,
											"end": 2598,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2419,
											"end": 2598,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2419,
											"end": 2598,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2419,
											"end": 2598,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2603,
											"end": 2861,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 2603,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2603,
											"end": 2861,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2603,
											"end": 2861,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2732,
											"end": 2734,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2729,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2711,
											"end": 2718,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2707,
											"end": 2730,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2759,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2745,
											"end": 2751,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2738,
											"end": 2760,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "tag",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2851,
											"end": 2853,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2854,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2854,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2854,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2855,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2855,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2690,
											"end": 2861,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2866,
											"end": 3295,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 2866,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2866,
											"end": 3295,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 3295,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2866,
											"end": 3295,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3011,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2997,
											"end": 3006,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3007,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 3012,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2977,
											"end": 2979,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2977,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 2977,
											"end": 2979,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3036,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2977,
											"end": 2979,
											"name": "tag",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 2977,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3080,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3081,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3048,
											"end": 3081,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3048,
											"end": 3081,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3126,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3132,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3132,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3182,
											"end": 3184,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3171,
											"end": 3180,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3185,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3186,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3229,
											"end": 3234,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3222,
											"end": 3235,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3236,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3208,
											"end": 3213,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3237,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3195,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 3195,
											"end": 3197,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3248,
											"end": 3254,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3241,
											"end": 3263,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3195,
											"end": 3197,
											"name": "tag",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 3195,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3289,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3274,
											"end": 3289,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3274,
											"end": 3289,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3274,
											"end": 3289,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 3295,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 3295,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 3295,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 3295,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 3295,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 3295,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3300,
											"end": 3905,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 3300,
											"end": 3905,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3300,
											"end": 3905,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3905,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3300,
											"end": 3905,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3905,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3480,
											"end": 3482,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3468,
											"end": 3477,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3459,
											"end": 3466,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3478,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3483,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3448,
											"end": 3450,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3448,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 3448,
											"end": 3450,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3501,
											"end": 3507,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3486,
											"end": 3508,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3448,
											"end": 3450,
											"name": "tag",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 3448,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3529,
											"end": 3552,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3552,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3552,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "501"
										},
										{
											"begin": 3606,
											"end": 3608,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3595,
											"end": 3604,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3591,
											"end": 3609,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "tag",
											"source": 11,
											"value": "501"
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3561,
											"end": 3610,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3561,
											"end": 3610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3661,
											"end": 3663,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3650,
											"end": 3659,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3646,
											"end": 3664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3665,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3706,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3680,
											"end": 3686,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3677,
											"end": 3707,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3676,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 3674,
											"end": 3676,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3725,
											"end": 3731,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3717,
											"end": 3723,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3676,
											"name": "tag",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 3674,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3769,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 3837,
											"end": 3844,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3828,
											"end": 3834,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3826,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3769,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 3769,
											"end": 3845,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3769,
											"end": 3845,
											"name": "tag",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 3769,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3438,
											"end": 3905,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3438,
											"end": 3905,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 3438,
											"end": 3905,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3438,
											"end": 3905,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3864,
											"end": 3872,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3438,
											"end": 3905,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3910,
											"end": 4590,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 3910,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3910,
											"end": 4590,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3910,
											"end": 4590,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3910,
											"end": 4590,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3910,
											"end": 4590,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3910,
											"end": 4590,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4109,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 4094,
											"end": 4103,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4085,
											"end": 4092,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4081,
											"end": 4104,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4077,
											"end": 4110,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4074,
											"end": 4076,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4074,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 4074,
											"end": 4076,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4128,
											"end": 4134,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4120,
											"end": 4126,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4074,
											"end": 4076,
											"name": "tag",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 4074,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4169,
											"end": 4178,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4156,
											"end": 4179,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4146,
											"end": 4179,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 4146,
											"end": 4179,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 4233,
											"end": 4235,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4222,
											"end": 4231,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4218,
											"end": 4236,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 4198,
											"end": 4237,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4595,
											"end": 5038,
											"name": "tag",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 4595,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4595,
											"end": 5038,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4692,
											"end": 4697,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4719,
											"end": 4725,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4714,
											"end": 4717,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4707,
											"end": 4726,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4745,
											"end": 4749,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4774,
											"end": 4776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4769,
											"end": 4772,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4765,
											"end": 4777,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4758,
											"end": 4777,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 4758,
											"end": 4777,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4813,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4804,
											"end": 4809,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4800,
											"end": 4814,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4832,
											"end": 4835,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4844,
											"end": 5013,
											"name": "tag",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 4844,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4864,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4852,
											"end": 4865,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4844,
											"end": 5013,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4844,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 4844,
											"end": 5013,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4932,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4919,
											"end": 4932,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4907,
											"end": 4933,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4907,
											"end": 4933,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4953,
											"end": 4965,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4953,
											"end": 4965,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4953,
											"end": 4965,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4953,
											"end": 4965,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4988,
											"end": 5003,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4988,
											"end": 5003,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4988,
											"end": 5003,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4988,
											"end": 5003,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4880,
											"end": 4881,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4873,
											"end": 4882,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4844,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 4844,
											"end": 5013,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4844,
											"end": 5013,
											"name": "tag",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 4844,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5029,
											"end": 5032,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5029,
											"end": 5032,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4662,
											"end": 5038,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4662,
											"end": 5038,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5043,
											"end": 5248,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 5043,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5243,
											"end": 5246,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5234,
											"end": 5248,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5253,
											"end": 5456,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 5253,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5417,
											"end": 5449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5417,
											"end": 5449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5417,
											"end": 5449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5417,
											"end": 5449,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5399,
											"end": 5450,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5399,
											"end": 5450,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5387,
											"end": 5389,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5372,
											"end": 5390,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5390,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5354,
											"end": 5456,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5461,
											"end": 6122,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 5461,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5634,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5684,
											"end": 5705,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 5705,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 5705,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5754,
											"end": 5767,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5754,
											"end": 5767,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5657,
											"end": 5675,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5657,
											"end": 5675,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5657,
											"end": 5675,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5776,
											"end": 5798,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5776,
											"end": 5798,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5776,
											"end": 5798,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5461,
											"end": 6122,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 6122,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5634,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5855,
											"end": 5870,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5855,
											"end": 5870,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5855,
											"end": 5870,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5855,
											"end": 5870,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5829,
											"end": 5831,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5814,
											"end": 5832,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5814,
											"end": 5832,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5814,
											"end": 5832,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5461,
											"end": 6122,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5901,
											"end": 6096,
											"name": "tag",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 5901,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5915,
											"end": 5921,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 5913,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5909,
											"end": 5922,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5901,
											"end": 6096,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5901,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 5901,
											"end": 6096,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5980,
											"end": 5993,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5980,
											"end": 5993,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5976,
											"end": 6015,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5964,
											"end": 6016,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5964,
											"end": 6016,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6071,
											"end": 6086,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6071,
											"end": 6086,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6071,
											"end": 6086,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6071,
											"end": 6086,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6036,
											"end": 6048,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6036,
											"end": 6048,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6036,
											"end": 6048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6036,
											"end": 6048,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6012,
											"end": 6013,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5930,
											"end": 5939,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5901,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 5901,
											"end": 6096,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5901,
											"end": 6096,
											"name": "tag",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 5901,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6113,
											"end": 6116,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6113,
											"end": 6116,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 5612,
											"end": 6122,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5612,
											"end": 6122,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6127,
											"end": 6623,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 6127,
											"end": 6623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6298,
											"end": 6319,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6298,
											"end": 6319,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6298,
											"end": 6319,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6328,
											"end": 6362,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6328,
											"end": 6362,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6328,
											"end": 6362,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6127,
											"end": 6623,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6374,
											"end": 6405,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6374,
											"end": 6405,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6371,
											"end": 6373,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6371,
											"end": 6373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 6371,
											"end": 6373,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6425,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6415,
											"end": 6419,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6371,
											"end": 6373,
											"name": "tag",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 6371,
											"end": 6373,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6465,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6455,
											"end": 6461,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6466,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6516,
											"end": 6522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6508,
											"end": 6514,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6505,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6492,
											"end": 6501,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6488,
											"end": 6506,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6475,
											"end": 6523,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 6546,
											"end": 6568,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6546,
											"end": 6568,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6546,
											"end": 6568,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6546,
											"end": 6568,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6570,
											"end": 6572,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6542,
											"end": 6573,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6598,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6598,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6598,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6542,
											"end": 6573,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6288,
											"end": 6623,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6288,
											"end": 6623,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6628,
											"end": 6895,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 6628,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6628,
											"end": 6895,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6807,
											"end": 6809,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6796,
											"end": 6805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6789,
											"end": 6810,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6827,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 6885,
											"end": 6887,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6874,
											"end": 6883,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6870,
											"end": 6888,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6862,
											"end": 6868,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6827,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 6827,
											"end": 6889,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6900,
											"end": 7087,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 6900,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7065,
											"end": 7079,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7065,
											"end": 7079,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7058,
											"end": 7080,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7040,
											"end": 7081,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7040,
											"end": 7081,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7028,
											"end": 7030,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7013,
											"end": 7031,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7013,
											"end": 7031,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6995,
											"end": 7087,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7092,
											"end": 7485,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 7092,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7368,
											"end": 7383,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7368,
											"end": 7383,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7368,
											"end": 7383,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7350,
											"end": 7384,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7350,
											"end": 7384,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7420,
											"end": 7435,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7420,
											"end": 7435,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7420,
											"end": 7435,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7420,
											"end": 7435,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7415,
											"end": 7417,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7400,
											"end": 7418,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7400,
											"end": 7418,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7393,
											"end": 7436,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7467,
											"end": 7469,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7452,
											"end": 7470,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7452,
											"end": 7470,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7445,
											"end": 7479,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7445,
											"end": 7479,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7445,
											"end": 7479,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7445,
											"end": 7479,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7300,
											"end": 7302,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7285,
											"end": 7303,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7285,
											"end": 7303,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7267,
											"end": 7485,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7725,
											"end": 8073,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 7725,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7927,
											"end": 7929,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7909,
											"end": 7930,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7909,
											"end": 7930,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7909,
											"end": 7930,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7966,
											"end": 7968,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 7946,
											"end": 7964,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7946,
											"end": 7964,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7946,
											"end": 7964,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7939,
											"end": 7969,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8005,
											"end": 8031,
											"name": "PUSH",
											"source": 11,
											"value": "6164643A20696E76616C6964207374616B6520746F6B656E0000000000000000"
										},
										{
											"begin": 8000,
											"end": 8002,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7985,
											"end": 8003,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7985,
											"end": 8003,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7978,
											"end": 8032,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8064,
											"end": 8066,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8049,
											"end": 8067,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8049,
											"end": 8067,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7899,
											"end": 8073,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8078,
											"end": 8423,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 8078,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8280,
											"end": 8282,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8262,
											"end": 8283,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8262,
											"end": 8283,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8262,
											"end": 8283,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8319,
											"end": 8321,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 8299,
											"end": 8317,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8299,
											"end": 8317,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8299,
											"end": 8317,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8292,
											"end": 8322,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72656E65773A20696E76616C696420626C6F636B73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8353,
											"end": 8355,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8331,
											"end": 8382,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8414,
											"end": 8416,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8399,
											"end": 8417,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8399,
											"end": 8417,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8252,
											"end": 8423,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8428,
											"end": 8774,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 8428,
											"end": 8774,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8630,
											"end": 8632,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8612,
											"end": 8633,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8612,
											"end": 8633,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8612,
											"end": 8633,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8669,
											"end": 8671,
											"name": "PUSH",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 8649,
											"end": 8667,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8649,
											"end": 8667,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8649,
											"end": 8667,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8642,
											"end": 8672,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EAE0C8C2E8CA7440D2DCECC2D8D2C840D8CADCCEE8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8703,
											"end": 8705,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8688,
											"end": 8706,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8688,
											"end": 8706,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8681,
											"end": 8733,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8765,
											"end": 8767,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8750,
											"end": 8768,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8750,
											"end": 8768,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8602,
											"end": 8774,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8779,
											"end": 9118,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 8779,
											"end": 9118,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8981,
											"end": 8983,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8963,
											"end": 8984,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8963,
											"end": 8984,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8963,
											"end": 8984,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9020,
											"end": 9022,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 9000,
											"end": 9018,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9000,
											"end": 9018,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9000,
											"end": 9018,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8993,
											"end": 9023,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985B1A59081C1BDBDB081A59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9054,
											"end": 9056,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9039,
											"end": 9057,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9039,
											"end": 9057,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9032,
											"end": 9077,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9109,
											"end": 9111,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9094,
											"end": 9112,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9094,
											"end": 9112,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8953,
											"end": 9118,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 9123,
											"end": 9466,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 9123,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9325,
											"end": 9327,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9307,
											"end": 9328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9307,
											"end": 9328,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9307,
											"end": 9328,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9364,
											"end": 9366,
											"name": "PUSH",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 9344,
											"end": 9362,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9344,
											"end": 9362,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9344,
											"end": 9362,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9337,
											"end": 9367,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C2C8C87440D2DCECC2D8D2C840D8CADCCEE8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9398,
											"end": 9400,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9457,
											"end": 9459,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9442,
											"end": 9460,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9442,
											"end": 9460,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9466,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 9471,
											"end": 9816,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 9471,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9673,
											"end": 9675,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9655,
											"end": 9676,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9655,
											"end": 9676,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9655,
											"end": 9676,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9712,
											"end": 9714,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 9692,
											"end": 9710,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9692,
											"end": 9710,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9692,
											"end": 9710,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9685,
											"end": 9715,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4CADCCAEE7440D2DCECC2D8D2C840D8CADCCEE8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9746,
											"end": 9748,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9731,
											"end": 9749,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9731,
											"end": 9749,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9724,
											"end": 9775,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9807,
											"end": 9809,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9792,
											"end": 9810,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9792,
											"end": 9810,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9645,
											"end": 9816,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 9821,
											"end": 10174,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 9821,
											"end": 10174,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10023,
											"end": 10025,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10005,
											"end": 10026,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10005,
											"end": 10026,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10005,
											"end": 10026,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10062,
											"end": 10064,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 10042,
											"end": 10060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10042,
											"end": 10060,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10042,
											"end": 10060,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10035,
											"end": 10065,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10101,
											"end": 10132,
											"name": "PUSH",
											"source": 11,
											"value": "77697468647261773A20696E73756666696369656E7420616D6F756E74000000"
										},
										{
											"begin": 10096,
											"end": 10098,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10081,
											"end": 10099,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10081,
											"end": 10099,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10074,
											"end": 10133,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10165,
											"end": 10167,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 10150,
											"end": 10168,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10150,
											"end": 10168,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9995,
											"end": 10174,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10179,
											"end": 10528,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 10179,
											"end": 10528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10381,
											"end": 10383,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10363,
											"end": 10384,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10363,
											"end": 10384,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10363,
											"end": 10384,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10420,
											"end": 10422,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 10400,
											"end": 10418,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10400,
											"end": 10418,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10400,
											"end": 10418,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10393,
											"end": 10423,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10459,
											"end": 10486,
											"name": "PUSH",
											"source": 11,
											"value": "7570646174653A20696E76616C696420656E6420626C6F636B00000000000000"
										},
										{
											"begin": 10454,
											"end": 10456,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10439,
											"end": 10457,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10439,
											"end": 10457,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10432,
											"end": 10487,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10519,
											"end": 10521,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 10504,
											"end": 10522,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10504,
											"end": 10522,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10353,
											"end": 10528,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10533,
											"end": 10885,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 10533,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10735,
											"end": 10737,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10717,
											"end": 10738,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10717,
											"end": 10738,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10717,
											"end": 10738,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10774,
											"end": 10776,
											"name": "PUSH",
											"source": 11,
											"value": "1C"
										},
										{
											"begin": 10754,
											"end": 10772,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10754,
											"end": 10772,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10754,
											"end": 10772,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10747,
											"end": 10777,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10813,
											"end": 10843,
											"name": "PUSH",
											"source": 11,
											"value": "7472616E736665722072657761726420746F6B656E206661696C656400000000"
										},
										{
											"begin": 10808,
											"end": 10810,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10793,
											"end": 10811,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10793,
											"end": 10811,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10786,
											"end": 10844,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10876,
											"end": 10878,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 10861,
											"end": 10879,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10861,
											"end": 10879,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10707,
											"end": 10885,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10890,
											"end": 11234,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 10890,
											"end": 11234,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11092,
											"end": 11094,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11074,
											"end": 11095,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11074,
											"end": 11095,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11074,
											"end": 11095,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11131,
											"end": 11133,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 11111,
											"end": 11129,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11111,
											"end": 11129,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11111,
											"end": 11129,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11104,
											"end": 11134,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1859190E88191D5C1B1A58D85D1959081C1BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11165,
											"end": 11167,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11143,
											"end": 11193,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11225,
											"end": 11227,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 11210,
											"end": 11228,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11210,
											"end": 11228,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11064,
											"end": 11234,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11239,
											"end": 11637,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 11239,
											"end": 11637,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11441,
											"end": 11443,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11423,
											"end": 11444,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11423,
											"end": 11444,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11423,
											"end": 11444,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11480,
											"end": 11482,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 11460,
											"end": 11478,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11460,
											"end": 11478,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11460,
											"end": 11478,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11453,
											"end": 11483,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11519,
											"end": 11553,
											"name": "PUSH",
											"source": 11,
											"value": "72656E65773A20696E76616C696420706F6F6C20737461746520746F2072656E"
										},
										{
											"begin": 11514,
											"end": 11516,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11499,
											"end": 11517,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11499,
											"end": 11517,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11492,
											"end": 11554,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6577"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11585,
											"end": 11587,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 11570,
											"end": 11588,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11570,
											"end": 11588,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11563,
											"end": 11595,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11627,
											"end": 11630,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 11612,
											"end": 11631,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11612,
											"end": 11631,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11413,
											"end": 11637,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11642,
											"end": 11992,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 11642,
											"end": 11992,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11844,
											"end": 11846,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11826,
											"end": 11847,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11826,
											"end": 11847,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11826,
											"end": 11847,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11883,
											"end": 11885,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 11863,
											"end": 11881,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11863,
											"end": 11881,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11863,
											"end": 11881,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11856,
											"end": 11886,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11922,
											"end": 11950,
											"name": "PUSH",
											"source": 11,
											"value": "7570646174653A20706F6F6C20616C726561647920656E646564000000000000"
										},
										{
											"begin": 11917,
											"end": 11919,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11902,
											"end": 11920,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11902,
											"end": 11920,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11895,
											"end": 11951,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11983,
											"end": 11985,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 11968,
											"end": 11986,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11968,
											"end": 11986,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11816,
											"end": 11992,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11997,
											"end": 12340,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 11997,
											"end": 12340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12199,
											"end": 12201,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12181,
											"end": 12202,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12181,
											"end": 12202,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12181,
											"end": 12202,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12238,
											"end": 12240,
											"name": "PUSH",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 12218,
											"end": 12236,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12218,
											"end": 12236,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12218,
											"end": 12236,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12211,
											"end": 12241,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6164643A20696E76616C696420626C6F636B73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12272,
											"end": 12274,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12250,
											"end": 12299,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12331,
											"end": 12333,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 12316,
											"end": 12334,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12316,
											"end": 12334,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12171,
											"end": 12340,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 12345,
											"end": 12522,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 12345,
											"end": 12522,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12491,
											"end": 12516,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12491,
											"end": 12516,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12491,
											"end": 12516,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12479,
											"end": 12481,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12464,
											"end": 12482,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12464,
											"end": 12482,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12446,
											"end": 12522,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 12527,
											"end": 13440,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 12527,
											"end": 13440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12900,
											"end": 12925,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 12900,
											"end": 12925,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12900,
											"end": 12925,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12961,
											"end": 12993,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 12961,
											"end": 12993,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12956,
											"end": 12958,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12941,
											"end": 12959,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12941,
											"end": 12959,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12934,
											"end": 12994,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13013,
											"end": 13023,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13059,
											"end": 13074,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 13059,
											"end": 13074,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13059,
											"end": 13074,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13054,
											"end": 13056,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13039,
											"end": 13057,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13039,
											"end": 13057,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13032,
											"end": 13075,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13111,
											"end": 13126,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13111,
											"end": 13126,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13111,
											"end": 13126,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13106,
											"end": 13108,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 13091,
											"end": 13109,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13091,
											"end": 13109,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13084,
											"end": 13127,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13164,
											"end": 13179,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13164,
											"end": 13179,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13158,
											"end": 13161,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 13143,
											"end": 13162,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13143,
											"end": 13162,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13136,
											"end": 13180,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13217,
											"end": 13220,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 12981,
											"end": 12984,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 13196,
											"end": 13215,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13196,
											"end": 13215,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13189,
											"end": 13221,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13189,
											"end": 13221,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13189,
											"end": 13221,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12527,
											"end": 13440,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12527,
											"end": 13440,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13244,
											"end": 13307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 13244,
											"end": 13307,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13287,
											"end": 13306,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13287,
											"end": 13306,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13279,
											"end": 13285,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13244,
											"end": 13307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 13244,
											"end": 13307,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13244,
											"end": 13307,
											"name": "tag",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 13244,
											"end": 13307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13356,
											"end": 13365,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13348,
											"end": 13354,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13344,
											"end": 13366,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13338,
											"end": 13341,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 13327,
											"end": 13336,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13323,
											"end": 13342,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13316,
											"end": 13367,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13384,
											"end": 13434,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 13427,
											"end": 13433,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13419,
											"end": 13425,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13384,
											"end": 13434,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 13384,
											"end": 13434,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13384,
											"end": 13434,
											"name": "tag",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 13384,
											"end": 13434,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13376,
											"end": 13434,
											"name": "SWAP11",
											"source": 11
										},
										{
											"begin": 12890,
											"end": 13440,
											"name": "SWAP10",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12890,
											"end": 13440,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13445,
											"end": 13993,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 13445,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13445,
											"end": 13993,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13730,
											"end": 13736,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13719,
											"end": 13728,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13712,
											"end": 13737,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13773,
											"end": 13775,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 13768,
											"end": 13770,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13757,
											"end": 13766,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13753,
											"end": 13771,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13746,
											"end": 13776,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13799,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "546"
										},
										{
											"begin": 13857,
											"end": 13859,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 13846,
											"end": 13855,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13842,
											"end": 13860,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13834,
											"end": 13840,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13799,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 13799,
											"end": 13861,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13799,
											"end": 13861,
											"name": "tag",
											"source": 11,
											"value": "546"
										},
										{
											"begin": 13799,
											"end": 13861,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13909,
											"end": 13918,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13901,
											"end": 13907,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13897,
											"end": 13919,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13892,
											"end": 13894,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13881,
											"end": 13890,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13877,
											"end": 13895,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13870,
											"end": 13920,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13937,
											"end": 13987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 13980,
											"end": 13986,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13972,
											"end": 13978,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13937,
											"end": 13987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 13937,
											"end": 13987,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13937,
											"end": 13987,
											"name": "tag",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 13937,
											"end": 13987,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13929,
											"end": 13987,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 13702,
											"end": 13993,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13702,
											"end": 13993,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13998,
											"end": 14246,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 13998,
											"end": 14246,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14172,
											"end": 14197,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14172,
											"end": 14197,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14172,
											"end": 14197,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14228,
											"end": 14230,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14213,
											"end": 14231,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14213,
											"end": 14231,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14206,
											"end": 14240,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14160,
											"end": 14162,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14145,
											"end": 14163,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14145,
											"end": 14163,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14127,
											"end": 14246,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										}
									],
									".data": {
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"C907489DAFCFB622D3B83F2657A14D6DA2F59E0DE3116AF0D6A80554C1A7CB19": "53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473",
										"D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c00",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365"
									}
								},
								"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
								"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
								"EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365"
							}
						},
						"methodIdentifiers": {
							"addPool(address,uint32,uint32,uint256[])": "2fb40ce1",
							"admin()": "f851a440",
							"adminWithdraw(uint256,uint256)": "d12e4ceb",
							"claimAdmin()": "77f50f97",
							"deposit(uint256,uint256,bool)": "43a0d066",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"getPoolInfo(uint256)": "2f380b35",
							"getRewardTokens()": "c4f59f9b",
							"getUserInfo(uint256,address)": "1069f3b5",
							"harvest(uint256)": "ddc63262",
							"harvestMultiplePools(uint256[])": "52fd9f2f",
							"pendingAdmin()": "26782247",
							"pendingRewards(uint256,address)": "d18df53c",
							"poolExists(address)": "1e1c6a07",
							"poolLength()": "081e3eda",
							"renewPool(uint256,uint32,uint32,uint256[])": "b43c6270",
							"rewardLocker()": "3892601c",
							"rewardTokens(uint256)": "7bb7bed1",
							"transferAdmin(address)": "75829def",
							"transferAdminQuickly(address)": "7acc8678",
							"updatePool(uint256,uint32,uint256[])": "affb9fc8",
							"updatePoolRewards(uint256)": "adb82b31",
							"withdraw(uint256,uint256)": "441a3e70",
							"withdrawAll(uint256)": "958e2d31"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_rewardTokens\",\"type\":\"address[]\"},{\"internalType\":\"contract IKyberRewardLocker\",\"name\":\"_rewardLocker\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"endBlock\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"rewardPerBlocks\",\"type\":\"uint256[]\"}],\"name\":\"AddNewPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"}],\"name\":\"AdminClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"endBlock\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"rewardPerBlocks\",\"type\":\"uint256[]\"}],\"name\":\"RenewPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pendingAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdminPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"endBlock\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"rewardPerBlocks\",\"type\":\"uint256[]\"}],\"name\":\"UpdatePool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakeToken\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_startBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_endBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"_rewardPerBlocks\",\"type\":\"uint256[]\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardTokenIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"adminWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_shouldHarvest\",\"type\":\"bool\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"getPoolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalStake\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"lastRewardBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"rewardPerBlocks\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"accRewardPerShares\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"unclaimedRewards\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"lastRewardPerShares\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_pids\",\"type\":\"uint256[]\"}],\"name\":\"harvestMultiplePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingRewards\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"rewards\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_startBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_endBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"_rewardPerBlocks\",\"type\":\"uint256[]\"}],\"name\":\"renewPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardLocker\",\"outputs\":[{\"internalType\":\"contract IKyberRewardLocker\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdminQuickly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_endBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"_rewardPerBlocks\",\"type\":\"uint256[]\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePoolRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addPool(address,uint32,uint32,uint256[])\":{\"details\":\"Add a new lp to the pool. Can only be called by the admin.\",\"params\":{\"_endBlock\":\": block where the reward ends\",\"_rewardPerBlocks\":\": amount of reward token per block for the pool for each reward token\",\"_stakeToken\":\": token to be staked to the pool\",\"_startBlock\":\": block where the reward starts\"}},\"adminWithdraw(uint256,uint256)\":{\"details\":\"Allow admin to withdraw only reward tokens\"},\"claimAdmin()\":{\"details\":\"Allows the pendingAdmin address to finalize the change admin process.\"},\"deposit(uint256,uint256,bool)\":{\"details\":\"Deposit tokens to accumulate rewards\",\"params\":{\"_amount\":\": amount of stakeToken to be deposited\",\"_pid\":\": id of the pool\",\"_shouldHarvest\":\": whether to harvest the reward or not\"}},\"emergencyWithdraw(uint256)\":{\"details\":\"Emergency withdrawal function to allow withdraw all deposited tokens (of the sender)   and reset all rewards\",\"params\":{\"_pid\":\": id of the pool\"}},\"getPoolInfo(uint256)\":{\"details\":\"Return full details of a pool\"},\"getRewardTokens()\":{\"details\":\"Return list reward tokens\"},\"getUserInfo(uint256,address)\":{\"details\":\"Return user's info including deposited amount and reward data\"},\"harvest(uint256)\":{\"details\":\"Harvest rewards from a pool for the sender\",\"params\":{\"_pid\":\": id of the pool\"}},\"harvestMultiplePools(uint256[])\":{\"details\":\"Harvest rewards from multiple pools for the sender   combine rewards from all pools and only transfer once to save gas\"},\"pendingRewards(uint256,address)\":{\"details\":\"Get pending rewards of a user from a pool, mostly for front-end\",\"params\":{\"_pid\":\": id of the pool\",\"_user\":\": user to check for pending rewards\"}},\"renewPool(uint256,uint32,uint32,uint256[])\":{\"details\":\"Renew a pool to start another liquidity mining program\",\"params\":{\"_endBlock\":\": block where the reward ends\",\"_pid\":\": id of the pool to renew, must be pool that has not started or already ended\",\"_rewardPerBlocks\":\": amount of reward token per block for the pool   0 if we want to stop the pool from accumulating rewards\",\"_startBlock\":\": block where the reward starts\"}},\"transferAdmin(address)\":{\"details\":\"Allows the current admin to set the pendingAdmin address.\",\"params\":{\"newAdmin\":\"The address to transfer ownership to.\"}},\"transferAdminQuickly(address)\":{\"details\":\"Allows the current admin to set the admin in one tx. Useful initial deployment.\",\"params\":{\"newAdmin\":\"The address to transfer ownership to.\"}},\"updatePool(uint256,uint32,uint256[])\":{\"details\":\"Update a pool, allow to change end block, reward per block\",\"params\":{\"_endBlock\":\": block where the reward ends\",\"_pid\":\": pool id to be renew\",\"_rewardPerBlocks\":\": amount of reward token per block for the pool,   0 if we want to stop the pool from accumulating rewards\"}},\"updatePoolRewards(uint256)\":{\"details\":\"Update rewards for one pool\"},\"withdraw(uint256,uint256)\":{\"details\":\"Withdraw token (of the sender) from pool, also harvest rewards\",\"params\":{\"_amount\":\": amount of stakeToken to withdraw\",\"_pid\":\": id of the pool\"}},\"withdrawAll(uint256)\":{\"details\":\"Withdraw all tokens (of the sender) from pool, also harvest reward\",\"params\":{\"_pid\":\": id of the pool\"}}},\"stateVariables\":{\"poolLength\":{\"details\":\"return the total of pools that have been added\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"emergencyWithdraw(uint256)\":{\"notice\":\"EMERGENCY USAGE ONLY, USER'S REWARDS WILL BE RESET\"}},\"notice\":\"FairLaunch contract for Kyber DMM Liquidity Mining program Allow stakers to stake LP tokens and receive reward tokens Allow extend or renew a pool to continue/restart the LM program When harvesting, rewards will be transferred to a RewardLocker Support multiple reward tokens, reward tokens must be distinct and immutable\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/liquidityMining/KyberFairLaunch.sol\":\"KyberFairLaunch\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182\",\"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK\"]},\"@openzeppelin/contracts/utils/SafeCast.sol\":{\"keccak256\":\"0x7b2b8baa20fd60ab4a328c8e34c64a353651b80ba4b5b157cbb61813f6f85d55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://125b7f9efa390e663d630c62b97ae4e0707f31623bea989ef94c97ca9d777dd2\",\"dweb:/ipfs/QmaaLSuwvqK7wqcgyS3utHgfmB7RntcvP7eJSuvQod8Z9P\"]},\"contracts/interfaces/liquidityMining/IKyberFairLaunch.sol\":{\"keccak256\":\"0x6a6bc894e7f69ee50094f8b42d3638dda4b6d0d9e9b8fd0bda6eadf4b2d0bc66\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://0a517744db39d5ecdb31c53f7402276fed5a0aaedc83b1ced1f2d573dee3ff69\",\"dweb:/ipfs/QmQ8rwsVYfwsS6GJiHd5hrYjmheFHL55miZf9QLujKWoaG\"]},\"contracts/interfaces/liquidityMining/IKyberRewardLocker.sol\":{\"keccak256\":\"0xec68acc60e50d8b02ff529d2edf1a18b286f4528ada1fa19f0f42697c9735c52\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://4fb58b6c3e9950f13f2a7325329f86a19eb44a1fbdf8a73ef2f508a4ddc8f3c1\",\"dweb:/ipfs/QmbZnGPrudUaWbENU5aRTfnv1aXDuL4HCE8mGJvkXkTJBy\"]},\"contracts/liquidityMining/KyberFairLaunch.sol\":{\"keccak256\":\"0x415a340dedb173abb608bb8675ee871a6b86f9d3d3600a1be8d4e5a7949e647e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a1761394915f03b2748bbc8980a7721f5d5ded124880eba500a91e72d71ee3e7\",\"dweb:/ipfs/QmfH3BYBw7BnhVZfkLX6nXEWP18yp62nF5fKHAHYxYKvNj\"]},\"contracts/manual/IERC20Ext.sol\":{\"keccak256\":\"0x54e497c3ce45962c3736dcb053d97a309c7dca2c2228587be579de92317ece0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2405069927d8a940e85b5c96941a976a94e85eca5e4bb88419826731e050f7f7\",\"dweb:/ipfs/QmXcerpy1ZDmKykehn2qi9WX1ia2xZPhYxyYMH6xnDtCJ9\"]},\"contracts/manual/PermissionAdmin.sol\":{\"keccak256\":\"0xe00352d3a10174e8261744bbea3d6ca08134cebcda06c286358afeb7fe4b968f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af7cd96bbb17c72ca382d6655f19a72834c028ac1954caf96b90aa142c5e1e7e\",\"dweb:/ipfs/QmXNTE8nvzjSmCLHubor5FMJt3G86LqSsztDmU2LNhKt1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3382,
								"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
								"label": "admin",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 3384,
								"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
								"label": "pendingAdmin",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 952,
								"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
								"label": "_status",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1679,
								"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
								"label": "poolExists",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1684,
								"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
								"label": "rewardTokens",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1687,
								"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
								"label": "poolLength",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1691,
								"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
								"label": "poolInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(PoolInfo)1675_storage)"
							},
							{
								"astId": 1697,
								"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
								"label": "userInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1655_storage))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(UserInfo)1655_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct KyberFairLaunch.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)1655_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1655_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)1655_storage)"
							},
							"t_mapping(t_uint256,t_struct(PoolInfo)1675_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct KyberFairLaunch.PoolInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(PoolInfo)1675_storage"
							},
							"t_mapping(t_uint256,t_struct(PoolRewardData)1660_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData)",
								"numberOfBytes": "32",
								"value": "t_struct(PoolRewardData)1660_storage"
							},
							"t_mapping(t_uint256,t_struct(UserRewardData)1648_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct KyberFairLaunch.UserRewardData)",
								"numberOfBytes": "32",
								"value": "t_struct(UserRewardData)1648_storage"
							},
							"t_struct(PoolInfo)1675_storage": {
								"encoding": "inplace",
								"label": "struct KyberFairLaunch.PoolInfo",
								"members": [
									{
										"astId": 1662,
										"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
										"label": "totalStake",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1664,
										"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
										"label": "stakeToken",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1666,
										"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
										"label": "startBlock",
										"offset": 20,
										"slot": "1",
										"type": "t_uint32"
									},
									{
										"astId": 1668,
										"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
										"label": "endBlock",
										"offset": 24,
										"slot": "1",
										"type": "t_uint32"
									},
									{
										"astId": 1670,
										"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
										"label": "lastRewardBlock",
										"offset": 28,
										"slot": "1",
										"type": "t_uint32"
									},
									{
										"astId": 1674,
										"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
										"label": "poolRewardData",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_uint256,t_struct(PoolRewardData)1660_storage)"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(PoolRewardData)1660_storage": {
								"encoding": "inplace",
								"label": "struct KyberFairLaunch.PoolRewardData",
								"members": [
									{
										"astId": 1657,
										"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
										"label": "rewardPerBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1659,
										"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
										"label": "accRewardPerShare",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UserInfo)1655_storage": {
								"encoding": "inplace",
								"label": "struct KyberFairLaunch.UserInfo",
								"members": [
									{
										"astId": 1650,
										"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1654,
										"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
										"label": "userRewardData",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_uint256,t_struct(UserRewardData)1648_storage)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UserRewardData)1648_storage": {
								"encoding": "inplace",
								"label": "struct KyberFairLaunch.UserRewardData",
								"members": [
									{
										"astId": 1645,
										"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
										"label": "unclaimedReward",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1647,
										"contract": "contracts/liquidityMining/KyberFairLaunch.sol:KyberFairLaunch",
										"label": "lastRewardPerShare",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"emergencyWithdraw(uint256)": {
								"notice": "EMERGENCY USAGE ONLY, USER'S REWARDS WILL BE RESET"
							}
						},
						"notice": "FairLaunch contract for Kyber DMM Liquidity Mining program Allow stakers to stake LP tokens and receive reward tokens Allow extend or renew a pool to continue/restart the LM program When harvesting, rewards will be transferred to a RewardLocker Support multiple reward tokens, reward tokens must be distinct and immutable",
						"version": 1
					}
				}
			},
			"contracts/manual/IERC20Ext.sol": {
				"IERC20Ext": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "digits",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface extending ERC20 standard to include decimals() as      it is optional in the OpenZeppelin IERC20 interface.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "This function is required as Kyber requires to interact      with token.decimals() with many of its operations."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"digits\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface extending ERC20 standard to include decimals() as      it is optional in the OpenZeppelin IERC20 interface.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"This function is required as Kyber requires to interact      with token.decimals() with many of its operations.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/manual/IERC20Ext.sol\":\"IERC20Ext\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"contracts/manual/IERC20Ext.sol\":{\"keccak256\":\"0x54e497c3ce45962c3736dcb053d97a309c7dca2c2228587be579de92317ece0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2405069927d8a940e85b5c96941a976a94e85eca5e4bb88419826731e050f7f7\",\"dweb:/ipfs/QmXcerpy1ZDmKykehn2qi9WX1ia2xZPhYxyYMH6xnDtCJ9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/manual/PermissionAdmin.sol": {
				"PermissionAdmin": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								}
							],
							"name": "AdminClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pendingAdmin",
									"type": "address"
								}
							],
							"name": "TransferAdminPending",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "transferAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "transferAdminQuickly",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"claimAdmin()": {
								"details": "Allows the pendingAdmin address to finalize the change admin process."
							},
							"transferAdmin(address)": {
								"details": "Allows the current admin to set the pendingAdmin address.",
								"params": {
									"newAdmin": "The address to transfer ownership to."
								}
							},
							"transferAdminQuickly(address)": {
								"details": "Allows the current admin to set the admin in one tx. Useful initial deployment.",
								"params": {
									"newAdmin": "The address to transfer ownership to."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"admin()": "f851a440",
							"claimAdmin()": "77f50f97",
							"pendingAdmin()": "26782247",
							"transferAdmin(address)": "75829def",
							"transferAdminQuickly(address)": "7acc8678"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"}],\"name\":\"AdminClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pendingAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdminPending\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdminQuickly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimAdmin()\":{\"details\":\"Allows the pendingAdmin address to finalize the change admin process.\"},\"transferAdmin(address)\":{\"details\":\"Allows the current admin to set the pendingAdmin address.\",\"params\":{\"newAdmin\":\"The address to transfer ownership to.\"}},\"transferAdminQuickly(address)\":{\"details\":\"Allows the current admin to set the admin in one tx. Useful initial deployment.\",\"params\":{\"newAdmin\":\"The address to transfer ownership to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/manual/PermissionAdmin.sol\":\"PermissionAdmin\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/manual/PermissionAdmin.sol\":{\"keccak256\":\"0xe00352d3a10174e8261744bbea3d6ca08134cebcda06c286358afeb7fe4b968f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af7cd96bbb17c72ca382d6655f19a72834c028ac1954caf96b90aa142c5e1e7e\",\"dweb:/ipfs/QmXNTE8nvzjSmCLHubor5FMJt3G86LqSsztDmU2LNhKt1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3382,
								"contract": "contracts/manual/PermissionAdmin.sol:PermissionAdmin",
								"label": "admin",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 3384,
								"contract": "contracts/manual/PermissionAdmin.sol:PermissionAdmin",
								"label": "pendingAdmin",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:38:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor () internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1789,
					"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"start": 1726
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							354
						]
					},
					"id": 355,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 354,
							"linearizedBaseContracts": [
								354
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "865:98:0",
										"statements": [
											{
												"assignments": [
													15
												],
												"declarations": [
													{
														"constant": false,
														"id": 15,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 32,
														"src": "875:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 14,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 19,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 16,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "887:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 17,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "891:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 20,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "906:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 21,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "910:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 27,
												"nodeType": "IfStatement",
												"src": "902:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 25,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 13,
													"id": 26,
													"nodeType": "Return",
													"src": "913:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 29,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "954:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 30,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 13,
												"id": 31,
												"nodeType": "Return",
												"src": "940:16:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "805:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "816:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "850:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "856:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:15:0"
									},
									"scope": 354,
									"src": "789:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1185:75:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 45,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "1199:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 46,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1203:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 52,
												"nodeType": "IfStatement",
												"src": "1195:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 50,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 44,
													"id": 51,
													"nodeType": "Return",
													"src": "1206:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 54,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "1247:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 55,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "1251:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 57,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 44,
												"id": 58,
												"nodeType": "Return",
												"src": "1233:20:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1125:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1136:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:22:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1170:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 40,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1176:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:15:0"
									},
									"scope": 354,
									"src": "1109:151:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1484:359:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 72,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1716:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 79,
												"nodeType": "IfStatement",
												"src": "1712:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "30",
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 77,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 71,
													"id": 78,
													"nodeType": "Return",
													"src": "1724:16:0"
												}
											},
											{
												"assignments": [
													81
												],
												"declarations": [
													{
														"constant": false,
														"id": 81,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 100,
														"src": "1750:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 80,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 85,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 82,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1762:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 83,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "1766:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 86,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1781:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 87,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "1785:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 89,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "1790:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 95,
												"nodeType": "IfStatement",
												"src": "1777:33:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 93,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 71,
													"id": 94,
													"nodeType": "Return",
													"src": "1793:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 97,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1834:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 98,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 71,
												"id": 99,
												"nodeType": "Return",
												"src": "1820:16:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1424:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1435:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:22:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1469:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 67,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1475:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:15:0"
									},
									"scope": 354,
									"src": "1408:435:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "2068:76:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 113,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "2082:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2078:29:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 118,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 112,
													"id": 119,
													"nodeType": "Return",
													"src": "2090:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 122,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "2131:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 123,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "2135:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 125,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 112,
												"id": 126,
												"nodeType": "Return",
												"src": "2117:20:0"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "2019:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:22:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "2053:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "2059:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:15:0"
									},
									"scope": 354,
									"src": "1992:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "2379:76:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 140,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "2393:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "IfStatement",
												"src": "2389:29:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 145,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 139,
													"id": 146,
													"nodeType": "Return",
													"src": "2401:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 149,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 131,
																"src": "2442:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 150,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "2446:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 152,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 139,
												"id": 153,
												"nodeType": "Return",
												"src": "2428:20:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "2319:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "2330:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:22:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "2364:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 135,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "2370:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:15:0"
									},
									"scope": 354,
									"src": "2303:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "2757:108:0",
										"statements": [
											{
												"assignments": [
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 166,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "2767:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 165,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 170,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 167,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2779:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 168,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2783:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 172,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "2802:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 173,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2807:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2794:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:0"
											},
											{
												"expression": {
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 166,
													"src": "2857:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "2850:8:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2703:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2714:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:22:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2748:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2747:9:0"
									},
									"scope": 354,
									"src": "2690:175:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "3203:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 192,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "3221:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 193,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "3226:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 198,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "3279:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "3283:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 190,
												"id": 201,
												"nodeType": "Return",
												"src": "3272:12:0"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3149:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3160:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:22:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3194:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:9:0"
									},
									"scope": 354,
									"src": "3136:155:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3605:148:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 213,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "3619:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 218,
												"nodeType": "IfStatement",
												"src": "3615:20:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 212,
													"id": 217,
													"nodeType": "Return",
													"src": "3627:8:0"
												}
											},
											{
												"assignments": [
													220
												],
												"declarations": [
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 236,
														"src": "3645:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 219,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 224,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 221,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "3657:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 222,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3661:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 226,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "3680:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 227,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 206,
																	"src": "3684:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 229,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "3689:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3672:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:0"
											},
											{
												"expression": {
													"id": 234,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 220,
													"src": "3745:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 212,
												"id": 235,
												"nodeType": "Return",
												"src": "3738:8:0"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3551:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3562:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:22:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3596:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:9:0"
									},
									"scope": 354,
									"src": "3538:215:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "4284:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 248,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "4302:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4294:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 254,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "4355:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 255,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "4359:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 257,
												"nodeType": "Return",
												"src": "4348:12:0"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "4230:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "4241:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4229:22:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "4275:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4274:9:0"
									},
									"scope": 354,
									"src": "4217:150:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "4887:81:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 270,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "4905:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4897:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 276,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "4956:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 277,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "4960:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 268,
												"id": 279,
												"nodeType": "Return",
												"src": "4949:12:0"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4833:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4844:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4832:22:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4878:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4877:9:0"
									},
									"scope": 354,
									"src": "4820:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "5527:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 294,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "5545:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 295,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "5550:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 297,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "5553:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5537:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 300,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "5583:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 301,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "5587:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 303,
												"nodeType": "Return",
												"src": "5576:12:0"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "5445:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "5456:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "5467:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5444:50:0"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "5518:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5517:9:0"
									},
									"scope": 354,
									"src": "5432:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "6347:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "6365:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 321,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "6372:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 324,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "6402:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 325,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "6406:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 316,
												"id": 327,
												"nodeType": "Return",
												"src": "6395:12:0"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6265:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6276:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6287:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6264:50:0"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6338:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6337:9:0"
									},
									"scope": 354,
									"src": "6252:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "7155:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 342,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "7173:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 345,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "7180:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 348,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "7210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 349,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "7214:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 351,
												"nodeType": "Return",
												"src": "7203:12:0"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "7073:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "7084:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "7095:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7072:50:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "7146:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7145:9:0"
									},
									"scope": 354,
									"src": "7060:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 355,
							"src": "630:6594:0"
						}
					],
					"src": "33:7192:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							432
						]
					},
					"id": 433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 356,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 357,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 432,
							"linearizedBaseContracts": [
								432
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "277:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "276:9:1"
									},
									"scope": 432,
									"src": "231:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "388:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:17:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "428:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "427:9:1"
									},
									"scope": 432,
									"src": "369:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "675:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:35:1"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:6:1"
									},
									"scope": 432,
									"src": "657:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "1028:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "1043:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:32:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "1083:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:9:1"
									},
									"scope": 432,
									"src": "1009:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1762:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1779:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:33:1"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1813:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 398,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:6:1"
									},
									"scope": 432,
									"src": "1745:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2148:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2164:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2183:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2147:51:1"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2217:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2216:6:1"
									},
									"scope": 432,
									"src": "2126:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 422,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2407:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2429:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2449:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:57:1"
									},
									"src": "2392:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 431,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2638:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2661:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2686:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:63:1"
									},
									"src": "2623:78:1"
								}
							],
							"scope": 433,
							"src": "137:2566:1"
						}
					],
					"src": "33:2671:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							941
						],
						"IERC20": [
							432
						],
						"SafeERC20": [
							645
						],
						"SafeMath": [
							354
						]
					},
					"id": 646,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 434,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 435,
							"nodeType": "ImportDirective",
							"scope": 646,
							"sourceUnit": 433,
							"src": "66:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 436,
							"nodeType": "ImportDirective",
							"scope": 646,
							"sourceUnit": 355,
							"src": "89:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 437,
							"nodeType": "ImportDirective",
							"scope": 646,
							"sourceUnit": 942,
							"src": "123:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 438,
								"nodeType": "StructuredDocumentation",
								"src": "158:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 645,
							"linearizedBaseContracts": [
								645
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 441,
									"libraryName": {
										"id": 439,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 354,
										"src": "646:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$354",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "640:27:2",
									"typeName": {
										"id": 440,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "659:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 444,
									"libraryName": {
										"id": 442,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 941,
										"src": "678:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$941",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "672:26:2",
									"typeName": {
										"id": 443,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "690:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "776:103:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "806:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$432",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 457,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 446,
																			"src": "836:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$432",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 381,
																		"src": "836:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "836:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 460,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "861:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 461,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "865:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 455,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "813:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "813:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "813:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$432",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 453,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "786:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$432_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "786:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "786:86:2"
											}
										]
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "726:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$432",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 445,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 432,
													"src": "726:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$432",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "740:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "752:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:41:2"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:0:2"
									},
									"scope": 645,
									"src": "704:175:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "975:113:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 478,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "1005:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$432",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 481,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "1035:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$432",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 413,
																		"src": "1035:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1035:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 484,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "1064:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 485,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "1070:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 486,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 474,
																	"src": "1074:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 479,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1012:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1012:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1012:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$432",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 477,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "985:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$432_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "985:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "985:96:2"
											}
										]
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "911:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$432",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 467,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 432,
													"src": "911:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$432",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "925:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "939:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "951:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "910:55:2"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "975:0:2"
									},
									"scope": 645,
									"src": "885:203:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "1424:537:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 502,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 498,
																			"src": "1713:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1722:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1713:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 505,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1712:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 510,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1753:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$645",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$645",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 509,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1745:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 508,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1745:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 511,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1745:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 512,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 496,
																					"src": "1760:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 506,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 494,
																					"src": "1729:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$432",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 391,
																				"src": "1729:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1729:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1772:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1729:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 516,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1728:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1712:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1788:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 501,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1704:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1704:150:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "1704:150:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 522,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "1884:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$432",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 525,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 494,
																			"src": "1914:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$432",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 401,
																		"src": "1914:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1914:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 528,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 496,
																	"src": "1938:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "1947:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 523,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1891:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1891:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1891:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$432",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 521,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "1864:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$432_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1864:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "1864:90:2"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "1094:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "1369:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$432",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 493,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 432,
													"src": "1369:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$432",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "1383:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "1400:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1368:46:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1424:0:2"
									},
									"scope": 645,
									"src": "1348:613:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "2053:197:2",
										"statements": [
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 569,
														"src": "2063:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2063:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"arguments": [
														{
															"id": 554,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "2130:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 549,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2110:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$645",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$645",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2102:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 547,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2102:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2102:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 551,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "2117:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 545,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "2086:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$432",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 391,
																"src": "2086:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2086:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 181,
														"src": "2086:43:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2086:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2063:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 558,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "2166:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$432",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 561,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "2196:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$432",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 401,
																		"src": "2196:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2196:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 564,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "2220:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 565,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "2229:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 559,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2173:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2173:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2173:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$432",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 557,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "2146:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$432_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "2146:97:2"
											}
										]
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "1998:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$432",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 535,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 432,
													"src": "1998:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$432",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2012:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1997:46:2"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:2"
									},
									"scope": 645,
									"src": "1967:283:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "2342:242:2",
										"statements": [
											{
												"assignments": [
													580
												],
												"declarations": [
													{
														"constant": false,
														"id": 580,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 606,
														"src": "2352:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 579,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2352:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 593,
												"initialValue": {
													"arguments": [
														{
															"id": 590,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "2419:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2426:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 585,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2399:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$645",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$645",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2391:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 583,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2391:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2391:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 587,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "2406:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 581,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "2375:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$432",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 391,
																"src": "2375:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2375:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 305,
														"src": "2375:43:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:95:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2352:118:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 595,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "2500:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$432",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 598,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 572,
																			"src": "2530:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$432",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 401,
																		"src": "2530:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2530:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 601,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "2554:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 602,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "2563:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 596,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2507:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2507:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2507:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$432",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 594,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "2480:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$432_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2480:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "2480:97:2"
											}
										]
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "2287:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$432",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 571,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 432,
													"src": "2287:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$432",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "2301:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "2318:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:46:2"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2342:0:2"
									},
									"scope": 645,
									"src": "2256:328:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "3037:681:2",
										"statements": [
											{
												"assignments": [
													616
												],
												"declarations": [
													{
														"constant": false,
														"id": 616,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 643,
														"src": "3386:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 615,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3386:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 625,
												"initialValue": {
													"arguments": [
														{
															"id": 622,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "3440:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3446:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 619,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "3420:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$432",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$432",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3412:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 617,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3412:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3412:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 736,
														"src": "3412:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3412:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3386:95:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 626,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "3495:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3495:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3515:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3495:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "3491:221:2",
												"trueBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "3518:194:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 633,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 616,
																				"src": "3635:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 635,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3648:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 634,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3648:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 636,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3647:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 631,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3624:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3624:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3624:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3656:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 630,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3616:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3616:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 640,
															"nodeType": "ExpressionStatement",
															"src": "3616:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "2590:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "2996:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$432",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 609,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 432,
													"src": "2996:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$432",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "3010:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 611,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3010:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:33:2"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3037:0:2"
									},
									"scope": 645,
									"src": "2967:751:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 646,
							"src": "616:3104:2"
						}
					],
					"src": "33:3688:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							941
						]
					},
					"id": 942,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 647,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 648,
								"nodeType": "StructuredDocumentation",
								"src": "66:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 941,
							"linearizedBaseContracts": [
								941
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "792:347:3",
										"statements": [
											{
												"assignments": [
													657
												],
												"declarations": [
													{
														"constant": false,
														"id": 657,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 664,
														"src": "989:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 656,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "989:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 658,
												"nodeType": "VariableDeclarationStatement",
												"src": "989:12:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1098:7:3"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1086:11:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:20:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1078:4:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 651,
														"isOffset": false,
														"isSlot": false,
														"src": "1098:7:3",
														"valueSize": 1
													},
													{
														"declaration": 657,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:4:3",
														"valueSize": 1
													}
												],
												"id": 659,
												"nodeType": "InlineAssembly",
												"src": "1067:41:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 660,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "1124:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1124:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 655,
												"id": 663,
												"nodeType": "Return",
												"src": "1117:15:3"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "156:565:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "746:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:17:3"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "786:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 653,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "785:6:3"
									},
									"scope": 941,
									"src": "726:413:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "2127:320:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 676,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2153:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$941",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$941",
																				"typeString": "library Address"
																			}
																		],
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2145:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 674,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2145:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2145:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 679,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "2170:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2145:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 673,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2137:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "2137:73:3"
											},
											{
												"assignments": [
													685,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 698,
														"src": "2299:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 684,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2299:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 692,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2349:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 686,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "2317:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2317:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 688,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "2340:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2317:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2298:54:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 694,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "2370:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 693,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2362:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "2362:78:3"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "1145:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "2075:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "2102:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2074:43:3"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:3"
									},
									"scope": 941,
									"src": "2056:391:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "3277:82:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 710,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "3305:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "3313:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3319:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 709,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															716,
															736
														],
														"referencedDeclaration": 736,
														"src": "3292:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 708,
												"id": 714,
												"nodeType": "Return",
												"src": "3285:67:3"
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "2453:730:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "3210:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "3226:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 703,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3226:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:35:3"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "3263:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3263:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3262:14:3"
									},
									"scope": 941,
									"src": "3188:171:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "3698:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 729,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "3737:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 730,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "3745:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3751:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 732,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "3754:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 728,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															756,
															806
														],
														"referencedDeclaration": 806,
														"src": "3715:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 727,
												"id": 734,
												"nodeType": "Return",
												"src": "3708:59:3"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "3365:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "3603:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "3619:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 720,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3619:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "3638:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 722,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3638:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3602:63:3"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "3684:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 725,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3684:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:14:3"
									},
									"scope": 941,
									"src": "3581:193:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "4249:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 749,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "4288:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "4296:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 751,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "4302:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 748,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															756,
															806
														],
														"referencedDeclaration": 806,
														"src": "4266:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 747,
												"id": 754,
												"nodeType": "Return",
												"src": "4259:94:3"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "3780:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "4167:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4167:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "4183:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 740,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4183:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "4202:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4166:50:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "4235:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 745,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4235:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4234:14:3"
									},
									"scope": 941,
									"src": "4136:224:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "4749:382:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 773,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4775:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$941",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$941",
																				"typeString": "library Address"
																			}
																		],
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4767:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 771,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4767:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4767:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4767:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 776,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "4792:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4767:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 770,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4759:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "4759:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 783,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "4869:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 782,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "4858:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4858:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 781,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4850:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "4850:60:3"
											},
											{
												"assignments": [
													789,
													791
												],
												"declarations": [
													{
														"constant": false,
														"id": 789,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 805,
														"src": "4981:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 788,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4981:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 791,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 805,
														"src": "4995:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 790,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4995:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 798,
												"initialValue": {
													"arguments": [
														{
															"id": 796,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "5050:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 792,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "5022:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5022:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 794,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "5042:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5022:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:75:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 800,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "5090:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 801,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "5099:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 802,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "5111:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 799,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "5072:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 769,
												"id": 804,
												"nodeType": "Return",
												"src": "5065:59:3"
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "4366:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "4639:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "4655:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 760,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4655:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "4674:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "4689:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 764,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4689:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4638:78:3"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "4735:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 767,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:14:3"
									},
									"scope": 941,
									"src": "4608:523:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "5408:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 817,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "5444:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "5452:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5458:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 816,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															823,
															858
														],
														"referencedDeclaration": 858,
														"src": "5425:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 815,
												"id": 821,
												"nodeType": "Return",
												"src": "5418:80:3"
											}
										]
									},
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "5137:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "5336:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "5352:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 810,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5335:35:3"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "5394:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5394:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5393:14:3"
									},
									"scope": 941,
									"src": "5308:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "5817:288:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 837,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "5846:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 836,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "5835:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5835:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 835,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5827:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "5827:67:3"
											},
											{
												"assignments": [
													843,
													845
												],
												"declarations": [
													{
														"constant": false,
														"id": 843,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 857,
														"src": "5965:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 842,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5965:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 845,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 857,
														"src": "5979:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 844,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5979:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 850,
												"initialValue": {
													"arguments": [
														{
															"id": 848,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "6024:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 846,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "6006:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6006:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 852,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "6064:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 853,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "6073:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 854,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "6085:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 851,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "6046:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6046:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 834,
												"id": 856,
												"nodeType": "Return",
												"src": "6039:59:3"
											}
										]
									},
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "5511:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "5717:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "5733:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 827,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5733:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "5752:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 829,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5752:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5716:63:3"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "5803:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 832,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5803:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5802:14:3"
									},
									"scope": 941,
									"src": "5689:416:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "6381:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 869,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "6419:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 870,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "6427:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6433:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 868,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															875,
															910
														],
														"referencedDeclaration": 910,
														"src": "6398:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6398:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 867,
												"id": 873,
												"nodeType": "Return",
												"src": "6391:84:3"
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "6111:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "6314:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "6330:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 862,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6330:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6313:35:3"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "6367:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 865,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6367:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6366:14:3"
									},
									"scope": 941,
									"src": "6284:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "6793:292:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 889,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "6822:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 888,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "6811:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6811:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 887,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6803:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "6803:69:3"
											},
											{
												"assignments": [
													895,
													897
												],
												"declarations": [
													{
														"constant": false,
														"id": 895,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 909,
														"src": "6943:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 894,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6943:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 897,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 909,
														"src": "6957:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 896,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6957:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 902,
												"initialValue": {
													"arguments": [
														{
															"id": 900,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "7004:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 898,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "6984:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6984:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6984:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6942:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 904,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "7044:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 905,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "7053:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 906,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "7065:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 903,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "7026:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7026:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 886,
												"id": 908,
												"nodeType": "Return",
												"src": "7019:59:3"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "6488:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "6698:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6698:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "6714:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 879,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6714:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "6733:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 881,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6733:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6697:63:3"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "6779:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6779:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6778:14:3"
									},
									"scope": 941,
									"src": "6668:417:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "7220:596:3",
										"statements": [
											{
												"condition": {
													"id": 921,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 912,
													"src": "7234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 937,
													"nodeType": "Block",
													"src": "7291:519:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 925,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 914,
																		"src": "7375:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7375:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7395:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7375:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 935,
																"nodeType": "Block",
																"src": "7747:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 932,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 916,
																					"src": "7772:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 931,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7765:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7765:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 934,
																		"nodeType": "ExpressionStatement",
																		"src": "7765:20:3"
																	}
																]
															},
															"id": 936,
															"nodeType": "IfStatement",
															"src": "7371:429:3",
															"trueBody": {
																"id": 930,
																"nodeType": "Block",
																"src": "7398:343:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7582:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7604:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7633:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7627:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7627:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7608:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7676:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7680:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7672:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7672:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7693:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7665:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7665:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7665:44:3"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 914,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7633:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 914,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7680:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 929,
																		"nodeType": "InlineAssembly",
																		"src": "7573:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 938,
												"nodeType": "IfStatement",
												"src": "7230:580:3",
												"trueBody": {
													"id": 924,
													"nodeType": "Block",
													"src": "7243:42:3",
													"statements": [
														{
															"expression": {
																"id": 922,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "7264:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 920,
															"id": 923,
															"nodeType": "Return",
															"src": "7257:17:3"
														}
													]
												}
											}
										]
									},
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "7118:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 911,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7118:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "7132:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 913,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "7157:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 915,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7157:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7117:67:3"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "7206:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 918,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7206:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7205:14:3"
									},
									"scope": 941,
									"src": "7091:725:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 942,
							"src": "134:7684:3"
						}
					],
					"src": "33:7786:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							981
						]
					},
					"id": 982,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 943,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 944,
								"nodeType": "StructuredDocumentation",
								"src": "66:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 981,
							"linearizedBaseContracts": [
								981
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 947,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 981,
									"src": "1605:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 945,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1605:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 946,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1645:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 950,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 981,
									"src": "1652:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 948,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1652:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 949,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1688:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 952,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"scope": 981,
									"src": "1696:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 951,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1696:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "1750:39:4",
										"statements": [
											{
												"expression": {
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 955,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "1760:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 956,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "1770:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1760:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "1760:22:4"
											}
										]
									},
									"id": 960,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1738:2:4"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1750:0:4"
									},
									"scope": 981,
									"src": "1726:63:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "2188:421:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 964,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "2277:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 965,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "2288:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2277:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2298:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 963,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2269:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2269:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "2269:63:4"
											},
											{
												"expression": {
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 970,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "2407:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 971,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "2417:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2407:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "2407:18:4"
											},
											{
												"id": 974,
												"nodeType": "PlaceholderStatement",
												"src": "2436:1:4"
											},
											{
												"expression": {
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 975,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "2580:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 976,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "2590:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2580:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "2580:22:4"
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "1795:364:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
									},
									"id": 980,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2185:2:4"
									},
									"src": "2164:445:4",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 982,
							"src": "817:1794:4"
						}
					],
					"src": "33:2579:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							1294
						]
					},
					"id": 1295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 983,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 984,
								"nodeType": "StructuredDocumentation",
								"src": "67:709:5",
								"text": " @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."
							},
							"fullyImplemented": true,
							"id": 1294,
							"linearizedBaseContracts": [
								1294
							],
							"name": "SafeCast",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "1152:115:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 993,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "1170:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1178:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1181:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "1178:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "1170:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473",
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1186:42:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															},
															"value": "SafeCast: value doesn't fit in 128 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															}
														],
														"id": 992,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1162:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1162:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "1162:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1003,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "1254:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1246:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 1001,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "1246:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1246:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 991,
												"id": 1005,
												"nodeType": "Return",
												"src": "1239:21:5"
											}
										]
									},
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "801:280:5",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1105:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1104:15:5"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1143:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 989,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1142:9:5"
									},
									"scope": 1294,
									"src": "1086:181:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "1618:112:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1016,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "1636:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																},
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1644:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1647:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "1644:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "1636:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473",
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1651:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															},
															"value": "SafeCast: value doesn't fit in 64 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															}
														],
														"id": 1015,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1628:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1628:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "1628:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1026,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "1717:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1710:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 1024,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "1710:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1014,
												"id": 1028,
												"nodeType": "Return",
												"src": "1703:20:5"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "1273:276:5",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "1572:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1571:15:5"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "1610:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1012,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1610:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:8:5"
									},
									"scope": 1294,
									"src": "1554:176:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "2081:112:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1039,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "2099:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2107:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2110:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2107:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "2099:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473",
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2114:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															},
															"value": "SafeCast: value doesn't fit in 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															}
														],
														"id": 1038,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2091:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2091:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "2091:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1049,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "2180:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2173:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 1047,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "2173:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2173:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1037,
												"id": 1051,
												"nodeType": "Return",
												"src": "2166:20:5"
											}
										]
									},
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "1736:276:5",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "2035:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2035:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2034:15:5"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "2073:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1035,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2073:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2072:8:5"
									},
									"scope": 1294,
									"src": "2017:176:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "2544:112:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1062,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "2562:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2570:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2573:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "2570:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "2562:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2577:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															},
															"value": "SafeCast: value doesn't fit in 16 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															}
														],
														"id": 1061,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2554:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2554:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "2554:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1072,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "2643:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2636:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 1070,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "2636:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2636:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 1060,
												"id": 1074,
												"nodeType": "Return",
												"src": "2629:20:5"
											}
										]
									},
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "2199:276:5",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "2498:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2498:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2497:15:5"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "2536:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1058,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2536:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2535:8:5"
									},
									"scope": 1294,
									"src": "2480:176:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "3002:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1085,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "3020:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3028:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3031:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "3028:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "3020:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473",
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3034:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															},
															"value": "SafeCast: value doesn't fit in 8 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															}
														],
														"id": 1084,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3012:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3012:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "3012:63:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1095,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "3098:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3092:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 1093,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3092:5:5",
															"typeDescriptions": {}
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3092:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1083,
												"id": 1097,
												"nodeType": "Return",
												"src": "3085:19:5"
											}
										]
									},
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "2662:273:5",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits."
									},
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "2957:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2957:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2956:15:5"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "2995:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1081,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2995:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2994:7:5"
									},
									"scope": 1294,
									"src": "2940:171:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "3347:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1108,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "3365:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3374:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3365:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c7565206d75737420626520706f736974697665",
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3377:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807",
																"typeString": "literal_string \"SafeCast: value must be positive\""
															},
															"value": "SafeCast: value must be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807",
																"typeString": "literal_string \"SafeCast: value must be positive\""
															}
														],
														"id": 1107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3357:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3357:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "3357:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1116,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "3437:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3429:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1114,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3429:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3429:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1106,
												"id": 1118,
												"nodeType": "Return",
												"src": "3422:21:5"
											}
										]
									},
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "3117:160:5",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "3301:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1101,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3301:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3300:14:5"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "3338:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3338:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3337:9:5"
									},
									"scope": 1294,
									"src": "3282:168:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "3874:134:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1129,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "3892:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_minus_170141183460469231731687303715884105728_by_1",
																		"typeString": "int_const -170...(32 digits omitted)...5728"
																	},
																	"id": 1133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "3901:2:5",
																		"subExpression": {
																			"hexValue": "32",
																			"id": 1130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3902:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_2_by_1",
																			"typeString": "int_const -2"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "313237",
																		"id": 1132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3905:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_127_by_1",
																			"typeString": "int_const 127"
																		},
																		"value": "127"
																	},
																	"src": "3901:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_170141183460469231731687303715884105728_by_1",
																		"typeString": "int_const -170...(32 digits omitted)...5728"
																	}
																},
																"src": "3892:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1135,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "3912:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_170141183460469231731687303715884105728_by_1",
																		"typeString": "int_const 1701...(31 digits omitted)...5728"
																	},
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 1136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3920:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "313237",
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3923:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_127_by_1",
																			"typeString": "int_const 127"
																		},
																		"value": "127"
																	},
																	"src": "3920:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_170141183460469231731687303715884105728_by_1",
																		"typeString": "int_const 1701...(31 digits omitted)...5728"
																	}
																},
																"src": "3912:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3892:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473",
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3928:42:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															},
															"value": "SafeCast: value doesn't fit in 128 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 128 bits\""
															}
														],
														"id": 1128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3884:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3884:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "3884:87:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1146,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "3995:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3988:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int128_$",
															"typeString": "type(int128)"
														},
														"typeName": {
															"id": 1144,
															"name": "int128",
															"nodeType": "ElementaryTypeName",
															"src": "3988:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3988:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"functionReturnParameters": 1127,
												"id": 1148,
												"nodeType": "Return",
												"src": "3981:20:5"
											}
										]
									},
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "3456:350:5",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3829:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1122,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3829:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3828:14:5"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3866:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1125,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "3866:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3865:8:5"
									},
									"scope": 1294,
									"src": "3811:197:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "4425:130:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1159,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "4443:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_minus_9223372036854775808_by_1",
																		"typeString": "int_const -9223372036854775808"
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "4452:2:5",
																		"subExpression": {
																			"hexValue": "32",
																			"id": 1160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4453:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_2_by_1",
																			"typeString": "int_const -2"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3633",
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4456:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_63_by_1",
																			"typeString": "int_const 63"
																		},
																		"value": "63"
																	},
																	"src": "4452:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_9223372036854775808_by_1",
																		"typeString": "int_const -9223372036854775808"
																	}
																},
																"src": "4443:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1165,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "4462:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_9223372036854775808_by_1",
																		"typeString": "int_const 9223372036854775808"
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4470:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3633",
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4473:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_63_by_1",
																			"typeString": "int_const 63"
																		},
																		"value": "63"
																	},
																	"src": "4470:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_9223372036854775808_by_1",
																		"typeString": "int_const 9223372036854775808"
																	}
																},
																"src": "4462:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4443:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473",
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4477:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															},
															"value": "SafeCast: value doesn't fit in 64 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 64 bits\""
															}
														],
														"id": 1158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4435:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4435:84:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "4435:84:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1176,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "4542:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4536:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int64_$",
															"typeString": "type(int64)"
														},
														"typeName": {
															"id": 1174,
															"name": "int64",
															"nodeType": "ElementaryTypeName",
															"src": "4536:5:5",
															"typeDescriptions": {}
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4536:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"functionReturnParameters": 1157,
												"id": 1178,
												"nodeType": "Return",
												"src": "4529:19:5"
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "4014:345:5",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "4381:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1152,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4381:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4380:14:5"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "4418:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 1155,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "4418:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:7:5"
									},
									"scope": 1294,
									"src": "4364:191:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "4972:130:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1189,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "4990:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_minus_2147483648_by_1",
																		"typeString": "int_const -2147483648"
																	},
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "4999:2:5",
																		"subExpression": {
																			"hexValue": "32",
																			"id": 1190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5000:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_2_by_1",
																			"typeString": "int_const -2"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3331",
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5003:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_31_by_1",
																			"typeString": "int_const 31"
																		},
																		"value": "31"
																	},
																	"src": "4999:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_2147483648_by_1",
																		"typeString": "int_const -2147483648"
																	}
																},
																"src": "4990:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1195,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "5009:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_2147483648_by_1",
																		"typeString": "int_const 2147483648"
																	},
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5017:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3331",
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5020:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_31_by_1",
																			"typeString": "int_const 31"
																		},
																		"value": "31"
																	},
																	"src": "5017:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2147483648_by_1",
																		"typeString": "int_const 2147483648"
																	}
																},
																"src": "5009:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4990:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473",
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5024:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															},
															"value": "SafeCast: value doesn't fit in 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 32 bits\""
															}
														],
														"id": 1188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4982:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4982:84:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "4982:84:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1206,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "5089:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5083:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int32_$",
															"typeString": "type(int32)"
														},
														"typeName": {
															"id": 1204,
															"name": "int32",
															"nodeType": "ElementaryTypeName",
															"src": "5083:5:5",
															"typeDescriptions": {}
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5083:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"functionReturnParameters": 1187,
												"id": 1208,
												"nodeType": "Return",
												"src": "5076:19:5"
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "4561:345:5",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"
									},
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "4928:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1182,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4928:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4927:14:5"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "4965:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 1185,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "4965:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4964:7:5"
									},
									"scope": 1294,
									"src": "4911:191:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "5519:130:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1219,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1213,
																	"src": "5537:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_minus_32768_by_1",
																		"typeString": "int_const -32768"
																	},
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "5546:2:5",
																		"subExpression": {
																			"hexValue": "32",
																			"id": 1220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5547:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_2_by_1",
																			"typeString": "int_const -2"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3135",
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5550:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_15_by_1",
																			"typeString": "int_const 15"
																		},
																		"value": "15"
																	},
																	"src": "5546:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_32768_by_1",
																		"typeString": "int_const -32768"
																	}
																},
																"src": "5537:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1225,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1213,
																	"src": "5556:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_32768_by_1",
																		"typeString": "int_const 32768"
																	},
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 1226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5564:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3135",
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5567:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_15_by_1",
																			"typeString": "int_const 15"
																		},
																		"value": "15"
																	},
																	"src": "5564:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32768_by_1",
																		"typeString": "int_const 32768"
																	}
																},
																"src": "5556:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5537:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473",
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5571:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															},
															"value": "SafeCast: value doesn't fit in 16 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 16 bits\""
															}
														],
														"id": 1218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5529:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:84:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "5529:84:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1236,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "5636:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5630:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int16_$",
															"typeString": "type(int16)"
														},
														"typeName": {
															"id": 1234,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "5630:5:5",
															"typeDescriptions": {}
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5630:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"functionReturnParameters": 1217,
												"id": 1238,
												"nodeType": "Return",
												"src": "5623:19:5"
											}
										]
									},
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "5108:345:5",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "5475:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1212,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5475:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5474:14:5"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "5512:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 1215,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "5512:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5511:7:5"
									},
									"scope": 1294,
									"src": "5458:191:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "6060:126:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1249,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1243,
																	"src": "6078:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_minus_128_by_1",
																		"typeString": "int_const -128"
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "6087:2:5",
																		"subExpression": {
																			"hexValue": "32",
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6088:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_2_by_1",
																			"typeString": "int_const -2"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "37",
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6091:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_7_by_1",
																			"typeString": "int_const 7"
																		},
																		"value": "7"
																	},
																	"src": "6087:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_128_by_1",
																		"typeString": "int_const -128"
																	}
																},
																"src": "6078:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1255,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1243,
																	"src": "6096:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 1256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6104:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "37",
																		"id": 1257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6107:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_7_by_1",
																			"typeString": "int_const 7"
																		},
																		"value": "7"
																	},
																	"src": "6104:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	}
																},
																"src": "6096:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6078:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473",
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6110:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															},
															"value": "SafeCast: value doesn't fit in 8 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1",
																"typeString": "literal_string \"SafeCast: value doesn't fit in 8 bits\""
															}
														],
														"id": 1248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6070:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6070:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "6070:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1266,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "6173:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6168:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int8_$",
															"typeString": "type(int8)"
														},
														"typeName": {
															"id": 1264,
															"name": "int8",
															"nodeType": "ElementaryTypeName",
															"src": "6168:4:5",
															"typeDescriptions": {}
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6168:11:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"functionReturnParameters": 1247,
												"id": 1268,
												"nodeType": "Return",
												"src": "6161:18:5"
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "5655:341:5",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits.\n _Available since v3.1._"
									},
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "6017:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1242,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6017:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6016:14:5"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "6054:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 1245,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "6054:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6053:6:5"
									},
									"scope": 1294,
									"src": "6001:185:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "6426:114:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1279,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "6444:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6452:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "323535",
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6455:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_255_by_1",
																		"typeString": "int_const 255"
																	},
																	"value": "255"
																},
																"src": "6452:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																}
															},
															"src": "6444:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536",
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6460:42:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227",
																"typeString": "literal_string \"SafeCast: value doesn't fit in an int256\""
															},
															"value": "SafeCast: value doesn't fit in an int256"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227",
																"typeString": "literal_string \"SafeCast: value doesn't fit in an int256\""
															}
														],
														"id": 1278,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6436:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6436:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "6436:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1289,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "6527:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6520:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 1287,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6520:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6520:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1277,
												"id": 1291,
												"nodeType": "Return",
												"src": "6513:20:5"
											}
										]
									},
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "6192:165:5",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "6380:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6380:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6379:15:5"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "6418:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1275,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6418:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6417:8:5"
									},
									"scope": 1294,
									"src": "6362:178:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1295,
							"src": "777:5765:5"
						}
					],
					"src": "33:6510:5"
				},
				"id": 5
			},
			"contracts/interfaces/liquidityMining/IKyberFairLaunch.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/liquidityMining/IKyberFairLaunch.sol",
					"exportedSymbols": {
						"IKyberFairLaunch": [
							1446
						]
					},
					"id": 1447,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1296,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:6"
						},
						{
							"id": 1297,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:19:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1446,
							"linearizedBaseContracts": [
								1446
							],
							"name": "IKyberFairLaunch",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "119:334:6",
										"text": " @dev Add a new lp to the pool. Can only be called by the admin.\n @param _stakeToken: token to be staked to the pool\n @param _startBlock: block where the reward starts\n @param _endBlock: block where the reward ends\n @param _rewardPerBlocks: amount of reward token per block for the pool"
									},
									"functionSelector": "2fb40ce1",
									"id": 1310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "_stakeToken",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "486:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "_startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "516:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1301,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "516:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "_endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "545:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1303,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "545:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "_rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "572:35:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1305,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "572:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1306,
													"nodeType": "ArrayTypeName",
													"src": "572:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "475:139:6"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "623:0:6"
									},
									"scope": 1446,
									"src": "459:165:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "632:434:6",
										"text": " @dev Renew a pool to start another liquidity mining program\n @param _pid: id of the pool to renew, must be pool that has not started or already ended\n @param _startBlock: block where the reward starts\n @param _endBlock: block where the reward ends\n @param _rewardPerBlocks: amount of reward token per block for the pool\n   0 if we want to stop the pool from accumulating rewards"
									},
									"functionSelector": "b43c6270",
									"id": 1323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renewPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "1101:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "_startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "1124:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1314,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1124:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "_endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "1153:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1316,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1153:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "_rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "1180:35:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1318,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1180:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1319,
													"nodeType": "ArrayTypeName",
													"src": "1180:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1090:132:6"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1231:0:6"
									},
									"scope": 1446,
									"src": "1072:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "1240:324:6",
										"text": " @dev Update a pool, allow to change end block, reward per block\n @param _pid: pool id to be renew\n @param _endBlock: block where the reward ends\n @param _rewardPerBlocks: amount of reward token per block for the pool\n   0 if we want to stop the pool from accumulating rewards"
									},
									"functionSelector": "affb9fc8",
									"id": 1334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "1600:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1600:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "_endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "1623:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1327,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1623:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "_rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "1650:35:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1329,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1650:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1330,
													"nodeType": "ArrayTypeName",
													"src": "1650:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1589:103:6"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1701:0:6"
									},
									"scope": 1446,
									"src": "1570:132:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "1710:230:6",
										"text": " @dev deposit to tokens to accumulate rewards\n @param _pid: id of the pool\n @param _amount: amount of stakeToken to be deposited\n @param _shouldHarvest: whether to harvest the reward or not"
									},
									"functionSelector": "43a0d066",
									"id": 1344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "1973:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1973:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "1996:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "_shouldHarvest",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "2022:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2022:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1962:86:6"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:0:6"
									},
									"scope": 1446,
									"src": "1946:112:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "2066:180:6",
										"text": " @dev withdraw token (of the sender) from pool, also harvest reward\n @param _pid: id of the pool\n @param _amount: amount of stakeToken to withdraw"
									},
									"functionSelector": "441a3e70",
									"id": 1352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "2270:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "2284:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:31:6"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2309:0:6"
									},
									"scope": 1446,
									"src": "2252:58:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1353,
										"nodeType": "StructuredDocumentation",
										"src": "2318:128:6",
										"text": " @dev withdraw all tokens (of the sender) from pool, also harvest reward\n @param _pid: id of the pool"
									},
									"functionSelector": "958e2d31",
									"id": 1358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "2473:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2473:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2472:14:6"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2495:0:6"
									},
									"scope": 1446,
									"src": "2452:44:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "2504:185:6",
										"text": " @dev emergency withdrawal function to allow withdraw all deposited token (of the sender)\n   without harvesting the reward\n @param _pid: id of the pool"
									},
									"functionSelector": "5312ea8e",
									"id": 1364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "2722:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2722:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2721:14:6"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2744:0:6"
									},
									"scope": 1446,
									"src": "2695:50:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "2753:101:6",
										"text": " @dev harvest reward from pool for the sender\n @param _pid: id of the pool"
									},
									"functionSelector": "ddc63262",
									"id": 1370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "2877:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:14:6"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2899:0:6"
									},
									"scope": 1446,
									"src": "2860:40:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "2908:76:6",
										"text": " @dev harvest rewards from multiple pools for the sender"
									},
									"functionSelector": "52fd9f2f",
									"id": 1377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "harvestMultiplePools",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "_pids",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "3020:24:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1372,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3020:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1373,
													"nodeType": "ArrayTypeName",
													"src": "3020:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3019:26:6"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3054:0:6"
									},
									"scope": 1446,
									"src": "2990:65:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "3063:52:6",
										"text": " @dev update reward for one pool"
									},
									"functionSelector": "adb82b31",
									"id": 1383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePoolRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "3148:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3148:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3147:14:6"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3170:0:6"
									},
									"scope": 1446,
									"src": "3121:50:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "3179:72:6",
										"text": " @dev return the total of pools that have been added"
									},
									"functionSelector": "081e3eda",
									"id": 1389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3276:2:6"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "3302:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3302:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3301:9:6"
									},
									"scope": 1446,
									"src": "3257:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1390,
										"nodeType": "StructuredDocumentation",
										"src": "3319:55:6",
										"text": " @dev return full details of a pool"
									},
									"functionSelector": "2f380b35",
									"id": 1411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolInfo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "3401:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3401:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3400:14:6"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "totalStake",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "3479:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3479:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "stakeToken",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "3512:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3512:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "3545:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1398,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3545:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "3577:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1400,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3577:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "lastRewardBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "3607:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1402,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3607:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "3644:32:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1404,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3644:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1405,
													"nodeType": "ArrayTypeName",
													"src": "3644:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "accRewardPerShares",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "3691:35:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1407,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3691:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1408,
													"nodeType": "ArrayTypeName",
													"src": "3691:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3464:273:6"
									},
									"scope": 1446,
									"src": "3380:358:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1412,
										"nodeType": "StructuredDocumentation",
										"src": "3746:41:6",
										"text": " @dev get user's info"
									},
									"functionSelector": "1069f3b5",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserInfo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "3814:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3814:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "_account",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "3828:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3828:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3813:32:6"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "3910:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3910:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "unclaimedRewards",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "3939:33:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1420,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3939:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1421,
													"nodeType": "ArrayTypeName",
													"src": "3939:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "lastRewardPerShares",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "3987:36:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1423,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3987:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1424,
													"nodeType": "ArrayTypeName",
													"src": "3987:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3895:139:6"
									},
									"scope": 1446,
									"src": "3793:242:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "4043:51:6",
										"text": " @dev return list reward tokens"
									},
									"functionSelector": "c4f59f9b",
									"id": 1434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4124:2:6"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "4150:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1430,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4150:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1431,
													"nodeType": "ArrayTypeName",
													"src": "4150:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4149:18:6"
									},
									"scope": 1446,
									"src": "4100:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "4176:180:6",
										"text": " @dev get pending reward of a user from a pool, mostly for front-end\n @param _pid: id of the pool\n @param _user: user to check for pending rewards"
									},
									"functionSelector": "d18df53c",
									"id": 1445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "4386:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4386:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "4400:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4400:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4385:29:6"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "rewards",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "4465:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1441,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4465:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1442,
													"nodeType": "ArrayTypeName",
													"src": "4465:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4464:26:6"
									},
									"scope": 1446,
									"src": "4362:129:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1447,
							"src": "85:4409:6"
						}
					],
					"src": "38:4458:6"
				},
				"id": 6
			},
			"contracts/interfaces/liquidityMining/IKyberRewardLocker.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/liquidityMining/IKyberRewardLocker.sol",
					"exportedSymbols": {
						"IERC20Ext": [
							3378
						],
						"IKyberRewardLocker": [
							1605
						]
					},
					"id": 1606,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1448,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:7"
						},
						{
							"id": 1449,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:19:7"
						},
						{
							"absolutePath": "contracts/manual/IERC20Ext.sol",
							"file": "../../manual/IERC20Ext.sol",
							"id": 1451,
							"nodeType": "ImportDirective",
							"scope": 1606,
							"sourceUnit": 3379,
							"src": "85:53:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1450,
										"name": "IERC20Ext",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "93:9:7",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1605,
							"linearizedBaseContracts": [
								1605
							],
							"name": "IKyberRewardLocker",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IKyberRewardLocker.VestingSchedule",
									"id": 1460,
									"members": [
										{
											"constant": false,
											"id": 1453,
											"mutability": "mutable",
											"name": "startBlock",
											"nodeType": "VariableDeclaration",
											"scope": 1460,
											"src": "212:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1452,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "212:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1455,
											"mutability": "mutable",
											"name": "endBlock",
											"nodeType": "VariableDeclaration",
											"scope": 1460,
											"src": "240:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1454,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "240:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1457,
											"mutability": "mutable",
											"name": "quantity",
											"nodeType": "VariableDeclaration",
											"scope": 1460,
											"src": "266:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1456,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "266:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1459,
											"mutability": "mutable",
											"name": "vestedQuantity",
											"nodeType": "VariableDeclaration",
											"scope": 1460,
											"src": "293:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1458,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "293:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VestingSchedule",
									"nodeType": "StructDefinition",
									"scope": 1605,
									"src": "178:145:7",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1474,
									"name": "VestingEntryCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "367:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$3378",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1461,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 3378,
													"src": "367:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$3378",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "401:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"indexed": false,
												"mutability": "mutable",
												"name": "startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "439:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"indexed": false,
												"mutability": "mutable",
												"name": "endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "468:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"indexed": false,
												"mutability": "mutable",
												"name": "quantity",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "495:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "522:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:186:7"
									},
									"src": "331:212:7"
								},
								{
									"anonymous": false,
									"id": 1484,
									"name": "VestingEntryQueued",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"indexed": true,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "586:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "618:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$3378",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1477,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 3378,
													"src": "618:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$3378",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "652:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"indexed": false,
												"mutability": "mutable",
												"name": "quantity",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "690:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "690:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "575:138:7"
									},
									"src": "551:163:7"
								},
								{
									"anonymous": false,
									"id": 1494,
									"name": "Vested",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "745:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$3378",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1485,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 3378,
													"src": "745:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$3378",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "779:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"indexed": false,
												"mutability": "mutable",
												"name": "vestedQuantity",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "817:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "850:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "734:136:7"
									},
									"src": "722:149:7"
								},
								{
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "879:68:7",
										"text": " @dev queue a vesting schedule starting from now"
									},
									"functionSelector": "7750c9f0",
									"id": 1504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lock",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "977:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$3378",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1496,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 3378,
													"src": "977:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$3378",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1003:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1003:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1029:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:84:7"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1067:0:7"
									},
									"scope": 1605,
									"src": "953:115:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1505,
										"nodeType": "StructuredDocumentation",
										"src": "1076:50:7",
										"text": " @dev queue a vesting schedule"
									},
									"functionSelector": "a5d21e31",
									"id": 1516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lockWithStartBlock",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "1170:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$3378",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1506,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 3378,
													"src": "1170:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$3378",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "1196:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "quantity",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "1222:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "1249:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1159:115:7"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:7"
									},
									"scope": 1605,
									"src": "1132:160:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1517,
										"nodeType": "StructuredDocumentation",
										"src": "1300:74:7",
										"text": " @dev vest all completed schedules for multiple tokens"
									},
									"functionSelector": "9059aa6a",
									"id": 1526,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vestCompletedSchedulesForMultipleTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1439:27:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20Ext_$3378_$dyn_calldata_ptr",
													"typeString": "contract IERC20Ext[]"
												},
												"typeName": {
													"baseType": {
														"id": 1518,
														"name": "IERC20Ext",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 3378,
														"src": "1439:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Ext_$3378",
															"typeString": "contract IERC20Ext"
														}
													},
													"id": 1519,
													"nodeType": "ArrayTypeName",
													"src": "1439:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20Ext_$3378_$dyn_storage_ptr",
														"typeString": "contract IERC20Ext[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1428:45:7"
									},
									"returnParameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "vestedAmounts",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1492:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1522,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1492:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1523,
													"nodeType": "ArrayTypeName",
													"src": "1492:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:32:7"
									},
									"scope": 1605,
									"src": "1380:144:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "1532:170:7",
										"text": " @dev claim multiple tokens for specific vesting schedule,\n      if schedule has not ended yet, claiming amounts are linear with vesting blocks"
									},
									"functionSelector": "4d4f3d93",
									"id": 1540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vestScheduleForMultipleTokensAtIndices",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "1766:27:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20Ext_$3378_$dyn_calldata_ptr",
													"typeString": "contract IERC20Ext[]"
												},
												"typeName": {
													"baseType": {
														"id": 1528,
														"name": "IERC20Ext",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 3378,
														"src": "1766:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Ext_$3378",
															"typeString": "contract IERC20Ext"
														}
													},
													"id": 1529,
													"nodeType": "ArrayTypeName",
													"src": "1766:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20Ext_$3378_$dyn_storage_ptr",
														"typeString": "contract IERC20Ext[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "indices",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "1804:28:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "uint256[][]"
												},
												"typeName": {
													"baseType": {
														"baseType": {
															"id": 1531,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1804:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1532,
														"nodeType": "ArrayTypeName",
														"src": "1804:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[]"
														}
													},
													"id": 1533,
													"nodeType": "ArrayTypeName",
													"src": "1804:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
														"typeString": "uint256[][]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1755:84:7"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "vestedAmounts",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "1858:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1536,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1858:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1537,
													"nodeType": "ArrayTypeName",
													"src": "1858:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1857:32:7"
									},
									"scope": 1605,
									"src": "1708:182:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1541,
										"nodeType": "StructuredDocumentation",
										"src": "1898:65:7",
										"text": " @dev for all completed schedule, claim token"
									},
									"functionSelector": "fdfaaa05",
									"id": 1548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vestCompletedSchedules",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "2001:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$3378",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1542,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 3378,
													"src": "2001:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$3378",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:17:7"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "2036:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2036:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2035:9:7"
									},
									"scope": 1605,
									"src": "1969:76:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1549,
										"nodeType": "StructuredDocumentation",
										"src": "2053:158:7",
										"text": " @dev claim token for specific vesting schedule,\n @dev if schedule has not ended yet, claiming amount is linear with vesting blocks"
									},
									"functionSelector": "0f5636c3",
									"id": 1559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vestScheduleAtIndices",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "2248:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$3378",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1550,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 3378,
													"src": "2248:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$3378",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "indexes",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "2265:26:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1552,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2265:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1553,
													"nodeType": "ArrayTypeName",
													"src": "2265:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:45:7"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "2329:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2329:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2328:9:7"
									},
									"scope": 1605,
									"src": "2217:121:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "2346:95:7",
										"text": " @dev claim token for specific vesting schedule from startIndex to endIndex"
									},
									"functionSelector": "c33fddf8",
									"id": 1571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vestSchedulesInRange",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "2487:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$3378",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1561,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 3378,
													"src": "2487:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$3378",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "startIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "2513:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2513:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "endIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "2542:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2542:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2476:89:7"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "2584:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2584:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2583:9:7"
									},
									"scope": 1605,
									"src": "2447:146:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "2601:59:7",
										"text": " @dev length of vesting schedules array"
									},
									"functionSelector": "679f7f77",
									"id": 1581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "numVestingSchedules",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "2695:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "2712:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$3378",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1575,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 3378,
													"src": "2712:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$3378",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:34:7"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "2779:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2778:9:7"
									},
									"scope": 1605,
									"src": "2666:122:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1582,
										"nodeType": "StructuredDocumentation",
										"src": "2796:63:7",
										"text": " @dev get detailed of each vesting schedule"
									},
									"functionSelector": "0a3b7e31",
									"id": 1593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVestingScheduleAtIndex",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "2910:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2910:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "2936:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$3378",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1585,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 3378,
													"src": "2936:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$3378",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "2962:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2962:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2899:83:7"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "3006:22:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VestingSchedule_$1460_memory_ptr",
													"typeString": "struct IKyberRewardLocker.VestingSchedule"
												},
												"typeName": {
													"id": 1590,
													"name": "VestingSchedule",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1460,
													"src": "3006:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VestingSchedule_$1460_storage_ptr",
														"typeString": "struct IKyberRewardLocker.VestingSchedule"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:24:7"
									},
									"scope": 1605,
									"src": "2865:165:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "3038:52:7",
										"text": " @dev get vesting shedules array"
									},
									"functionSelector": "2f50bd72",
									"id": 1604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVestingSchedules",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "3125:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3125:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "3142:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$3378",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 1597,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 3378,
													"src": "3142:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$3378",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3124:34:7"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "schedules",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "3209:34:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_VestingSchedule_$1460_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IKyberRewardLocker.VestingSchedule[]"
												},
												"typeName": {
													"baseType": {
														"id": 1600,
														"name": "VestingSchedule",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 1460,
														"src": "3209:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VestingSchedule_$1460_storage_ptr",
															"typeString": "struct IKyberRewardLocker.VestingSchedule"
														}
													},
													"id": 1601,
													"nodeType": "ArrayTypeName",
													"src": "3209:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VestingSchedule_$1460_storage_$dyn_storage_ptr",
														"typeString": "struct IKyberRewardLocker.VestingSchedule[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3208:36:7"
									},
									"scope": 1605,
									"src": "3096:149:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1606,
							"src": "142:3106:7"
						}
					],
					"src": "38:3212:7"
				},
				"id": 7
			},
			"contracts/liquidityMining/KyberFairLaunch.sol": {
				"ast": {
					"absolutePath": "contracts/liquidityMining/KyberFairLaunch.sol",
					"exportedSymbols": {
						"IERC20Ext": [
							3378
						],
						"IKyberFairLaunch": [
							1446
						],
						"IKyberRewardLocker": [
							1605
						],
						"KyberFairLaunch": [
							3365
						],
						"PermissionAdmin": [
							3515
						],
						"ReentrancyGuard": [
							981
						],
						"SafeCast": [
							1294
						],
						"SafeERC20": [
							645
						],
						"SafeMath": [
							354
						]
					},
					"id": 3366,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1607,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:8"
						},
						{
							"id": 1608,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "85:33:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1610,
							"nodeType": "ImportDirective",
							"scope": 3366,
							"sourceUnit": 982,
							"src": "122:82:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1609,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "130:15:8",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/math/SafeMath.sol",
							"id": 1612,
							"nodeType": "ImportDirective",
							"scope": 3366,
							"sourceUnit": 355,
							"src": "206:67:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1611,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "214:8:8",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"id": 1614,
							"nodeType": "ImportDirective",
							"scope": 3366,
							"sourceUnit": 646,
							"src": "275:76:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1613,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "283:9:8",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/SafeCast.sol",
							"file": "@openzeppelin/contracts/utils/SafeCast.sol",
							"id": 1616,
							"nodeType": "ImportDirective",
							"scope": 3366,
							"sourceUnit": 1295,
							"src": "353:68:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1615,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "361:8:8",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/manual/IERC20Ext.sol",
							"file": "../manual/IERC20Ext.sol",
							"id": 1618,
							"nodeType": "ImportDirective",
							"scope": 3366,
							"sourceUnit": 3379,
							"src": "423:50:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1617,
										"name": "IERC20Ext",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "431:9:8",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/manual/PermissionAdmin.sol",
							"file": "../manual/PermissionAdmin.sol",
							"id": 1620,
							"nodeType": "ImportDirective",
							"scope": 3366,
							"sourceUnit": 3516,
							"src": "475:62:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1619,
										"name": "PermissionAdmin",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "483:15:8",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/liquidityMining/IKyberFairLaunch.sol",
							"file": "../interfaces/liquidityMining/IKyberFairLaunch.sol",
							"id": 1622,
							"nodeType": "ImportDirective",
							"scope": 3366,
							"sourceUnit": 1447,
							"src": "539:84:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1621,
										"name": "IKyberFairLaunch",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "547:16:8",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/liquidityMining/IKyberRewardLocker.sol",
							"file": "../interfaces/liquidityMining/IKyberRewardLocker.sol",
							"id": 1624,
							"nodeType": "ImportDirective",
							"scope": 3366,
							"sourceUnit": 1606,
							"src": "625:88:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1623,
										"name": "IKyberRewardLocker",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "633:18:8",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1626,
										"name": "IKyberFairLaunch",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1446,
										"src": "1092:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IKyberFairLaunch_$1446",
											"typeString": "contract IKyberFairLaunch"
										}
									},
									"id": 1627,
									"nodeType": "InheritanceSpecifier",
									"src": "1092:16:8"
								},
								{
									"baseName": {
										"id": 1628,
										"name": "PermissionAdmin",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3515,
										"src": "1110:15:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PermissionAdmin_$3515",
											"typeString": "contract PermissionAdmin"
										}
									},
									"id": 1629,
									"nodeType": "InheritanceSpecifier",
									"src": "1110:15:8"
								},
								{
									"baseName": {
										"id": 1630,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 981,
										"src": "1127:15:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$981",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 1631,
									"nodeType": "InheritanceSpecifier",
									"src": "1127:15:8"
								}
							],
							"contractDependencies": [
								981,
								1446,
								3515
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1625,
								"nodeType": "StructuredDocumentation",
								"src": "717:347:8",
								"text": "FairLaunch contract for Kyber DMM Liquidity Mining program\n Allow stakers to stake LP tokens and receive reward tokens\n Allow extend or renew a pool to continue/restart the LM program\n When harvesting, rewards will be transferred to a RewardLocker\n Support multiple reward tokens, reward tokens must be distinct and immutable"
							},
							"fullyImplemented": true,
							"id": 3365,
							"linearizedBaseContracts": [
								3365,
								981,
								3515,
								1446
							],
							"name": "KyberFairLaunch",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1634,
									"libraryName": {
										"id": 1632,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 354,
										"src": "1156:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$354",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1150:27:8",
									"typeName": {
										"id": 1633,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1169:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1637,
									"libraryName": {
										"id": 1635,
										"name": "SafeCast",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1294,
										"src": "1189:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeCast_$1294",
											"typeString": "library SafeCast"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1183:27:8",
									"typeName": {
										"id": 1636,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1202:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1640,
									"libraryName": {
										"id": 1638,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 645,
										"src": "1222:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$645",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1216:30:8",
									"typeName": {
										"id": 1639,
										"name": "IERC20Ext",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3378,
										"src": "1236:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Ext_$3378",
											"typeString": "contract IERC20Ext"
										}
									}
								},
								{
									"constant": true,
									"id": 1643,
									"mutability": "constant",
									"name": "PRECISION",
									"nodeType": "VariableDeclaration",
									"scope": 3365,
									"src": "1254:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1641,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1254:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653132",
										"id": 1642,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1292:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000_by_1",
											"typeString": "int_const 1000000000000"
										},
										"value": "1e12"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "KyberFairLaunch.UserRewardData",
									"id": 1648,
									"members": [
										{
											"constant": false,
											"id": 1645,
											"mutability": "mutable",
											"name": "unclaimedReward",
											"nodeType": "VariableDeclaration",
											"scope": 1648,
											"src": "1338:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1644,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1338:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1647,
											"mutability": "mutable",
											"name": "lastRewardPerShare",
											"nodeType": "VariableDeclaration",
											"scope": 1648,
											"src": "1372:26:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1646,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1372:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserRewardData",
									"nodeType": "StructDefinition",
									"scope": 3365,
									"src": "1305:101:8",
									"visibility": "public"
								},
								{
									"canonicalName": "KyberFairLaunch.UserInfo",
									"id": 1655,
									"members": [
										{
											"constant": false,
											"id": 1650,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 1655,
											"src": "1466:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1649,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1466:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1654,
											"mutability": "mutable",
											"name": "userRewardData",
											"nodeType": "VariableDeclaration",
											"scope": 1655,
											"src": "1541:49:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1648_storage_$",
												"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData)"
											},
											"typeName": {
												"id": 1653,
												"keyType": {
													"id": 1651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1541:34:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1648_storage_$",
													"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData)"
												},
												"valueType": {
													"id": 1652,
													"name": "UserRewardData",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1648,
													"src": "1560:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserRewardData_$1648_storage_ptr",
														"typeString": "struct KyberFairLaunch.UserRewardData"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 3365,
									"src": "1439:814:8",
									"visibility": "public"
								},
								{
									"canonicalName": "KyberFairLaunch.PoolRewardData",
									"id": 1660,
									"members": [
										{
											"constant": false,
											"id": 1657,
											"mutability": "mutable",
											"name": "rewardPerBlock",
											"nodeType": "VariableDeclaration",
											"scope": 1660,
											"src": "2294:22:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1656,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2294:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1659,
											"mutability": "mutable",
											"name": "accRewardPerShare",
											"nodeType": "VariableDeclaration",
											"scope": 1660,
											"src": "2327:25:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1658,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2327:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolRewardData",
									"nodeType": "StructDefinition",
									"scope": 3365,
									"src": "2261:99:8",
									"visibility": "public"
								},
								{
									"canonicalName": "KyberFairLaunch.PoolInfo",
									"id": 1675,
									"members": [
										{
											"constant": false,
											"id": 1662,
											"mutability": "mutable",
											"name": "totalStake",
											"nodeType": "VariableDeclaration",
											"scope": 1675,
											"src": "2911:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1661,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2911:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1664,
											"mutability": "mutable",
											"name": "stakeToken",
											"nodeType": "VariableDeclaration",
											"scope": 1675,
											"src": "2940:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1663,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2940:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1666,
											"mutability": "mutable",
											"name": "startBlock",
											"nodeType": "VariableDeclaration",
											"scope": 1675,
											"src": "2969:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1665,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2969:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1668,
											"mutability": "mutable",
											"name": "endBlock",
											"nodeType": "VariableDeclaration",
											"scope": 1675,
											"src": "2997:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1667,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2997:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1670,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nodeType": "VariableDeclaration",
											"scope": 1675,
											"src": "3023:22:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1669,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "3023:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1674,
											"mutability": "mutable",
											"name": "poolRewardData",
											"nodeType": "VariableDeclaration",
											"scope": 1675,
											"src": "3056:49:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1660_storage_$",
												"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData)"
											},
											"typeName": {
												"id": 1673,
												"keyType": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3064:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "3056:34:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1660_storage_$",
													"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData)"
												},
												"valueType": {
													"id": 1672,
													"name": "PoolRewardData",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1660,
													"src": "3075:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolRewardData_$1660_storage_ptr",
														"typeString": "struct KyberFairLaunch.PoolRewardData"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nodeType": "StructDefinition",
									"scope": 3365,
									"src": "2884:229:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1e1c6a07",
									"id": 1679,
									"mutability": "mutable",
									"name": "poolExists",
									"nodeType": "VariableDeclaration",
									"scope": 3365,
									"src": "3169:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1678,
										"keyType": {
											"id": 1676,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3177:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3169:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1677,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "3188:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3892601c",
									"id": 1681,
									"mutability": "immutable",
									"name": "rewardLocker",
									"nodeType": "VariableDeclaration",
									"scope": 3365,
									"src": "3254:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IKyberRewardLocker_$1605",
										"typeString": "contract IKyberRewardLocker"
									},
									"typeName": {
										"id": 1680,
										"name": "IKyberRewardLocker",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1605,
										"src": "3254:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IKyberRewardLocker_$1605",
											"typeString": "contract IKyberRewardLocker"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7bb7bed1",
									"id": 1684,
									"mutability": "mutable",
									"name": "rewardTokens",
									"nodeType": "VariableDeclaration",
									"scope": 3365,
									"src": "3464:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1682,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3464:7:8",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1683,
										"nodeType": "ArrayTypeName",
										"src": "3464:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1389
									],
									"constant": false,
									"functionSelector": "081e3eda",
									"id": 1687,
									"mutability": "mutable",
									"name": "poolLength",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1686,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3544:8:8"
									},
									"scope": 3365,
									"src": "3529:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1685,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3529:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1691,
									"mutability": "mutable",
									"name": "poolInfo",
									"nodeType": "VariableDeclaration",
									"scope": 3365,
									"src": "3570:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1675_storage_$",
										"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo)"
									},
									"typeName": {
										"id": 1690,
										"keyType": {
											"id": 1688,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3578:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3570:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1675_storage_$",
											"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo)"
										},
										"valueType": {
											"id": 1689,
											"name": "PoolInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1675,
											"src": "3589:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
												"typeString": "struct KyberFairLaunch.PoolInfo"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1697,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"scope": 3365,
									"src": "3677:66:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo))"
									},
									"typeName": {
										"id": 1696,
										"keyType": {
											"id": 1692,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3685:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3677:48:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo))"
										},
										"valueType": {
											"id": 1695,
											"keyType": {
												"id": 1693,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3704:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3696:28:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$",
												"typeString": "mapping(address => struct KyberFairLaunch.UserInfo)"
											},
											"valueType": {
												"id": 1694,
												"name": "UserInfo",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1655,
												"src": "3715:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
													"typeString": "struct KyberFairLaunch.UserInfo"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 1708,
									"name": "AddNewPool",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"indexed": true,
												"mutability": "mutable",
												"name": "stakeToken",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "3779:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3779:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"indexed": true,
												"mutability": "mutable",
												"name": "startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "3816:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1700,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3816:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"indexed": true,
												"mutability": "mutable",
												"name": "endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "3852:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1702,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3852:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "3886:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1704,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3886:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1705,
													"nodeType": "ArrayTypeName",
													"src": "3886:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3768:150:8"
									},
									"src": "3752:167:8"
								},
								{
									"anonymous": false,
									"id": 1719,
									"name": "RenewPool",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "3951:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3951:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"indexed": true,
												"mutability": "mutable",
												"name": "startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "3981:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1711,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3981:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"indexed": true,
												"mutability": "mutable",
												"name": "endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "4017:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1713,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4017:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "4051:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1715,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4051:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1716,
													"nodeType": "ArrayTypeName",
													"src": "4051:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:143:8"
									},
									"src": "3925:159:8"
								},
								{
									"anonymous": false,
									"id": 1728,
									"name": "UpdatePool",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "4117:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4117:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"indexed": true,
												"mutability": "mutable",
												"name": "endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "4147:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1722,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4147:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "4181:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1724,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4181:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1725,
													"nodeType": "ArrayTypeName",
													"src": "4181:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4106:107:8"
									},
									"src": "4090:124:8"
								},
								{
									"anonymous": false,
									"id": 1738,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "4244:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4244:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "4275:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"indexed": true,
												"mutability": "mutable",
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "4305:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4305:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "4343:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4343:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4233:131:8"
									},
									"src": "4220:145:8"
								},
								{
									"anonymous": false,
									"id": 1748,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "4396:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4396:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1742,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "4427:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4427:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"indexed": true,
												"mutability": "mutable",
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "4457:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "4495:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4495:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4385:131:8"
									},
									"src": "4371:146:8"
								},
								{
									"anonymous": false,
									"id": 1760,
									"name": "Harvest",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "4547:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4547:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "4578:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4578:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"indexed": true,
												"mutability": "mutable",
												"name": "rewardToken",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "4608:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4608:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockedAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "4646:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4646:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "4677:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4677:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4536:167:8"
									},
									"src": "4523:181:8"
								},
								{
									"anonymous": false,
									"id": 1770,
									"name": "EmergencyWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "4744:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4744:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "4775:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4775:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"indexed": true,
												"mutability": "mutable",
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "4805:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "4843:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4843:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4733:131:8"
									},
									"src": "4710:155:8"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "5025:436:8",
										"statements": [
											{
												"expression": {
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1783,
														"name": "rewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "5036:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1784,
														"name": "_rewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "5051:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "5036:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 1786,
												"nodeType": "ExpressionStatement",
												"src": "5036:28:8"
											},
											{
												"expression": {
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1787,
														"name": "rewardLocker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "5075:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKyberRewardLocker_$1605",
															"typeString": "contract IKyberRewardLocker"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1788,
														"name": "_rewardLocker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "5090:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKyberRewardLocker_$1605",
															"typeString": "contract IKyberRewardLocker"
														}
													},
													"src": "5075:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKyberRewardLocker_$1605",
														"typeString": "contract IKyberRewardLocker"
													}
												},
												"id": 1790,
												"nodeType": "ExpressionStatement",
												"src": "5075:28:8"
											},
											{
												"body": {
													"id": 1829,
													"nodeType": "Block",
													"src": "5214:240:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1802,
																		"name": "_rewardTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1775,
																		"src": "5233:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 1804,
																	"indexExpression": {
																		"id": 1803,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1792,
																		"src": "5247:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5233:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5261:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5253:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1805,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5253:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5253:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "5233:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1828,
															"nodeType": "IfStatement",
															"src": "5229:214:8",
															"trueBody": {
																"id": 1827,
																"nodeType": "Block",
																"src": "5265:178:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1818,
																							"name": "_rewardLocker",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1777,
																							"src": "5354:13:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IKyberRewardLocker_$1605",
																								"typeString": "contract IKyberRewardLocker"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_IKyberRewardLocker_$1605",
																								"typeString": "contract IKyberRewardLocker"
																							}
																						],
																						"id": 1817,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5346:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1816,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "5346:7:8",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1819,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5346:22:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1822,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "5396:7:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": {
																									"id": 1821,
																									"name": "uint256",
																									"nodeType": "ElementaryTypeName",
																									"src": "5396:7:8",
																									"typeDescriptions": {}
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								}
																							],
																							"id": 1820,
																							"name": "type",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967269,
																							"src": "5391:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 1823,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5391:13:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_meta_type_t_uint256",
																							"typeString": "type(uint256)"
																						}
																					},
																					"id": 1824,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "max",
																					"nodeType": "MemberAccess",
																					"src": "5391:17:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 1811,
																								"name": "_rewardTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1775,
																								"src": "5294:13:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																									"typeString": "address[] memory"
																								}
																							},
																							"id": 1813,
																							"indexExpression": {
																								"id": 1812,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1792,
																								"src": "5308:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5294:16:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1810,
																						"name": "IERC20Ext",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3378,
																						"src": "5284:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20Ext_$3378_$",
																							"typeString": "type(contract IERC20Ext)"
																						}
																					},
																					"id": 1814,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5284:27:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Ext_$3378",
																						"typeString": "contract IERC20Ext"
																					}
																				},
																				"id": 1815,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeApprove",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 534,
																				"src": "5284:39:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$432_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$432_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 1825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5284:143:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1826,
																		"nodeType": "ExpressionStatement",
																		"src": "5284:143:8"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1795,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1792,
														"src": "5183:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1796,
															"name": "_rewardTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "5187:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5187:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5183:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1830,
												"initializationExpression": {
													"assignments": [
														1792
													],
													"declarations": [
														{
															"constant": false,
															"id": 1792,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1830,
															"src": "5168:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1791,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5168:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1794,
													"initialValue": {
														"hexValue": "30",
														"id": 1793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5180:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5168:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5209:3:8",
														"subExpression": {
															"id": 1799,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "5209:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1801,
													"nodeType": "ExpressionStatement",
													"src": "5209:3:8"
												},
												"nodeType": "ForStatement",
												"src": "5163:291:8"
											}
										]
									},
									"id": 1832,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1780,
													"name": "_admin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1772,
													"src": "5017:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1781,
											"modifierName": {
												"id": 1779,
												"name": "PermissionAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 3515,
												"src": "5001:15:8",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_PermissionAdmin_$3515_$",
													"typeString": "type(contract PermissionAdmin)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5001:23:8"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "_admin",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "4895:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4895:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "_rewardTokens",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "4920:30:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1773,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4920:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1774,
													"nodeType": "ArrayTypeName",
													"src": "4920:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "_rewardLocker",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "4961:32:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IKyberRewardLocker_$1605",
													"typeString": "contract IKyberRewardLocker"
												},
												"typeName": {
													"id": 1776,
													"name": "IKyberRewardLocker",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1605,
													"src": "4961:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKyberRewardLocker_$1605",
														"typeString": "contract IKyberRewardLocker"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4884:116:8"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5025:0:8"
									},
									"scope": 3365,
									"src": "4873:588:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1835,
										"nodeType": "Block",
										"src": "5496:2:8",
										"statements": []
									},
									"id": 1836,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5476:2:8"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5496:0:8"
									},
									"scope": 3365,
									"src": "5469:29:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1885,
										"nodeType": "Block",
										"src": "5687:347:8",
										"statements": [
											{
												"assignments": [
													1847
												],
												"declarations": [
													{
														"constant": false,
														"id": 1847,
														"mutability": "mutable",
														"name": "rewardToken",
														"nodeType": "VariableDeclaration",
														"scope": 1885,
														"src": "5698:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Ext_$3378",
															"typeString": "contract IERC20Ext"
														},
														"typeName": {
															"id": 1846,
															"name": "IERC20Ext",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 3378,
															"src": "5698:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Ext_$3378",
																"typeString": "contract IERC20Ext"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1853,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1849,
																"name": "rewardTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1684,
																"src": "5732:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															},
															"id": 1851,
															"indexExpression": {
																"id": 1850,
																"name": "rewardTokenIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "5745:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5732:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1848,
														"name": "IERC20Ext",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3378,
														"src": "5722:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20Ext_$3378_$",
															"typeString": "type(contract IERC20Ext)"
														}
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5722:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$3378",
														"typeString": "contract IERC20Ext"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5698:65:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_contract$_IERC20Ext_$3378",
														"typeString": "contract IERC20Ext"
													},
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1854,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "5778:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Ext_$3378",
															"typeString": "contract IERC20Ext"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5803:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1855,
															"name": "IERC20Ext",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3378,
															"src": "5793:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20Ext_$3378_$",
																"typeString": "type(contract IERC20Ext)"
															}
														},
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5793:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Ext_$3378",
															"typeString": "contract IERC20Ext"
														}
													},
													"src": "5778:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1883,
													"nodeType": "Block",
													"src": "5956:71:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1878,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5996:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5996:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 1880,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1841,
																		"src": "6008:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1875,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "5971:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Ext_$3378",
																			"typeString": "contract IERC20Ext"
																		}
																	},
																	"id": 1877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 466,
																	"src": "5971:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$432_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$432_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5971:44:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1882,
															"nodeType": "ExpressionStatement",
															"src": "5971:44:8"
														}
													]
												},
												"id": 1884,
												"nodeType": "IfStatement",
												"src": "5774:253:8",
												"trueBody": {
													"id": 1874,
													"nodeType": "Block",
													"src": "5807:143:8",
													"statements": [
														{
															"assignments": [
																1860,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1860,
																	"mutability": "mutable",
																	"name": "success",
																	"nodeType": "VariableDeclaration",
																	"scope": 1874,
																	"src": "5823:12:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1859,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "5823:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1868,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5872:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1861,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5841:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5841:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "5841:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1864,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1841,
																			"src": "5864:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "5841:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5841:34:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5822:53:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1870,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1860,
																		"src": "5898:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "7472616e736665722072657761726420746f6b656e206661696c6564",
																		"id": 1871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5907:30:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_93667b8e945a805956ebe9ea399ecb8c4162704042e6f100fb7621efea8e2b35",
																			"typeString": "literal_string \"transfer reward token failed\""
																		},
																		"value": "transfer reward token failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_93667b8e945a805956ebe9ea399ecb8c4162704042e6f100fb7621efea8e2b35",
																			"typeString": "literal_string \"transfer reward token failed\""
																		}
																	],
																	"id": 1869,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5890:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5890:48:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1873,
															"nodeType": "ExpressionStatement",
															"src": "5890:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1837,
										"nodeType": "StructuredDocumentation",
										"src": "5506:68:8",
										"text": " @dev Allow admin to withdraw only reward tokens"
									},
									"functionSelector": "d12e4ceb",
									"id": 1886,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1844,
											"modifierName": {
												"id": 1843,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 3426,
												"src": "5672:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5672:9:8"
										}
									],
									"name": "adminWithdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "rewardTokenIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "5603:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5603:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "5629:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5629:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5602:42:8"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5687:0:8"
									},
									"scope": 3365,
									"src": "5580:454:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1310
									],
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "6588:1046:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6607:24:8",
															"subExpression": {
																"baseExpression": {
																	"id": 1903,
																	"name": "poolExists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "6608:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1905,
																"indexExpression": {
																	"id": 1904,
																	"name": "_stakeToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1889,
																	"src": "6619:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6608:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6164643a206475706c69636174656420706f6f6c",
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6633:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_afec7c11c0dafba4c83baee4a10fbaa3a43a46dce9b3e2c79ab91a6131e0e8e2",
																"typeString": "literal_string \"add: duplicated pool\""
															},
															"value": "add: duplicated pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_afec7c11c0dafba4c83baee4a10fbaa3a43a46dce9b3e2c79ab91a6131e0e8e2",
																"typeString": "literal_string \"add: duplicated pool\""
															}
														],
														"id": 1902,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6599:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6599:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1909,
												"nodeType": "ExpressionStatement",
												"src": "6599:57:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1911,
																"name": "_stakeToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "6675:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6698:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6690:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1912,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6690:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6690:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6675:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6164643a20696e76616c6964207374616b6520746f6b656e",
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6702:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0cf1347f111c1e2e524e09dc610066c7514c5455b7c1a7117c8c57b811f17690",
																"typeString": "literal_string \"add: invalid stake token\""
															},
															"value": "add: invalid stake token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0cf1347f111c1e2e524e09dc610066c7514c5455b7c1a7117c8c57b811f17690",
																"typeString": "literal_string \"add: invalid stake token\""
															}
														],
														"id": 1910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6667:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6667:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1919,
												"nodeType": "ExpressionStatement",
												"src": "6667:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1921,
																	"name": "rewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "6762:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6762:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1923,
																	"name": "_rewardPerBlocks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1896,
																	"src": "6785:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6785:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6762:46:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6164643a20696e76616c6964206c656e677468",
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_462aec2277423072c98fc656350ffd9dcbb353e1fa9c1cfa13a2fa86f5fec88c",
																"typeString": "literal_string \"add: invalid length\""
															},
															"value": "add: invalid length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_462aec2277423072c98fc656350ffd9dcbb353e1fa9c1cfa13a2fa86f5fec88c",
																"typeString": "literal_string \"add: invalid length\""
															}
														],
														"id": 1920,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6740:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6740:115:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1928,
												"nodeType": "ExpressionStatement",
												"src": "6740:115:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1930,
																	"name": "_startBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1891,
																	"src": "6890:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 1931,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6904:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "6904:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6890:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1934,
																	"name": "_endBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1893,
																	"src": "6920:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1935,
																	"name": "_startBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1891,
																	"src": "6932:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "6920:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6890:53:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6164643a20696e76616c696420626c6f636b73",
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6958:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc3a2899eec1259623d92efeb6fc5017bc79c7225fde1627f50422d59e8987b9",
																"typeString": "literal_string \"add: invalid blocks\""
															},
															"value": "add: invalid blocks"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc3a2899eec1259623d92efeb6fc5017bc79c7225fde1627f50422d59e8987b9",
																"typeString": "literal_string \"add: invalid blocks\""
															}
														],
														"id": 1929,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6868:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6868:122:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1940,
												"nodeType": "ExpressionStatement",
												"src": "6868:122:8"
											},
											{
												"expression": {
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1941,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1691,
																"src": "7003:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1675_storage_$",
																	"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
																}
															},
															"id": 1943,
															"indexExpression": {
																"id": 1942,
																"name": "poolLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1687,
																"src": "7012:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7003:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage",
																"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
															}
														},
														"id": 1944,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1664,
														"src": "7003:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1945,
														"name": "_stakeToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1889,
														"src": "7037:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7003:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1947,
												"nodeType": "ExpressionStatement",
												"src": "7003:45:8"
											},
											{
												"expression": {
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1948,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1691,
																"src": "7059:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1675_storage_$",
																	"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
																}
															},
															"id": 1950,
															"indexExpression": {
																"id": 1949,
																"name": "poolLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1687,
																"src": "7068:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7059:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage",
																"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
															}
														},
														"id": 1951,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1666,
														"src": "7059:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1952,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1891,
														"src": "7093:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "7059:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1954,
												"nodeType": "ExpressionStatement",
												"src": "7059:45:8"
											},
											{
												"expression": {
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1955,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1691,
																"src": "7115:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1675_storage_$",
																	"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
																}
															},
															"id": 1957,
															"indexExpression": {
																"id": 1956,
																"name": "poolLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1687,
																"src": "7124:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7115:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage",
																"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
															}
														},
														"id": 1958,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "endBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1668,
														"src": "7115:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1959,
														"name": "_endBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1893,
														"src": "7147:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "7115:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1961,
												"nodeType": "ExpressionStatement",
												"src": "7115:41:8"
											},
											{
												"expression": {
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1962,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1691,
																"src": "7167:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1675_storage_$",
																	"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
																}
															},
															"id": 1964,
															"indexExpression": {
																"id": 1963,
																"name": "poolLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1687,
																"src": "7176:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7167:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage",
																"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
															}
														},
														"id": 1965,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1670,
														"src": "7167:36:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1966,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1891,
														"src": "7206:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "7167:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1968,
												"nodeType": "ExpressionStatement",
												"src": "7167:50:8"
											},
											{
												"body": {
													"id": 1994,
													"nodeType": "Block",
													"src": "7284:192:8",
													"statements": [
														{
															"expression": {
																"id": 1992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1980,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1691,
																				"src": "7299:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1675_storage_$",
																					"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
																				}
																			},
																			"id": 1982,
																			"indexExpression": {
																				"id": 1981,
																				"name": "poolLength",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1687,
																				"src": "7308:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7299:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1675_storage",
																				"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
																			}
																		},
																		"id": 1983,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "poolRewardData",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1674,
																		"src": "7299:35:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1660_storage_$",
																			"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																		}
																	},
																	"id": 1985,
																	"indexExpression": {
																		"id": 1984,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1970,
																		"src": "7335:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7299:38:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolRewardData_$1660_storage",
																		"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1987,
																				"name": "_rewardPerBlocks",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1896,
																				"src": "7390:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 1989,
																			"indexExpression": {
																				"id": 1988,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1970,
																				"src": "7407:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7390:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "30",
																			"id": 1990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7447:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1986,
																		"name": "PoolRewardData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1660,
																		"src": "7340:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_PoolRewardData_$1660_storage_ptr_$",
																			"typeString": "type(struct KyberFairLaunch.PoolRewardData storage pointer)"
																		}
																	},
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [
																		"rewardPerBlock",
																		"accRewardPerShare"
																	],
																	"nodeType": "FunctionCall",
																	"src": "7340:124:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolRewardData_$1660_memory_ptr",
																		"typeString": "struct KyberFairLaunch.PoolRewardData memory"
																	}
																},
																"src": "7299:165:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolRewardData_$1660_storage",
																	"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																}
															},
															"id": 1993,
															"nodeType": "ExpressionStatement",
															"src": "7299:165:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1973,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1970,
														"src": "7250:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1974,
															"name": "_rewardPerBlocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "7254:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7254:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7250:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1995,
												"initializationExpression": {
													"assignments": [
														1970
													],
													"declarations": [
														{
															"constant": false,
															"id": 1970,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1995,
															"src": "7235:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1969,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7235:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1972,
													"initialValue": {
														"hexValue": "30",
														"id": 1971,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7247:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7235:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7279:3:8",
														"subExpression": {
															"id": 1977,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1970,
															"src": "7279:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1979,
													"nodeType": "ExpressionStatement",
													"src": "7279:3:8"
												},
												"nodeType": "ForStatement",
												"src": "7230:246:8"
											},
											{
												"expression": {
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "7488:12:8",
													"subExpression": {
														"id": 1996,
														"name": "poolLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "7488:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1998,
												"nodeType": "ExpressionStatement",
												"src": "7488:12:8"
											},
											{
												"expression": {
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1999,
															"name": "poolExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "7513:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2001,
														"indexExpression": {
															"id": 2000,
															"name": "_stakeToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "7524:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7513:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2002,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7539:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7513:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2004,
												"nodeType": "ExpressionStatement",
												"src": "7513:30:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2006,
															"name": "_stakeToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "7572:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2007,
															"name": "_startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1891,
															"src": "7585:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 2008,
															"name": "_endBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "7598:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 2009,
															"name": "_rewardPerBlocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "7609:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 2005,
														"name": "AddNewPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "7561:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint32_$_t_uint32_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint32,uint32,uint256[] memory)"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7561:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2011,
												"nodeType": "EmitStatement",
												"src": "7556:70:8"
											}
										]
									},
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "6042:356:8",
										"text": " @dev Add a new lp to the pool. Can only be called by the admin.\n @param _stakeToken: token to be staked to the pool\n @param _startBlock: block where the reward starts\n @param _endBlock: block where the reward ends\n @param _rewardPerBlocks: amount of reward token per block for the pool for each reward token"
									},
									"functionSelector": "2fb40ce1",
									"id": 2013,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1900,
											"modifierName": {
												"id": 1899,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 3426,
												"src": "6578:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6578:9:8"
										}
									],
									"name": "addPool",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1898,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6569:8:8"
									},
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "_stakeToken",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "6431:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "_startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "6461:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1890,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6461:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "_endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "6490:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1892,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6490:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "_rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "6517:35:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1894,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6517:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1895,
													"nodeType": "ArrayTypeName",
													"src": "6517:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6420:139:8"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6588:0:8"
									},
									"scope": 3365,
									"src": "6404:1230:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1323
									],
									"body": {
										"id": 2124,
										"nodeType": "Block",
										"src": "8261:960:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2030,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "8290:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2029,
														"name": "updatePoolRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3064,
														"src": "8272:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8272:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2032,
												"nodeType": "ExpressionStatement",
												"src": "8272:23:8"
											},
											{
												"assignments": [
													2034
												],
												"declarations": [
													{
														"constant": false,
														"id": 2034,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2124,
														"src": "8308:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo"
														},
														"typeName": {
															"id": 2033,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1675,
															"src": "8308:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2038,
												"initialValue": {
													"baseExpression": {
														"id": 2035,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "8332:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1675_storage_$",
															"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
														}
													},
													"id": 2037,
													"indexExpression": {
														"id": 2036,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2016,
														"src": "8341:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8332:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1675_storage",
														"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8308:38:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2040,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2034,
																		"src": "8438:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																			"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																		}
																	},
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "startBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1666,
																	"src": "8438:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 2042,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "8456:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "8456:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8438:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2045,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2034,
																		"src": "8472:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																			"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																		}
																	},
																	"id": 2046,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "endBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1668,
																	"src": "8472:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 2047,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "8488:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "8488:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8472:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8438:62:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "72656e65773a20696e76616c696420706f6f6c20737461746520746f2072656e6577",
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8515:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b31dc5707a57b87f831426ba8c552bc59246657a2e57bf1bc07a78701db6706b",
																"typeString": "literal_string \"renew: invalid pool state to renew\""
															},
															"value": "renew: invalid pool state to renew"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b31dc5707a57b87f831426ba8c552bc59246657a2e57bf1bc07a78701db6706b",
																"typeString": "literal_string \"renew: invalid pool state to renew\""
															}
														],
														"id": 2039,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8416:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8416:146:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2053,
												"nodeType": "ExpressionStatement",
												"src": "8416:146:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2055,
																	"name": "rewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "8633:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8633:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2057,
																	"name": "_rewardPerBlocks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2023,
																	"src": "8656:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8656:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8633:46:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "72656e65773a20696e76616c6964206c656e677468",
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8694:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77180fafa0374a12058c9de85e5d1dcedc0242f76b18f525037a0f5138de63c2",
																"typeString": "literal_string \"renew: invalid length\""
															},
															"value": "renew: invalid length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77180fafa0374a12058c9de85e5d1dcedc0242f76b18f525037a0f5138de63c2",
																"typeString": "literal_string \"renew: invalid length\""
															}
														],
														"id": 2054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8611:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8611:117:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2062,
												"nodeType": "ExpressionStatement",
												"src": "8611:117:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2064,
																	"name": "_startBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2018,
																	"src": "8761:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 2065,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "8775:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "8775:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8761:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2068,
																	"name": "_endBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2020,
																	"src": "8791:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2069,
																	"name": "_startBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2018,
																	"src": "8803:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "8791:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8761:53:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "72656e65773a20696e76616c696420626c6f636b73",
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8829:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14a26bf1715a2883885317c99f65178522cdf3543484696b4d8003a4076f0c02",
																"typeString": "literal_string \"renew: invalid blocks\""
															},
															"value": "renew: invalid blocks"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14a26bf1715a2883885317c99f65178522cdf3543484696b4d8003a4076f0c02",
																"typeString": "literal_string \"renew: invalid blocks\""
															}
														],
														"id": 2063,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8739:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8739:124:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2074,
												"nodeType": "ExpressionStatement",
												"src": "8739:124:8"
											},
											{
												"expression": {
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2075,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "8876:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 2077,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1666,
														"src": "8876:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2078,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2018,
														"src": "8894:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "8876:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2080,
												"nodeType": "ExpressionStatement",
												"src": "8876:29:8"
											},
											{
												"expression": {
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2081,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "8916:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 2083,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "endBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1668,
														"src": "8916:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2084,
														"name": "_endBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2020,
														"src": "8932:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "8916:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2086,
												"nodeType": "ExpressionStatement",
												"src": "8916:25:8"
											},
											{
												"expression": {
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2087,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "8952:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 2089,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1670,
														"src": "8952:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2090,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2018,
														"src": "8975:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "8952:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2092,
												"nodeType": "ExpressionStatement",
												"src": "8952:34:8"
											},
											{
												"body": {
													"id": 2115,
													"nodeType": "Block",
													"src": "9053:86:8",
													"statements": [
														{
															"expression": {
																"id": 2113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 2104,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2034,
																				"src": "9068:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																					"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																				}
																			},
																			"id": 2107,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "poolRewardData",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1674,
																			"src": "9068:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1660_storage_$",
																				"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																			}
																		},
																		"id": 2108,
																		"indexExpression": {
																			"id": 2106,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2094,
																			"src": "9088:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9068:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolRewardData_$1660_storage",
																			"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																		}
																	},
																	"id": 2109,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardPerBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1657,
																	"src": "9068:37:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2110,
																		"name": "_rewardPerBlocks",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2023,
																		"src": "9108:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 2112,
																	"indexExpression": {
																		"id": 2111,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2094,
																		"src": "9125:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9108:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9068:59:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2114,
															"nodeType": "ExpressionStatement",
															"src": "9068:59:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2097,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "9019:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2098,
															"name": "_rewardPerBlocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "9023:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 2099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9023:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9019:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2116,
												"initializationExpression": {
													"assignments": [
														2094
													],
													"declarations": [
														{
															"constant": false,
															"id": 2094,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2116,
															"src": "9004:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2093,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9004:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2096,
													"initialValue": {
														"hexValue": "30",
														"id": 2095,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9016:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9004:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 2102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9048:3:8",
														"subExpression": {
															"id": 2101,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "9048:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2103,
													"nodeType": "ExpressionStatement",
													"src": "9048:3:8"
												},
												"nodeType": "ForStatement",
												"src": "8999:140:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2118,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "9166:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2119,
															"name": "_startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "9172:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 2120,
															"name": "_endBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2020,
															"src": "9185:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 2121,
															"name": "_rewardPerBlocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "9196:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 2117,
														"name": "RenewPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1719,
														"src": "9156:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$_t_uint32_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint32,uint32,uint256[] memory)"
														}
													},
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9156:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2123,
												"nodeType": "EmitStatement",
												"src": "9151:62:8"
											}
										]
									},
									"documentation": {
										"id": 2014,
										"nodeType": "StructuredDocumentation",
										"src": "7642:434:8",
										"text": " @dev Renew a pool to start another liquidity mining program\n @param _pid: id of the pool to renew, must be pool that has not started or already ended\n @param _startBlock: block where the reward starts\n @param _endBlock: block where the reward ends\n @param _rewardPerBlocks: amount of reward token per block for the pool\n   0 if we want to stop the pool from accumulating rewards"
									},
									"functionSelector": "b43c6270",
									"id": 2125,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2027,
											"modifierName": {
												"id": 2026,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 3426,
												"src": "8251:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8251:9:8"
										}
									],
									"name": "renewPool",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2025,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8242:8:8"
									},
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "8111:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8111:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "_startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "8134:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2017,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8134:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "_endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "8163:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2019,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8163:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "_rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "8190:35:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2021,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8190:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2022,
													"nodeType": "ArrayTypeName",
													"src": "8190:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8100:132:8"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8261:0:8"
									},
									"scope": 3365,
									"src": "8082:1139:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1334
									],
									"body": {
										"id": 2216,
										"nodeType": "Block",
										"src": "9711:751:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2140,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "9740:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2139,
														"name": "updatePoolRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3064,
														"src": "9722:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9722:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2142,
												"nodeType": "ExpressionStatement",
												"src": "9722:23:8"
											},
											{
												"assignments": [
													2144
												],
												"declarations": [
													{
														"constant": false,
														"id": 2144,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2216,
														"src": "9758:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo"
														},
														"typeName": {
															"id": 2143,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1675,
															"src": "9758:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2148,
												"initialValue": {
													"baseExpression": {
														"id": 2145,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "9782:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1675_storage_$",
															"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
														}
													},
													"id": 2147,
													"indexExpression": {
														"id": 2146,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "9791:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9782:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1675_storage",
														"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9758:38:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2150,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2144,
																	"src": "9874:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																	}
																},
																"id": 2151,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "endBlock",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1668,
																"src": "9874:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 2152,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "9890:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "9890:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9874:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7570646174653a20706f6f6c20616c726561647920656e646564",
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9904:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b833683b89b404991bdaae7cd6d4239375c0bb88e3b5fa21acbecc40c4f69f3d",
																"typeString": "literal_string \"update: pool already ended\""
															},
															"value": "update: pool already ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b833683b89b404991bdaae7cd6d4239375c0bb88e3b5fa21acbecc40c4f69f3d",
																"typeString": "literal_string \"update: pool already ended\""
															}
														],
														"id": 2149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9866:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9866:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2157,
												"nodeType": "ExpressionStatement",
												"src": "9866:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2159,
																	"name": "rewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "9966:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9966:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2161,
																	"name": "_rewardPerBlocks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2133,
																	"src": "9989:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9989:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9966:46:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7570646174653a20696e76616c6964206c656e677468",
															"id": 2164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10027:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_206226b2ca3d5a0c768271d8fc891ab16534a45d602f4dc09f7557c6e414751a",
																"typeString": "literal_string \"update: invalid length\""
															},
															"value": "update: invalid length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_206226b2ca3d5a0c768271d8fc891ab16534a45d602f4dc09f7557c6e414751a",
																"typeString": "literal_string \"update: invalid length\""
															}
														],
														"id": 2158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9944:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9944:118:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2166,
												"nodeType": "ExpressionStatement",
												"src": "9944:118:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2168,
																	"name": "_endBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2130,
																	"src": "10095:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 2169,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "10107:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "10107:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10095:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 2175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2172,
																	"name": "_endBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2130,
																	"src": "10123:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 2173,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "10135:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																			"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																		}
																	},
																	"id": 2174,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "startBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1666,
																	"src": "10135:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "10123:27:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10095:55:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7570646174653a20696e76616c696420656e6420626c6f636b",
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10165:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_900c8e0e4572d8a0c190c3451f1d947ef66467077e2ac335d0c50ed07c0fd304",
																"typeString": "literal_string \"update: invalid end block\""
															},
															"value": "update: invalid end block"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_900c8e0e4572d8a0c190c3451f1d947ef66467077e2ac335d0c50ed07c0fd304",
																"typeString": "literal_string \"update: invalid end block\""
															}
														],
														"id": 2167,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10073:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10073:130:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2179,
												"nodeType": "ExpressionStatement",
												"src": "10073:130:8"
											},
											{
												"expression": {
													"id": 2184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2180,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2144,
															"src": "10216:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 2182,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "endBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1668,
														"src": "10216:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2183,
														"name": "_endBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2130,
														"src": "10232:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "10216:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2185,
												"nodeType": "ExpressionStatement",
												"src": "10216:25:8"
											},
											{
												"body": {
													"id": 2208,
													"nodeType": "Block",
													"src": "10306:86:8",
													"statements": [
														{
															"expression": {
																"id": 2206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 2197,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2144,
																				"src": "10321:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																					"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																				}
																			},
																			"id": 2200,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "poolRewardData",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1674,
																			"src": "10321:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1660_storage_$",
																				"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																			}
																		},
																		"id": 2201,
																		"indexExpression": {
																			"id": 2199,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2187,
																			"src": "10341:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10321:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolRewardData_$1660_storage",
																			"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																		}
																	},
																	"id": 2202,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardPerBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1657,
																	"src": "10321:37:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2203,
																		"name": "_rewardPerBlocks",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2133,
																		"src": "10361:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 2205,
																	"indexExpression": {
																		"id": 2204,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2187,
																		"src": "10378:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10361:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10321:59:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2207,
															"nodeType": "ExpressionStatement",
															"src": "10321:59:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2190,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2187,
														"src": "10272:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2191,
															"name": "_rewardPerBlocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "10276:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 2192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10276:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10272:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2209,
												"initializationExpression": {
													"assignments": [
														2187
													],
													"declarations": [
														{
															"constant": false,
															"id": 2187,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2209,
															"src": "10257:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2186,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10257:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2189,
													"initialValue": {
														"hexValue": "30",
														"id": 2188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10269:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10257:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 2195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10301:3:8",
														"subExpression": {
															"id": 2194,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2187,
															"src": "10301:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2196,
													"nodeType": "ExpressionStatement",
													"src": "10301:3:8"
												},
												"nodeType": "ForStatement",
												"src": "10252:140:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2211,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "10420:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2212,
															"name": "_endBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2130,
															"src": "10426:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 2213,
															"name": "_rewardPerBlocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "10437:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 2210,
														"name": "UpdatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1728,
														"src": "10409:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint32,uint256[] memory)"
														}
													},
													"id": 2214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10409:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2215,
												"nodeType": "EmitStatement",
												"src": "10404:50:8"
											}
										]
									},
									"documentation": {
										"id": 2126,
										"nodeType": "StructuredDocumentation",
										"src": "9229:325:8",
										"text": " @dev Update a pool, allow to change end block, reward per block\n @param _pid: pool id to be renew\n @param _endBlock: block where the reward ends\n @param _rewardPerBlocks: amount of reward token per block for the pool,\n   0 if we want to stop the pool from accumulating rewards"
									},
									"functionSelector": "affb9fc8",
									"id": 2217,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2137,
											"modifierName": {
												"id": 2136,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 3426,
												"src": "9701:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9701:9:8"
										}
									],
									"name": "updatePool",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2135,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9692:8:8"
									},
									"parameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "9590:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "_endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "9613:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2129,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "9613:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "_rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "9640:35:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2131,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9640:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2132,
													"nodeType": "ArrayTypeName",
													"src": "9640:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9579:103:8"
									},
									"returnParameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9711:0:8"
									},
									"scope": 3365,
									"src": "9560:902:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1344
									],
									"body": {
										"id": 2299,
										"nodeType": "Block",
										"src": "10837:687:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2231,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2220,
															"src": "10914:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2230,
														"name": "updatePoolRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3064,
														"src": "10896:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10896:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2233,
												"nodeType": "ExpressionStatement",
												"src": "10896:23:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2235,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10948:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10948:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2237,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2220,
															"src": "10960:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2238,
															"name": "_shouldHarvest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2224,
															"src": "10966:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2234,
														"name": "_updateUserReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3304,
														"src": "10930:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 2239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10930:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2240,
												"nodeType": "ExpressionStatement",
												"src": "10930:51:8"
											},
											{
												"assignments": [
													2242
												],
												"declarations": [
													{
														"constant": false,
														"id": 2242,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2299,
														"src": "10994:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo"
														},
														"typeName": {
															"id": 2241,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1675,
															"src": "10994:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2246,
												"initialValue": {
													"baseExpression": {
														"id": 2243,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "11018:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1675_storage_$",
															"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
														}
													},
													"id": 2245,
													"indexExpression": {
														"id": 2244,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2220,
														"src": "11027:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11018:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1675_storage",
														"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10994:38:8"
											},
											{
												"assignments": [
													2248
												],
												"declarations": [
													{
														"constant": false,
														"id": 2248,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 2299,
														"src": "11043:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
															"typeString": "struct KyberFairLaunch.UserInfo"
														},
														"typeName": {
															"id": 2247,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1655,
															"src": "11043:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
																"typeString": "struct KyberFairLaunch.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2255,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2249,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "11067:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
															}
														},
														"id": 2251,
														"indexExpression": {
															"id": 2250,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2220,
															"src": "11076:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11067:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$",
															"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
														}
													},
													"id": 2254,
													"indexExpression": {
														"expression": {
															"id": 2252,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "11082:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "11082:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11067:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1655_storage",
														"typeString": "struct KyberFairLaunch.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11043:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2261,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11195:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11195:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 2265,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11228:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_KyberFairLaunch_$3365",
																		"typeString": "contract KyberFairLaunch"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_KyberFairLaunch_$3365",
																		"typeString": "contract KyberFairLaunch"
																	}
																],
																"id": 2264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11220:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2263,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11220:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11220:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2267,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2222,
															"src": "11248:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2257,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2242,
																		"src": "11147:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																			"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																		}
																	},
																	"id": 2258,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1664,
																	"src": "11147:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2256,
																"name": "IERC20Ext",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3378,
																"src": "11137:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Ext_$3378_$",
																	"typeString": "type(contract IERC20Ext)"
																}
															},
															"id": 2259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11137:26:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Ext_$3378",
																"typeString": "contract IERC20Ext"
															}
														},
														"id": 2260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 491,
														"src": "11137:43:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$432_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$432_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11137:129:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2269,
												"nodeType": "ExpressionStatement",
												"src": "11137:129:8"
											},
											{
												"expression": {
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2270,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2248,
															"src": "11355:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
																"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
															}
														},
														"id": 2272,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1650,
														"src": "11355:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2276,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2222,
																"src": "11385:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2273,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2248,
																	"src": "11369:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
																		"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
																	}
																},
																"id": 2274,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1650,
																"src": "11369:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "11369:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11369:24:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11355:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2279,
												"nodeType": "ExpressionStatement",
												"src": "11355:38:8"
											},
											{
												"expression": {
													"id": 2288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2280,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "11404:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 2282,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalStake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1662,
														"src": "11404:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2286,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2222,
																"src": "11442:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2283,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2242,
																	"src": "11422:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																	}
																},
																"id": 2284,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalStake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1662,
																"src": "11422:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "11422:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11422:28:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11404:46:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2289,
												"nodeType": "ExpressionStatement",
												"src": "11404:46:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2291,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11476:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11476:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2293,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2220,
															"src": "11488:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2294,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "11494:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "11494:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2296,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2222,
															"src": "11508:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2290,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1738,
														"src": "11468:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 2297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11468:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2298,
												"nodeType": "EmitStatement",
												"src": "11463:53:8"
											}
										]
									},
									"documentation": {
										"id": 2218,
										"nodeType": "StructuredDocumentation",
										"src": "10470:227:8",
										"text": " @dev Deposit tokens to accumulate rewards\n @param _pid: id of the pool\n @param _amount: amount of stakeToken to be deposited\n @param _shouldHarvest: whether to harvest the reward or not"
									},
									"functionSelector": "43a0d066",
									"id": 2300,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2228,
											"modifierName": {
												"id": 2227,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 980,
												"src": "10824:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10824:12:8"
										}
									],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2226,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10815:8:8"
									},
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "10730:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10730:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "10753:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10753:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "_shouldHarvest",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "10779:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10779:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10719:86:8"
									},
									"returnParameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10837:0:8"
									},
									"scope": 3365,
									"src": "10703:821:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1352
									],
									"body": {
										"id": 2316,
										"nodeType": "Block",
										"src": "11831:43:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2312,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2303,
															"src": "11852:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2313,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2305,
															"src": "11858:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2311,
														"name": "_withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3146,
														"src": "11842:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11842:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2315,
												"nodeType": "ExpressionStatement",
												"src": "11842:24:8"
											}
										]
									},
									"documentation": {
										"id": 2301,
										"nodeType": "StructuredDocumentation",
										"src": "11532:181:8",
										"text": " @dev Withdraw token (of the sender) from pool, also harvest rewards\n @param _pid: id of the pool\n @param _amount: amount of stakeToken to withdraw"
									},
									"functionSelector": "441a3e70",
									"id": 2317,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2309,
											"modifierName": {
												"id": 2308,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 980,
												"src": "11813:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11813:12:8"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2307,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11795:8:8"
									},
									"parameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "11737:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11737:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "11751:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11751:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11736:31:8"
									},
									"returnParameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11831:0:8"
									},
									"scope": 3365,
									"src": "11719:155:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1358
									],
									"body": {
										"id": 2337,
										"nodeType": "Block",
										"src": "12082:69:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2327,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2320,
															"src": "12103:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2328,
																		"name": "userInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "12109:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$_$",
																			"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
																		}
																	},
																	"id": 2330,
																	"indexExpression": {
																		"id": 2329,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2320,
																		"src": "12118:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12109:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$",
																		"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
																	}
																},
																"id": 2333,
																"indexExpression": {
																	"expression": {
																		"id": 2331,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12124:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12124:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12109:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1655_storage",
																	"typeString": "struct KyberFairLaunch.UserInfo storage ref"
																}
															},
															"id": 2334,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1650,
															"src": "12109:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2326,
														"name": "_withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3146,
														"src": "12093:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12093:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2336,
												"nodeType": "ExpressionStatement",
												"src": "12093:50:8"
											}
										]
									},
									"documentation": {
										"id": 2318,
										"nodeType": "StructuredDocumentation",
										"src": "11882:128:8",
										"text": " @dev Withdraw all tokens (of the sender) from pool, also harvest reward\n @param _pid: id of the pool"
									},
									"functionSelector": "958e2d31",
									"id": 2338,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2324,
											"modifierName": {
												"id": 2323,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 980,
												"src": "12069:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12069:12:8"
										}
									],
									"name": "withdrawAll",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2322,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12060:8:8"
									},
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "12037:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12037:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12036:14:8"
									},
									"returnParameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12082:0:8"
									},
									"scope": 3365,
									"src": "12016:135:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1364
									],
									"body": {
										"id": 2439,
										"nodeType": "Block",
										"src": "12482:670:8",
										"statements": [
											{
												"assignments": [
													2348
												],
												"declarations": [
													{
														"constant": false,
														"id": 2348,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2439,
														"src": "12493:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo"
														},
														"typeName": {
															"id": 2347,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1675,
															"src": "12493:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2352,
												"initialValue": {
													"baseExpression": {
														"id": 2349,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "12517:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1675_storage_$",
															"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
														}
													},
													"id": 2351,
													"indexExpression": {
														"id": 2350,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2341,
														"src": "12526:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12517:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1675_storage",
														"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12493:38:8"
											},
											{
												"assignments": [
													2354
												],
												"declarations": [
													{
														"constant": false,
														"id": 2354,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 2439,
														"src": "12542:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
															"typeString": "struct KyberFairLaunch.UserInfo"
														},
														"typeName": {
															"id": 2353,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1655,
															"src": "12542:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
																"typeString": "struct KyberFairLaunch.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2361,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2355,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "12566:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
															}
														},
														"id": 2357,
														"indexExpression": {
															"id": 2356,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "12575:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12566:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$",
															"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
														}
													},
													"id": 2360,
													"indexExpression": {
														"expression": {
															"id": 2358,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "12581:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "12581:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12566:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1655_storage",
														"typeString": "struct KyberFairLaunch.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12542:50:8"
											},
											{
												"assignments": [
													2363
												],
												"declarations": [
													{
														"constant": false,
														"id": 2363,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 2439,
														"src": "12603:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2362,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12603:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2366,
												"initialValue": {
													"expression": {
														"id": 2364,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2354,
														"src": "12620:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
															"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
														}
													},
													"id": 2365,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1650,
													"src": "12620:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12603:28:8"
											},
											{
												"expression": {
													"id": 2371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2367,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2354,
															"src": "12644:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
																"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
															}
														},
														"id": 2369,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1650,
														"src": "12644:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2370,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12658:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12644:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2372,
												"nodeType": "ExpressionStatement",
												"src": "12644:15:8"
											},
											{
												"body": {
													"id": 2403,
													"nodeType": "Block",
													"src": "12720:178:8",
													"statements": [
														{
															"assignments": [
																2385
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2385,
																	"mutability": "mutable",
																	"name": "rewardData",
																	"nodeType": "VariableDeclaration",
																	"scope": 2403,
																	"src": "12735:33:8",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserRewardData_$1648_storage_ptr",
																		"typeString": "struct KyberFairLaunch.UserRewardData"
																	},
																	"typeName": {
																		"id": 2384,
																		"name": "UserRewardData",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 1648,
																		"src": "12735:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRewardData_$1648_storage_ptr",
																			"typeString": "struct KyberFairLaunch.UserRewardData"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2390,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 2386,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2354,
																		"src": "12771:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
																			"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
																		}
																	},
																	"id": 2387,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "userRewardData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1654,
																	"src": "12771:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1648_storage_$",
																		"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData storage ref)"
																	}
																},
																"id": 2389,
																"indexExpression": {
																	"id": 2388,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2374,
																	"src": "12791:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12771:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserRewardData_$1648_storage",
																	"typeString": "struct KyberFairLaunch.UserRewardData storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12735:58:8"
														},
														{
															"expression": {
																"id": 2395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2391,
																		"name": "rewardData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2385,
																		"src": "12808:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRewardData_$1648_storage_ptr",
																			"typeString": "struct KyberFairLaunch.UserRewardData storage pointer"
																		}
																	},
																	"id": 2393,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardPerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1647,
																	"src": "12808:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12840:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12808:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2396,
															"nodeType": "ExpressionStatement",
															"src": "12808:33:8"
														},
														{
															"expression": {
																"id": 2401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2397,
																		"name": "rewardData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2385,
																		"src": "12856:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRewardData_$1648_storage_ptr",
																			"typeString": "struct KyberFairLaunch.UserRewardData storage pointer"
																		}
																	},
																	"id": 2399,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "unclaimedReward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1645,
																	"src": "12856:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12885:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12856:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2402,
															"nodeType": "ExpressionStatement",
															"src": "12856:30:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2377,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2374,
														"src": "12690:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2378,
															"name": "rewardTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "12694:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12694:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12690:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2404,
												"initializationExpression": {
													"assignments": [
														2374
													],
													"declarations": [
														{
															"constant": false,
															"id": 2374,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2404,
															"src": "12675:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2373,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12675:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2376,
													"initialValue": {
														"hexValue": "30",
														"id": 2375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12687:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12675:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 2382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12715:3:8",
														"subExpression": {
															"id": 2381,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2374,
															"src": "12715:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2383,
													"nodeType": "ExpressionStatement",
													"src": "12715:3:8"
												},
												"nodeType": "ForStatement",
												"src": "12670:228:8"
											},
											{
												"expression": {
													"id": 2413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2405,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2348,
															"src": "12910:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 2407,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalStake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1662,
														"src": "12910:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2411,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2363,
																"src": "12948:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2408,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2348,
																	"src": "12928:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																	}
																},
																"id": 2409,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalStake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1662,
																"src": "12928:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 203,
															"src": "12928:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12928:27:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12910:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2414,
												"nodeType": "ExpressionStatement",
												"src": "12910:45:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2415,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2363,
														"src": "12972:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12981:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12972:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2429,
												"nodeType": "IfStatement",
												"src": "12968:102:8",
												"trueBody": {
													"id": 2428,
													"nodeType": "Block",
													"src": "12984:86:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2423,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "13039:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13039:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 2425,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2363,
																		"src": "13051:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 2419,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2348,
																					"src": "13009:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																						"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																					}
																				},
																				"id": 2420,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stakeToken",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1664,
																				"src": "13009:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2418,
																			"name": "IERC20Ext",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3378,
																			"src": "12999:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20Ext_$3378_$",
																				"typeString": "type(contract IERC20Ext)"
																			}
																		},
																		"id": 2421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12999:26:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Ext_$3378",
																			"typeString": "contract IERC20Ext"
																		}
																	},
																	"id": 2422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 466,
																	"src": "12999:39:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$432_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$432_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12999:59:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2427,
															"nodeType": "ExpressionStatement",
															"src": "12999:59:8"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2431,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13105:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13105:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2433,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "13117:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2434,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "13123:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "13123:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2436,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2363,
															"src": "13137:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2430,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1770,
														"src": "13087:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 2437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13087:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2438,
												"nodeType": "EmitStatement",
												"src": "13082:62:8"
											}
										]
									},
									"documentation": {
										"id": 2339,
										"nodeType": "StructuredDocumentation",
										"src": "12159:245:8",
										"text": " @notice EMERGENCY USAGE ONLY, USER'S REWARDS WILL BE RESET\n @dev Emergency withdrawal function to allow withdraw all deposited tokens (of the sender)\n   and reset all rewards\n @param _pid: id of the pool"
									},
									"functionSelector": "5312ea8e",
									"id": 2440,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2345,
											"modifierName": {
												"id": 2344,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 980,
												"src": "12469:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12469:12:8"
										}
									],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2343,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12460:8:8"
									},
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "12437:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12437:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12436:14:8"
									},
									"returnParameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12482:0:8"
									},
									"scope": 3365,
									"src": "12410:742:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1377
									],
									"body": {
										"id": 2600,
										"nodeType": "Block",
										"src": "13392:1340:8",
										"statements": [
											{
												"assignments": [
													2452
												],
												"declarations": [
													{
														"constant": false,
														"id": 2452,
														"mutability": "mutable",
														"name": "rTokens",
														"nodeType": "VariableDeclaration",
														"scope": 2600,
														"src": "13403:24:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2450,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13403:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2451,
															"nodeType": "ArrayTypeName",
															"src": "13403:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2454,
												"initialValue": {
													"id": 2453,
													"name": "rewardTokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1684,
													"src": "13430:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13403:39:8"
											},
											{
												"assignments": [
													2459
												],
												"declarations": [
													{
														"constant": false,
														"id": 2459,
														"mutability": "mutable",
														"name": "totalRewards",
														"nodeType": "VariableDeclaration",
														"scope": 2600,
														"src": "13453:29:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2457,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13453:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2458,
															"nodeType": "ArrayTypeName",
															"src": "13453:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2466,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2463,
																"name": "rTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2452,
																"src": "13499:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 2464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "13499:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "13485:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2460,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13489:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2461,
															"nodeType": "ArrayTypeName",
															"src": "13489:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 2465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13485:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13453:61:8"
											},
											{
												"assignments": [
													2468
												],
												"declarations": [
													{
														"constant": false,
														"id": 2468,
														"mutability": "mutable",
														"name": "account",
														"nodeType": "VariableDeclaration",
														"scope": 2600,
														"src": "13525:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2467,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13525:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2471,
												"initialValue": {
													"expression": {
														"id": 2469,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "13543:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "13543:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13525:28:8"
											},
											{
												"assignments": [
													2473
												],
												"declarations": [
													{
														"constant": false,
														"id": 2473,
														"mutability": "mutable",
														"name": "pid",
														"nodeType": "VariableDeclaration",
														"scope": 2600,
														"src": "13564:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2472,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13564:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2474,
												"nodeType": "VariableDeclarationStatement",
												"src": "13564:11:8"
											},
											{
												"body": {
													"id": 2566,
													"nodeType": "Block",
													"src": "13631:886:8",
													"statements": [
														{
															"expression": {
																"id": 2490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2486,
																	"name": "pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2473,
																	"src": "13646:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2487,
																		"name": "_pids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2444,
																		"src": "13652:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 2489,
																	"indexExpression": {
																		"id": 2488,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2476,
																		"src": "13658:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13652:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13646:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2491,
															"nodeType": "ExpressionStatement",
															"src": "13646:14:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2493,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2473,
																		"src": "13693:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2492,
																	"name": "updatePoolRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3064,
																	"src": "13675:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13675:22:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2495,
															"nodeType": "ExpressionStatement",
															"src": "13675:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2497,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2468,
																		"src": "13784:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2498,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2473,
																		"src": "13793:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 2499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13798:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2496,
																	"name": "_updateUserReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3304,
																	"src": "13766:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,bool)"
																	}
																},
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13766:38:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2501,
															"nodeType": "ExpressionStatement",
															"src": "13766:38:8"
														},
														{
															"body": {
																"id": 2564,
																"nodeType": "Block",
																"src": "13866:640:8",
																"statements": [
																	{
																		"assignments": [
																			2514
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2514,
																				"mutability": "mutable",
																				"name": "reward",
																				"nodeType": "VariableDeclaration",
																				"scope": 2564,
																				"src": "13885:14:8",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2513,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13885:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2524,
																		"initialValue": {
																			"expression": {
																				"baseExpression": {
																					"expression": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 2515,
																								"name": "userInfo",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1697,
																								"src": "13902:8:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$_$",
																									"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
																								}
																							},
																							"id": 2517,
																							"indexExpression": {
																								"id": 2516,
																								"name": "pid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2473,
																								"src": "13911:3:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "13902:13:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$",
																								"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
																							}
																						},
																						"id": 2519,
																						"indexExpression": {
																							"id": 2518,
																							"name": "account",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2468,
																							"src": "13916:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "13902:22:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1655_storage",
																							"typeString": "struct KyberFairLaunch.UserInfo storage ref"
																						}
																					},
																					"id": 2520,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "userRewardData",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1654,
																					"src": "13902:59:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1648_storage_$",
																						"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData storage ref)"
																					}
																				},
																				"id": 2522,
																				"indexExpression": {
																					"id": 2521,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2503,
																					"src": "13962:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "13902:62:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserRewardData_$1648_storage",
																					"typeString": "struct KyberFairLaunch.UserRewardData storage ref"
																				}
																			},
																			"id": 2523,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "unclaimedReward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1645,
																			"src": "13902:100:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13885:117:8"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2525,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2514,
																				"src": "14025:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14034:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "14025:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2563,
																		"nodeType": "IfStatement",
																		"src": "14021:470:8",
																		"trueBody": {
																			"id": 2562,
																			"nodeType": "Block",
																			"src": "14037:454:8",
																			"statements": [
																				{
																					"expression": {
																						"id": 2537,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 2528,
																								"name": "totalRewards",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2459,
																								"src": "14060:12:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 2530,
																							"indexExpression": {
																								"id": 2529,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2503,
																								"src": "14073:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "14060:15:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"id": 2535,
																									"name": "reward",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2514,
																									"src": "14098:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"baseExpression": {
																										"id": 2531,
																										"name": "totalRewards",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2459,
																										"src": "14078:12:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																											"typeString": "uint256[] memory"
																										}
																									},
																									"id": 2533,
																									"indexExpression": {
																										"id": 2532,
																										"name": "j",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2503,
																										"src": "14091:1:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "14078:15:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2534,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "add",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 181,
																								"src": "14078:19:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2536,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "14078:27:8",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "14060:45:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2538,
																					"nodeType": "ExpressionStatement",
																					"src": "14060:45:8"
																				},
																				{
																					"expression": {
																						"id": 2549,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"baseExpression": {
																									"expression": {
																										"baseExpression": {
																											"baseExpression": {
																												"id": 2539,
																												"name": "userInfo",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1697,
																												"src": "14128:8:8",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$_$",
																													"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
																												}
																											},
																											"id": 2542,
																											"indexExpression": {
																												"id": 2540,
																												"name": "pid",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2473,
																												"src": "14137:3:8",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "14128:13:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$",
																												"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
																											}
																										},
																										"id": 2543,
																										"indexExpression": {
																											"id": 2541,
																											"name": "account",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2468,
																											"src": "14142:7:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "14128:22:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_UserInfo_$1655_storage",
																											"typeString": "struct KyberFairLaunch.UserInfo storage ref"
																										}
																									},
																									"id": 2544,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "userRewardData",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1654,
																									"src": "14128:63:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1648_storage_$",
																										"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData storage ref)"
																									}
																								},
																								"id": 2546,
																								"indexExpression": {
																									"id": 2545,
																									"name": "j",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2503,
																									"src": "14192:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "14128:66:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserRewardData_$1648_storage",
																									"typeString": "struct KyberFairLaunch.UserRewardData storage ref"
																								}
																							},
																							"id": 2547,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "unclaimedReward",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1645,
																							"src": "14128:108:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "30",
																							"id": 2548,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14239:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "14128:112:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2550,
																					"nodeType": "ExpressionStatement",
																					"src": "14128:112:8"
																				},
																				{
																					"eventCall": {
																						"arguments": [
																							{
																								"id": 2552,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2468,
																								"src": "14302:7:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2553,
																								"name": "pid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2473,
																								"src": "14336:3:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"baseExpression": {
																									"id": 2554,
																									"name": "rTokens",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2452,
																									"src": "14366:7:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																										"typeString": "address[] memory"
																									}
																								},
																								"id": 2556,
																								"indexExpression": {
																									"id": 2555,
																									"name": "j",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2503,
																									"src": "14374:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "14366:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2557,
																								"name": "reward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2514,
																								"src": "14403:6:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"expression": {
																									"id": 2558,
																									"name": "block",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967292,
																									"src": "14436:5:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_block",
																										"typeString": "block"
																									}
																								},
																								"id": 2559,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "number",
																								"nodeType": "MemberAccess",
																								"src": "14436:12:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2551,
																							"name": "Harvest",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1760,
																							"src": "14268:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,address,uint256,uint256)"
																							}
																						},
																						"id": 2560,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "14268:203:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2561,
																					"nodeType": "EmitStatement",
																					"src": "14263:208:8"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2506,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2503,
																	"src": "13841:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 2507,
																		"name": "rTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2452,
																		"src": "13845:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 2508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "13845:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13841:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2565,
															"initializationExpression": {
																"assignments": [
																	2503
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2503,
																		"mutability": "mutable",
																		"name": "j",
																		"nodeType": "VariableDeclaration",
																		"scope": 2565,
																		"src": "13826:9:8",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2502,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "13826:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2505,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13838:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "13826:13:8"
															},
															"loopExpression": {
																"expression": {
																	"id": 2511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "13861:3:8",
																	"subExpression": {
																		"id": 2510,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2503,
																		"src": "13861:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2512,
																"nodeType": "ExpressionStatement",
																"src": "13861:3:8"
															},
															"nodeType": "ForStatement",
															"src": "13821:685:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2479,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2476,
														"src": "13608:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2480,
															"name": "_pids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2444,
															"src": "13612:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 2481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13612:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13608:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2567,
												"initializationExpression": {
													"assignments": [
														2476
													],
													"declarations": [
														{
															"constant": false,
															"id": 2476,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2567,
															"src": "13593:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2475,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13593:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2478,
													"initialValue": {
														"hexValue": "30",
														"id": 2477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13605:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "13593:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 2484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "13626:3:8",
														"subExpression": {
															"id": 2483,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2476,
															"src": "13626:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2485,
													"nodeType": "ExpressionStatement",
													"src": "13626:3:8"
												},
												"nodeType": "ForStatement",
												"src": "13588:929:8"
											},
											{
												"body": {
													"id": 2598,
													"nodeType": "Block",
													"src": "14579:146:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2579,
																		"name": "totalRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2459,
																		"src": "14598:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2581,
																	"indexExpression": {
																		"id": 2580,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2569,
																		"src": "14611:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14598:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14616:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14598:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2597,
															"nodeType": "IfStatement",
															"src": "14594:120:8",
															"trueBody": {
																"id": 2596,
																"nodeType": "Block",
																"src": "14619:95:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 2586,
																								"name": "rTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2452,
																								"src": "14660:7:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																									"typeString": "address[] memory"
																								}
																							},
																							"id": 2588,
																							"indexExpression": {
																								"id": 2587,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2569,
																								"src": "14668:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "14660:10:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2585,
																						"name": "IERC20Ext",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3378,
																						"src": "14650:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20Ext_$3378_$",
																							"typeString": "type(contract IERC20Ext)"
																						}
																					},
																					"id": 2589,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14650:21:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Ext_$3378",
																						"typeString": "contract IERC20Ext"
																					}
																				},
																				{
																					"id": 2590,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2468,
																					"src": "14673:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"baseExpression": {
																						"id": 2591,
																						"name": "totalRewards",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2459,
																						"src": "14682:12:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 2593,
																					"indexExpression": {
																						"id": 2592,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2569,
																						"src": "14695:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "14682:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC20Ext_$3378",
																						"typeString": "contract IERC20Ext"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2584,
																				"name": "_lockReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3364,
																				"src": "14638:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Ext_$3378_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (contract IERC20Ext,address,uint256)"
																				}
																			},
																			"id": 2594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14638:60:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2595,
																		"nodeType": "ExpressionStatement",
																		"src": "14638:60:8"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2572,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2569,
														"src": "14549:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2573,
															"name": "totalRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2459,
															"src": "14553:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14553:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14549:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2599,
												"initializationExpression": {
													"assignments": [
														2569
													],
													"declarations": [
														{
															"constant": false,
															"id": 2569,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2599,
															"src": "14534:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2568,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14534:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2571,
													"initialValue": {
														"hexValue": "30",
														"id": 2570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14546:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "14534:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 2577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "14574:3:8",
														"subExpression": {
															"id": 2576,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2569,
															"src": "14574:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2578,
													"nodeType": "ExpressionStatement",
													"src": "14574:3:8"
												},
												"nodeType": "ForStatement",
												"src": "14529:196:8"
											}
										]
									},
									"documentation": {
										"id": 2441,
										"nodeType": "StructuredDocumentation",
										"src": "13160:152:8",
										"text": " @dev Harvest rewards from multiple pools for the sender\n   combine rewards from all pools and only transfer once to save gas"
									},
									"functionSelector": "52fd9f2f",
									"id": 2601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvestMultiplePools",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2446,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13383:8:8"
									},
									"parameters": {
										"id": 2445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "_pids",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "13348:24:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2442,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13348:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2443,
													"nodeType": "ArrayTypeName",
													"src": "13348:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13347:26:8"
									},
									"returnParameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13392:0:8"
									},
									"scope": 3365,
									"src": "13318:1414:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1445
									],
									"body": {
										"id": 2745,
										"nodeType": "Block",
										"src": "15079:1290:8",
										"statements": [
											{
												"assignments": [
													2614
												],
												"declarations": [
													{
														"constant": false,
														"id": 2614,
														"mutability": "mutable",
														"name": "rTokensLength",
														"nodeType": "VariableDeclaration",
														"scope": 2745,
														"src": "15090:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2613,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15090:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2617,
												"initialValue": {
													"expression": {
														"id": 2615,
														"name": "rewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "15114:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 2616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "15114:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15090:43:8"
											},
											{
												"expression": {
													"id": 2624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2618,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2611,
														"src": "15144:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2622,
																"name": "rTokensLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2614,
																"src": "15168:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "15154:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2619,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15158:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2620,
																"nodeType": "ArrayTypeName",
																"src": "15158:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 2623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15154:28:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "15144:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 2625,
												"nodeType": "ExpressionStatement",
												"src": "15144:38:8"
											},
											{
												"assignments": [
													2627
												],
												"declarations": [
													{
														"constant": false,
														"id": 2627,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2745,
														"src": "15193:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo"
														},
														"typeName": {
															"id": 2626,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1675,
															"src": "15193:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2631,
												"initialValue": {
													"baseExpression": {
														"id": 2628,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "15217:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1675_storage_$",
															"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
														}
													},
													"id": 2630,
													"indexExpression": {
														"id": 2629,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2604,
														"src": "15226:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15217:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1675_storage",
														"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15193:38:8"
											},
											{
												"assignments": [
													2633
												],
												"declarations": [
													{
														"constant": false,
														"id": 2633,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 2745,
														"src": "15242:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
															"typeString": "struct KyberFairLaunch.UserInfo"
														},
														"typeName": {
															"id": 2632,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1655,
															"src": "15242:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
																"typeString": "struct KyberFairLaunch.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2639,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2634,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "15266:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
															}
														},
														"id": 2636,
														"indexExpression": {
															"id": 2635,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2604,
															"src": "15275:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15266:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$",
															"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
														}
													},
													"id": 2638,
													"indexExpression": {
														"id": 2637,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2606,
														"src": "15281:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15266:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1655_storage",
														"typeString": "struct KyberFairLaunch.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15242:45:8"
											},
											{
												"assignments": [
													2641
												],
												"declarations": [
													{
														"constant": false,
														"id": 2641,
														"mutability": "mutable",
														"name": "_totalStake",
														"nodeType": "VariableDeclaration",
														"scope": 2745,
														"src": "15298:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2640,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15298:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2644,
												"initialValue": {
													"expression": {
														"id": 2642,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2627,
														"src": "15320:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
														}
													},
													"id": 2643,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "totalStake",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1662,
													"src": "15320:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15298:37:8"
											},
											{
												"assignments": [
													2646
												],
												"declarations": [
													{
														"constant": false,
														"id": 2646,
														"mutability": "mutable",
														"name": "_poolLastRewardBlock",
														"nodeType": "VariableDeclaration",
														"scope": 2745,
														"src": "15346:28:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2645,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15346:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2649,
												"initialValue": {
													"expression": {
														"id": 2647,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2627,
														"src": "15377:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
														}
													},
													"id": 2648,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "lastRewardBlock",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1670,
													"src": "15377:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15346:51:8"
											},
											{
												"assignments": [
													2651
												],
												"declarations": [
													{
														"constant": false,
														"id": 2651,
														"mutability": "mutable",
														"name": "lastAccountedBlock",
														"nodeType": "VariableDeclaration",
														"scope": 2745,
														"src": "15408:25:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 2650,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15408:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2655,
												"initialValue": {
													"arguments": [
														{
															"id": 2653,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2604,
															"src": "15462:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2652,
														"name": "_lastAccountedRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3332,
														"src": "15436:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint32_$",
															"typeString": "function (uint256) view returns (uint32)"
														}
													},
													"id": 2654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15436:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15408:59:8"
											},
											{
												"body": {
													"id": 2743,
													"nodeType": "Block",
													"src": "15522:840:8",
													"statements": [
														{
															"assignments": [
																2667
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2667,
																	"mutability": "mutable",
																	"name": "_accRewardPerShare",
																	"nodeType": "VariableDeclaration",
																	"scope": 2743,
																	"src": "15537:26:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2666,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15537:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2673,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"id": 2668,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2627,
																			"src": "15566:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																				"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																			}
																		},
																		"id": 2669,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "poolRewardData",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1674,
																		"src": "15566:37:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1660_storage_$",
																			"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																		}
																	},
																	"id": 2671,
																	"indexExpression": {
																		"id": 2670,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2657,
																		"src": "15604:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15566:40:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolRewardData_$1660_storage",
																		"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																	}
																},
																"id": 2672,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "accRewardPerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1659,
																"src": "15566:76:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15537:105:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2674,
																		"name": "lastAccountedBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2651,
																		"src": "15661:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2675,
																		"name": "_poolLastRewardBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2646,
																		"src": "15682:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15661:41:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2677,
																		"name": "_totalStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2641,
																		"src": "15706:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15721:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "15706:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15661:61:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2708,
															"nodeType": "IfStatement",
															"src": "15657:366:8",
															"trueBody": {
																"id": 2707,
																"nodeType": "Block",
																"src": "15724:299:8",
																"statements": [
																	{
																		"assignments": [
																			2682
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2682,
																				"mutability": "mutable",
																				"name": "reward",
																				"nodeType": "VariableDeclaration",
																				"scope": 2707,
																				"src": "15743:14:8",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2681,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "15743:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2694,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"expression": {
																								"id": 2688,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2627,
																								"src": "15830:4:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																									"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																								}
																							},
																							"id": 2689,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "poolRewardData",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1674,
																							"src": "15830:19:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1660_storage_$",
																								"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																							}
																						},
																						"id": 2691,
																						"indexExpression": {
																							"id": 2690,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2657,
																							"src": "15850:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "15830:22:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolRewardData_$1660_storage",
																							"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																						}
																					},
																					"id": 2692,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "rewardPerBlock",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1657,
																					"src": "15830:37:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2685,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2683,
																								"name": "lastAccountedBlock",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2651,
																								"src": "15761:18:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 2684,
																								"name": "_poolLastRewardBlock",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2646,
																								"src": "15782:20:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "15761:41:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2686,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "15760:43:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 237,
																				"src": "15760:69:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15760:108:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "15743:125:8"
																	},
																	{
																		"expression": {
																			"id": 2705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2695,
																				"name": "_accRewardPerShare",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2667,
																				"src": "15887:18:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2703,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [
																								{
																									"id": 2700,
																									"name": "PRECISION",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1643,
																									"src": "15964:9:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 2698,
																									"name": "reward",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2682,
																									"src": "15953:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2699,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 237,
																								"src": "15953:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2701,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "15953:21:8",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"id": 2702,
																							"name": "_totalStake",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2641,
																							"src": "15977:11:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "15953:35:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2696,
																						"name": "_accRewardPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2667,
																						"src": "15908:18:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2697,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 181,
																					"src": "15908:22:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2704,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15908:99:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15887:120:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2706,
																		"nodeType": "ExpressionStatement",
																		"src": "15887:120:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2709,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2611,
																		"src": "16039:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2711,
																	"indexExpression": {
																		"id": 2710,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2657,
																		"src": "16047:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16039:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"expression": {
																							"baseExpression": {
																								"expression": {
																									"id": 2717,
																									"name": "user",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2633,
																									"src": "16156:4:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
																										"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
																									}
																								},
																								"id": 2718,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "userRewardData",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1654,
																								"src": "16156:19:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1648_storage_$",
																									"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData storage ref)"
																								}
																							},
																							"id": 2720,
																							"indexExpression": {
																								"id": 2719,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2657,
																								"src": "16176:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "16156:22:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserRewardData_$1648_storage",
																								"typeString": "struct KyberFairLaunch.UserRewardData storage ref"
																							}
																						},
																						"id": 2721,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "lastRewardPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1647,
																						"src": "16156:41:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2715,
																						"name": "_accRewardPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2667,
																						"src": "16107:18:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2716,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 203,
																					"src": "16107:22:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2722,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16107:113:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"id": 2712,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2633,
																					"src": "16069:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
																						"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
																					}
																				},
																				"id": 2713,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1650,
																				"src": "16069:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 237,
																			"src": "16069:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16069:170:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2724,
																		"name": "PRECISION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "16259:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16069:199:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16039:229:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2727,
															"nodeType": "ExpressionStatement",
															"src": "16039:229:8"
														},
														{
															"expression": {
																"id": 2741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2728,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2611,
																		"src": "16283:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2730,
																	"indexExpression": {
																		"id": 2729,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2657,
																		"src": "16291:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16283:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"baseExpression": {
																					"expression": {
																						"id": 2735,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2633,
																						"src": "16311:4:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
																							"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
																						}
																					},
																					"id": 2736,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "userRewardData",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1654,
																					"src": "16311:19:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1648_storage_$",
																						"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData storage ref)"
																					}
																				},
																				"id": 2738,
																				"indexExpression": {
																					"id": 2737,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2657,
																					"src": "16331:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "16311:22:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserRewardData_$1648_storage",
																					"typeString": "struct KyberFairLaunch.UserRewardData storage ref"
																				}
																			},
																			"id": 2739,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "unclaimedReward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1645,
																			"src": "16311:38:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 2731,
																				"name": "rewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2611,
																				"src": "16296:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 2733,
																			"indexExpression": {
																				"id": 2732,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2657,
																				"src": "16304:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "16296:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 181,
																		"src": "16296:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16296:54:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16283:67:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2742,
															"nodeType": "ExpressionStatement",
															"src": "16283:67:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2660,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2657,
														"src": "15498:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2661,
														"name": "rTokensLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2614,
														"src": "15502:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15498:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2744,
												"initializationExpression": {
													"assignments": [
														2657
													],
													"declarations": [
														{
															"constant": false,
															"id": 2657,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2744,
															"src": "15483:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2656,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15483:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2659,
													"initialValue": {
														"hexValue": "30",
														"id": 2658,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15495:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "15483:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 2664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "15517:3:8",
														"subExpression": {
															"id": 2663,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2657,
															"src": "15517:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2665,
													"nodeType": "ExpressionStatement",
													"src": "15517:3:8"
												},
												"nodeType": "ForStatement",
												"src": "15478:884:8"
											}
										]
									},
									"documentation": {
										"id": 2602,
										"nodeType": "StructuredDocumentation",
										"src": "14740:181:8",
										"text": " @dev Get pending rewards of a user from a pool, mostly for front-end\n @param _pid: id of the pool\n @param _user: user to check for pending rewards"
									},
									"functionSelector": "d18df53c",
									"id": 2746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingRewards",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2608,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15021:8:8"
									},
									"parameters": {
										"id": 2607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "14951:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14951:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2606,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "14965:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14965:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14950:29:8"
									},
									"returnParameters": {
										"id": 2612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "rewards",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "15048:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2609,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15048:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2610,
													"nodeType": "ArrayTypeName",
													"src": "15048:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15047:26:8"
									},
									"scope": 3365,
									"src": "14927:1442:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1434
									],
									"body": {
										"id": 2756,
										"nodeType": "Block",
										"src": "16552:38:8",
										"statements": [
											{
												"expression": {
													"id": 2754,
													"name": "rewardTokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1684,
													"src": "16570:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 2753,
												"id": 2755,
												"nodeType": "Return",
												"src": "16563:19:8"
											}
										]
									},
									"documentation": {
										"id": 2747,
										"nodeType": "StructuredDocumentation",
										"src": "16377:51:8",
										"text": " @dev Return list reward tokens"
									},
									"functionSelector": "c4f59f9b",
									"id": 2757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardTokens",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2749,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16502:8:8"
									},
									"parameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16458:2:8"
									},
									"returnParameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2757,
												"src": "16529:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2750,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "16529:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2751,
													"nodeType": "ArrayTypeName",
													"src": "16529:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16528:18:8"
									},
									"scope": 3365,
									"src": "16434:156:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1411
									],
									"body": {
										"id": 2856,
										"nodeType": "Block",
										"src": "17040:651:8",
										"statements": [
											{
												"assignments": [
													2781
												],
												"declarations": [
													{
														"constant": false,
														"id": 2781,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2856,
														"src": "17051:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo"
														},
														"typeName": {
															"id": 2780,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1675,
															"src": "17051:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2785,
												"initialValue": {
													"baseExpression": {
														"id": 2782,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "17075:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1675_storage_$",
															"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
														}
													},
													"id": 2784,
													"indexExpression": {
														"id": 2783,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2760,
														"src": "17084:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17075:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1675_storage",
														"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17051:38:8"
											},
											{
												"expression": {
													"id": 2803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2786,
																"name": "totalStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2764,
																"src": "17101:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2787,
																"name": "stakeToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2766,
																"src": "17113:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2788,
																"name": "startBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2768,
																"src": "17125:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"id": 2789,
																"name": "endBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2770,
																"src": "17137:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"id": 2790,
																"name": "lastRewardBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2772,
																"src": "17147:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"id": 2791,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "17100:63:8",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_uint32_$_t_uint32_$_t_uint32_$",
															"typeString": "tuple(uint256,address,uint32,uint32,uint32)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"expression": {
																	"id": 2792,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2781,
																	"src": "17181:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																	}
																},
																"id": 2793,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalStake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1662,
																"src": "17181:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 2794,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2781,
																	"src": "17211:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																	}
																},
																"id": 2795,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakeToken",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1664,
																"src": "17211:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 2796,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2781,
																	"src": "17241:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																	}
																},
																"id": 2797,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startBlock",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1666,
																"src": "17241:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"expression": {
																	"id": 2798,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2781,
																	"src": "17271:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																	}
																},
																"id": 2799,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "endBlock",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1668,
																"src": "17271:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"expression": {
																	"id": 2800,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2781,
																	"src": "17299:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																	}
																},
																"id": 2801,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "lastRewardBlock",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1670,
																"src": "17299:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"id": 2802,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "17166:164:8",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_uint32_$_t_uint32_$_t_uint32_$",
															"typeString": "tuple(uint256,address,uint32,uint32,uint32)"
														}
													},
													"src": "17100:230:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2804,
												"nodeType": "ExpressionStatement",
												"src": "17100:230:8"
											},
											{
												"expression": {
													"id": 2812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2805,
														"name": "rewardPerBlocks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2775,
														"src": "17341:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2809,
																	"name": "rewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "17373:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "17373:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "17359:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2806,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17363:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2807,
																"nodeType": "ArrayTypeName",
																"src": "17363:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 2811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17359:34:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "17341:52:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 2813,
												"nodeType": "ExpressionStatement",
												"src": "17341:52:8"
											},
											{
												"expression": {
													"id": 2821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2814,
														"name": "accRewardPerShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2778,
														"src": "17404:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2818,
																	"name": "rewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "17439:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "17439:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "17425:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2815,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17429:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2816,
																"nodeType": "ArrayTypeName",
																"src": "17429:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 2820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17425:34:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "17404:55:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 2822,
												"nodeType": "ExpressionStatement",
												"src": "17404:55:8"
											},
											{
												"body": {
													"id": 2854,
													"nodeType": "Block",
													"src": "17520:164:8",
													"statements": [
														{
															"expression": {
																"id": 2842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2834,
																		"name": "rewardPerBlocks",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2775,
																		"src": "17535:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2836,
																	"indexExpression": {
																		"id": 2835,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2824,
																		"src": "17551:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17535:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 2837,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2781,
																				"src": "17556:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																					"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																				}
																			},
																			"id": 2838,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "poolRewardData",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1674,
																			"src": "17556:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1660_storage_$",
																				"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																			}
																		},
																		"id": 2840,
																		"indexExpression": {
																			"id": 2839,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "17576:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "17556:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolRewardData_$1660_storage",
																			"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																		}
																	},
																	"id": 2841,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardPerBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1657,
																	"src": "17556:37:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17535:58:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2843,
															"nodeType": "ExpressionStatement",
															"src": "17535:58:8"
														},
														{
															"expression": {
																"id": 2852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2844,
																		"name": "accRewardPerShares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2778,
																		"src": "17608:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2846,
																	"indexExpression": {
																		"id": 2845,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2824,
																		"src": "17627:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17608:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 2847,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2781,
																				"src": "17632:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																					"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																				}
																			},
																			"id": 2848,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "poolRewardData",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1674,
																			"src": "17632:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1660_storage_$",
																				"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																			}
																		},
																		"id": 2850,
																		"indexExpression": {
																			"id": 2849,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "17652:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "17632:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolRewardData_$1660_storage",
																			"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																		}
																	},
																	"id": 2851,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "accRewardPerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1659,
																	"src": "17632:40:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17608:64:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2853,
															"nodeType": "ExpressionStatement",
															"src": "17608:64:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2827,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2824,
														"src": "17490:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2828,
															"name": "rewardTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "17494:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17494:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17490:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2855,
												"initializationExpression": {
													"assignments": [
														2824
													],
													"declarations": [
														{
															"constant": false,
															"id": 2824,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2855,
															"src": "17475:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2823,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17475:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2826,
													"initialValue": {
														"hexValue": "30",
														"id": 2825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17487:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17475:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 2832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "17515:3:8",
														"subExpression": {
															"id": 2831,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2824,
															"src": "17515:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2833,
													"nodeType": "ExpressionStatement",
													"src": "17515:3:8"
												},
												"nodeType": "ForStatement",
												"src": "17470:214:8"
											}
										]
									},
									"documentation": {
										"id": 2758,
										"nodeType": "StructuredDocumentation",
										"src": "16598:55:8",
										"text": " @dev Return full details of a pool"
									},
									"functionSelector": "2f380b35",
									"id": 2857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolInfo",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2762,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16735:8:8"
									},
									"parameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "16680:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16680:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16679:14:8"
									},
									"returnParameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2764,
												"mutability": "mutable",
												"name": "totalStake",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "16776:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16776:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "stakeToken",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "16809:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16809:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "startBlock",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "16842:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2767,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "16842:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "endBlock",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "16874:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2769,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "16874:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "lastRewardBlock",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "16904:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2771,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "16904:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "rewardPerBlocks",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "16941:32:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2773,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16941:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2774,
													"nodeType": "ArrayTypeName",
													"src": "16941:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "accRewardPerShares",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "16988:35:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2776,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16988:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2777,
													"nodeType": "ArrayTypeName",
													"src": "16988:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16761:273:8"
									},
									"scope": 3365,
									"src": "16659:1032:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1427
									],
									"body": {
										"id": 2938,
										"nodeType": "Block",
										"src": "18057:457:8",
										"statements": [
											{
												"assignments": [
													2875
												],
												"declarations": [
													{
														"constant": false,
														"id": 2875,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 2938,
														"src": "18068:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
															"typeString": "struct KyberFairLaunch.UserInfo"
														},
														"typeName": {
															"id": 2874,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1655,
															"src": "18068:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
																"typeString": "struct KyberFairLaunch.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2881,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2876,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "18092:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
															}
														},
														"id": 2878,
														"indexExpression": {
															"id": 2877,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2860,
															"src": "18101:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18092:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$",
															"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
														}
													},
													"id": 2880,
													"indexExpression": {
														"id": 2879,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2862,
														"src": "18107:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18092:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1655_storage",
														"typeString": "struct KyberFairLaunch.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18068:48:8"
											},
											{
												"expression": {
													"id": 2885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2882,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2866,
														"src": "18127:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2883,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2875,
															"src": "18136:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
																"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
															}
														},
														"id": 2884,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1650,
														"src": "18136:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18127:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2886,
												"nodeType": "ExpressionStatement",
												"src": "18127:20:8"
											},
											{
												"expression": {
													"id": 2894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2887,
														"name": "unclaimedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2869,
														"src": "18158:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2891,
																	"name": "rewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "18191:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "18191:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "18177:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2888,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18181:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2889,
																"nodeType": "ArrayTypeName",
																"src": "18181:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 2893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18177:34:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "18158:53:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 2895,
												"nodeType": "ExpressionStatement",
												"src": "18158:53:8"
											},
											{
												"expression": {
													"id": 2903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2896,
														"name": "lastRewardPerShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2872,
														"src": "18222:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2900,
																	"name": "rewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "18258:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "18258:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "18244:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2897,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18248:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2898,
																"nodeType": "ArrayTypeName",
																"src": "18248:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 2902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18244:34:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "18222:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 2904,
												"nodeType": "ExpressionStatement",
												"src": "18222:56:8"
											},
											{
												"body": {
													"id": 2936,
													"nodeType": "Block",
													"src": "18339:168:8",
													"statements": [
														{
															"expression": {
																"id": 2924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2916,
																		"name": "unclaimedRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2869,
																		"src": "18354:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2918,
																	"indexExpression": {
																		"id": 2917,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2906,
																		"src": "18371:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "18354:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 2919,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2875,
																				"src": "18376:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
																					"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
																				}
																			},
																			"id": 2920,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "userRewardData",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1654,
																			"src": "18376:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1648_storage_$",
																				"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData storage ref)"
																			}
																		},
																		"id": 2922,
																		"indexExpression": {
																			"id": 2921,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2906,
																			"src": "18396:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18376:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRewardData_$1648_storage",
																			"typeString": "struct KyberFairLaunch.UserRewardData storage ref"
																		}
																	},
																	"id": 2923,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "unclaimedReward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1645,
																	"src": "18376:38:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18354:60:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2925,
															"nodeType": "ExpressionStatement",
															"src": "18354:60:8"
														},
														{
															"expression": {
																"id": 2934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2926,
																		"name": "lastRewardPerShares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2872,
																		"src": "18429:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2928,
																	"indexExpression": {
																		"id": 2927,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2906,
																		"src": "18449:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "18429:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 2929,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2875,
																				"src": "18454:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
																					"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
																				}
																			},
																			"id": 2930,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "userRewardData",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1654,
																			"src": "18454:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1648_storage_$",
																				"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData storage ref)"
																			}
																		},
																		"id": 2932,
																		"indexExpression": {
																			"id": 2931,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2906,
																			"src": "18474:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18454:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRewardData_$1648_storage",
																			"typeString": "struct KyberFairLaunch.UserRewardData storage ref"
																		}
																	},
																	"id": 2933,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "lastRewardPerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1647,
																	"src": "18454:41:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18429:66:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2935,
															"nodeType": "ExpressionStatement",
															"src": "18429:66:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2909,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2906,
														"src": "18309:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2910,
															"name": "rewardTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "18313:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "18313:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18309:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2937,
												"initializationExpression": {
													"assignments": [
														2906
													],
													"declarations": [
														{
															"constant": false,
															"id": 2906,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2937,
															"src": "18294:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2905,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "18294:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2908,
													"initialValue": {
														"hexValue": "30",
														"id": 2907,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18306:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "18294:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 2914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "18334:3:8",
														"subExpression": {
															"id": 2913,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2906,
															"src": "18334:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2915,
													"nodeType": "ExpressionStatement",
													"src": "18334:3:8"
												},
												"nodeType": "ForStatement",
												"src": "18289:218:8"
											}
										]
									},
									"documentation": {
										"id": 2858,
										"nodeType": "StructuredDocumentation",
										"src": "17699:87:8",
										"text": " @dev Return user's info including deposited amount and reward data"
									},
									"functionSelector": "1069f3b5",
									"id": 2939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserInfo",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2864,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17886:8:8"
									},
									"parameters": {
										"id": 2863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "17813:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17813:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "_account",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "17827:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17827:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17812:32:8"
									},
									"returnParameters": {
										"id": 2873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "17927:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17927:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2869,
												"mutability": "mutable",
												"name": "unclaimedRewards",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "17956:33:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2867,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17956:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2868,
													"nodeType": "ArrayTypeName",
													"src": "17956:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2872,
												"mutability": "mutable",
												"name": "lastRewardPerShares",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "18004:36:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2870,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "18004:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2871,
													"nodeType": "ArrayTypeName",
													"src": "18004:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17912:139:8"
									},
									"scope": 3365,
									"src": "17792:722:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1370
									],
									"body": {
										"id": 2957,
										"nodeType": "Block",
										"src": "18679:94:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2947,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2942,
															"src": "18708:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2946,
														"name": "updatePoolRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3064,
														"src": "18690:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18690:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2949,
												"nodeType": "ExpressionStatement",
												"src": "18690:23:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2951,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "18742:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "18742:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2953,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2942,
															"src": "18754:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18760:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2950,
														"name": "_updateUserReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3304,
														"src": "18724:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 2955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18724:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2956,
												"nodeType": "ExpressionStatement",
												"src": "18724:41:8"
											}
										]
									},
									"documentation": {
										"id": 2940,
										"nodeType": "StructuredDocumentation",
										"src": "18522:104:8",
										"text": " @dev Harvest rewards from a pool for the sender\n @param _pid: id of the pool"
									},
									"functionSelector": "ddc63262",
									"id": 2958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2944,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18670:8:8"
									},
									"parameters": {
										"id": 2943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2942,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2958,
												"src": "18649:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18649:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18648:14:8"
									},
									"returnParameters": {
										"id": 2945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18679:0:8"
									},
									"scope": 3365,
									"src": "18632:141:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1383
									],
									"body": {
										"id": 3063,
										"nodeType": "Block",
										"src": "18897:911:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2966,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2961,
																"src": "18916:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2967,
																"name": "poolLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1687,
																"src": "18923:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18916:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420706f6f6c206964",
															"id": 2969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18935:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18",
																"typeString": "literal_string \"invalid pool id\""
															},
															"value": "invalid pool id"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18",
																"typeString": "literal_string \"invalid pool id\""
															}
														],
														"id": 2965,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18908:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18908:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2971,
												"nodeType": "ExpressionStatement",
												"src": "18908:45:8"
											},
											{
												"assignments": [
													2973
												],
												"declarations": [
													{
														"constant": false,
														"id": 2973,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 3063,
														"src": "18964:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo"
														},
														"typeName": {
															"id": 2972,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1675,
															"src": "18964:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2977,
												"initialValue": {
													"baseExpression": {
														"id": 2974,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "18988:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1675_storage_$",
															"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
														}
													},
													"id": 2976,
													"indexExpression": {
														"id": 2975,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2961,
														"src": "18997:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18988:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1675_storage",
														"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18964:38:8"
											},
											{
												"assignments": [
													2979
												],
												"declarations": [
													{
														"constant": false,
														"id": 2979,
														"mutability": "mutable",
														"name": "lastAccountedBlock",
														"nodeType": "VariableDeclaration",
														"scope": 3063,
														"src": "19013:25:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 2978,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "19013:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2983,
												"initialValue": {
													"arguments": [
														{
															"id": 2981,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2961,
															"src": "19067:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2980,
														"name": "_lastAccountedRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3332,
														"src": "19041:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint32_$",
															"typeString": "function (uint256) view returns (uint32)"
														}
													},
													"id": 2982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19041:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19013:59:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 2987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2984,
														"name": "lastAccountedBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2979,
														"src": "19087:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 2985,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2973,
															"src": "19109:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 2986,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1670,
														"src": "19109:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "19087:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2989,
												"nodeType": "IfStatement",
												"src": "19083:55:8",
												"trueBody": {
													"functionReturnParameters": 2964,
													"id": 2988,
													"nodeType": "Return",
													"src": "19131:7:8"
												}
											},
											{
												"assignments": [
													2991
												],
												"declarations": [
													{
														"constant": false,
														"id": 2991,
														"mutability": "mutable",
														"name": "_totalStake",
														"nodeType": "VariableDeclaration",
														"scope": 3063,
														"src": "19148:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2990,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19148:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2994,
												"initialValue": {
													"expression": {
														"id": 2992,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2973,
														"src": "19170:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
														}
													},
													"id": 2993,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "totalStake",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1662,
													"src": "19170:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19148:37:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2995,
														"name": "_totalStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2991,
														"src": "19200:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19215:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19200:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3006,
												"nodeType": "IfStatement",
												"src": "19196:111:8",
												"trueBody": {
													"id": 3005,
													"nodeType": "Block",
													"src": "19218:89:8",
													"statements": [
														{
															"expression": {
																"id": 3002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2998,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2973,
																		"src": "19233:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																			"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																		}
																	},
																	"id": 3000,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1670,
																	"src": "19233:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3001,
																	"name": "lastAccountedBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2979,
																	"src": "19256:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "19233:41:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 3003,
															"nodeType": "ExpressionStatement",
															"src": "19233:41:8"
														},
														{
															"functionReturnParameters": 2964,
															"id": 3004,
															"nodeType": "Return",
															"src": "19289:7:8"
														}
													]
												}
											},
											{
												"assignments": [
													3008
												],
												"declarations": [
													{
														"constant": false,
														"id": 3008,
														"mutability": "mutable",
														"name": "numberBlocks",
														"nodeType": "VariableDeclaration",
														"scope": 3063,
														"src": "19317:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3007,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19317:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3013,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 3012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3009,
														"name": "lastAccountedBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2979,
														"src": "19340:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 3010,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2973,
															"src": "19361:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 3011,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1670,
														"src": "19361:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "19340:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19317:64:8"
											},
											{
												"body": {
													"id": 3055,
													"nodeType": "Block",
													"src": "19442:307:8",
													"statements": [
														{
															"assignments": [
																3026
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3026,
																	"mutability": "mutable",
																	"name": "rewardData",
																	"nodeType": "VariableDeclaration",
																	"scope": 3055,
																	"src": "19457:33:8",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolRewardData_$1660_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolRewardData"
																	},
																	"typeName": {
																		"id": 3025,
																		"name": "PoolRewardData",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 1660,
																		"src": "19457:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolRewardData_$1660_storage_ptr",
																			"typeString": "struct KyberFairLaunch.PoolRewardData"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3031,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 3027,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2973,
																		"src": "19493:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																			"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																		}
																	},
																	"id": 3028,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "poolRewardData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1674,
																	"src": "19493:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1660_storage_$",
																		"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																	}
																},
																"id": 3030,
																"indexExpression": {
																	"id": 3029,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3015,
																	"src": "19513:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19493:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolRewardData_$1660_storage",
																	"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "19457:58:8"
														},
														{
															"assignments": [
																3033
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3033,
																	"mutability": "mutable",
																	"name": "reward",
																	"nodeType": "VariableDeclaration",
																	"scope": 3055,
																	"src": "19530:14:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3032,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "19530:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3039,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3036,
																			"name": "rewardData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3026,
																			"src": "19564:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolRewardData_$1660_storage_ptr",
																				"typeString": "struct KyberFairLaunch.PoolRewardData storage pointer"
																			}
																		},
																		"id": 3037,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardPerBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1657,
																		"src": "19564:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3034,
																		"name": "numberBlocks",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3008,
																		"src": "19547:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 237,
																	"src": "19547:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19547:43:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "19530:60:8"
														},
														{
															"expression": {
																"id": 3053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3040,
																		"name": "rewardData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3026,
																		"src": "19605:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolRewardData_$1660_storage_ptr",
																			"typeString": "struct KyberFairLaunch.PoolRewardData storage pointer"
																		}
																	},
																	"id": 3042,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "accRewardPerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1659,
																	"src": "19605:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3048,
																						"name": "PRECISION",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1643,
																						"src": "19698:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 3046,
																						"name": "reward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3033,
																						"src": "19687:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3047,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 237,
																					"src": "19687:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 3049,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "19687:21:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 3050,
																				"name": "_totalStake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2991,
																				"src": "19711:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "19687:35:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 3043,
																				"name": "rewardData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3026,
																				"src": "19636:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolRewardData_$1660_storage_ptr",
																					"typeString": "struct KyberFairLaunch.PoolRewardData storage pointer"
																				}
																			},
																			"id": 3044,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accRewardPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1659,
																			"src": "19636:28:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 181,
																		"src": "19636:32:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19636:101:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19605:132:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3054,
															"nodeType": "ExpressionStatement",
															"src": "19605:132:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3018,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3015,
														"src": "19412:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3019,
															"name": "rewardTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "19416:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 3020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "19416:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19412:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3056,
												"initializationExpression": {
													"assignments": [
														3015
													],
													"declarations": [
														{
															"constant": false,
															"id": 3015,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 3056,
															"src": "19397:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3014,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "19397:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3017,
													"initialValue": {
														"hexValue": "30",
														"id": 3016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19409:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "19397:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 3023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "19437:3:8",
														"subExpression": {
															"id": 3022,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3015,
															"src": "19437:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3024,
													"nodeType": "ExpressionStatement",
													"src": "19437:3:8"
												},
												"nodeType": "ForStatement",
												"src": "19392:357:8"
											},
											{
												"expression": {
													"id": 3061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3057,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2973,
															"src": "19759:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 3059,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1670,
														"src": "19759:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3060,
														"name": "lastAccountedBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2979,
														"src": "19782:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "19759:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 3062,
												"nodeType": "ExpressionStatement",
												"src": "19759:41:8"
											}
										]
									},
									"documentation": {
										"id": 2959,
										"nodeType": "StructuredDocumentation",
										"src": "18781:53:8",
										"text": " @dev Update rewards for one pool"
									},
									"functionSelector": "adb82b31",
									"id": 3064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePoolRewards",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2963,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18888:8:8"
									},
									"parameters": {
										"id": 2962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2961,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "18867:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18867:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18866:14:8"
									},
									"returnParameters": {
										"id": 2964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18897:0:8"
									},
									"scope": 3365,
									"src": "18840:968:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3145,
										"nodeType": "Block",
										"src": "19988:572:8",
										"statements": [
											{
												"assignments": [
													3073
												],
												"declarations": [
													{
														"constant": false,
														"id": 3073,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 3145,
														"src": "19999:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
															"typeString": "struct KyberFairLaunch.PoolInfo"
														},
														"typeName": {
															"id": 3072,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1675,
															"src": "19999:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3077,
												"initialValue": {
													"baseExpression": {
														"id": 3074,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "20023:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1675_storage_$",
															"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
														}
													},
													"id": 3076,
													"indexExpression": {
														"id": 3075,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3067,
														"src": "20032:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20023:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1675_storage",
														"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19999:38:8"
											},
											{
												"assignments": [
													3079
												],
												"declarations": [
													{
														"constant": false,
														"id": 3079,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 3145,
														"src": "20048:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
															"typeString": "struct KyberFairLaunch.UserInfo"
														},
														"typeName": {
															"id": 3078,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1655,
															"src": "20048:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
																"typeString": "struct KyberFairLaunch.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3086,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 3080,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "20072:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
															}
														},
														"id": 3082,
														"indexExpression": {
															"id": 3081,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3067,
															"src": "20081:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "20072:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$",
															"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
														}
													},
													"id": 3085,
													"indexExpression": {
														"expression": {
															"id": 3083,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "20087:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "20087:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20072:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1655_storage",
														"typeString": "struct KyberFairLaunch.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20048:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3088,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3079,
																	"src": "20117:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
																		"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
																	}
																},
																"id": 3089,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1650,
																"src": "20117:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3090,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3069,
																"src": "20132:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20117:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a20696e73756666696369656e7420616d6f756e74",
															"id": 3092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20141:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bc8c43108bc0174d691040f1b26bcfd2f362490f17ce12c09ee43c30f8abc24",
																"typeString": "literal_string \"withdraw: insufficient amount\""
															},
															"value": "withdraw: insufficient amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bc8c43108bc0174d691040f1b26bcfd2f362490f17ce12c09ee43c30f8abc24",
																"typeString": "literal_string \"withdraw: insufficient amount\""
															}
														],
														"id": 3087,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20109:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20109:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3094,
												"nodeType": "ExpressionStatement",
												"src": "20109:64:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3096,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3067,
															"src": "20247:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3095,
														"name": "updatePoolRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3064,
														"src": "20229:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20229:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3098,
												"nodeType": "ExpressionStatement",
												"src": "20229:23:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3100,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "20281:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "20281:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 3102,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3067,
															"src": "20293:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 3103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20299:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3099,
														"name": "_updateUserReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3304,
														"src": "20263:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 3104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20263:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3105,
												"nodeType": "ExpressionStatement",
												"src": "20263:41:8"
											},
											{
												"expression": {
													"id": 3114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3106,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3079,
															"src": "20317:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
																"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
															}
														},
														"id": 3108,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1650,
														"src": "20317:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3112,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3069,
																"src": "20347:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 3109,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3079,
																	"src": "20331:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1655_storage_ptr",
																		"typeString": "struct KyberFairLaunch.UserInfo storage pointer"
																	}
																},
																"id": 3110,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1650,
																"src": "20331:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 203,
															"src": "20331:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20331:24:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20317:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3115,
												"nodeType": "ExpressionStatement",
												"src": "20317:38:8"
											},
											{
												"expression": {
													"id": 3124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3116,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3073,
															"src": "20366:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
															}
														},
														"id": 3118,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalStake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1662,
														"src": "20366:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3122,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3069,
																"src": "20404:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 3119,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3073,
																	"src": "20384:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																		"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																	}
																},
																"id": 3120,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalStake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1662,
																"src": "20384:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 203,
															"src": "20384:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20384:28:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20366:46:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3125,
												"nodeType": "ExpressionStatement",
												"src": "20366:46:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3131,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "20465:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "20465:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 3133,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3069,
															"src": "20477:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3127,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3073,
																		"src": "20435:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1675_storage_ptr",
																			"typeString": "struct KyberFairLaunch.PoolInfo storage pointer"
																		}
																	},
																	"id": 3128,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1664,
																	"src": "20435:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3126,
																"name": "IERC20Ext",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3378,
																"src": "20425:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Ext_$3378_$",
																	"typeString": "type(contract IERC20Ext)"
																}
															},
															"id": 3129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20425:26:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Ext_$3378",
																"typeString": "contract IERC20Ext"
															}
														},
														"id": 3130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 466,
														"src": "20425:39:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$432_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$432_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 3134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20425:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3135,
												"nodeType": "ExpressionStatement",
												"src": "20425:60:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3137,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "20512:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "20512:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 3139,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3067,
															"src": "20524:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3140,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "20530:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "20530:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3142,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3069,
															"src": "20544:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3136,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1748,
														"src": "20503:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 3143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20503:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3144,
												"nodeType": "EmitStatement",
												"src": "20498:54:8"
											}
										]
									},
									"documentation": {
										"id": 3065,
										"nodeType": "StructuredDocumentation",
										"src": "19816:107:8",
										"text": " @dev Withdraw _amount of stakeToken from pool _pid, also harvest reward for the sender"
									},
									"id": 3146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3067,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "19948:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19948:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3069,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "19962:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19962:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19947:31:8"
									},
									"returnParameters": {
										"id": 3071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19988:0:8"
									},
									"scope": 3365,
									"src": "19929:631:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3303,
										"nodeType": "Block",
										"src": "20779:1936:8",
										"statements": [
											{
												"assignments": [
													3157
												],
												"declarations": [
													{
														"constant": false,
														"id": 3157,
														"mutability": "mutable",
														"name": "userAmount",
														"nodeType": "VariableDeclaration",
														"scope": 3303,
														"src": "20790:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3156,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20790:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3164,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 3158,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1697,
																"src": "20811:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$_$",
																	"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
																}
															},
															"id": 3160,
															"indexExpression": {
																"id": 3159,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3151,
																"src": "20820:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20811:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$",
																"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
															}
														},
														"id": 3162,
														"indexExpression": {
															"id": 3161,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3149,
															"src": "20826:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "20811:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1655_storage",
															"typeString": "struct KyberFairLaunch.UserInfo storage ref"
														}
													},
													"id": 3163,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1650,
													"src": "20811:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20790:47:8"
											},
											{
												"assignments": [
													3166
												],
												"declarations": [
													{
														"constant": false,
														"id": 3166,
														"mutability": "mutable",
														"name": "rTokensLength",
														"nodeType": "VariableDeclaration",
														"scope": 3303,
														"src": "20848:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3165,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20848:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3169,
												"initialValue": {
													"expression": {
														"id": 3167,
														"name": "rewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "20872:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 3168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "20872:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20848:43:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3170,
														"name": "userAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3157,
														"src": "20908:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20922:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20908:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3205,
												"nodeType": "IfStatement",
												"src": "20904:583:8",
												"trueBody": {
													"id": 3204,
													"nodeType": "Block",
													"src": "20925:562:8",
													"statements": [
														{
															"body": {
																"id": 3201,
																"nodeType": "Block",
																"src": "21223:232:8",
																"statements": [
																	{
																		"expression": {
																			"id": 3199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"baseExpression": {
																								"baseExpression": {
																									"id": 3183,
																									"name": "userInfo",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1697,
																									"src": "21242:8:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$_$",
																										"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
																									}
																								},
																								"id": 3186,
																								"indexExpression": {
																									"id": 3184,
																									"name": "_pid",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3151,
																									"src": "21251:4:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "21242:14:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$",
																									"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
																								}
																							},
																							"id": 3187,
																							"indexExpression": {
																								"id": 3185,
																								"name": "_to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3149,
																								"src": "21257:3:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "21242:19:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$1655_storage",
																								"typeString": "struct KyberFairLaunch.UserInfo storage ref"
																							}
																						},
																						"id": 3188,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "userRewardData",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1654,
																						"src": "21242:56:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1648_storage_$",
																							"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData storage ref)"
																						}
																					},
																					"id": 3190,
																					"indexExpression": {
																						"id": 3189,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3174,
																						"src": "21299:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "21242:59:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserRewardData_$1648_storage",
																						"typeString": "struct KyberFairLaunch.UserRewardData storage ref"
																					}
																				},
																				"id": 3191,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "lastRewardPerShare",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1647,
																				"src": "21242:100:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 3192,
																								"name": "poolInfo",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1691,
																								"src": "21345:8:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1675_storage_$",
																									"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
																								}
																							},
																							"id": 3194,
																							"indexExpression": {
																								"id": 3193,
																								"name": "_pid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3151,
																								"src": "21354:4:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "21345:14:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1675_storage",
																								"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
																							}
																						},
																						"id": 3195,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "poolRewardData",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1674,
																						"src": "21345:51:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1660_storage_$",
																							"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																						}
																					},
																					"id": 3197,
																					"indexExpression": {
																						"id": 3196,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3174,
																						"src": "21397:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "21345:54:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolRewardData_$1660_storage",
																						"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																					}
																				},
																				"id": 3198,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "accRewardPerShare",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1659,
																				"src": "21345:94:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21242:197:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3200,
																		"nodeType": "ExpressionStatement",
																		"src": "21242:197:8"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3177,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3174,
																	"src": "21199:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 3178,
																	"name": "rTokensLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3166,
																	"src": "21203:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21199:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3202,
															"initializationExpression": {
																"assignments": [
																	3174
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 3174,
																		"mutability": "mutable",
																		"name": "i",
																		"nodeType": "VariableDeclaration",
																		"scope": 3202,
																		"src": "21184:9:8",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 3173,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "21184:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 3176,
																"initialValue": {
																	"hexValue": "30",
																	"id": 3175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21196:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "21184:13:8"
															},
															"loopExpression": {
																"expression": {
																	"id": 3181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "21218:3:8",
																	"subExpression": {
																		"id": 3180,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3174,
																		"src": "21218:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3182,
																"nodeType": "ExpressionStatement",
																"src": "21218:3:8"
															},
															"nodeType": "ForStatement",
															"src": "21179:276:8"
														},
														{
															"functionReturnParameters": 3155,
															"id": 3203,
															"nodeType": "Return",
															"src": "21469:7:8"
														}
													]
												}
											},
											{
												"body": {
													"id": 3301,
													"nodeType": "Block",
													"src": "21543:1165:8",
													"statements": [
														{
															"assignments": [
																3217
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3217,
																	"mutability": "mutable",
																	"name": "lastAccRewardPerShare",
																	"nodeType": "VariableDeclaration",
																	"scope": 3301,
																	"src": "21558:29:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3216,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21558:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3225,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 3218,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1691,
																				"src": "21590:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1675_storage_$",
																					"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
																				}
																			},
																			"id": 3220,
																			"indexExpression": {
																				"id": 3219,
																				"name": "_pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3151,
																				"src": "21599:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "21590:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1675_storage",
																				"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
																			}
																		},
																		"id": 3221,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "poolRewardData",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1674,
																		"src": "21590:47:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolRewardData_$1660_storage_$",
																			"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolRewardData storage ref)"
																		}
																	},
																	"id": 3223,
																	"indexExpression": {
																		"id": 3222,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3207,
																		"src": "21638:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21590:50:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolRewardData_$1660_storage",
																		"typeString": "struct KyberFairLaunch.PoolRewardData storage ref"
																	}
																},
																"id": 3224,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "accRewardPerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1659,
																"src": "21590:86:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21558:118:8"
														},
														{
															"assignments": [
																3227
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3227,
																	"mutability": "mutable",
																	"name": "rewardData",
																	"nodeType": "VariableDeclaration",
																	"scope": 3301,
																	"src": "21691:33:8",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserRewardData_$1648_storage_ptr",
																		"typeString": "struct KyberFairLaunch.UserRewardData"
																	},
																	"typeName": {
																		"id": 3226,
																		"name": "UserRewardData",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 1648,
																		"src": "21691:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRewardData_$1648_storage_ptr",
																			"typeString": "struct KyberFairLaunch.UserRewardData"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3236,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 3228,
																				"name": "userInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1697,
																				"src": "21727:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$_$",
																					"typeString": "mapping(uint256 => mapping(address => struct KyberFairLaunch.UserInfo storage ref))"
																				}
																			},
																			"id": 3230,
																			"indexExpression": {
																				"id": 3229,
																				"name": "_pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3151,
																				"src": "21736:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "21727:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1655_storage_$",
																				"typeString": "mapping(address => struct KyberFairLaunch.UserInfo storage ref)"
																			}
																		},
																		"id": 3232,
																		"indexExpression": {
																			"id": 3231,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3149,
																			"src": "21742:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21727:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1655_storage",
																			"typeString": "struct KyberFairLaunch.UserInfo storage ref"
																		}
																	},
																	"id": 3233,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "userRewardData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1654,
																	"src": "21727:52:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserRewardData_$1648_storage_$",
																		"typeString": "mapping(uint256 => struct KyberFairLaunch.UserRewardData storage ref)"
																	}
																},
																"id": 3235,
																"indexExpression": {
																	"id": 3234,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3207,
																	"src": "21780:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21727:55:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserRewardData_$1648_storage",
																	"typeString": "struct KyberFairLaunch.UserRewardData storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21691:91:8"
														},
														{
															"assignments": [
																3238
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3238,
																	"mutability": "mutable",
																	"name": "_pending",
																	"nodeType": "VariableDeclaration",
																	"scope": 3301,
																	"src": "21920:16:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3237,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21920:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3249,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 3243,
																						"name": "rewardData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3227,
																						"src": "21998:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserRewardData_$1648_storage_ptr",
																							"typeString": "struct KyberFairLaunch.UserRewardData storage pointer"
																						}
																					},
																					"id": 3244,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "lastRewardPerShare",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1647,
																					"src": "21998:29:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 3241,
																					"name": "lastAccRewardPerShare",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3217,
																					"src": "21972:21:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3242,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 203,
																				"src": "21972:25:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21972:56:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 3239,
																			"name": "userAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3157,
																			"src": "21939:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 237,
																		"src": "21939:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21939:104:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 3247,
																	"name": "PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1643,
																	"src": "22046:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21939:116:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21920:135:8"
														},
														{
															"expression": {
																"id": 3256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3250,
																	"name": "_pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3238,
																	"src": "22070:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 3253,
																				"name": "rewardData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3227,
																				"src": "22094:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserRewardData_$1648_storage_ptr",
																					"typeString": "struct KyberFairLaunch.UserRewardData storage pointer"
																				}
																			},
																			"id": 3254,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "unclaimedReward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1645,
																			"src": "22094:26:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 3251,
																			"name": "_pending",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3238,
																			"src": "22081:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 181,
																		"src": "22081:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22081:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22070:51:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3257,
															"nodeType": "ExpressionStatement",
															"src": "22070:51:8"
														},
														{
															"expression": {
																"id": 3265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3258,
																		"name": "rewardData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3227,
																		"src": "22138:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRewardData_$1648_storage_ptr",
																			"typeString": "struct KyberFairLaunch.UserRewardData storage pointer"
																		}
																	},
																	"id": 3260,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "unclaimedReward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1645,
																	"src": "22138:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 3261,
																		"name": "shouldHarvest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3153,
																		"src": "22167:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3263,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3238,
																		"src": "22187:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "22167:28:8",
																	"trueExpression": {
																		"hexValue": "30",
																		"id": 3262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22183:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22138:57:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3266,
															"nodeType": "ExpressionStatement",
															"src": "22138:57:8"
														},
														{
															"expression": {
																"id": 3271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3267,
																		"name": "rewardData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3227,
																		"src": "22296:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRewardData_$1648_storage_ptr",
																			"typeString": "struct KyberFairLaunch.UserRewardData storage pointer"
																		}
																	},
																	"id": 3269,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardPerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1647,
																	"src": "22296:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3270,
																	"name": "lastAccRewardPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3217,
																	"src": "22328:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22296:53:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3272,
															"nodeType": "ExpressionStatement",
															"src": "22296:53:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3273,
																	"name": "shouldHarvest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3153,
																	"src": "22370:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3274,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3238,
																		"src": "22387:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 3275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22398:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "22387:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "22370:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3300,
															"nodeType": "IfStatement",
															"src": "22366:331:8",
															"trueBody": {
																"id": 3299,
																"nodeType": "Block",
																"src": "22401:296:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 3280,
																								"name": "rewardTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1684,
																								"src": "22442:12:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_storage",
																									"typeString": "address[] storage ref"
																								}
																							},
																							"id": 3282,
																							"indexExpression": {
																								"id": 3281,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3207,
																								"src": "22455:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "22442:15:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 3279,
																						"name": "IERC20Ext",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3378,
																						"src": "22432:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20Ext_$3378_$",
																							"typeString": "type(contract IERC20Ext)"
																						}
																					},
																					"id": 3283,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "22432:26:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Ext_$3378",
																						"typeString": "contract IERC20Ext"
																					}
																				},
																				{
																					"id": 3284,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3149,
																					"src": "22460:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3285,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3238,
																					"src": "22465:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC20Ext_$3378",
																						"typeString": "contract IERC20Ext"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3278,
																				"name": "_lockReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3364,
																				"src": "22420:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Ext_$3378_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (contract IERC20Ext,address,uint256)"
																				}
																			},
																			"id": 3286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22420:54:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3287,
																		"nodeType": "ExpressionStatement",
																		"src": "22420:54:8"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 3289,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3149,
																					"src": "22528:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3290,
																					"name": "_pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3151,
																					"src": "22554:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"baseExpression": {
																						"id": 3291,
																						"name": "rewardTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1684,
																						"src": "22581:12:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_storage",
																							"typeString": "address[] storage ref"
																						}
																					},
																					"id": 3293,
																					"indexExpression": {
																						"id": 3292,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3207,
																						"src": "22594:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "22581:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3294,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3238,
																					"src": "22619:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 3295,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "22650:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 3296,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "number",
																					"nodeType": "MemberAccess",
																					"src": "22650:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3288,
																				"name": "Harvest",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1760,
																				"src": "22498:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,address,uint256,uint256)"
																				}
																			},
																			"id": 3297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22498:183:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3298,
																		"nodeType": "EmitStatement",
																		"src": "22493:188:8"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3210,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3207,
														"src": "21519:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3211,
														"name": "rTokensLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3166,
														"src": "21523:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21519:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3302,
												"initializationExpression": {
													"assignments": [
														3207
													],
													"declarations": [
														{
															"constant": false,
															"id": 3207,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 3302,
															"src": "21504:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3206,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "21504:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3209,
													"initialValue": {
														"hexValue": "30",
														"id": 3208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21516:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "21504:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 3214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "21538:3:8",
														"subExpression": {
															"id": 3213,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3207,
															"src": "21538:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3215,
													"nodeType": "ExpressionStatement",
													"src": "21538:3:8"
												},
												"nodeType": "ForStatement",
												"src": "21499:1209:8"
											}
										]
									},
									"documentation": {
										"id": 3147,
										"nodeType": "StructuredDocumentation",
										"src": "20568:88:8",
										"text": " @dev Update reward of _to address from pool _pid, harvest if needed"
									},
									"id": 3304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateUserReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 3304,
												"src": "20699:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20699:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3151,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 3304,
												"src": "20721:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20721:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "shouldHarvest",
												"nodeType": "VariableDeclaration",
												"scope": 3304,
												"src": "20744:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20744:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20688:81:8"
									},
									"returnParameters": {
										"id": 3155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20779:0:8"
									},
									"scope": 3365,
									"src": "20662:2053:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3331,
										"nodeType": "Block",
										"src": "22970:121:8",
										"statements": [
											{
												"expression": {
													"id": 3317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3312,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3310,
														"src": "22981:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3313,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1691,
																"src": "22990:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PoolInfo_$1675_storage_$",
																	"typeString": "mapping(uint256 => struct KyberFairLaunch.PoolInfo storage ref)"
																}
															},
															"id": 3315,
															"indexExpression": {
																"id": 3314,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3307,
																"src": "22999:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "22990:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1675_storage",
																"typeString": "struct KyberFairLaunch.PoolInfo storage ref"
															}
														},
														"id": 3316,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "endBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1668,
														"src": "22990:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "22981:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 3318,
												"nodeType": "ExpressionStatement",
												"src": "22981:32:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3319,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3310,
														"src": "23028:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 3320,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "23037:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "23037:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23028:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3330,
												"nodeType": "IfStatement",
												"src": "23024:59:8",
												"trueBody": {
													"expression": {
														"id": 3328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3323,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3310,
															"src": "23051:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"expression": {
																		"id": 3324,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "23060:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "23060:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toUint32",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1053,
																"src": "23060:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint32)"
																}
															},
															"id": 3327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23060:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "23051:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 3329,
													"nodeType": "ExpressionStatement",
													"src": "23051:32:8"
												}
											}
										]
									},
									"documentation": {
										"id": 3305,
										"nodeType": "StructuredDocumentation",
										"src": "22723:122:8",
										"text": " @dev Returns last accounted reward block, either the current block number or the endBlock of the pool"
									},
									"id": 3332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_lastAccountedRewardBlock",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3307,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 3332,
												"src": "22886:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22886:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22885:14:8"
									},
									"returnParameters": {
										"id": 3311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3310,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 3332,
												"src": "22950:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3309,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "22950:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22949:15:8"
									},
									"scope": 3365,
									"src": "22851:240:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3363,
										"nodeType": "Block",
										"src": "23283:138:8",
										"statements": [
											{
												"assignments": [
													3343
												],
												"declarations": [
													{
														"constant": false,
														"id": 3343,
														"mutability": "mutable",
														"name": "value",
														"nodeType": "VariableDeclaration",
														"scope": 3363,
														"src": "23294:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3342,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23294:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3352,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_contract$_IERC20Ext_$3378",
															"typeString": "contract IERC20Ext"
														},
														"id": 3348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3344,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3335,
															"src": "23310:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Ext_$3378",
																"typeString": "contract IERC20Ext"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23329:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3345,
																"name": "IERC20Ext",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3378,
																"src": "23319:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Ext_$3378_$",
																	"typeString": "type(contract IERC20Ext)"
																}
															},
															"id": 3347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23319:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Ext_$3378",
																"typeString": "contract IERC20Ext"
															}
														},
														"src": "23310:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 3350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23344:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 3351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "23310:35:8",
													"trueExpression": {
														"id": 3349,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3339,
														"src": "23334:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23294:51:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3358,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3335,
															"src": "23388:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Ext_$3378",
																"typeString": "contract IERC20Ext"
															}
														},
														{
															"id": 3359,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3337,
															"src": "23395:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3360,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3339,
															"src": "23405:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Ext_$3378",
																"typeString": "contract IERC20Ext"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20Ext_$3378",
																	"typeString": "contract IERC20Ext"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 3353,
																"name": "rewardLocker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1681,
																"src": "23356:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IKyberRewardLocker_$1605",
																	"typeString": "contract IKyberRewardLocker"
																}
															},
															"id": 3355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1504,
															"src": "23356:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_contract$_IERC20Ext_$3378_$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (contract IERC20Ext,address,uint256) payable external"
															}
														},
														"id": 3357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 3356,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3343,
																"src": "23381:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "23356:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_contract$_IERC20Ext_$3378_$_t_address_$_t_uint256_$returns$__$value",
															"typeString": "function (contract IERC20Ext,address,uint256) payable external"
														}
													},
													"id": 3361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23356:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3362,
												"nodeType": "ExpressionStatement",
												"src": "23356:57:8"
											}
										]
									},
									"documentation": {
										"id": 3333,
										"nodeType": "StructuredDocumentation",
										"src": "23099:62:8",
										"text": " @dev Call locker contract to lock rewards"
									},
									"id": 3364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_lockReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3335,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 3364,
												"src": "23198:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Ext_$3378",
													"typeString": "contract IERC20Ext"
												},
												"typeName": {
													"id": 3334,
													"name": "IERC20Ext",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 3378,
													"src": "23198:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Ext_$3378",
														"typeString": "contract IERC20Ext"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3337,
												"mutability": "mutable",
												"name": "_account",
												"nodeType": "VariableDeclaration",
												"scope": 3364,
												"src": "23224:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23224:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3339,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 3364,
												"src": "23251:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23251:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23187:86:8"
									},
									"returnParameters": {
										"id": 3341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23283:0:8"
									},
									"scope": 3365,
									"src": "23167:254:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3366,
							"src": "1064:22360:8"
						}
					],
					"src": "38:23388:8"
				},
				"id": 8
			},
			"contracts/manual/IERC20Ext.sol": {
				"ast": {
					"absolutePath": "contracts/manual/IERC20Ext.sol",
					"exportedSymbols": {
						"IERC20": [
							432
						],
						"IERC20Ext": [
							3378
						]
					},
					"id": 3379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3367,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3368,
							"nodeType": "ImportDirective",
							"scope": 3379,
							"sourceUnit": 433,
							"src": "59:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3370,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 432,
										"src": "283:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$432",
											"typeString": "contract IERC20"
										}
									},
									"id": 3371,
									"nodeType": "InheritanceSpecifier",
									"src": "283:6:9"
								}
							],
							"contractDependencies": [
								432
							],
							"contractKind": "interface",
							"documentation": {
								"id": 3369,
								"nodeType": "StructuredDocumentation",
								"src": "119:139:9",
								"text": " @dev Interface extending ERC20 standard to include decimals() as\n      it is optional in the OpenZeppelin IERC20 interface."
							},
							"fullyImplemented": false,
							"id": 3378,
							"linearizedBaseContracts": [
								3378,
								432
							],
							"name": "IERC20Ext",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3372,
										"nodeType": "StructuredDocumentation",
										"src": "297:145:9",
										"text": " @dev This function is required as Kyber requires to interact\n      with token.decimals() with many of its operations."
									},
									"functionSelector": "313ce567",
									"id": 3377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "465:2:9"
									},
									"returnParameters": {
										"id": 3376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3375,
												"mutability": "mutable",
												"name": "digits",
												"nodeType": "VariableDeclaration",
												"scope": 3377,
												"src": "491:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3374,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "491:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "490:14:9"
									},
									"scope": 3378,
									"src": "448:57:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3379,
							"src": "260:248:9"
						}
					],
					"src": "33:477:9"
				},
				"id": 9
			},
			"contracts/manual/PermissionAdmin.sol": {
				"ast": {
					"absolutePath": "contracts/manual/PermissionAdmin.sol",
					"exportedSymbols": {
						"PermissionAdmin": [
							3515
						]
					},
					"id": 3516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3380,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3515,
							"linearizedBaseContracts": [
								3515
							],
							"name": "PermissionAdmin",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 3382,
									"mutability": "mutable",
									"name": "admin",
									"nodeType": "VariableDeclaration",
									"scope": 3515,
									"src": "100:20:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3381,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "100:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "26782247",
									"id": 3384,
									"mutability": "mutable",
									"name": "pendingAdmin",
									"nodeType": "VariableDeclaration",
									"scope": 3515,
									"src": "127:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3383,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "127:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 3390,
									"name": "AdminClaimed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3386,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"scope": 3390,
												"src": "182:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3388,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nodeType": "VariableDeclaration",
												"scope": 3390,
												"src": "200:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "181:41:10"
									},
									"src": "163:60:10"
								},
								{
									"anonymous": false,
									"id": 3394,
									"name": "TransferAdminPending",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3392,
												"indexed": false,
												"mutability": "mutable",
												"name": "pendingAdmin",
												"nodeType": "VariableDeclaration",
												"scope": 3394,
												"src": "258:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "257:22:10"
									},
									"src": "231:49:10"
								},
								{
									"body": {
										"id": 3413,
										"nodeType": "Block",
										"src": "316:84:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3400,
																"name": "_admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3396,
																"src": "335:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "353:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "345:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3401,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "345:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 3404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "345:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "335:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61646d696e2030",
															"id": 3406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "357:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a124f9f9a98ac379e9de3a1a59322560b257fec3dfe6894084a822062ab78fc3",
																"typeString": "literal_string \"admin 0\""
															},
															"value": "admin 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a124f9f9a98ac379e9de3a1a59322560b257fec3dfe6894084a822062ab78fc3",
																"typeString": "literal_string \"admin 0\""
															}
														],
														"id": 3399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "327:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "327:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3408,
												"nodeType": "ExpressionStatement",
												"src": "327:40:10"
											},
											{
												"expression": {
													"id": 3411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3409,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3382,
														"src": "378:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3410,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3396,
														"src": "386:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "378:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3412,
												"nodeType": "ExpressionStatement",
												"src": "378:14:10"
											}
										]
									},
									"id": 3414,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3396,
												"mutability": "mutable",
												"name": "_admin",
												"nodeType": "VariableDeclaration",
												"scope": 3414,
												"src": "300:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "299:16:10"
									},
									"returnParameters": {
										"id": 3398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:0:10"
									},
									"scope": 3515,
									"src": "288:112:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3425,
										"nodeType": "Block",
										"src": "429:73:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3417,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "448:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "448:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3419,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3382,
																"src": "462:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "448:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c792061646d696e",
															"id": 3421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "469:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
																"typeString": "literal_string \"only admin\""
															},
															"value": "only admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
																"typeString": "literal_string \"only admin\""
															}
														],
														"id": 3416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "440:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "440:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3423,
												"nodeType": "ExpressionStatement",
												"src": "440:42:10"
											},
											{
												"id": 3424,
												"nodeType": "PlaceholderStatement",
												"src": "493:1:10"
											}
										]
									},
									"id": 3426,
									"name": "onlyAdmin",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "426:2:10"
									},
									"src": "408:94:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3452,
										"nodeType": "Block",
										"src": "719:145:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3435,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3429,
																"src": "738:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "758:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "750:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3436,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "750:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 3439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "750:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "738:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e65772061646d696e2030",
															"id": 3441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "762:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cf435a99ab9afadec653f39bd35ef416a47a382474bb2e5c476a72b3c4ffa55e",
																"typeString": "literal_string \"new admin 0\""
															},
															"value": "new admin 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cf435a99ab9afadec653f39bd35ef416a47a382474bb2e5c476a72b3c4ffa55e",
																"typeString": "literal_string \"new admin 0\""
															}
														],
														"id": 3434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "730:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "730:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3443,
												"nodeType": "ExpressionStatement",
												"src": "730:46:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3445,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3429,
															"src": "813:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3444,
														"name": "TransferAdminPending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3394,
														"src": "792:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "792:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3447,
												"nodeType": "EmitStatement",
												"src": "787:35:10"
											},
											{
												"expression": {
													"id": 3450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3448,
														"name": "pendingAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3384,
														"src": "833:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3449,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3429,
														"src": "848:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "833:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3451,
												"nodeType": "ExpressionStatement",
												"src": "833:23:10"
											}
										]
									},
									"documentation": {
										"id": 3427,
										"nodeType": "StructuredDocumentation",
										"src": "510:145:10",
										"text": " @dev Allows the current admin to set the pendingAdmin address.\n @param newAdmin The address to transfer ownership to."
									},
									"functionSelector": "75829def",
									"id": 3453,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3432,
											"modifierName": {
												"id": 3431,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 3426,
												"src": "709:9:10",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "709:9:10"
										}
									],
									"name": "transferAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3429,
												"mutability": "mutable",
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"scope": 3453,
												"src": "684:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:18:10"
									},
									"returnParameters": {
										"id": 3433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "719:0:10"
									},
									"scope": 3515,
									"src": "661:203:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3484,
										"nodeType": "Block",
										"src": "1110:179:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3462,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3456,
																"src": "1129:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1149:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1141:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3463,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1141:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 3466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1141:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1129:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61646d696e2030",
															"id": 3468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1153:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a124f9f9a98ac379e9de3a1a59322560b257fec3dfe6894084a822062ab78fc3",
																"typeString": "literal_string \"admin 0\""
															},
															"value": "admin 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a124f9f9a98ac379e9de3a1a59322560b257fec3dfe6894084a822062ab78fc3",
																"typeString": "literal_string \"admin 0\""
															}
														],
														"id": 3461,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1121:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1121:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3470,
												"nodeType": "ExpressionStatement",
												"src": "1121:42:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3472,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3456,
															"src": "1200:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3471,
														"name": "TransferAdminPending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3394,
														"src": "1179:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1179:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3474,
												"nodeType": "EmitStatement",
												"src": "1174:35:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3476,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3456,
															"src": "1238:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3477,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3382,
															"src": "1248:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3475,
														"name": "AdminClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3390,
														"src": "1225:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 3478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1225:29:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3479,
												"nodeType": "EmitStatement",
												"src": "1220:34:10"
											},
											{
												"expression": {
													"id": 3482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3480,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3382,
														"src": "1265:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3481,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3456,
														"src": "1273:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1265:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3483,
												"nodeType": "ExpressionStatement",
												"src": "1265:16:10"
											}
										]
									},
									"documentation": {
										"id": 3454,
										"nodeType": "StructuredDocumentation",
										"src": "872:167:10",
										"text": " @dev Allows the current admin to set the admin in one tx. Useful initial deployment.\n @param newAdmin The address to transfer ownership to."
									},
									"functionSelector": "7acc8678",
									"id": 3485,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3459,
											"modifierName": {
												"id": 3458,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 3426,
												"src": "1100:9:10",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1100:9:10"
										}
									],
									"name": "transferAdminQuickly",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3456,
												"mutability": "mutable",
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"scope": 3485,
												"src": "1075:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:18:10"
									},
									"returnParameters": {
										"id": 3460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1110:0:10"
									},
									"scope": 3515,
									"src": "1045:244:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3513,
										"nodeType": "Block",
										"src": "1427:185:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3490,
																"name": "pendingAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3384,
																"src": "1446:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3491,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1462:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1462:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1446:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742070656e64696e67",
															"id": 3494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1474:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98b6cf0d74821485c9d6d314b9997aa0d68cdf087089df382a53d9525093d5fb",
																"typeString": "literal_string \"not pending\""
															},
															"value": "not pending"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98b6cf0d74821485c9d6d314b9997aa0d68cdf087089df382a53d9525093d5fb",
																"typeString": "literal_string \"not pending\""
															}
														],
														"id": 3489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1438:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1438:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3496,
												"nodeType": "ExpressionStatement",
												"src": "1438:50:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3498,
															"name": "pendingAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3384,
															"src": "1517:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3499,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3382,
															"src": "1531:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3497,
														"name": "AdminClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3390,
														"src": "1504:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 3500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1504:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3501,
												"nodeType": "EmitStatement",
												"src": "1499:38:10"
											},
											{
												"expression": {
													"id": 3504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3502,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3382,
														"src": "1548:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3503,
														"name": "pendingAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3384,
														"src": "1556:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1548:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3505,
												"nodeType": "ExpressionStatement",
												"src": "1548:20:10"
											},
											{
												"expression": {
													"id": 3511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3506,
														"name": "pendingAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3384,
														"src": "1579:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1602:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1594:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3507,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1594:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 3510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1594:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1579:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3512,
												"nodeType": "ExpressionStatement",
												"src": "1579:25:10"
											}
										]
									},
									"documentation": {
										"id": 3486,
										"nodeType": "StructuredDocumentation",
										"src": "1297:95:10",
										"text": " @dev Allows the pendingAdmin address to finalize the change admin process."
									},
									"functionSelector": "77f50f97",
									"id": 3514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1417:2:10"
									},
									"returnParameters": {
										"id": 3488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1427:0:10"
									},
									"scope": 3515,
									"src": "1398:214:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3516,
							"src": "59:1556:10"
						}
					],
					"src": "33:1584:10"
				},
				"id": 10
			}
		}
	}
}