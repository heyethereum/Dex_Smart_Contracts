{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_admin",
						"type": "address"
					},
					{
						"internalType": "address[]",
						"name": "_rewardTokens",
						"type": "address[]"
					},
					{
						"internalType": "contract IKyberRewardLockerV2",
						"name": "_rewardLocker",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "stakeToken",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "generatedToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "startTime",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "endTime",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "vestingDuration",
						"type": "uint32"
					}
				],
				"name": "AddNewPool",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "newAdmin",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "previousAdmin",
						"type": "address"
					}
				],
				"name": "AdminClaimed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "pid",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Deposit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "pid",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "EmergencyWithdraw",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "pid",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "rewardToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lockedAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "Harvest",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "pid",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint32",
						"name": "startTime",
						"type": "uint32"
					},
					{
						"indexed": true,
						"internalType": "uint32",
						"name": "endTime",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "vestingDuration",
						"type": "uint32"
					}
				],
				"name": "RenewPool",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "pendingAdmin",
						"type": "address"
					}
				],
				"name": "TransferAdminPending",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "pid",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint32",
						"name": "endTime",
						"type": "uint32"
					},
					{
						"indexed": true,
						"internalType": "uint32",
						"name": "vestingDuration",
						"type": "uint32"
					}
				],
				"name": "UpdatePool",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "pid",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Withdraw",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_stakeToken",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "_startTime",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_endTime",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_vestingDuration",
						"type": "uint32"
					},
					{
						"internalType": "uint256[]",
						"name": "_totalRewards",
						"type": "uint256[]"
					},
					{
						"internalType": "string",
						"name": "_tokenName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_tokenSymbol",
						"type": "string"
					}
				],
				"name": "addPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "admin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "rewardTokenIndex",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "adminWithdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "claimAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_shouldHarvest",
						"type": "bool"
					}
				],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					}
				],
				"name": "emergencyWithdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					}
				],
				"name": "getPoolInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "totalStake",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "stakeToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "generatedToken",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "startTime",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "endTime",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "lastRewardTime",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "vestingDuration",
						"type": "uint32"
					},
					{
						"internalType": "uint256[]",
						"name": "rewardPerSeconds",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "rewardMultipliers",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "accRewardPerShares",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getRewardTokens",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_account",
						"type": "address"
					}
				],
				"name": "getUserInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "unclaimedRewards",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "lastRewardPerShares",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					}
				],
				"name": "harvest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_pids",
						"type": "uint256[]"
					}
				],
				"name": "harvestMultiplePools",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "multipliers",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pendingAdmin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "pendingRewards",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "rewards",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "poolExists",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "poolLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "_startTime",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_endTime",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_vestingDuration",
						"type": "uint32"
					},
					{
						"internalType": "uint256[]",
						"name": "_totalRewards",
						"type": "uint256[]"
					}
				],
				"name": "renewPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "rewardLocker",
				"outputs": [
					{
						"internalType": "contract IKyberRewardLockerV2",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "rewardTokens",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newAdmin",
						"type": "address"
					}
				],
				"name": "transferAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newAdmin",
						"type": "address"
					}
				],
				"name": "transferAdminQuickly",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "_endTime",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_vestingDuration",
						"type": "uint32"
					},
					{
						"internalType": "uint256[]",
						"name": "_totalRewards",
						"type": "uint256[]"
					}
				],
				"name": "updatePool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					}
				],
				"name": "updatePoolRewards",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					}
				],
				"name": "withdrawAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addPool(address,uint32,uint32,uint32,uint256[],string,string)": {
					"details": "Add a new lp to the pool. Can only be called by the admin.",
					"params": {
						"_endTime": ": time where the reward ends",
						"_stakeToken": ": token to be staked to the pool",
						"_startTime": ": time where the reward starts",
						"_tokenName": ": name of the generated token",
						"_tokenSymbol": ": symbol of the generated token",
						"_totalRewards": ": amount of total reward token for the pool for each reward token",
						"_vestingDuration": ": time vesting for token"
					}
				},
				"adminWithdraw(uint256,uint256)": {
					"details": "Allow admin to withdraw only reward tokens"
				},
				"claimAdmin()": {
					"details": "Allows the pendingAdmin address to finalize the change admin process."
				},
				"deposit(uint256,uint256,bool)": {
					"details": "Deposit tokens to accumulate rewards",
					"params": {
						"_amount": ": amount of stakeToken to be deposited",
						"_pid": ": id of the pool",
						"_shouldHarvest": ": whether to harvest the reward or not"
					}
				},
				"emergencyWithdraw(uint256)": {
					"details": "Emergency withdrawal function to allow withdraw all deposited tokens (of the sender)   and reset all rewards",
					"params": {
						"_pid": ": id of the pool"
					}
				},
				"getPoolInfo(uint256)": {
					"details": "Return full details of a pool"
				},
				"getRewardTokens()": {
					"details": "Return list reward tokens"
				},
				"getUserInfo(uint256,address)": {
					"details": "Return user's info including deposited amount and reward data"
				},
				"harvest(uint256)": {
					"details": "Harvest rewards from a pool for the sender",
					"params": {
						"_pid": ": id of the pool"
					}
				},
				"harvestMultiplePools(uint256[])": {
					"details": "Harvest rewards from multiple pools for the sender   combine rewards from all pools and only transfer once to save gas"
				},
				"pendingRewards(uint256,address)": {
					"details": "Get pending rewards of a user from a pool, mostly for front-end",
					"params": {
						"_pid": ": id of the pool",
						"_user": ": user to check for pending rewards"
					}
				},
				"renewPool(uint256,uint32,uint32,uint32,uint256[])": {
					"details": "Renew a pool to start another liquidity mining program",
					"params": {
						"_endTime": ": time where the reward ends",
						"_pid": ": id of the pool to renew, must be pool that has not started or already ended",
						"_startTime": ": time where the reward starts",
						"_totalRewards": ": amount of total reward token for the pool for each reward token   0 if we want to stop the pool from accumulating rewards",
						"_vestingDuration": ": time vesting for token"
					}
				},
				"transferAdmin(address)": {
					"details": "Allows the current admin to set the pendingAdmin address.",
					"params": {
						"newAdmin": "The address to transfer ownership to."
					}
				},
				"transferAdminQuickly(address)": {
					"details": "Allows the current admin to set the admin in one tx. Useful initial deployment.",
					"params": {
						"newAdmin": "The address to transfer ownership to."
					}
				},
				"updatePool(uint256,uint32,uint32,uint256[])": {
					"details": "Update a pool, allow to change end time, reward per second",
					"params": {
						"_endTime": ": time where the reward ends",
						"_pid": ": pool id to be renew",
						"_totalRewards": ": amount of total reward token for the pool for each reward token   0 if we want to stop the pool from accumulating rewards",
						"_vestingDuration": ": time vesting for token"
					}
				},
				"updatePoolRewards(uint256)": {
					"details": "Update rewards for one pool"
				},
				"withdraw(uint256,uint256)": {
					"details": "Withdraw token (of the sender) from pool, also harvest rewards",
					"params": {
						"_amount": ": amount of stakeToken to withdraw",
						"_pid": ": id of the pool"
					}
				},
				"withdrawAll(uint256)": {
					"details": "Withdraw all tokens (of the sender) from pool, also harvest reward",
					"params": {
						"_pid": ": id of the pool"
					}
				}
			},
			"stateVariables": {
				"poolLength": {
					"details": "return the total of pools that have been added"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"emergencyWithdraw(uint256)": {
					"notice": "EMERGENCY USAGE ONLY, USER'S REWARDS WILL BE RESET"
				}
			},
			"notice": "FairLaunch contract for Kyber DMM Liquidity Mining program Create a new token for each pool Allow stakers to stake LP tokens and receive reward tokens Allow extend or renew a pool to continue/restart the LM program When harvesting, rewards will be transferred to a RewardLocker Support multiple reward tokens, reward tokens must be distinct and immutable",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/liquidityMining/KyberFairLaunchV2.sol": "KyberFairLaunchV2"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/math/SafeMath.sol": {
			"keccak256": "0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52",
			"license": "MIT",
			"urls": [
				"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c",
				"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR"
			]
		},
		"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3",
			"license": "MIT",
			"urls": [
				"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e",
				"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5",
			"license": "MIT",
			"urls": [
				"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08",
				"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC"
			]
		},
		"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
			"keccak256": "0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc",
			"license": "MIT",
			"urls": [
				"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a",
				"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea",
			"license": "MIT",
			"urls": [
				"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c",
				"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0",
			"license": "MIT",
			"urls": [
				"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f",
				"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"
			]
		},
		"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
			"keccak256": "0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61",
			"license": "MIT",
			"urls": [
				"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182",
				"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK"
			]
		},
		"contracts/interfaces/liquidityMining/IKyberFairLaunchV2.sol": {
			"keccak256": "0x4e0ca9b94071ac822847e8b0bb65fbb32230f43c6fa3b990e446351eaa9bd1ab",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://828d3df9c1f286ca4e893e96abb00a1b866e337c90f4c26745b7a0dfc4d8789f",
				"dweb:/ipfs/Qmb4ex5s8JydD23KPzRftji8xh1zEYtZAzsZ7GEUdH1twq"
			]
		},
		"contracts/interfaces/liquidityMining/IKyberRewardLockerV2.sol": {
			"keccak256": "0x9eadcb3b13aff28417d54c29453126c05dd6f85a1c1025f2ba06bd828c287bbd",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://f0fc867346133221f698d63a71512ecc5b953e9ccaa393db0d7805fab37c381a",
				"dweb:/ipfs/QmPhVJvh4tmoC5xjwrEkVYmu9biN5kr7MBHyCQhF5r3WYy"
			]
		},
		"contracts/liquidityMining/GeneratedToken.sol": {
			"keccak256": "0xc7c2050125ee1907312712d8a2d59833dcc0d28ca977d5be9d06682b085b0a4d",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://1a847426a64c9ff3a5c22f634d44482db61a7d8d0d282a4157660c23a7b06534",
				"dweb:/ipfs/QmdgsVKMZGA2DDzm4jBwWprpd1azT5D7eymxUVC8rigUsr"
			]
		},
		"contracts/liquidityMining/KyberFairLaunchV2.sol": {
			"keccak256": "0x2d0018377ec70e9982908345e0ecb3d5e5fe6a5d3f0f6812ee78ceb5cc7527c6",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://7696601c5ea1459daac0483f6de49d1a449b9953c61557fcff5efcb09807a30c",
				"dweb:/ipfs/QmT4DhmkwfCXVkF5Ud6zBjWZdTtgY74rpLqNCWe82joD55"
			]
		},
		"contracts/manual/IERC20Ext.sol": {
			"keccak256": "0x54e497c3ce45962c3736dcb053d97a309c7dca2c2228587be579de92317ece0a",
			"license": "MIT",
			"urls": [
				"bzz-raw://2405069927d8a940e85b5c96941a976a94e85eca5e4bb88419826731e050f7f7",
				"dweb:/ipfs/QmXcerpy1ZDmKykehn2qi9WX1ia2xZPhYxyYMH6xnDtCJ9"
			]
		},
		"contracts/manual/PermissionAdmin.sol": {
			"keccak256": "0xe00352d3a10174e8261744bbea3d6ca08134cebcda06c286358afeb7fe4b968f",
			"license": "MIT",
			"urls": [
				"bzz-raw://af7cd96bbb17c72ca382d6655f19a72834c028ac1954caf96b90aa142c5e1e7e",
				"dweb:/ipfs/QmXNTE8nvzjSmCLHubor5FMJt3G86LqSsztDmU2LNhKt1Q"
			]
		}
	},
	"version": 1
}